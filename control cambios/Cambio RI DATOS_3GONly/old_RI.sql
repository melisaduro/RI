USE [AddedValue]
GO
/****** Object:  StoredProcedure [dbo].[plcc_RI_Data_OSP_Completed_review]    Script Date: 09/10/2017 12:53:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER procedure [dbo].[plcc_RI_Data_OSP_Completed_review] 
	@result as varchar(5),	--'Q' para Qlik			- lanza los procs y crea las tablas necesarias para QLIK
							--'D' para DASH			- solo las ultimas medidas y agregados de carreteras en funcion de @rollwindowRoad y @rollwindowAve
							--'E' para excel del RI	- todas las medidas - en el Excel se podra filtrar por LastMeasurement=1 para la ultima medida
	
	-- Ventanas deslizantes de las rondas a elegira para CARRETERAS y AVES:
	@rollwindowRoad as int,
	@rollwindowAve as int,

	@client as int,		-- Cliente final de entrega:
							--VDF – borra columnas de IDs relativas a OSP 
							--OSP – ídem y además elimina la info de VOLTE para que no salga

	@isCompleted as varchar(10)		-- No aplica para VDF
											-- 'Y'		-- solo tienen en cuenta las entidades COMPLETADAS para OSP
											-- 'N'		-- tienen en cuenta todas las medidas, COMPLETADAS o no, para OSP
as

---------------------------------------
---------- Testing Variables ----------
---------------------------------------
--declare @result as varchar(5)= 'Q'	------ Q' para Qlik			- lanza los procs y crea las tablas necesarias para QLIK
--										------ D' para DASH			- solo las ultimas medidas y agregados de carreteras en funcion de @rollwindowRoad y @rollwindowAve
--										------ E' para excel del RI	- todas las medidas - en el Excel se podra filtrar por LastMeasurement=1 para la ultima medida
	
--	-- Ventanas deslizantes de las rondas a elegira para CARRETERAS y AVES:
--declare @rollwindowRoad as int = 4
--declare @rollwindowAve as int = 3

--declare @client as int=0		------ Cliente final de entrega:
--								------ VDF – borra columnas de IDs relativas a OSP 
--								------ OSP – ídem y además elimina la info de VOLTE para que no salga

--declare @isCompleted as varchar(10)='Y'		------ No aplica para VDF
----												------ 'Y'		-- solo tienen en cuenta las entidades COMPLETADAS para OSP
----												------ 'N'		-- tienen en cuenta todas las medidas, COMPLETADAS o no, para OSP


--------------------------------------------------------------------------
-- COMENTARIOS:
--	1) Cuando se pasó a medir todo con N4 todas las entidades (FY1617) se hizo los siguientes cambios en las tablas:
	--     Las tablas “normales” se renombraron como “XXX_4GDevice”.
	--     Las tablas “XXX_CA” se renombraron como “normales”.
	--     En las tablas “normales” se insertó las medidas del S4 de entidades que no fueran MC ni SC.
	--     Las tablas “XXX_4G” se dejaron igual.
	--		Se activó el agregado de la información de only_3G en las tablas “XXX_3G”.

	--Por tanto:
	--Las tablas 4GDevice contienen toda la información del S4. ********* NO SE AGREGA NUEVA INFORMACION... ********* 
	--		Con el cambio hecho, contienen sólo la información del S4 de FY1516 de MC/SC.
	--Las tablas normales contienen la información del N4 para MC/SC y del S4 para el resto de scopes de las medidas de FY1516. 
	--Se va agregando las medidas del N4 de todas las entidades  de las medidas de FY1617.

--	2) Se separan los codigos de NoCA_Device por si fuera necesario calcular KPIs a la antigua, y aque la mayoria de ls KPIs quedan vacios.


--	3) Toda la info de 3G en 4GOnly y CA_Only se saca directamente como null - no tienen sentido


--	4) UPDATE_TM -> Los TM de los POCs no se rellenan bien en las tablas de sistema, por lo que se coge la info de la PCC
--			* hay una issue abierta, de momento se hacen updates en POCs (indoor y aves) para coger esos valores
		

--	5) El campo Region_Road se escoge de las tablas de agregado solo para CARRETERAS

--	6) Se cruza la info final del DASH y el EXCEL con AGRIDs.dbo.vlcc_dashboard_info_scopes_NEW para obtener el nombre 
--		"bonito" de las entidades (y poder comparar mas facil con el DASH)

--	7) Se añade las ventanas deslizantes para el número de rondas a escoger para ROADs y AVEs

--	8) Se incluye la Region_VF y Region_OSP en todas las entidades (Calidad y Cober)
--		para el @result='Q' de momento solo hace falta el Region_Road - por eso se crea una columna nueva para todas
--		para @result='D'/'E' nos quedamos SOLO con la Region correspondiente a @client y se sustituye ademas el valor para que sea del tipo ZonaX

--	9) Para el last_Measuremente, se realiza la ordenacion por cast(replace(meas_Week,'W','') as int) desc ya que de la otra forma ordena erroneamente al considerarlos como string (WX)

-- 10) SESSION_TIME de DL/UL, calculado como TRANSFER_TIME - se haría elcambio al calculo correcto en cambio de metodología para evitar salto de valor en QLIK.
--		No se calcula para los NC, xq se dice q no tiene sentido...

-- 11) UPDATE_rangos:	Se anulan los rangos nuevos de thput en entidades agregadas antiguas (que no tengan info en estos campos)
--						Ojo! Qe hay diferentes rangos por tipo de test:
--							[AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_DL_Thput_CE_LTE_4G]	-	[ 0-2Mbps_N] 
--							[AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_DL_Thput_NC_LTE_4G]	-	[ 0-3.5Mbps_N] 
--							[AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_UL_Thput_CE_LTE_4G]	-	[ 0-0.5Mbps_N]
--							[AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_UL_Thput_NC_LTE_4G]	-	[ 0-0.8Mbps_N] 

-- 12)	UPDATE_parcelas_sin_info: No se pueden dejar con codigoINE=99999 porque eso es de Indoor

-- 13)  Railways: Se anula el código_ine antes de todo el tema de unificaciones y demás, ya que codig_ine=99999 = INDOOR
-- 14)	Se cambia la forma de obtener las regiones	-> En vez de cogerse del agregado (que viene de lcc_parcelas) y tener que agrupar y modificar las tablas bases del RI, se cogen una vez unificados todas las tablas intermedias 
--			b.	Primero:
--				i.	Se asignan solo para AVEs y ROADs, en función del código_ine obtenido de vlcc_parcelas_osp -> Provincia, CCAA, Region_Road_VF, Region_Road_OSP, Region_VF y Region_OSP
--				ii.	Estos campos de vlcc_parcelas_OSP, viene de lcc_parcelas
--				iii.	Los campos:      
--							1.	Region_Road_VF, Region_Road_OSP		-> son para Qlik, solo tendran la info de carreteras, resto de entidades a null
--							2.	Region_VF y Region_OSP				-> tendrán la info para todo, en carreteras coincidirán con Region_Road_VF, Region_Road_OSP
--			c.	Segundo:
--				i.	Se unifica el código INE para todas las entidades menos AVEs y ROADs, tras lo cual, se rellenara esta información en estas entidades a partir de la V9
--			d.	Tercero: 
--					Se anula el valor de los códigos INE en carreteras y Aves, teniendo ya la info de todo
--			e.	Cuarto: 
--					Se agrupa la info por código ine de las entidades, que ahora es único para las entidades (V9) y se concatenan los KPIS de la cober ponderada por población a nivel de entidad ( mismo info en cada tipo de environment).

-- 15)	En lcc_parcelas, la info de Region viene con formato RX (tanto para VF o para OSP).
--		En V9, tenemos formato RegionX para VF y ZonaX para OSP -> En el punto 16 del RI se deja todo con formato RX (para que cuadren todos).
--		A la hora de sacar la info en los Excel, se sustituye por el formato ZonaX para ambos operadores

-- **********************************************************************************************************
--	Para ejecutar PRUEBAS que no molesten a QLIK, se puede sustituir '_RI_Data' por _RI_Data_VXX:
--			* TODAS las tablas involucrdas en el proc empiezan por esta coletilla
--			* el codigo de replicas chequea si existe dicha coletilla para crear su tabla final con ella o no
-- **********************************************************************************************************

if @result='Q'	-- trabajamos para Qlik				
begin

	---------------------------------------
	-- Se borra la _RI_Data_Ejecucion para iniciar de nuevo:
	exec sp_lcc_dropifexists '_RI_Data_Ejecucion'

	--------------------------------------------------------------------------
	-- TABLA de SEGUIMIENTO de la ejecución del RI:
	if (select name from sys.tables where type='u' and name='_RI_Data_Ejecucion') is null
	begin
		CREATE TABLE [dbo].[_RI_Data_Ejecucion](
			[Status] [varchar](255) NULL,
			[Date] [datetime] NULL
		) ON [primary]

		insert into [dbo].[_RI_Data_Ejecucion]
		select 'Inicio ejecucion RI Datos', getdate()
	end

	--------------------------------------------------------------------------
	-- Se borran las tablas por si quedara una ejecucion incompleta:
	exec dbo.sp_lcc_dropifexists '_RI_Data_e'
	exec dbo.sp_lcc_dropifexists '_RI_Data_l'
	exec dbo.sp_lcc_dropifexists '_RI_Data_y'

	exec dbo.sp_lcc_dropifexists '_RI_Data_base'
	exec dbo.sp_lcc_dropifexists '_RI_Data_base1'
	exec dbo.sp_lcc_dropifexists '_RI_Data_result1'
	exec dbo.sp_lcc_dropifexists '_RI_Data_result'
	exec dbo.sp_lcc_dropifexists '_RI_Data_result_INE_only'
	exec dbo.sp_lcc_dropifexists '_RI_Data_result1_info'
	exec dbo.sp_lcc_dropifexists '_RI_Data_last'

	exec dbo.sp_lcc_dropifexists '_RI_Data_Completed'
	exec dbo.sp_lcc_dropifexists '_RI_Data_Completed_LastAVE'

	exec dbo.sp_lcc_dropifexists '_RI_Data_last_osp'
	exec dbo.sp_lcc_dropifexists '_RI_Data_last_vf'

	exec dbo.sp_lcc_dropifexists '_RI_Data_entidades_antiguas'

	--------------------------------------------------------------------------
	-- TABLAS TEMPORALES:
	--		Se definene al inicio para definir tipos y realizar los insert sin problemas de truncados

	CREATE TABLE _RI_Data_e (
		[codigo_ine]	[float]	NULL,	
		[vf_environment]	[varchar](256)	NULL,	
		[mnc]	[varchar](2)	NULL,	
		[meas_round]	[varchar](256)	NULL,	
		[meas_date]	[varchar](256)	NULL,	
		[meas_week]	[varchar](256)	NULL,	
		[meas_Tech]	[varchar](256)	NOT	NULL,
		[Test_type]	[varchar](256)	NOT	NULL,
		[Direction]	[varchar](256)	NOT	NULL,
		[vf_entity]	[varchar](256)	NULL,	
		[Report_Type]	[varchar](256)	NULL,	
		[Aggr_Type]	[varchar](256)	NULL,	
		[Num_tests]	[float]	NULL,	
		[Failed]	[float]	NULL,	
		[Dropped]	[float]	NULL,	
		[Session_time_Num]	[float]	NULL,	
		[Throughput_Den]	[float]	NULL,			
		[Session_time_Den]	[float]	NULL,	
		[Throughput_Num]	[float]	NULL,	
		[Throughput_Max]	[float]	NULL,	
		[Throughput_3M_Num]	[float]	NULL,	
		[Throughput_1M_Num]	[float]	NULL,	
		[Throughput_128K_Num]	[float]	NULL,	
		[Throughput_64K_Num]	[float]	NULL,		
		--20170710: @MDM: Nuevo campo calculado para metología FY1718	
		[Throughput_384K_Num]	[float]	NULL,	
		--CAC 10/08/2017: thput de test sin error y con error
		[Throughput_with_Error_Den]	[float]	NULL,
		[Throughput_with_Error_Num]	[float]	NULL,	
		[WEB_IP_ACCESS_TIME_NUM]	[float]	NULL,	
		[WEB_IP_ACCESS_TIME_DEN]	[float]	NULL,	
		[WEB_HTTP_TRANSFER_TIME_NUM]	[float]	NULL,	
		[WEB_HTTP_TRANSFER_TIME_DEN]	[float]	NULL,	
		[WEB_IP_ACCESS_TIME_HTTPS_NUM]	[float]	NULL,	
		[WEB_IP_ACCESS_TIME_HTTPS_DEN]	[float]	NULL,	
		[WEB_TRANSFER_TIME_HTTPS_NUM]	[float]	NULL,	
		[WEB_TRANSFER_TIME_HTTPS_DEN]	[float]	NULL,	
		[WEB_IP_ACCESS_TIME_PUBLIC_NUM]	[float]	NULL,	
		[WEB_IP_ACCESS_TIME_PUBLIC_DEN]	[float]	NULL,	
		[WEB_TRANSFER_TIME_PUBLIC_NUM]	[float]	NULL,	
		[WEB_TRANSFER_TIME_PUBLIC_DEN]	[float]	NULL,	
		[Radio_2G_use_Num]	[float]	NULL,	
		[Radio_3G_use_Num]	[float]	NULL,	
		[Radio_4G_use_Num]	[float]	NULL,	
		[Radio_use_Den]	[float]	NULL,	
		[Radio_2G_use_Den]	[float]	NULL,	
		[Radio_3G_use_Den]	[float]	NULL,	
		[Radio_4G_use_Den]	[float]	NULL,	
		[Radio_U2100_use_Num]	[float]	NULL,	
		[Radio_U900_use_Num]	[float]	NULL,	
		[Radio_LTE2100_use_Num]	[float]	NULL,	
		[Radio_LTE2600_use_Num]	[float]	NULL,	
		[Radio_LTE1800_use_Num]	[float]	NULL,	
		[Radio_LTE800_use_Num]	[float]	NULL,	
		[Radio_Band_Use_Den]	[float]	NULL,	
		[Radio_U2100_use_Den]	[float]	NULL,	
		[Radio_U900_use_Den]	[float]	NULL,	
		[Radio_LTE2100_use_Den]	[float]	NULL,	
		[Radio_LTE2600_use_Den]	[float]	NULL,	
		[Radio_LTE1800_use_Den]	[float]	NULL,	
		[Radio_LTE800_use_Den]	[float]	NULL,	
		[3G_DualCarrier_use_Num]	[float]	NULL,	
		[3G_DualCarrier_use_Den]	[float]	NULL,	
		[3G_DC_2100_use_Num]	[float]	NULL,	
		[3G_DC_2100_use_Den]	[float]	NULL,	
		[3G_DC_900_use_Num]	[float]	NULL,	
		[3G_DC_900_use_Den]	[float]	NULL,	
		[3G_NumCodes_use_Num]	[float]	NULL,	
		[3G_NumCodes_use_Den]	[float]	NULL,	
		[3G_QPSK_use_Num]	[float]	NULL,	
		[3G_16QAM_use_Num]	[float]	NULL,	
		[3G_64QAM_use_Num]	[float]	NULL,	
		[3G_QPSK_use_Den]	[float]	NULL,	
		[3G_16QAM_use_Den]	[float]	NULL,	
		[3G_64QAM_use_Den]	[float]	NULL,	
		[3G_%_SF22_Num]	[float]	NULL,	
		[3G_%_SF22andSF42_Num]	[float]	NULL,	
		[3G_%_SF4_Num]	[float]	NULL,	
		[3G_%_SF42_Num]	[float]	NULL,	
		[3G_%_SF22_Den]	[float]	NULL,	
		[3G_%_SF22andSF42_Den]	[float]	NULL,	
		[3G_%_SF4_Den]	[float]	NULL,	
		[3G_%_SF42_Den]	[float]	NULL,	
		[3G_%_TTI2ms_Num]	[float]	NULL,	
		[3G_%_TTI2ms_Den]	[float]	NULL,	
		[RSCP_Lin_Num]	[float]	NULL,	
		[EcI0_Lin_Num]	[float]	NULL,	
		[RSCP_Lin_Den]	[float]	NULL,	
		[EcI0_Lin_Den]	[float]	NULL,	
		[3G_CQI]	[float]	NULL,	
		[3G_DataStats_Den]	[float]	NULL,	
		[CQI_U900_Num]	[float]	NULL,	
		[CQI_U900_Den]	[float]	NULL,	
		[CQI_U2100_Num]	[float]	NULL,	
		[CQI_U2100_Den]	[float]	NULL,	
		[HSPA_PCT_Num]	[float]	NULL,	
		[HSPA+_PCT_Num]	[float]	NULL,	
		[HSPA+_DC_PCT_Num]	[float]	NULL,	
		[HSPA_PCT_Den]	[float]	NULL,	
		[HSPA+_PCT_Den]	[float]	NULL,	
		[HSPA+_DC_PCT_Den]	[float]	NULL,	
		[UL_Inter_Lin_Num]	[float]	NULL,	
		[UL_Inter_Lin_Den]	[float]	NULL,	
		[CQI_4G_Num]	[float]	NULL,	
		[CQI_L800_Num]	[float]	NULL,	
		[CQI_L1800_Num]	[float]	NULL,	
		[CQI_L2100_Num]	[float]	NULL,	
		[CQI_L2600_Num]	[float]	NULL,	
		[CQI_4G_Den]	[float]	NULL,	
		[CQI_L800_Den]	[float]	NULL,	
		[CQI_L1800_Den]	[float]	NULL,	
		[CQI_L2100_Den]	[float]	NULL,	
		[CQI_L2600_Den]	[float]	NULL,	
		[LTE_5Mhz_SC_Use_Num]	[float]	NULL,	
		[LTE_10Mhz_SC_Use_Num]	[float]	NULL,	
		[LTE_15Mhz_SC_Use_Num]	[float]	NULL,	
		[LTE_20Mhz_SC_Use_Num]	[float]	NULL,	
		[LTE_15Mhz_CA_Use_Num]	[float]	NULL,	
		[LTE_20Mhz_CA_Use_Num]	[float]	NULL,	
		[LTE_25Mhz_CA_Use_Num]	[float]	NULL,	
		[LTE_30Mhz_CA_Use_Num]	[float]	NULL,	
		[LTE_35Mhz_CA_Use_Num]	[float]	NULL,	
		[LTE_40Mhz_CA_Use_Num]	[float]	NULL,	
		[LTE_5Mhz_SC_Use_Den]	[float]	NULL,	
		[LTE_10Mhz_SC_Use_Den]	[float]	NULL,	
		[LTE_15Mhz_SC_Use_Den]	[float]	NULL,	
		[LTE_20Mhz_SC_Use_Den]	[float]	NULL,	
		[LTE_15Mhz_CA_Use_Den]	[float]	NULL,	
		[LTE_20Mhz_CA_Use_Den]	[float]	NULL,	
		[LTE_25Mhz_CA_Use_Den]	[float]	NULL,	
		[LTE_30Mhz_CA_Use_Den]	[float]	NULL,	
		[LTE_35Mhz_CA_Use_Den]	[float]	NULL,	
		[LTE_40Mhz_CA_Use_Den]	[float]	NULL,	
		[LTE_BW_use_den]	[float]	NULL,	
		[4G_RBs_use_Num]	[float]	NULL,	
		[4G_RBs_use_Den]	[float]	NULL,	
		[4G_TM1_use_Num]	[float]	NULL,	
		[4G_TM2_use_Num]	[float]	NULL,	
		[4G_TM3_use_Num]	[float]	NULL,	
		[4G_TM4_use_Num]	[float]	NULL,	
		[4G_TM5_use_Num]	[float]	NULL,	
		[4G_TM6_use_Num]	[float]	NULL,	
		[4G_TM7_use_Num]	[float]	NULL,	
		[4G_TM8_use_Num]	[float]	NULL,	
		[4G_TM9_use_Num]	[float]	NULL,	
		[4G_TMInvalid_use_Num]	[float]	NULL,	
		[4G_TMUnknown_use_Num]	[float]	NULL,	
		[4G_TM_Den]	[float]	NULL,	
		[4G_%CA_Num]	[float]	NULL,	
		[4G_%CA_Den]	[float]	NULL,	
		[4G_BPSK_Use_Num]	[float]	NULL,	
		[4G_QPSK_Use_Num]	[float]	NULL,	
		[4G_16QAM_Use_Num]	[float]	NULL,	
		[4G_64QAM_Use_Num]	[float]	NULL,	
		[4G_BPSK_Use_Den]	[float]	NULL,	
		[4G_QPSK_Use_Den]	[float]	NULL,	
		[4G_16QAM_Use_Den]	[float]	NULL,	
		[4G_64QAM_Use_Den]	[float]	NULL,	
		[4G_stats_Den]	[float]	NULL,	
		[RSRP_Lin_Num]	[float]	NULL,	
		[RSRQ_Lin_Num]	[float]	NULL,	
		[SINR_Lin_Num]	[float]	NULL,	
		[RSRP_Lin_Den]	[float]	NULL,	
		[RSRQ_Lin_Den]	[float]	NULL,	
		[SINR_Lin_Den]	[float]	NULL,	
		[MIMO_num]	[float]	NULL,	
		[RI1_num]	[float]	NULL,	
		[RI2_num]	[float]	NULL,	
		[MIMO_den]	[float]	NULL,	
		[RI1_den]	[float]	NULL,	
		[RI2_den]	[float]	NULL,	
		[RBs_Allocated_Den]	[float]	NULL,	
		[RBs_Allocated_Num]	[float]	NULL,	
		[RBs_Allocated_Max]	[float]	NULL,
		[1_N] [float] NULL,
		[2_N] [float] NULL,
		[3_N] [float] NULL,
		[4_N] [float] NULL,
		[5_N] [float] NULL,
		[6_N] [float] NULL,
		[7_N] [float] NULL,
		[8_N] [float] NULL,
		[9_N] [float] NULL,
		[10_N] [float] NULL,
		[11_N] [float] NULL,
		[12_N] [float] NULL,
		[13_N] [float] NULL,
		[14_N] [float] NULL,
		[15_N] [float] NULL,
		[16_N] [float] NULL,
		[17_N] [float] NULL,
		[18_N] [float] NULL,
		[19_N] [float] NULL,
		[20_N] [float] NULL,
		[21_N] [float] NULL,
		[22_N] [float] NULL,
		[23_N] [float] NULL,
		[24_N] [float] NULL,
		[25_N] [float] NULL,
		[26_N] [float] NULL,
		[27_N] [float] NULL,
		[28_N] [float] NULL,
		[29_N] [float] NULL,
		[30_N] [float] NULL,
		[31_N] [float] NULL,
		[32_N] [float] NULL,
		[33_N] [float] NULL,
		[34_N] [float] NULL,
		[35_N] [float] NULL,
		[36_N] [float] NULL,
		[37_N] [float] NULL,
		[38_N] [float] NULL,
		[39_N] [float] NULL,
		[40_N] [float] NULL,
		[41_N] [float] NULL,
		[42_N] [float] NULL,
		[43_N] [float] NULL,
		[44_N] [float] NULL,
		[45_N] [float] NULL,
		[46_N] [float] NULL,
		[47_N] [float] NULL,
		[48_N] [float] NULL,
		[49_N] [float] NULL,
		[50_N] [float] NULL,
		[51_N] [float] NULL,
		[52_N] [float] NULL,
		[53_N] [float] NULL,
		[54_N] [float] NULL,
		[55_N] [float] NULL,
		[56_N] [float] NULL,
		[57_N] [float] NULL,
		[58_N] [float] NULL,
		[59_N] [float] NULL,
		[60_N] [float] NULL,
		[61_N] [float] NULL,
		[62_N] [float] NULL,
		[63_N] [float] NULL,
		[64_N] [float] NULL,
		[65_N] [float] NULL,
		[66_N] [float] NULL,
		--[Region_Road_VF]	[nvarchar](256)	NULL, 
		--[Region_Road_OSP]	[nvarchar](256)	NULL,
		--[Region_VF]		[nvarchar](256)	NULL, 
		--[Region_OSP]	[nvarchar](256)	NULL, 
		[1] [float] NULL,
		[2] [float] NULL,
		[3] [float] NULL,
		[4] [float] NULL,
		[5] [float] NULL,
		[6] [float] NULL,
		[7] [float] NULL,
		[8] [float] NULL,
		[9] [float] NULL,
		[10] [float] NULL,
		[11] [float] NULL,
		[12] [float] NULL,
		[13] [float] NULL,
		[14] [float] NULL,
		[15] [float] NULL,
		[16] [float] NULL,
		[17] [float] NULL,
		[18] [float] NULL,
		[19] [float] NULL,
		[20] [float] NULL,
		[21] [float] NULL,
		[22] [float] NULL,
		[23] [float] NULL,
		[24] [float] NULL,
		[25] [float] NULL,
		[26] [float] NULL,
		[27] [float] NULL,
		[28] [float] NULL,
		[29] [float] NULL,
		[30] [float] NULL,
		[31] [float] NULL,
		[32] [float] NULL,
		[33] [float] NULL,
		[34] [float] NULL,
		[35] [float] NULL,
		[36] [float] NULL,
		[37] [float] NULL,
		[38] [float] NULL,
		[39] [float] NULL,
		[40] [float] NULL,
		[41] [float] NULL,
        [ASideDevice] [nvarchar](256) NULL,
        [BSideDevice] [nvarchar](256) NULL,
        [SWVersion] [nvarchar](256) NULL,	
		[YTB_Version] [nvarchar](256) NULL,
		[YTB_URL] [nvarchar](256) NULL

	) ON [PRIMARY]

	CREATE TABLE _RI_Data_l (
		[codigo_ine]	[float]	NULL,	
		[vf_environment]	[varchar](256)	NULL,	
		[mnc]	[varchar](2)	NULL,	
		[meas_round]	[varchar](256)	NULL,	
		[meas_date]	[varchar](256)	NULL,	
		[meas_week]	[varchar](256)	NULL,	
		[meas_Tech]	[varchar](256)	NOT	NULL,
		[Test_type]	[varchar](256)	NOT	NULL,
		[Direction]	[varchar](256)	NOT	NULL,
		[vf_entity]	[varchar](256)	NULL,	
		[Report_Type]	[varchar](256)	NULL,	
		[Aggr_Type]	[varchar](256)	NULL,	
		[Methodology]	[varchar](256)	NULL,	
		[Latency_Num]	[float]	NULL,	
		[Latency_Den]	[float]	NULL,
		[1] [float] NULL,
		[2] [float] NULL,
		[3] [float] NULL,
		[4] [float] NULL,
		[5] [float] NULL,
		[6] [float] NULL,
		[7] [float] NULL,
		[8] [float] NULL,
		[9] [float] NULL,
		[10] [float] NULL,
		[11] [float] NULL,
		[12] [float] NULL,
		[13] [float] NULL,
		[14] [float] NULL,
		[15] [float] NULL,
		[16] [float] NULL,
		[17] [float] NULL,
		[18] [float] NULL,
		[19] [float] NULL,
		[20] [float] NULL,
		[21] [float] NULL,
		[22] [float] NULL,
		[23] [float] NULL,
		[24] [float] NULL,
		[25] [float] NULL,
		[26] [float] NULL,
		[27] [float] NULL,
		[28] [float] NULL,
		[29] [float] NULL,
		[30] [float] NULL,
		[31] [float] NULL,
		[32] [float] NULL,
		[33] [float] NULL,
		[34] [float] NULL,
		[35] [float] NULL,
		[36] [float] NULL,
		[37] [float] NULL,
		[38] [float] NULL,
		[39] [float] NULL,
		[40] [float] NULL,
		[41] [float] NULL,
		--[Region_Road_VF]	[nvarchar](256)	NULL,
		--[Region_Road_OSP]	[nvarchar](256)	NULL,
		--[Region_VF]		[nvarchar](256)	NULL, 
		--[Region_OSP]	[nvarchar](256)	NULL, 
        [ASideDevice] [nvarchar](256) NULL,
        [BSideDevice] [nvarchar](256) NULL,
        [SWVersion] [nvarchar](256) NULL,	
		[YTB_Version] [nvarchar](256) NULL,
		[YTB_URL] [nvarchar](256) NULL	
	) ON [PRIMARY]


	CREATE TABLE _RI_Data_y (
		[codigo_ine]	[float]	NULL,	
		[vf_environment]	[varchar](256)	NULL,	
		[mnc]	[varchar](2)	NULL,	
		[meas_round]	[varchar](256)	NULL,	
		[meas_date]	[varchar](256)	NULL,	
		[meas_week]	[varchar](256)	NULL,	
		[meas_Tech]	[varchar](256)	NOT	NULL,
		[Test_type]	[varchar](256)	NOT	NULL,
		[Direction]	[varchar](256)	NOT	NULL,
		[vf_entity]	[varchar](256)	NULL,
		[Report_Type]	[varchar](256)	NULL,	
		[Aggr_Type]	[varchar](256)	NULL,	

		--ACUMULADO DE LAS CUATRO URLs
		[Avg_Video_StarTime_Num]	float	NULL,	
		[avg_Video_startTime_Den]	[float]	NULL,	
		[Reproductions_WO_Interruptions]	[float]	NULL,	
		[Reproductions_WO_Interruptions_Den]	[float]	NULL,		
		[B4]	[float]	NULL,	
		[ReproduccionesHD]	[float]	NULL,	
		[Successful video download]	[float]	NULL,	
		[Reproducciones]	[float]	NULL,	
		[YTB_video_resolution_num]	[float]	NULL,	
		[YTB_video_resolution_den]	[float]	NULL,	
		[YTB_video_mos_num]	[float]	NULL,	
		[YTB_video_mos_den]	[float]	NULL,
		[YTB_URL] [nvarchar](256)	NULL,
		[YTB_1st_Resolution_Num] [float] NULL,
		[YTB_1st_Resolution_Den] [int] NULL,
		[YTB_2nd_Resolution_Num] [float] NULL,
		[YTB_2nd_Resolution_Den] [int] NULL,
		[YTB_FirstChangeFromInit_Num] [float] NULL,
		[YTB_FirstChangeFromInit_Den] [int] NULL,
		[YTB_initialResolution_Num] [float] NULL,
		[YTB_initialResolution_Den] [int] NULL,
		[YTB_finalResolution_Num] [float] NULL,
		[YTB_finalResolution_Den] [int] NULL,
		[YTB_video_resolution_144p_Num] [float] NULL,
		[YTB_video_resolution_144p_Den] [int] NULL,
		[YTB_video_mos_144p_Num] [float] NULL,
		[YTB_video_mos_144p_Den] [int] NULL,
		[YTB_video_resolution_%144p_Num] [float] NULL,
		[YTB_video_resolution_%144p_Den] [int] NULL,
		[YTB_video_resolution_240p_Num] [float] NULL,
		[YTB_video_resolution_240p_Den] [int] NULL,
		[YTB_video_mos_240p_Num] [float] NULL,
		[YTB_video_mos_240p_Den] [int] NULL,
		[YTB_video_resolution_%240p_Num] [float] NULL,
		[YTB_video_resolution_%240p_Den] [int] NULL,
		[YTB_video_resolution_360p_Num] [float] NULL,
		[YTB_video_resolution_360p_Den] [int] NULL,
		[YTB_video_mos_360p_Num] [float] NULL,
		[YTB_video_mos_360p_Den] [int] NULL,
		[YTB_video_resolution_%360p_Num] [float] NULL,
		[YTB_video_resolution_%360p_Den] [int] NULL,
		[YTB_video_resolution_480p_Num] [float] NULL,
		[YTB_video_resolution_480p_Den] [int] NULL,
		[YTB_video_mos_480p_Num] [float] NULL,
		[YTB_video_mos_480p_Den] [int] NULL,
		[YTB_video_resolution_%480p_Num] [float] NULL,
		[YTB_video_resolution_%480p_Den] [int] NULL,
		[YTB_video_resolution_720p_Num] [float] NULL,
		[YTB_video_resolution_720p_Den] [int] NULL,
		[YTB_video_mos_720p_Num] [float] NULL,
		[YTB_video_mos_720p_Den] [int] NULL,
		[YTB_video_resolution_%720p_Num] [float] NULL,
		[YTB_video_resolution_%720p_Den] [int] NULL,
		[YTB_video_resolution_1080p_Num] [float] NULL,
		[YTB_video_resolution_1080p_Den] [int] NULL,
		[YTB_video_mos_1080p_Num] [float] NULL,
		[YTB_video_mos_1080p_Den] [int] NULL,
		[YTB_video_resolution_%1080p_Num] [float] NULL,
		[YTB_video_resolution_%1080p_Den] [int] NULL,

		--20170710: @MDM: Nuevos campo calculados para metología FY1718. Disgregación por las 4 URLs de la nueva metolodología
		[Avg_Video_StarTime_Num_Video1]	float	NULL,	
		[avg_Video_startTime_Den_Video1]	[float]	NULL,	
		[Reproductions_WO_Interruptions_Video1]	[float]	NULL,	
		[Reproductions_WO_Interruptions_Den_Video1]	[float]	NULL,	
		[B4_Video1]	[float]	NULL,	
		[ReproduccionesHD_Video1]	[float]	NULL,	
		[Successful video download_Video1]	[float]	NULL,	
		[Reproducciones_Video1]	[float]	NULL,	
		[Fails_Video1]	[float]	NULL,
		[YTB_video_resolution_num_Video1]	[float]	NULL,	
		[YTB_video_resolution_den_Video1]	[float]	NULL,	
		[YTB_video_mos_num_Video1]	[float]	NULL,	
		[YTB_video_mos_den_Video1]	[float]	NULL,    
		[YTB_URL_Video1] [nvarchar](256)	NULL,
		[YTB_1st_Resolution_Num_Video1] [float] NULL,
		[YTB_1st_Resolution_Den_Video1] [int] NULL,
		[YTB_2nd_Resolution_Num_Video1] [float] NULL,
		[YTB_2nd_Resolution_Den_Video1] [int] NULL,
		[YTB_FirstChangeFromInit_Num_Video1] [float] NULL,
		[YTB_FirstChangeFromInit_Den_Video1] [int] NULL,
		[YTB_initialResolution_Num_Video1] [float] NULL,
		[YTB_initialResolution_Den_Video1] [int] NULL,
		[YTB_finalResolution_Num_Video1] [float] NULL,
		[YTB_finalResolution_Den_Video1] [int] NULL,
		[YTB_video_resolution_144p_Num_Video1] [float] NULL,
		[YTB_video_resolution_144p_Den_Video1] [int] NULL,
		[YTB_video_mos_144p_Num_Video1] [float] NULL,
		[YTB_video_mos_144p_Den_Video1] [int] NULL,
		[YTB_video_resolution_%144p_Num_Video1] [float] NULL,
		[YTB_video_resolution_%144p_Den_Video1] [int] NULL,
		[YTB_video_resolution_240p_Num_Video1] [float] NULL,
		[YTB_video_resolution_240p_Den_Video1] [int] NULL,
		[YTB_video_mos_240p_Num_Video1] [float] NULL,
		[YTB_video_mos_240p_Den_Video1] [int] NULL,
		[YTB_video_resolution_%240p_Num_Video1] [float] NULL,
		[YTB_video_resolution_%240p_Den_Video1] [int] NULL,
		[YTB_video_resolution_360p_Num_Video1] [float] NULL,
		[YTB_video_resolution_360p_Den_Video1] [int] NULL,
		[YTB_video_mos_360p_Num_Video1] [float] NULL,
		[YTB_video_mos_360p_Den_Video1] [int] NULL,
		[YTB_video_resolution_%360p_Num_Video1] [float] NULL,
		[YTB_video_resolution_%360p_Den_Video1] [int] NULL,
		[YTB_video_resolution_480p_Num_Video1] [float] NULL,
		[YTB_video_resolution_480p_Den_Video1] [int] NULL,
		[YTB_video_mos_480p_Num_Video1] [float] NULL,
		[YTB_video_mos_480p_Den_Video1] [int] NULL,
		[YTB_video_resolution_%480p_Num_Video1] [float] NULL,
		[YTB_video_resolution_%480p_Den_Video1] [int] NULL,
		[YTB_video_resolution_720p_Num_Video1] [float] NULL,
		[YTB_video_resolution_720p_Den_Video1] [int] NULL,
		[YTB_video_mos_720p_Num_Video1] [float] NULL,
		[YTB_video_mos_720p_Den_Video1] [int] NULL,
		[YTB_video_resolution_%720p_Num_Video1] [float] NULL,
		[YTB_video_resolution_%720p_Den_Video1] [int] NULL,
		[YTB_video_resolution_1080p_Num_Video1] [float] NULL,
		[YTB_video_resolution_1080p_Den_Video1] [int] NULL,
		[YTB_video_mos_1080p_Num_Video1] [float] NULL,
		[YTB_video_mos_1080p_Den_Video1] [int] NULL,
		[YTB_video_resolution_%1080p_Num_Video1] [float] NULL,
		[YTB_video_resolution_%1080p_Den_Video1] [int] NULL,

		[Avg_Video_StarTime_Num_Video2]	float	NULL,	
		[avg_Video_startTime_Den_Video2]	[float]	NULL,	
		[Reproductions_WO_Interruptions_Video2]	[float]	NULL,	
		[Reproductions_WO_Interruptions_Den_Video2]	[float]	NULL,	
		[B4_Video2]	[float]	NULL,	
		[ReproduccionesHD_Video2]	[float]	NULL,	
		[Successful video download_Video2]	[float]	NULL,	
		[Reproducciones_Video2]	[float]	NULL,	
		[Fails_Video2]	[float]	NULL,
		[YTB_video_resolution_num_Video2]	[float]	NULL,	
		[YTB_video_resolution_den_Video2]	[float]	NULL,	
		[YTB_video_mos_num_Video2]	[float]	NULL,	
		[YTB_video_mos_den_Video2]	[float]	NULL,    
		[YTB_URL_Video2] [nvarchar](256)	NULL,
		[YTB_1st_Resolution_Num_Video2] [float] NULL,
		[YTB_1st_Resolution_Den_Video2] [int] NULL,
		[YTB_2nd_Resolution_Num_Video2] [float] NULL,
		[YTB_2nd_Resolution_Den_Video2] [int] NULL,
		[YTB_FirstChangeFromInit_Num_Video2] [float] NULL,
		[YTB_FirstChangeFromInit_Den_Video2] [int] NULL,
		[YTB_initialResolution_Num_Video2] [float] NULL,
		[YTB_initialResolution_Den_Video2] [int] NULL,
		[YTB_finalResolution_Num_Video2] [float] NULL,
		[YTB_finalResolution_Den_Video2] [int] NULL,
		[YTB_video_resolution_144p_Num_Video2] [float] NULL,
		[YTB_video_resolution_144p_Den_Video2] [int] NULL,
		[YTB_video_mos_144p_Num_Video2] [float] NULL,
		[YTB_video_mos_144p_Den_Video2] [int] NULL,
		[YTB_video_resolution_%144p_Num_Video2] [float] NULL,
		[YTB_video_resolution_%144p_Den_Video2] [int] NULL,
		[YTB_video_resolution_240p_Num_Video2] [float] NULL,
		[YTB_video_resolution_240p_Den_Video2] [int] NULL,
		[YTB_video_mos_240p_Num_Video2] [float] NULL,
		[YTB_video_mos_240p_Den_Video2] [int] NULL,
		[YTB_video_resolution_%240p_Num_Video2] [float] NULL,
		[YTB_video_resolution_%240p_Den_Video2] [int] NULL,
		[YTB_video_resolution_360p_Num_Video2] [float] NULL,
		[YTB_video_resolution_360p_Den_Video2] [int] NULL,
		[YTB_video_mos_360p_Num_Video2] [float] NULL,
		[YTB_video_mos_360p_Den_Video2] [int] NULL,
		[YTB_video_resolution_%360p_Num_Video2] [float] NULL,
		[YTB_video_resolution_%360p_Den_Video2] [int] NULL,
		[YTB_video_resolution_480p_Num_Video2] [float] NULL,
		[YTB_video_resolution_480p_Den_Video2] [int] NULL,
		[YTB_video_mos_480p_Num_Video2] [float] NULL,
		[YTB_video_mos_480p_Den_Video2] [int] NULL,
		[YTB_video_resolution_%480p_Num_Video2] [float] NULL,
		[YTB_video_resolution_%480p_Den_Video2] [int] NULL,
		[YTB_video_resolution_720p_Num_Video2] [float] NULL,
		[YTB_video_resolution_720p_Den_Video2] [int] NULL,
		[YTB_video_mos_720p_Num_Video2] [float] NULL,
		[YTB_video_mos_720p_Den_Video2] [int] NULL,
		[YTB_video_resolution_%720p_Num_Video2] [float] NULL,
		[YTB_video_resolution_%720p_Den_Video2] [int] NULL,
		[YTB_video_resolution_1080p_Num_Video2] [float] NULL,
		[YTB_video_resolution_1080p_Den_Video2] [int] NULL,
		[YTB_video_mos_1080p_Num_Video2] [float] NULL,
		[YTB_video_mos_1080p_Den_Video2] [int] NULL,
		[YTB_video_resolution_%1080p_Num_Video2] [float] NULL,
		[YTB_video_resolution_%1080p_Den_Video2] [int] NULL,

		[Avg_Video_StarTime_Num_Video3]	float	NULL,	
		[avg_Video_startTime_Den_Video3]	[float]	NULL,	
		[Reproductions_WO_Interruptions_Video3]	[float]	NULL,	
		[Reproductions_WO_Interruptions_Den_Video3]	[float]	NULL,	
		[B4_Video3]	[float]	NULL,	
		[ReproduccionesHD_Video3]	[float]	NULL,	
		[Successful video download_Video3]	[float]	NULL,	
		[Reproducciones_Video3]	[float]	NULL,	
		[Fails_Video3]	[float]	NULL,
		[YTB_video_resolution_num_Video3]	[float]	NULL,	
		[YTB_video_resolution_den_Video3]	[float]	NULL,	
		[YTB_video_mos_num_Video3]	[float]	NULL,	
		[YTB_video_mos_den_Video3]	[float]	NULL,    
		[YTB_URL_Video3] [nvarchar](256)	NULL,
		[YTB_1st_Resolution_Num_Video3] [float] NULL,
		[YTB_1st_Resolution_Den_Video3] [int] NULL,
		[YTB_2nd_Resolution_Num_Video3] [float] NULL,
		[YTB_2nd_Resolution_Den_Video3] [int] NULL,
		[YTB_FirstChangeFromInit_Num_Video3] [float] NULL,
		[YTB_FirstChangeFromInit_Den_Video3] [int] NULL,
		[YTB_initialResolution_Num_Video3] [float] NULL,
		[YTB_initialResolution_Den_Video3] [int] NULL,
		[YTB_finalResolution_Num_Video3] [float] NULL,
		[YTB_finalResolution_Den_Video3] [int] NULL,
		[YTB_video_resolution_144p_Num_Video3] [float] NULL,
		[YTB_video_resolution_144p_Den_Video3] [int] NULL,
		[YTB_video_mos_144p_Num_Video3] [float] NULL,
		[YTB_video_mos_144p_Den_Video3] [int] NULL,
		[YTB_video_resolution_%144p_Num_Video3] [float] NULL,
		[YTB_video_resolution_%144p_Den_Video3] [int] NULL,
		[YTB_video_resolution_240p_Num_Video3] [float] NULL,
		[YTB_video_resolution_240p_Den_Video3] [int] NULL,
		[YTB_video_mos_240p_Num_Video3] [float] NULL,
		[YTB_video_mos_240p_Den_Video3] [int] NULL,
		[YTB_video_resolution_%240p_Num_Video3] [float] NULL,
		[YTB_video_resolution_%240p_Den_Video3] [int] NULL,
		[YTB_video_resolution_360p_Num_Video3] [float] NULL,
		[YTB_video_resolution_360p_Den_Video3] [int] NULL,
		[YTB_video_mos_360p_Num_Video3] [float] NULL,
		[YTB_video_mos_360p_Den_Video3] [int] NULL,
		[YTB_video_resolution_%360p_Num_Video3] [float] NULL,
		[YTB_video_resolution_%360p_Den_Video3] [int] NULL,
		[YTB_video_resolution_480p_Num_Video3] [float] NULL,
		[YTB_video_resolution_480p_Den_Video3] [int] NULL,
		[YTB_video_mos_480p_Num_Video3] [float] NULL,
		[YTB_video_mos_480p_Den_Video3] [int] NULL,
		[YTB_video_resolution_%480p_Num_Video3] [float] NULL,
		[YTB_video_resolution_%480p_Den_Video3] [int] NULL,
		[YTB_video_resolution_720p_Num_Video3] [float] NULL,
		[YTB_video_resolution_720p_Den_Video3] [int] NULL,
		[YTB_video_mos_720p_Num_Video3] [float] NULL,
		[YTB_video_mos_720p_Den_Video3] [int] NULL,
		[YTB_video_resolution_%720p_Num_Video3] [float] NULL,
		[YTB_video_resolution_%720p_Den_Video3] [int] NULL,
		[YTB_video_resolution_1080p_Num_Video3] [float] NULL,
		[YTB_video_resolution_1080p_Den_Video3] [int] NULL,
		[YTB_video_mos_1080p_Num_Video3] [float] NULL,
		[YTB_video_mos_1080p_Den_Video3] [int] NULL,
		[YTB_video_resolution_%1080p_Num_Video3] [float] NULL,
		[YTB_video_resolution_%1080p_Den_Video3] [int] NULL,

		[Avg_Video_StarTime_Num_Video4]	float	NULL,	
		[avg_Video_startTime_Den_Video4]	[float]	NULL,	
		[Reproductions_WO_Interruptions_Video4]	[float]	NULL,	
		[Reproductions_WO_Interruptions_Den_Video4]	[float]	NULL,	
		[B4_Video4]	[float]	NULL,	
		[ReproduccionesHD_Video4]	[float]	NULL,	
		[Successful video download_Video4]	[float]	NULL,	
		[Reproducciones_Video4]	[float]	NULL,	
		[Fails_Video4]	[float]	NULL,
		[YTB_video_resolution_num_Video4]	[float]	NULL,	
		[YTB_video_resolution_den_Video4]	[float]	NULL,	
		[YTB_video_mos_num_Video4]	[float]	NULL,	
		[YTB_video_mos_den_Video4]	[float]	NULL,    
		[YTB_URL_Video4] [nvarchar](256)	NULL,
		[YTB_1st_Resolution_Num_Video4] [float] NULL,
		[YTB_1st_Resolution_Den_Video4] [int] NULL,
		[YTB_2nd_Resolution_Num_Video4] [float] NULL,
		[YTB_2nd_Resolution_Den_Video4] [int] NULL,
		[YTB_FirstChangeFromInit_Num_Video4] [float] NULL,
		[YTB_FirstChangeFromInit_Den_Video4] [int] NULL,
		[YTB_initialResolution_Num_Video4] [float] NULL,
		[YTB_initialResolution_Den_Video4] [int] NULL,
		[YTB_finalResolution_Num_Video4] [float] NULL,
		[YTB_finalResolution_Den_Video4] [int] NULL,
		[YTB_video_resolution_144p_Num_Video4] [float] NULL,
		[YTB_video_resolution_144p_Den_Video4] [int] NULL,
		[YTB_video_mos_144p_Num_Video4] [float] NULL,
		[YTB_video_mos_144p_Den_Video4] [int] NULL,
		[YTB_video_resolution_%144p_Num_Video4] [float] NULL,
		[YTB_video_resolution_%144p_Den_Video4] [int] NULL,
		[YTB_video_resolution_240p_Num_Video4] [float] NULL,
		[YTB_video_resolution_240p_Den_Video4] [int] NULL,
		[YTB_video_mos_240p_Num_Video4] [float] NULL,
		[YTB_video_mos_240p_Den_Video4] [int] NULL,
		[YTB_video_resolution_%240p_Num_Video4] [float] NULL,
		[YTB_video_resolution_%240p_Den_Video4] [int] NULL,
		[YTB_video_resolution_360p_Num_Video4] [float] NULL,
		[YTB_video_resolution_360p_Den_Video4] [int] NULL,
		[YTB_video_mos_360p_Num_Video4] [float] NULL,
		[YTB_video_mos_360p_Den_Video4] [int] NULL,
		[YTB_video_resolution_%360p_Num_Video4] [float] NULL,
		[YTB_video_resolution_%360p_Den_Video4] [int] NULL,
		[YTB_video_resolution_480p_Num_Video4] [float] NULL,
		[YTB_video_resolution_480p_Den_Video4] [int] NULL,
		[YTB_video_mos_480p_Num_Video4] [float] NULL,
		[YTB_video_mos_480p_Den_Video4] [int] NULL,
		[YTB_video_resolution_%480p_Num_Video4] [float] NULL,
		[YTB_video_resolution_%480p_Den_Video4] [int] NULL,
		[YTB_video_resolution_720p_Num_Video4] [float] NULL,
		[YTB_video_resolution_720p_Den_Video4] [int] NULL,
		[YTB_video_mos_720p_Num_Video4] [float] NULL,
		[YTB_video_mos_720p_Den_Video4] [int] NULL,
		[YTB_video_resolution_%720p_Num_Video4] [float] NULL,
		[YTB_video_resolution_%720p_Den_Video4] [int] NULL,
		[YTB_video_resolution_1080p_Num_Video4] [float] NULL,
		[YTB_video_resolution_1080p_Den_Video4] [int] NULL,
		[YTB_video_mos_1080p_Num_Video4] [float] NULL,
		[YTB_video_mos_1080p_Den_Video4] [int] NULL,
		[YTB_video_resolution_%1080p_Num_Video4] [float] NULL,
		[YTB_video_resolution_%1080p_Den_Video4] [int] NULL,

		[ASideDevice] [nvarchar](256) NULL,
        [BSideDevice] [nvarchar](256) NULL,
        [SWVersion] [nvarchar](256) NULL,
		[YTB_Version] [nvarchar](256)	NULL
			
	) ON [PRIMARY]


	--------------------------------------------------------------------------
	-- (1)	Estadisticos	--------------------------------------------------
	--------------------------------------------------------------------------

	-------------------------------------
	-- 1.1) Estadisticos NoCA_Device
	-------------------------------------	
	print '1.1. Insert Estadisticos NoCA_Device' 	
	-------------
	-- DL-CE/NC y UL-CE/NC						
	insert into _RI_Data_e 
	select  
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment,t.mnc,t.meas_round,t.Date_Reporting as meas_date,t.Week_Reporting as meas_week, 
		'NoCA_Device' as meas_Tech, 'CE_DL' as Test_type, 'Downlink' as Direction, t.entidad as vf_entity,t.Report_Type,t.Aggr_Type,
	
		-- General:
		sum(t.navegaciones) as Num_tests,
		sum(t.[fallos de acceso]) as Failed,
		sum(t.[fallos de descarga]) as Dropped,
		sum(t.[SessionTime]*t.navegaciones) as Session_time_Num,
		--sum(t.[tiempo de descarga]*t.count_throughput) as Session_time_Num,	-- SESSION_TIME de DL/UL, calculado como TRANSFER_TIME - se haría el cambio al calculo correcto en cambio de metodología para evitar salto de valor en QLIK.	
		sum(t.count_throughput) as Throughput_Den,
		sum(t.navegaciones) as Session_time_Den,
		--sum(t.count_throughput) as Session_time_Den,
		sum(t.Throughput*t.count_throughput) as Throughput_Num,
		max(t.[Throughput Max]) as Throughput_Max,
		sum(t.Count_Throughput_3M) as Throughput_3M_Num,
		sum(t.Count_Throughput_1M) as Throughput_1M_Num,
		sum(0) as Throughput_128K_Num,
		sum(0) as Throughput_64K_Num,
		sum(0) as Throughput_384K_Num,

		--CAC 10/08/2017: thput de test sin error y con error
		sum(0) as Throughput_with_Error_Den,
		sum(0) as Throughput_with_Error_Num,

		sum(0) as WEB_IP_ACCESS_TIME_NUM,			sum(0) as WEB_IP_ACCESS_TIME_DEN,
		sum(0) as WEB_HTTP_TRANSFER_TIME_NUM,		sum(0) as WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_NUM,		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_NUM,		sum(0) as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,	sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(te.[% GSM]*t.navegaciones) as Radio_2G_use_Num,
		sum(te.[% WCDMA]*t.navegaciones) as Radio_3G_use_Num,
		sum(te.[% LTE]*t.navegaciones) as Radio_4G_use_Num,
		sum(t.navegaciones*(isnull(te.[% GSM],0)+isnull(te.[% WCDMA],0)+isnull(te.[% LTE],0))) as Radio_use_Den,
		sum(0) as Radio_2G_use_Den,		sum(0) as Radio_3G_use_Den,		sum(0) as Radio_4G_use_Den,

		sum(0) as Radio_U2100_use_Num,	sum(0) as Radio_U900_use_Num,    sum(0) as Radio_LTE2100_use_Num,    sum(0) as Radio_LTE2600_use_Num,    sum(0) as Radio_LTE1800_use_Num,    sum(0) as Radio_LTE800_use_Num,
		sum(0) as Radio_Band_Use_Den,		
		sum(0) as Radio_U2100_use_Den,	sum(0) as Radio_U900_use_Den,    sum(0) as Radio_LTE2100_use_Den,    sum(0) as Radio_LTE2600_use_Den,    sum(0) as Radio_LTE1800_use_Den,    sum(0) as Radio_LTE800_use_Den,

		sum(0) as [3G_DualCarrier_use_Num],	sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],		sum(0) as [3G_DC_2100_use_Den],
		sum(0) as [3G_DC_900_use_Num],		sum(0) as [3G_DC_900_use_Den],

		sum(0) as [3G_NumCodes_use_Num],	sum(0) as [3G_NumCodes_use_Den],
		sum(0) as [3G_QPSK_use_Num],		sum(0) as [3G_16QAM_use_Num],		sum(0) as [3G_64QAM_use_Num],	
		sum(0) as [3G_QPSK_use_Den],		sum(0) as [3G_16QAM_use_Den],		sum(0) as [3G_64QAM_use_Den],

		sum(0) as [3G_%_SF22_Num],			sum(0) as [3G_%_SF22andSF42_Num],	sum(0) as [3G_%_SF4_Num],	sum(0) as [3G_%_SF42_Num],	
		sum(0) as [3G_%_SF22_Den],			sum(0) as [3G_%_SF22andSF42_Den],	sum(0) as [3G_%_SF4_Den],	sum(0) as [3G_%_SF42_Den],	
		sum(0) as [3G_%_TTI2ms_Num],		sum(0) as [3G_%_TTI2ms_Den],
		sum(0) as [RSCP_Lin_Num],			sum(0) as [EcI0_Lin_Num],	
		sum(0) as [RSCP_Lin_Den],			sum(0) as [EcI0_Lin_Den],	

		-- Performance:
		sum(pf.CQI*(isnull(pf.count_cqi_u2100,0)+isnull(pf.count_cqi_u900,0))) [3G_CQI],
		sum((isnull(pf.count_cqi_u2100,0)+isnull(pf.count_cqi_u900,0))) as [3G_DataStats_Den],
		Sum(pfl.CQI_U900*isnull(pfl.count_cqi_u900,0)) as CQI_U900_Num,
		sum(isnull(pf.count_cqi_u900,0)) as CQI_U900_Den,
		Sum(pfl.CQI_U2100*isnull(pfl.count_cqi_u2100,0)) as CQI_U2100_Num,
		sum(isnull(pfl.count_cqi_u2100,0)) as CQI_U2100_Den,

		sum(pf.[HSPA_PCT]*pf.[Count_HSPA]) as [HSPA_PCT_Num],
		sum(pf.[HSPA+_PCT]*pf.[Count_HSPA+]) as [HSPA+_PCT_Num],
		sum(pf.[HSPA+_DC_PCT]*pf.[Count_HSPA+_DC]) as [HSPA+_DC_PCT_Num],
		sum(pf.[Count_HSPA]) as [HSPA_PCT_Den],
		sum(pf.[Count_HSPA+]) as [HSPA+_PCT_Den],
		sum(pf.[Count_HSPA+_DC]) as [HSPA+_DC_PCT_Den],

		sum(0) as [UL_Inter_Lin_Num],
		sum(0) as [UL_Inter_Lin_Den],	
	
		-- Performance LTE:
		sum(0) as CQI_4G_Num,
		sum(pfl.Count_CQI_L800*pfl.CQI_L800) as CQI_L800_Num,
		sum(pfl.Count_CQI_L1800*pfl.CQI_L1800) as CQI_L1800_Num,
		sum(pfl.Count_CQI_L2100*pfl.CQI_L2100) as CQI_L2100_Num,
		sum(pfl.Count_CQI_L2600*pfl.CQI_L2600) as CQI_L2600_Num,
		sum(0) as CQI_4G_Den,
		sum(pfl.Count_CQI_L800) as CQI_L800_Den,
		sum(pfl.Count_CQI_L1800) as CQI_L1800_Den,
		sum(pfl.Count_CQI_L2100) as CQI_L2100_Den,
		sum(pfl.Count_CQI_L2600) as CQI_L2600_Den,

		sum(pfl.Count_LTE_5Mhz_SC *pfl.LTE_5Mhz_SC_PCT) as LTE_5Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_10Mhz_SC*pfl.LTE_10Mhz_SC_PCT) as LTE_10Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_15Mhz_SC*pfl.LTE_15Mhz_SC_PCT) as LTE_15Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_20Mhz_SC*pfl.LTE_20Mhz_SC_PCT) as LTE_20Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_15Mhz_CA*pfl.LTE_15Mhz_CA_PCT) as LTE_15Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_20Mhz_CA*pfl.LTE_20Mhz_CA_PCT) as LTE_20Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_25Mhz_CA*pfl.LTE_25Mhz_CA_PCT) as LTE_25Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_30Mhz_CA*pfl.LTE_30Mhz_CA_PCT) as LTE_30Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_35Mhz_CA*pfl.LTE_35Mhz_CA_PCT) as LTE_35Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_40Mhz_CA*pfl.LTE_40Mhz_CA_PCT) as LTE_40Mhz_CA_Use_Num,	
		sum(pfl.Count_LTE_5Mhz_SC) as LTE_5Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_10Mhz_SC) as LTE_10Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_15Mhz_SC) as LTE_15Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_20Mhz_SC) as LTE_20Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_15Mhz_CA) as LTE_15Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_20Mhz_CA) as LTE_20Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_25Mhz_CA) as LTE_25Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_30Mhz_CA) as LTE_30Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_35Mhz_CA) as LTE_35Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_40Mhz_CA) as LTE_40Mhz_CA_Use_Den,	

		sum((isnull(pfl.Count_LTE_5Mhz_SC,0) 
		 --    +isnull(pfl.Count_LTE_10Mhz_SC,0) +isnull(pfl.Count_LTE_15Mhz_SC,0) +isnull(pfl.Count_LTE_20Mhz_SC,0) +
		 --    isnull(pfl.Count_LTE_15Mhz_CA,0) +isnull(pfl.Count_LTE_20Mhz_CA,0) +isnull(pfl.Count_LTE_25Mhz_CA,0) +isnull(pfl.Count_LTE_30Mhz_CA,0) +
		 --    isnull(pfl.Count_LTE_35Mhz_CA,0) +isnull(pfl.Count_LTE_40Mhz_CA,0)
			)
			*(
			pfl.LTE_5Mhz_SC_PCT+pfl.LTE_10Mhz_SC_PCT+pfl.LTE_15Mhz_SC_PCT+pfl.LTE_20Mhz_SC_PCT+pfl.LTE_15Mhz_CA_PCT+
			pfl.LTE_20Mhz_CA_PCT+pfl.LTE_25Mhz_CA_PCT+pfl.LTE_30Mhz_CA_PCT+pfl.LTE_35Mhz_CA_PCT+pfl.LTE_40Mhz_CA_PCT
			)) as LTE_BW_use_den,

		sum(0) as [4G_RBs_use_Num],		sum(0) as [4G_RBs_use_Den],

		sum(0) as [4G_TM1_use_Num],			sum(0) as [4G_TM2_use_Num],	sum(0) as [4G_TM3_use_Num],	sum(0) as [4G_TM4_use_Num],	sum(0) as [4G_TM5_use_Num],	sum(0) as [4G_TM6_use_Num],	sum(0) as [4G_TM7_use_Num],	sum(0) as [4G_TM8_use_Num],	sum(0) as [4G_TM9_use_Num],
		sum(0) as [4G_TMInvalid_use_Num],	sum(0) as [4G_TMUnknown_use_Num],
		sum(0) as [4G_TM_Den],

		-- Technology LTE:
		sum(0) as [4G_%CA_Num],			sum(0) as [4G_%CA_Den],
		sum(0) as [4G_BPSK_Use_Num],	sum(0) as [4G_QPSK_Use_Num],	sum(0) as [4G_16QAM_Use_Num],    sum(0) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],	sum(0) as [4G_QPSK_Use_Den],	sum(0) as [4G_16QAM_Use_Den],    sum(0) as [4G_64QAM_Use_Den],

		sum((isnull(pfl.Count_CQI_L800,0)+isnull(pfl.Count_CQI_L1800,0)+isnull(pfl.Count_CQI_L2100,0)+isnull(pfl.Count_CQI_L2600,0))*(isnull(tel.[64QAM]/100.0,0)+isnull(tel.[16QAM]/100.0,0)+isnull(tel.QPSK/100.0,0))) as [4G_stats_Den],

		sum(0) as [RSRP_Lin_Num],		sum(0) as [RSRQ_Lin_Num],	sum(0) as [SINR_Lin_Num],			
		sum(0) as [RSRP_Lin_Den],		sum(0) as [RSRQ_Lin_Den],	sum(0) as [SINR_Lin_Den],	
		
		-- New KPIs:
		sum(0) as [MIMO_num],	sum(0) as [RI1_num],	sum(0) as [RI2_num],
		sum(0) as [MIMO_den],	sum(0) as [RI1_den],	sum(0) as [RI2_den],
		sum(0) as RBs_Allocated_Den,	sum(0) as RBs_Allocated_Num,	max(0) as RBs_Allocated_Max,

		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		sum(0) as [1_N],	sum(0) as [2_N],	sum(0) as [3_N],	sum(0) as [4_N],	sum(0) as [5_N],	sum(0) as [6_N],	sum(0) as [7_N],	sum(0) as [8_N],	sum(0) as [9_N],	sum(0) as [10_N],
		sum(0) as [11_N],	sum(0) as [12_N],	sum(0) as [13_N],	sum(0) as [14_N],	sum(0) as [15_N],	sum(0) as [16_N],	sum(0) as [17_N],	sum(0) as [18_N],	sum(0) as [19_N],	sum(0) as [20_N],
		sum(0) as [21_N],	sum(0) as [22_N],	sum(0) as [23_N],	sum(0) as [24_N],	sum(0) as [25_N],	sum(0) as [26_N],	sum(0) as [27_N],	sum(0) as [28_N],	sum(0) as [29_N],	sum(0) as [30_N],
		sum(0) as [31_N],	sum(0) as [32_N],	sum(0) as [33_N],	sum(0) as [34_N],	sum(0) as [35_N],	sum(0) as [36_N],	sum(0) as [37_N],	sum(0) as [38_N],	sum(0) as [39_N],	sum(0) as [40_N],
		sum(0) as [41_N],	sum(0) as [42_N],	sum(0) as [43_N],	sum(0) as [44_N],	sum(0) as [45_N],	sum(0) as [46_N],	sum(0) as [47_N],	sum(0) as [48_N],	sum(0) as [49_N],	sum(0) as [50_N],
		sum(0) as [51_N],	sum(0) as [52_N],	sum(0) as [53_N],	sum(0) as [54_N],	sum(0) as [55_N],	sum(0) as [56_N],	sum(0) as [57_N],	sum(0) as [58_N],	sum(0) as [59_N],	sum(0) as [60_N],
		sum(0) as [61_N],	sum(0) as [62_N],	sum(0) as [63_N],	sum(0) as [64_N],	sum(0) as [65_N],	sum(0) as [66_N]
	
		--null as Region_Road_VF, null as Region_Road_OSP,
		--null as Region_VF, null as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,sum(tLTE.[ 0-5Mbps]) as [1]		,sum(tLTE.[ 5-10Mbps]) as [2]		,sum(tLTE.[ 10-15Mbps]) as [3]		,sum(tLTE.[ 15-20Mbps]) as [4]		,sum(tLTE.[ 20-25Mbps]) as [5]
		,sum(tLTE.[ 25-30Mbps]) as [6]		,sum(tLTE.[ 30-35Mbps]) as [7]		,sum(tLTE.[ 35-40Mbps]) as [8]		,sum(tLTE.[ 40-45Mbps]) as [9]		,sum(tLTE.[ 45-50Mbps]) as [10]
		,sum(tLTE.[ 50-55Mbps]) as [11]		,sum(tLTE.[ 55-60Mbps]) as [12]		,sum(tLTE.[ 60-65Mbps]) as [13]		,sum(tLTE.[ 65-70Mbps]) as [14]		,sum(tLTE.[ 70-75Mbps]) as [15]
		,sum(tLTE.[ 75-80Mbps]) as [16]		,sum(tLTE.[ 80-85Mbps]) as [17]		,sum(tLTE.[ 85-90Mbps]) as [18]		,sum(tLTE.[ 90-95Mbps]) as [19]		,sum(tLTE.[ 95-100Mbps]) as [20]
		,sum(tLTE.[ 100-105Mbps]) as [21]	,sum(tLTE.[ 105-110Mbps]) as [22]	,sum(tLTE.[ 110-115Mbps]) as [23]	,sum(tLTE.[ 115-120Mbps]) as [24]	,sum(tLTE.[ 120-125Mbps]) as [25]
		,sum(tLTE.[ 125-130Mbps]) as [26]	,sum(tLTE.[ 130-135Mbps]) as [27]	,sum(tLTE.[ 135-140Mbps]) as [28]	,sum(tLTE.[ 140-145Mbps]) as [29]	,sum(tLTE.[ 145-150Mbps]) as [30]
		,sum(tLTE.[ >150Mbps]) as [31]
		,sum(0) as [32]	,sum(0) as [33]	,sum(0) as [34]	,sum(0) as [35]	,sum(0) as [36]	,sum(0) as [37]	,sum(0) as [38]	,sum(0) as [39]	,sum(0) as [40]	,sum(0) as [41],

		-- Parametros de configuracion:
		null as ASideDevice, null as BSideDevice, null as SWVersion, 
		null as YTB_Version, null as YTB_URL
	
	from	[AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_DL_Thput_CE_4GDevice] t
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_DL_Performance_CE_4GDevice] pf
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(pf.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=pf.mnc and t.Date_Reporting=pf.Date_Reporting and t.entidad=pf.entidad and t.Aggr_Type=pf.Aggr_Type and t.Report_Type=pf.Report_Type and t.meas_round=pf.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_DL_Technology_CE_4GDevice] te
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(te.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=te.mnc and t.Date_Reporting=te.Date_Reporting and t.entidad=te.entidad and t.Aggr_Type=te.Aggr_Type and t.Report_Type=te.Report_Type and t.meas_round=te.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_DL_Performance_CE_LTE_4GDevice] pfl
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(pfl.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=pfl.mnc and t.Date_Reporting=pfl.Date_Reporting and t.entidad=pfl.entidad and t.Aggr_Type=pfl.Aggr_Type and t.Report_Type=pfl.Report_Type and t.meas_round=pfl.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_DL_Technology_CE_LTE_4GDevice] tel
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(tel.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=tel.mnc and t.Date_Reporting=tel.Date_Reporting and t.entidad=tel.entidad and t.Aggr_Type=tel.Aggr_Type and t.Report_Type=tel.Report_Type and t.meas_round=tel.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_DL_Thput_CE_LTE_4Gdevice] tLTE 
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(tLTE.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=tLTE.mnc and t.Date_Reporting=tLTE.Date_Reporting and t.entidad=tLTE.entidad and t.Aggr_Type=tLTE.Aggr_Type and t.Report_Type=tLTE.Report_Type and t.meas_round=tLTE.meas_round
			, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end,
		t.mnc,t.meas_round,t.Date_Reporting,t.Week_Reporting,t.entidad,t.Report_Type,t.Aggr_Type
	

	-------------
	union all
	select  
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment,t.mnc,t.meas_round,t.Date_Reporting as meas_date,t.Week_Reporting as meas_week, 
		'NoCA_Device' as meas_Tech, 'CE_UL' as Test_type, 'Uplink' as Direction, t.entidad as vf_entity,t.Report_Type,t.Aggr_Type,
	
		-- General:
		sum(t.Subidas) as Num_tests,
		sum(t.[fallos de acceso]) as Failed,
		sum(t.[fallos de descarga]) as Dropped,
		sum(t.[SessionTime]*t.Subidas) as Session_time_Num,
		--sum(t.[Tiempo de subida]*t.count_throughput) as Session_time_Num,	-- SESSION_TIME de DL/UL, calculado como TRANSFER_TIME - se haría el cambio al calculo correcto en cambio de metodología para evitar salto de valor en QLIK.
		sum(t.count_throughput) as Throughput_Den,
		sum(t.Subidas) as Session_time_Den,
		--sum(t.count_throughput) as Session_time_Den,
		sum(t.Throughput*t.count_throughput) as Throughput_Num,
		max(t.[Throughput Max]) as Throughput_Max,
		sum(0) as Throughput_3M_Num,
		sum(t.Count_Throughput_1M) as Throughput_1M_Num,
		sum(0) as Throughput_128K_Num,
		sum(0) as Throughput_64K_Num,
		sum(0) as Throughput_384K_Num,

		--CAC 10/08/2017: thput de test sin error y con error
		sum(0) as Throughput_with_Error_Den,
		sum(0) as Throughput_with_Error_Num,

		sum(0) as WEB_IP_ACCESS_TIME_NUM,			sum(0) as WEB_IP_ACCESS_TIME_DEN,
		sum(0) as WEB_HTTP_TRANSFER_TIME_NUM,		sum(0) as WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_NUM,		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_NUM,		sum(0) as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,	sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(te.[% GSM]*t.subidas) as Radio_2G_use_Num,
		sum(te.[% WCDMA]*t.subidas) as Radio_3G_use_Num,
		sum(te.[% LTE]*t.subidas) as Radio_4G_use_Num,
		sum(t.subidas*(isnull(te.[% GSM],0)+isnull(te.[% WCDMA],0)+isnull(te.[% LTE],0))) as Radio_use_Den,
		sum(0) as Radio_2G_use_Den,		sum(0) as Radio_3G_use_Den,		sum(0) as Radio_4G_use_Den,

		sum(0) as Radio_U2100_use_Num,	sum(0) as Radio_U900_use_Num,    sum(0) as Radio_LTE2100_use_Num,    sum(0) as Radio_LTE2600_use_Num,    sum(0) as Radio_LTE1800_use_Num,    sum(0) as Radio_LTE800_use_Num,
		sum(0) as Radio_Band_Use_Den,		
		sum(0) as Radio_U2100_use_Den,	sum(0) as Radio_U900_use_Den,    sum(0) as Radio_LTE2100_use_Den,    sum(0) as Radio_LTE2600_use_Den,    sum(0) as Radio_LTE1800_use_Den,    sum(0) as Radio_LTE800_use_Den,

		sum(0) as [3G_DualCarrier_use_Num],	sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],		sum(0) as [3G_DC_2100_use_Den],
		sum(0) as [3G_DC_900_use_Num],		sum(0) as [3G_DC_900_use_Den],

		sum(0) as [3G_NumCodes_use_Num],	sum(0) as [3G_NumCodes_use_Den],
		sum(0) as [3G_QPSK_use_Num],		sum(0) as [3G_16QAM_use_Num],		sum(0) as [3G_64QAM_use_Num],	
		sum(0) as [3G_QPSK_use_Den],		sum(0) as [3G_16QAM_use_Den],		sum(0) as [3G_64QAM_use_Den],

		sum(0) as [3G_%_SF22_Num],			sum(0) as [3G_%_SF22andSF42_Num],	sum(0) as [3G_%_SF4_Num],	sum(0) as [3G_%_SF42_Num],	
		sum(0) as [3G_%_SF22_Den],			sum(0) as [3G_%_SF22andSF42_Den],	sum(0) as [3G_%_SF4_Den],	sum(0) as [3G_%_SF42_Den],	
		sum(0) as [3G_%_TTI2ms_Num],		sum(0) as [3G_%_TTI2ms_Den],
		sum(0) as [RSCP_Lin_Num],			sum(0) as [EcI0_Lin_Num],	
		sum(0) as [RSCP_Lin_Den],			sum(0) as [EcI0_Lin_Den],	
			
		-- Performance:
		sum(0) as [3G_CQI],			sum(0) as [3G_DataStats_Den],
		Sum(0) as CQI_U900_Num,		sum(0) as CQI_U900_Den,
		Sum(0) as CQI_U2100_Num,	sum(0) as CQI_U2100_Den,

		sum(pf.[HSPA_PCT]*pf.[Count_HSPA]) as [HSPA_PCT_Num],
		sum(pf.[HSPA+_PCT]*pf.[Count_HSPA+]) as [HSPA+_PCT_Num],
		sum(pf.[HSPA+_DC_PCT]*pf.[Count_HSPA+_DC]) as [HSPA+_DC_PCT_Num],
		sum(pf.[Count_HSPA]) as [HSPA_PCT_Den],
		sum(pf.[Count_HSPA+]) as [HSPA+_PCT_Den],
		sum(pf.[Count_HSPA+_DC]) as [HSPA+_DC_PCT_Den],

		sum(0) as [UL_Inter_Lin_Num],
		sum(0) as [UL_Inter_Lin_Den],	
	
		-- Performance LTE:
		sum(0) as CQI_4G_Num,
		sum(pfl.Count_CQI_L800*pfl.CQI_L800) as CQI_L800_Num,
		sum(pfl.Count_CQI_L1800*pfl.CQI_L1800) as CQI_L1800_Num,
		sum(pfl.Count_CQI_L2100*pfl.CQI_L2100) as CQI_L2100_Num,
		sum(pfl.Count_CQI_L2600*pfl.CQI_L2600) as CQI_L2600_Num,
		sum(0) as CQI_4G_Den,
		sum(pfl.Count_CQI_L800) as CQI_L800_Den,
		sum(pfl.Count_CQI_L1800) as CQI_L1800_Den,
		sum(pfl.Count_CQI_L2100) as CQI_L2100_Den,
		sum(pfl.Count_CQI_L2600) as CQI_L2600_Den,

		sum(pfl.Count_LTE_5Mhz_SC *pfl.LTE_5Mhz_SC_PCT) as LTE_5Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_10Mhz_SC*pfl.LTE_10Mhz_SC_PCT) as LTE_10Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_15Mhz_SC*pfl.LTE_15Mhz_SC_PCT) as LTE_15Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_20Mhz_SC*pfl.LTE_20Mhz_SC_PCT) as LTE_20Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_CA_Use_Num,
		sum(0) as LTE_20Mhz_CA_Use_Num,
		sum(0) as LTE_25Mhz_CA_Use_Num,
		sum(0) as LTE_30Mhz_CA_Use_Num,
		sum(0) as LTE_35Mhz_CA_Use_Num,
		sum(0) as LTE_40Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_5Mhz_SC) as LTE_5Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_10Mhz_SC) as LTE_10Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_15Mhz_SC) as LTE_15Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_20Mhz_SC) as LTE_20Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_CA_Use_Den,
		sum(0) as LTE_20Mhz_CA_Use_Den,
		sum(0) as LTE_25Mhz_CA_Use_Den,
		sum(0) as LTE_30Mhz_CA_Use_Den,
		sum(0) as LTE_35Mhz_CA_Use_Den,
		sum(0) as LTE_40Mhz_CA_Use_Den,		

		sum((isnull(pfl.Count_LTE_5Mhz_SC,0) 
		 --    +isnull(pfl.Count_LTE_10Mhz_SC,0) +isnull(pfl.Count_LTE_15Mhz_SC,0) +isnull(pfl.Count_LTE_20Mhz_SC,0) +
		 --    isnull(pfl.Count_LTE_15Mhz_CA,0) +isnull(pfl.Count_LTE_20Mhz_CA,0) +isnull(pfl.Count_LTE_25Mhz_CA,0) +isnull(pfl.Count_LTE_30Mhz_CA,0) +
		 --    isnull(pfl.Count_LTE_35Mhz_CA,0) +isnull(pfl.Count_LTE_40Mhz_CA,0)
			)
			*(
			pfl.LTE_5Mhz_SC_PCT+pfl.LTE_10Mhz_SC_PCT+pfl.LTE_15Mhz_SC_PCT+pfl.LTE_20Mhz_SC_PCT)
			) as LTE_BW_use_den,

		sum(0) as [4G_RBs_use_Num],		sum(0) as [4G_RBs_use_Den],

		sum(0) as [4G_TM1_use_Num],			sum(0) as [4G_TM2_use_Num],	sum(0) as [4G_TM3_use_Num],	sum(0) as [4G_TM4_use_Num],	sum(0) as [4G_TM5_use_Num],	sum(0) as [4G_TM6_use_Num],	sum(0) as [4G_TM7_use_Num],	sum(0) as [4G_TM8_use_Num],	sum(0) as [4G_TM9_use_Num],
		sum(0) as [4G_TMInvalid_use_Num],	sum(0) as [4G_TMUnknown_use_Num],
		sum(0) as [4G_TM_Den],

		-- Technology LTE:
		sum(0) as [4G_%CA_Num],			sum(0) as [4G_%CA_Den],
		sum(0) as [4G_BPSK_Use_Num],	sum(0) as [4G_QPSK_Use_Num],	sum(0) as [4G_16QAM_Use_Num],    sum(0) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],	sum(0) as [4G_QPSK_Use_Den],	sum(0) as [4G_16QAM_Use_Den],    sum(0) as [4G_64QAM_Use_Den],

		sum((isnull(pfl.Count_CQI_L800,0)+isnull(pfl.Count_CQI_L1800,0)+isnull(pfl.Count_CQI_L2100,0)+isnull(pfl.Count_CQI_L2600,0))*(isnull(tel.[16QAM],0)+isnull(tel.QPSK,0))) as [4G_stats_Den],

		sum(0) as [RSRP_Lin_Num],		sum(0) as [RSRQ_Lin_Num],	sum(0) as [SINR_Lin_Num],			
		sum(0) as [RSRP_Lin_Den],		sum(0) as [RSRQ_Lin_Den],	sum(0) as [SINR_Lin_Den],	
		
		-- New KPIs:
		sum(0) as [MIMO_num],	sum(0) as [RI1_num],	sum(0) as [RI2_num],
		sum(0) as [MIMO_den],	sum(0) as [RI1_den],	sum(0) as [RI2_den],
		sum(0) as RBs_Allocated_Den,	sum(0) as RBs_Allocated_Num,	max(0) as RBs_Allocated_Max,

		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		sum(0) as [1_N],	sum(0) as [2_N],	sum(0) as [3_N],	sum(0) as [4_N],	sum(0) as [5_N],	sum(0) as [6_N],	sum(0) as [7_N],	sum(0) as [8_N],	sum(0) as [9_N],	sum(0) as [10_N],
		sum(0) as [11_N],	sum(0) as [12_N],	sum(0) as [13_N],	sum(0) as [14_N],	sum(0) as [15_N],	sum(0) as [16_N],	sum(0) as [17_N],	sum(0) as [18_N],	sum(0) as [19_N],	sum(0) as [20_N],
		sum(0) as [21_N],	sum(0) as [22_N],	sum(0) as [23_N],	sum(0) as [24_N],	sum(0) as [25_N],	sum(0) as [26_N],	sum(0) as [27_N],	sum(0) as [28_N],	sum(0) as [29_N],	sum(0) as [30_N],
		sum(0) as [31_N],	sum(0) as [32_N],	sum(0) as [33_N],	sum(0) as [34_N],	sum(0) as [35_N],	sum(0) as [36_N],	sum(0) as [37_N],	sum(0) as [38_N],	sum(0) as [39_N],	sum(0) as [40_N],
		sum(0) as [41_N],	sum(0) as [42_N],	sum(0) as [43_N],	sum(0) as [44_N],	sum(0) as [45_N],	sum(0) as [46_N],	sum(0) as [47_N],	sum(0) as [48_N],	sum(0) as [49_N],	sum(0) as [50_N],
		sum(0) as [51_N],	sum(0) as [52_N],	sum(0) as [53_N],	sum(0) as [54_N],	sum(0) as [55_N],	sum(0) as [56_N],	sum(0) as [57_N],	sum(0) as [58_N],	sum(0) as [59_N],	sum(0) as [60_N],
		sum(0) as [61_N],	sum(0) as [62_N],	sum(0) as [63_N],	sum(0) as [64_N],	sum(0) as [65_N],	sum(0) as [66_N]
	
		--null as Region_Road_VF, null as Region_Road_OSP,
		--null as Region_VF, null as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,sum(tLTE.[ 0-5Mbps]) as [1]		,sum(tLTE.[ 5-10Mbps]) as [2]		,sum(tLTE.[ 10-15Mbps]) as [3]		,sum(tLTE.[ 15-20Mbps]) as [4]		,sum(tLTE.[ 20-25Mbps]) as [5]
		,sum(tLTE.[ 25-30Mbps]) as [6]		,sum(tLTE.[ 30-35Mbps]) as [7]		,sum(tLTE.[ 35-40Mbps]) as [8]		,sum(tLTE.[ 40-45Mbps]) as [9]		,sum(tLTE.[ 45-50Mbps]) as [10]
		,sum(tLTE.[ >50Mbps]) as [11]	
		,sum(0) as [12]	,sum(0) as [13]	,sum(0) as [14]	,sum(0) as [15]	,sum(0) as [16]	,sum(0) as [17]	,sum(0) as [18]	,sum(0) as [19]	,sum(0) as [20]
		,sum(0) as [21]	,sum(0) as [22]	,sum(0) as [23]	,sum(0) as [24]	,sum(0) as [25]	,sum(0) as [26]	,sum(0) as [27]	,sum(0) as [28]	,sum(0) as [29]
		,sum(0) as [30]	,sum(0) as [31]	,sum(0) as [32]	,sum(0) as [33]	,sum(0) as [34]	,sum(0) as [35]	,sum(0) as [36]	,sum(0) as [37]	,sum(0) as [38]
		,sum(0) as [39]	,sum(0) as [40]	,sum(0) as [41],

		-- Parametros de configuracion:
		null as ASideDevice, null as BSideDevice, null as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from	[AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_UL_Thput_CE_4GDevice] t
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_UL_Performance_CE_4GDevice] pf
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(pf.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=pf.mnc and t.Date_Reporting=pf.Date_Reporting and t.entidad=pf.entidad and t.Aggr_Type=pf.Aggr_Type and t.Report_Type=pf.Report_Type and t.meas_round=pf.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_UL_Technology_CE_4GDevice] te
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(te.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=te.mnc and t.Date_Reporting=te.Date_Reporting and t.entidad=te.entidad and t.Aggr_Type=te.Aggr_Type and t.Report_Type=te.Report_Type and t.meas_round=te.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_UL_Performance_CE_LTE_4GDevice] pfl
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(pfl.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=pfl.mnc and t.Date_Reporting=pfl.Date_Reporting and t.entidad=pfl.entidad and t.Aggr_Type=pfl.Aggr_Type and t.Report_Type=pfl.Report_Type and t.meas_round=pfl.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_UL_Technology_CE_LTE_4GDevice] tel
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(tel.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=tel.mnc and t.Date_Reporting=tel.Date_Reporting and t.entidad=tel.entidad and t.Aggr_Type=tel.Aggr_Type and t.Report_Type=tel.Report_Type and t.meas_round=tel.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_UL_Thput_CE_LTE_4GDevice] tLTE
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(tLTE.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=tLTE.mnc and t.Date_Reporting=tLTE.Date_Reporting and t.entidad=tLTE.entidad and t.Aggr_Type=tLTE.Aggr_Type and t.Report_Type=tLTE.Report_Type and t.meas_round=tLTE.meas_round
			, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end,
		t.mnc,t.meas_round,t.Date_Reporting,t.Week_Reporting,t.entidad,t.Report_Type,t.Aggr_Type
	

	-------------
	union all
	select  
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment,t.mnc,t.meas_round,t.Date_Reporting as meas_date,t.Week_Reporting as meas_week, 
		'NoCA_Device' as meas_Tech, 'NC_DL' as Test_type, 'Downlink' as Direction, t.entidad as vf_entity,t.Report_Type,t.Aggr_Type,
	
		-- General:
		sum(t.navegaciones) as Num_tests,
		sum(t.[fallos de acceso]) as Failed,
		sum(t.[fallos de descarga]) as Dropped,
		sum(0) as Session_time_Num,
		sum(t.count_throughput) as Throughput_Den,
		sum(0) as Session_time_Den,
		sum(t.Throughput*t.count_throughput) as Throughput_Num,
		max(t.[Throughput Max]) as Throughput_Max,
		sum(0) as Throughput_3M_Num,
		sum(0) as Throughput_1M_Num,
		sum(t.Count_Throughput_128k) as Throughput_128K_Num,
		sum(0) as Throughput_64K_Num,
		sum(t.Count_Throughput_384k) as Throughput_384K_Num,

		--CAC 10/08/2017: thput de test sin error y con error
		sum(0) as Throughput_with_Error_Den,
		sum(0) as Throughput_with_Error_Num,

		sum(0) as WEB_IP_ACCESS_TIME_NUM,			sum(0) as WEB_IP_ACCESS_TIME_DEN,
		sum(0) as WEB_HTTP_TRANSFER_TIME_NUM,		sum(0) as WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_NUM,		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_NUM,		sum(0) as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,	sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(te.[% GSM]*t.navegaciones) as Radio_2G_use_Num,
		sum(te.[% WCDMA]*t.navegaciones) as Radio_3G_use_Num,
		sum(te.[% LTE]*t.navegaciones) as Radio_4G_use_Num,
		sum(t.navegaciones*(isnull(te.[% GSM],0)+isnull(te.[% WCDMA],0)+isnull(te.[% LTE],0))) as Radio_use_Den,
		sum(0) as Radio_2G_use_Den,		sum(0) as Radio_3G_use_Den,		sum(0) as Radio_4G_use_Den,

		sum(0) as Radio_U2100_use_Num,	sum(0) as Radio_U900_use_Num,    sum(0) as Radio_LTE2100_use_Num,    sum(0) as Radio_LTE2600_use_Num,    sum(0) as Radio_LTE1800_use_Num,    sum(0) as Radio_LTE800_use_Num,
		sum(0) as Radio_Band_Use_Den,		
		sum(0) as Radio_U2100_use_Den,	sum(0) as Radio_U900_use_Den,    sum(0) as Radio_LTE2100_use_Den,    sum(0) as Radio_LTE2600_use_Den,    sum(0) as Radio_LTE1800_use_Den,    sum(0) as Radio_LTE800_use_Den,

		sum(0) as [3G_DualCarrier_use_Num],	sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],		sum(0) as [3G_DC_2100_use_Den],
		sum(0) as [3G_DC_900_use_Num],		sum(0) as [3G_DC_900_use_Den],

		sum(0) as [3G_NumCodes_use_Num],	sum(0) as [3G_NumCodes_use_Den],
		sum(0) as [3G_QPSK_use_Num],		sum(0) as [3G_16QAM_use_Num],		sum(0) as [3G_64QAM_use_Num],	
		sum(0) as [3G_QPSK_use_Den],		sum(0) as [3G_16QAM_use_Den],		sum(0) as [3G_64QAM_use_Den],

		sum(0) as [3G_%_SF22_Num],			sum(0) as [3G_%_SF22andSF42_Num],	sum(0) as [3G_%_SF4_Num],	sum(0) as [3G_%_SF42_Num],	
		sum(0) as [3G_%_SF22_Den],			sum(0) as [3G_%_SF22andSF42_Den],	sum(0) as [3G_%_SF4_Den],	sum(0) as [3G_%_SF42_Den],	
		sum(0) as [3G_%_TTI2ms_Num],		sum(0) as [3G_%_TTI2ms_Den],
		sum(0) as [RSCP_Lin_Num],			sum(0) as [EcI0_Lin_Num],	
		sum(0) as [RSCP_Lin_Den],			sum(0) as [EcI0_Lin_Den],	

		-- Performance:
		sum(pf.CQI*(isnull(pf.count_cqi_u2100,0)+isnull(pf.count_cqi_u900,0))) [3G_CQI],
		sum((isnull(pf.count_cqi_u2100,0)+isnull(pf.count_cqi_u900,0))) as [3G_DataStats_Den],
		sum(0) as CQI_U900_Num,
		sum(isnull(pf.count_cqi_u900,0)) as CQI_U900_Den,
		Sum(pfl.CQI_U2100*isnull(pfl.count_cqi_u2100,0)) as CQI_U2100_Num,
		sum(0) as CQI_U2100_Den,

		sum(pf.[HSPA_PCT]*pf.[Count_HSPA]) as [HSPA_PCT_Num],
		sum(pf.[HSPA+_PCT]*pf.[Count_HSPA+]) as [HSPA+_PCT_Num],
		sum(pf.[HSPA+_DC_PCT]*pf.[Count_HSPA+_DC]) as [HSPA+_DC_PCT_Num],
		sum(pf.[Count_HSPA]) as [HSPA_PCT_Den],
		sum(pf.[Count_HSPA+]) as [HSPA+_PCT_Den],
		sum(pf.[Count_HSPA+_DC]) as [HSPA+_DC_PCT_Den],

		sum(0) as [UL_Inter_Lin_Num],
		sum(0) as [UL_Inter_Lin_Den],	
	
		-- Performance LTE:
		sum(0) as CQI_4G_Num,
		sum(pfl.Count_CQI_L800*pfl.CQI_L800) as CQI_L800_Num,
		sum(pfl.Count_CQI_L1800*pfl.CQI_L1800) as CQI_L1800_Num,
		sum(pfl.Count_CQI_L2100*pfl.CQI_L2100) as CQI_L2100_Num,
		sum(pfl.Count_CQI_L2600*pfl.CQI_L2600) as CQI_L2600_Num,
		sum(0) as CQI_4G_Den,
		sum(pfl.Count_CQI_L800) as CQI_L800_Den,
		sum(pfl.Count_CQI_L1800) as CQI_L1800_Den,
		sum(pfl.Count_CQI_L2100) as CQI_L2100_Den,
		sum(pfl.Count_CQI_L2600) as CQI_L2600_Den,

		sum(pfl.Count_LTE_5Mhz_SC *pfl.LTE_5Mhz_SC_PCT) as LTE_5Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_10Mhz_SC*pfl.LTE_10Mhz_SC_PCT) as LTE_10Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_15Mhz_SC*pfl.LTE_15Mhz_SC_PCT) as LTE_15Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_20Mhz_SC*pfl.LTE_20Mhz_SC_PCT) as LTE_20Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_15Mhz_CA*pfl.LTE_15Mhz_CA_PCT) as LTE_15Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_20Mhz_CA*pfl.LTE_20Mhz_CA_PCT) as LTE_20Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_25Mhz_CA*pfl.LTE_25Mhz_CA_PCT) as LTE_25Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_30Mhz_CA*pfl.LTE_30Mhz_CA_PCT) as LTE_30Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_35Mhz_CA*pfl.LTE_35Mhz_CA_PCT) as LTE_35Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_40Mhz_CA*pfl.LTE_40Mhz_CA_PCT) as LTE_40Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_5Mhz_SC) as LTE_5Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_10Mhz_SC) as LTE_10Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_15Mhz_SC) as LTE_15Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_20Mhz_SC) as LTE_20Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_15Mhz_CA) as LTE_15Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_20Mhz_CA) as LTE_20Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_25Mhz_CA) as LTE_25Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_30Mhz_CA) as LTE_30Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_35Mhz_CA) as LTE_35Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_40Mhz_CA) as LTE_40Mhz_CA_Use_Den,	

		sum((isnull(pfl.Count_LTE_5Mhz_SC,0) 
		 --    +isnull(pfl.Count_LTE_10Mhz_SC,0) +isnull(pfl.Count_LTE_15Mhz_SC,0) +isnull(pfl.Count_LTE_20Mhz_SC,0) +
		 --    isnull(pfl.Count_LTE_15Mhz_CA,0) +isnull(pfl.Count_LTE_20Mhz_CA,0) +isnull(pfl.Count_LTE_25Mhz_CA,0) +isnull(pfl.Count_LTE_30Mhz_CA,0) +
		 --    isnull(pfl.Count_LTE_35Mhz_CA,0) +isnull(pfl.Count_LTE_40Mhz_CA,0)
			)
			*(
			pfl.LTE_5Mhz_SC_PCT+pfl.LTE_10Mhz_SC_PCT+pfl.LTE_15Mhz_SC_PCT+pfl.LTE_20Mhz_SC_PCT+pfl.LTE_15Mhz_CA_PCT+
			pfl.LTE_20Mhz_CA_PCT+pfl.LTE_25Mhz_CA_PCT+pfl.LTE_30Mhz_CA_PCT+pfl.LTE_35Mhz_CA_PCT+pfl.LTE_40Mhz_CA_PCT
			)) as LTE_BW_use_den,

		sum(0) as [4G_RBs_use_Num],		sum(0) as [4G_RBs_use_Den],

		sum(0) as [4G_TM1_use_Num],			sum(0) as [4G_TM2_use_Num],	sum(0) as [4G_TM3_use_Num],	sum(0) as [4G_TM4_use_Num],	sum(0) as [4G_TM5_use_Num],	sum(0) as [4G_TM6_use_Num],	sum(0) as [4G_TM7_use_Num],	sum(0) as [4G_TM8_use_Num],	sum(0) as [4G_TM9_use_Num],
		sum(0) as [4G_TMInvalid_use_Num],	sum(0) as [4G_TMUnknown_use_Num],
		sum(0) as [4G_TM_Den],

		-- Technology LTE:
		sum(0) as [4G_%CA_Num],			sum(0) as [4G_%CA_Den],
		sum(0) as [4G_BPSK_Use_Num],	sum(0) as [4G_QPSK_Use_Num],	sum(0) as [4G_16QAM_Use_Num],    sum(0) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],	sum(0) as [4G_QPSK_Use_Den],	sum(0) as [4G_16QAM_Use_Den],    sum(0) as [4G_64QAM_Use_Den],

		sum((isnull(pfl.Count_CQI_L800,0)+isnull(pfl.Count_CQI_L1800,0)+isnull(pfl.Count_CQI_L2100,0)+isnull(pfl.Count_CQI_L2600,0))*(isnull(tel.[64QAM]/100.0,0)+isnull(tel.[16QAM]/100.0,0)+isnull(tel.QPSK/100.0,0))) as [4G_stats_Den],

		sum(0) as [RSRP_Lin_Num],		sum(0) as [RSRQ_Lin_Num],	sum(0) as [SINR_Lin_Num],			
		sum(0) as [RSRP_Lin_Den],		sum(0) as [RSRQ_Lin_Den],	sum(0) as [SINR_Lin_Den],	
		
		-- New KPIs:
		sum(0) as [MIMO_num],	sum(0) as [RI1_num],	sum(0) as [RI2_num],
		sum(0) as [MIMO_den],	sum(0) as [RI1_den],	sum(0) as [RI2_den],
		sum(0) as RBs_Allocated_Den,	sum(0) as RBs_Allocated_Num,	max(0) as RBs_Allocated_Max,

		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		sum(0) as [1_N],	sum(0) as [2_N],	sum(0) as [3_N],	sum(0) as [4_N],	sum(0) as [5_N],	sum(0) as [6_N],	sum(0) as [7_N],	sum(0) as [8_N],	sum(0) as [9_N],	sum(0) as [10_N],
		sum(0) as [11_N],	sum(0) as [12_N],	sum(0) as [13_N],	sum(0) as [14_N],	sum(0) as [15_N],	sum(0) as [16_N],	sum(0) as [17_N],	sum(0) as [18_N],	sum(0) as [19_N],	sum(0) as [20_N],
		sum(0) as [21_N],	sum(0) as [22_N],	sum(0) as [23_N],	sum(0) as [24_N],	sum(0) as [25_N],	sum(0) as [26_N],	sum(0) as [27_N],	sum(0) as [28_N],	sum(0) as [29_N],	sum(0) as [30_N],
		sum(0) as [31_N],	sum(0) as [32_N],	sum(0) as [33_N],	sum(0) as [34_N],	sum(0) as [35_N],	sum(0) as [36_N],	sum(0) as [37_N],	sum(0) as [38_N],	sum(0) as [39_N],	sum(0) as [40_N],
		sum(0) as [41_N],	sum(0) as [42_N],	sum(0) as [43_N],	sum(0) as [44_N],	sum(0) as [45_N],	sum(0) as [46_N],	sum(0) as [47_N],	sum(0) as [48_N],	sum(0) as [49_N],	sum(0) as [50_N],
		sum(0) as [51_N],	sum(0) as [52_N],	sum(0) as [53_N],	sum(0) as [54_N],	sum(0) as [55_N],	sum(0) as [56_N],	sum(0) as [57_N],	sum(0) as [58_N],	sum(0) as [59_N],	sum(0) as [60_N],
		sum(0) as [61_N],	sum(0) as [62_N],	sum(0) as [63_N],	sum(0) as [64_N],	sum(0) as [65_N],	sum(0) as [66_N]
	
		--null as Region_Road_VF, null as Region_Road_OSP,
		--null as Region_VF, null as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,sum(tLTE.[ 0-5Mbps]) as [1]		,sum(tLTE.[ 5-10Mbps]) as [2]		,sum(tLTE.[ 10-15Mbps]) as [3]		,sum(tLTE.[ 15-20Mbps]) as [4]		,sum(tLTE.[ 20-25Mbps]) as [5]
		,sum(tLTE.[ 25-30Mbps]) as [6]		,sum(tLTE.[ 30-35Mbps]) as [7]		,sum(tLTE.[ 35-40Mbps]) as [8]		,sum(tLTE.[ 40-45Mbps]) as [9]		,sum(tLTE.[ 45-50Mbps]) as [10]
		,sum(tLTE.[ 50-55Mbps]) as [11]		,sum(tLTE.[ 55-60Mbps]) as [12]		,sum(tLTE.[ 60-65Mbps]) as [13]		,sum(tLTE.[ 65-70Mbps]) as [14]		,sum(tLTE.[ 70-75Mbps]) as [15]
		,sum(tLTE.[ 75-80Mbps]) as [16]		,sum(tLTE.[ 80-85Mbps]) as [17]		,sum(tLTE.[ 85-90Mbps]) as [18]		,sum(tLTE.[ 90-95Mbps]) as [19]		,sum(tLTE.[ 95-100Mbps]) as [20]
		,sum(tLTE.[ 100-105Mbps]) as [21]	,sum(tLTE.[ 105-110Mbps]) as [22]	,sum(tLTE.[ 110-115Mbps]) as [23]	,sum(tLTE.[ 115-120Mbps]) as [24]	,sum(tLTE.[ 120-125Mbps]) as [25]
		,sum(tLTE.[ 125-130Mbps]) as [26]	,sum(tLTE.[ 130-135Mbps]) as [27]	,sum(tLTE.[ 135-140Mbps]) as [28]	,sum(tLTE.[ 140-145Mbps]) as [29]	,sum(tLTE.[ 145-150Mbps]) as [30]
		,sum(tLTE.[ >150Mbps]) as [31]
		,sum(0) as [32]	,sum(0) as [33]	,sum(0) as [34]	,sum(0) as [35]	,sum(0) as [36]	,sum(0) as [37]	,sum(0) as [38]	,sum(0) as [39]	,sum(0) as [40]	,sum(0) as [41],

		-- Parametros de configuracion:
		null as ASideDevice, null as BSideDevice, null as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from	[AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_DL_Thput_NC_4GDevice] t
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_DL_Performance_NC_4GDevice] pf
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(pf.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=pf.mnc and t.Date_Reporting=pf.Date_Reporting and t.entidad=pf.entidad and t.Aggr_Type=pf.Aggr_Type and t.Report_Type=pf.Report_Type and t.meas_round=pf.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_DL_Technology_NC_4GDevice] te
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(te.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=te.mnc and t.Date_Reporting=te.Date_Reporting and t.entidad=te.entidad and t.Aggr_Type=te.Aggr_Type and t.Report_Type=te.Report_Type and t.meas_round=te.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_DL_Performance_NC_LTE_4GDevice] pfl
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(pfl.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=pfl.mnc and t.Date_Reporting=pfl.Date_Reporting and t.entidad=pfl.entidad and t.Aggr_Type=pfl.Aggr_Type and t.Report_Type=pfl.Report_Type and t.meas_round=pfl.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_DL_Technology_NC_LTE_4GDevice] tel
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(tel.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=tel.mnc and t.Date_Reporting=tel.Date_Reporting and t.entidad=tel.entidad and t.Aggr_Type=tel.Aggr_Type and t.Report_Type=tel.Report_Type and t.meas_round=tel.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_DL_Thput_NC_LTE_4GDevice] tLTE
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(tLTE.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=tLTE.mnc and t.Date_Reporting=tLTE.Date_Reporting and t.entidad=tLTE.entidad and t.Aggr_Type=tLTE.Aggr_Type and t.Report_Type=tLTE.Report_Type and t.meas_round=tLTE.meas_round
			, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end,t.mnc,t.meas_round,t.Date_Reporting,t.Week_Reporting,t.entidad,t.Report_Type,t.Aggr_Type
	

	-------------
	union all
	select  
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment,
		t.mnc,t.meas_round,t.Date_Reporting as meas_date,t.Week_Reporting as meas_week, 
		'NoCA_Device' as meas_Tech, 'NC_UL' as Test_type, 'Uplink' as Direction, t.entidad as vf_entity,t.Report_Type,t.Aggr_Type,
	
		-- General:
		sum(t.Subidas) as Num_tests,
		sum(t.[fallos de acceso]) as Failed,
		sum(t.[fallos de descarga]) as Dropped,
		sum(0) as Session_time_Num,
		sum(t.count_throughput) as Throughput_Den,
		sum(0) as Session_time_Den,
		sum(t.Throughput*t.count_throughput) as Throughput_Num,
		max(t.[Throughput Max]) as Throughput_Max,
		sum(0) as Throughput_3M_Num,
		sum(0) as Throughput_1M_Num,
		sum(0) as Throughput_128K_Num,
		sum(t.Count_Throughput_64k) as Throughput_64K_Num,
		sum(t.Count_Throughput_384k) as Throughput_384K_Num,

		--CAC 10/08/2017: thput de test sin error y con error
		sum(0) as Throughput_with_Error_Den,
		sum(0) as Throughput_with_Error_Num,

		sum(0) as WEB_IP_ACCESS_TIME_NUM,			sum(0) as WEB_IP_ACCESS_TIME_DEN,
		sum(0) as WEB_HTTP_TRANSFER_TIME_NUM,		sum(0) as WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_NUM,		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_NUM,		sum(0) as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,	sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(te.[% GSM]*t.subidas) as Radio_2G_use_Num,
		sum(te.[% WCDMA]*t.subidas) as Radio_3G_use_Num,
		sum(te.[% LTE]*t.subidas) as Radio_4G_use_Num,
		sum(t.subidas*(isnull(te.[% GSM],0)+isnull(te.[% WCDMA],0)+isnull(te.[% LTE],0))) as Radio_use_Den,
		sum(0) as Radio_2G_use_Den,		sum(0) as Radio_3G_use_Den,		sum(0) as Radio_4G_use_Den,

		sum(0) as Radio_U2100_use_Num,	sum(0) as Radio_U900_use_Num,    sum(0) as Radio_LTE2100_use_Num,    sum(0) as Radio_LTE2600_use_Num,    sum(0) as Radio_LTE1800_use_Num,    sum(0) as Radio_LTE800_use_Num,
		sum(0) as Radio_Band_Use_Den,		
		sum(0) as Radio_U2100_use_Den,	sum(0) as Radio_U900_use_Den,    sum(0) as Radio_LTE2100_use_Den,    sum(0) as Radio_LTE2600_use_Den,    sum(0) as Radio_LTE1800_use_Den,    sum(0) as Radio_LTE800_use_Den,

		sum(0) as [3G_DualCarrier_use_Num],	sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],		sum(0) as [3G_DC_2100_use_Den],
		sum(0) as [3G_DC_900_use_Num],		sum(0) as [3G_DC_900_use_Den],

		sum(0) as [3G_NumCodes_use_Num],	sum(0) as [3G_NumCodes_use_Den],
		sum(0) as [3G_QPSK_use_Num],		sum(0) as [3G_16QAM_use_Num],		sum(0) as [3G_64QAM_use_Num],	
		sum(0) as [3G_QPSK_use_Den],		sum(0) as [3G_16QAM_use_Den],		sum(0) as [3G_64QAM_use_Den],

		sum(0) as [3G_%_SF22_Num],			sum(0) as [3G_%_SF22andSF42_Num],	sum(0) as [3G_%_SF4_Num],	sum(0) as [3G_%_SF42_Num],	
		sum(0) as [3G_%_SF22_Den],			sum(0) as [3G_%_SF22andSF42_Den],	sum(0) as [3G_%_SF4_Den],	sum(0) as [3G_%_SF42_Den],	
		sum(0) as [3G_%_TTI2ms_Num],		sum(0) as [3G_%_TTI2ms_Den],
		sum(0) as [RSCP_Lin_Num],			sum(0) as [EcI0_Lin_Num],	
		sum(0) as [RSCP_Lin_Den],			sum(0) as [EcI0_Lin_Den],	
			
		-- Performance:
		sum(0) as [3G_CQI],			sum(0) as [3G_DataStats_Den],
		Sum(0) as CQI_U900_Num,		sum(0) as CQI_U900_Den,
		Sum(0) as CQI_U2100_Num,	sum(0) as CQI_U2100_Den,

		sum(pf.[HSPA_PCT]*pf.[Count_HSPA]) as [HSPA_PCT_Num],
		sum(pf.[HSPA+_PCT]*pf.[Count_HSPA+]) as [HSPA+_PCT_Num],
		sum(pf.[HSPA+_DC_PCT]*pf.[Count_HSPA+_DC]) as [HSPA+_DC_PCT_Num],
		sum(pf.[Count_HSPA]) as [HSPA_PCT_Den],
		sum(pf.[Count_HSPA+]) as [HSPA+_PCT_Den],
		sum(pf.[Count_HSPA+_DC]) as [HSPA+_DC_PCT_Den],

		sum(0) as [UL_Inter_Lin_Num],
		sum(0) as [UL_Inter_Lin_Den],	
	
		-- Performance LTE:
		sum(0) as CQI_4G_Num,
		sum(pfl.Count_CQI_L800*pfl.CQI_L800) as CQI_L800_Num,
		sum(pfl.Count_CQI_L1800*pfl.CQI_L1800) as CQI_L1800_Num,
		sum(pfl.Count_CQI_L2100*pfl.CQI_L2100) as CQI_L2100_Num,
		sum(pfl.Count_CQI_L2600*pfl.CQI_L2600) as CQI_L2600_Num,
		sum(0) as CQI_4G_Den,
		sum(pfl.Count_CQI_L800) as CQI_L800_Den,
		sum(pfl.Count_CQI_L1800) as CQI_L1800_Den,
		sum(pfl.Count_CQI_L2100) as CQI_L2100_Den,
		sum(pfl.Count_CQI_L2600) as CQI_L2600_Den,

		sum(pfl.Count_LTE_5Mhz_SC *pfl.LTE_5Mhz_SC_PCT) as LTE_5Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_10Mhz_SC*pfl.LTE_10Mhz_SC_PCT) as LTE_10Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_15Mhz_SC*pfl.LTE_15Mhz_SC_PCT) as LTE_15Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_20Mhz_SC*pfl.LTE_20Mhz_SC_PCT) as LTE_20Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_CA_Use_Num,
		sum(0) as LTE_20Mhz_CA_Use_Num,
		sum(0) as LTE_25Mhz_CA_Use_Num,
		sum(0) as LTE_30Mhz_CA_Use_Num,
		sum(0) as LTE_35Mhz_CA_Use_Num,
		sum(0) as LTE_40Mhz_CA_Use_Num,	
		sum(pfl.Count_LTE_5Mhz_SC) as LTE_5Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_10Mhz_SC) as LTE_10Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_15Mhz_SC) as LTE_15Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_20Mhz_SC) as LTE_20Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_CA_Use_Den,
		sum(0) as LTE_20Mhz_CA_Use_Den,
		sum(0) as LTE_25Mhz_CA_Use_Den,
		sum(0) as LTE_30Mhz_CA_Use_Den,
		sum(0) as LTE_35Mhz_CA_Use_Den,
		sum(0) as LTE_40Mhz_CA_Use_Den,

		sum((isnull(pfl.Count_LTE_5Mhz_SC,0) 
		 --    +isnull(pfl.Count_LTE_10Mhz_SC,0) +isnull(pfl.Count_LTE_15Mhz_SC,0) +isnull(pfl.Count_LTE_20Mhz_SC,0) +
		 --    isnull(pfl.Count_LTE_15Mhz_CA,0) +isnull(pfl.Count_LTE_20Mhz_CA,0) +isnull(pfl.Count_LTE_25Mhz_CA,0) +isnull(pfl.Count_LTE_30Mhz_CA,0) +
		 --    isnull(pfl.Count_LTE_35Mhz_CA,0) +isnull(pfl.Count_LTE_40Mhz_CA,0)
			)
			*(
			pfl.LTE_5Mhz_SC_PCT+pfl.LTE_10Mhz_SC_PCT+pfl.LTE_15Mhz_SC_PCT+pfl.LTE_20Mhz_SC_PCT
			)) as LTE_BW_use_den,

		sum(0) as [4G_RBs_use_Num],		sum(0) as [4G_RBs_use_Den],

		sum(0) as [4G_TM1_use_Num],			sum(0) as [4G_TM2_use_Num],	sum(0) as [4G_TM3_use_Num],	sum(0) as [4G_TM4_use_Num],	sum(0) as [4G_TM5_use_Num],	sum(0) as [4G_TM6_use_Num],	sum(0) as [4G_TM7_use_Num],	sum(0) as [4G_TM8_use_Num],	sum(0) as [4G_TM9_use_Num],
		sum(0) as [4G_TMInvalid_use_Num],	sum(0) as [4G_TMUnknown_use_Num],
		sum(0) as [4G_TM_Den],

		-- Technology LTE:
		sum(0) as [4G_%CA_Num],			sum(0) as [4G_%CA_Den],
		sum(0) as [4G_BPSK_Use_Num],	sum(0) as [4G_QPSK_Use_Num],	sum(0) as [4G_16QAM_Use_Num],    sum(0) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],	sum(0) as [4G_QPSK_Use_Den],	sum(0) as [4G_16QAM_Use_Den],    sum(0) as [4G_64QAM_Use_Den],

		sum((isnull(pfl.Count_CQI_L800,0)+isnull(pfl.Count_CQI_L1800,0)+isnull(pfl.Count_CQI_L2100,0)+isnull(pfl.Count_CQI_L2600,0))*(isnull(tel.[16QAM],0)+isnull(tel.QPSK,0))) as [4G_stats_Den],

		sum(0) as [RSRP_Lin_Num],		sum(0) as [RSRQ_Lin_Num],	sum(0) as [SINR_Lin_Num],			
		sum(0) as [RSRP_Lin_Den],		sum(0) as [RSRQ_Lin_Den],	sum(0) as [SINR_Lin_Den],	
		
		-- New KPIs:
		sum(0) as [MIMO_num],	sum(0) as [RI1_num],	sum(0) as [RI2_num],
		sum(0) as [MIMO_den],	sum(0) as [RI1_den],	sum(0) as [RI2_den],
		sum(0) as RBs_Allocated_Den,	sum(0) as RBs_Allocated_Num,	max(0) as RBs_Allocated_Max,

		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		sum(0) as [1_N],	sum(0) as [2_N],	sum(0) as [3_N],	sum(0) as [4_N],	sum(0) as [5_N],	sum(0) as [6_N],	sum(0) as [7_N],	sum(0) as [8_N],	sum(0) as [9_N],	sum(0) as [10_N],
		sum(0) as [11_N],	sum(0) as [12_N],	sum(0) as [13_N],	sum(0) as [14_N],	sum(0) as [15_N],	sum(0) as [16_N],	sum(0) as [17_N],	sum(0) as [18_N],	sum(0) as [19_N],	sum(0) as [20_N],
		sum(0) as [21_N],	sum(0) as [22_N],	sum(0) as [23_N],	sum(0) as [24_N],	sum(0) as [25_N],	sum(0) as [26_N],	sum(0) as [27_N],	sum(0) as [28_N],	sum(0) as [29_N],	sum(0) as [30_N],
		sum(0) as [31_N],	sum(0) as [32_N],	sum(0) as [33_N],	sum(0) as [34_N],	sum(0) as [35_N],	sum(0) as [36_N],	sum(0) as [37_N],	sum(0) as [38_N],	sum(0) as [39_N],	sum(0) as [40_N],
		sum(0) as [41_N],	sum(0) as [42_N],	sum(0) as [43_N],	sum(0) as [44_N],	sum(0) as [45_N],	sum(0) as [46_N],	sum(0) as [47_N],	sum(0) as [48_N],	sum(0) as [49_N],	sum(0) as [50_N],
		sum(0) as [51_N],	sum(0) as [52_N],	sum(0) as [53_N],	sum(0) as [54_N],	sum(0) as [55_N],	sum(0) as [56_N],	sum(0) as [57_N],	sum(0) as [58_N],	sum(0) as [59_N],	sum(0) as [60_N],
		sum(0) as [61_N],	sum(0) as [62_N],	sum(0) as [63_N],	sum(0) as [64_N],	sum(0) as [65_N],	sum(0) as [66_N]
	
		--null as Region_Road_VF, null as Region_Road_OSP,
		--null as Region_VF, null as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,sum(tLTE.[ 0-5Mbps]) as [1]		,sum(tLTE.[ 5-10Mbps]) as [2]		,sum(tLTE.[ 10-15Mbps]) as [3]		,sum(tLTE.[ 15-20Mbps]) as [4]		,sum(tLTE.[ 20-25Mbps]) as [5]
		,sum(tLTE.[ 25-30Mbps]) as [6]		,sum(tLTE.[ 30-35Mbps]) as [7]		,sum(tLTE.[ 35-40Mbps]) as [8]		,sum(tLTE.[ 40-45Mbps]) as [9]		,sum(tLTE.[ 45-50Mbps]) as [10]
		,sum(tLTE.[ >50Mbps]) as [11]	
		,sum(0) as [12]	,sum(0) as [13]	,sum(0) as [14]	,sum(0) as [15]	,sum(0) as [16]	,sum(0) as [17]	,sum(0) as [18]	,sum(0) as [19]	,sum(0) as [20]
		,sum(0) as [21]	,sum(0) as [22]	,sum(0) as [23]	,sum(0) as [24]	,sum(0) as [25]	,sum(0) as [26]	,sum(0) as [27]	,sum(0) as [28]	,sum(0) as [29]
		,sum(0) as [30]	,sum(0) as [31]	,sum(0) as [32]	,sum(0) as [33]	,sum(0) as [34]	,sum(0) as [35]	,sum(0) as [36]	,sum(0) as [37]	,sum(0) as [38]
		,sum(0) as [39]	,sum(0) as [40]	,sum(0) as [41],

		-- Parametros de configuracion:
		null as ASideDevice, null as BSideDevice, null as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from	[AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_UL_Thput_NC_4GDevice] t
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_UL_Performance_NC_4GDevice] pf
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(pf.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=pf.mnc and t.Date_Reporting=pf.Date_Reporting and t.entidad=pf.entidad and t.Aggr_Type=pf.Aggr_Type and t.Report_Type=pf.Report_Type and t.meas_round=pf.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_UL_Technology_NC_4GDevice] te
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(te.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=te.mnc and t.Date_Reporting=te.Date_Reporting and t.entidad=te.entidad and t.Aggr_Type=te.Aggr_Type and t.Report_Type=te.Report_Type and t.meas_round=te.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_UL_Performance_NC_LTE_4GDevice] pfl
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(pfl.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=pfl.mnc and t.Date_Reporting=pfl.Date_Reporting and t.entidad=pfl.entidad and t.Aggr_Type=pfl.Aggr_Type and t.Report_Type=pfl.Report_Type and t.meas_round=pfl.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_UL_Technology_NC_LTE_4GDevice] tel
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(tel.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=tel.mnc and t.Date_Reporting=tel.Date_Reporting and t.entidad=tel.entidad and t.Aggr_Type=tel.Aggr_Type and t.Report_Type=tel.Report_Type and t.meas_round=tel.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_UL_Thput_NC_LTE_4GDevice] tLTE
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(tLTE.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=tLTE.mnc and t.Date_Reporting=tLTE.Date_Reporting and t.entidad=tLTE.entidad and t.Aggr_Type=tLTE.Aggr_Type and t.Report_Type=tLTE.Report_Type and t.meas_round=tLTE.meas_round
			, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end,t.mnc,t.meas_round,t.Date_Reporting,t.Week_Reporting,t.entidad,t.Report_Type,t.Aggr_Type

	-------------
	-- WEB HTTP/HTTPs					
	insert into _RI_Data_e 
	select  
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment,
		mnc,meas_round,Date_Reporting as meas_date,Week_Reporting as meas_week, 
		'NoCA_Device' as meas_Tech, 'WEB HTTP' as Test_type, 'Downlink' as Direction, entidad as vf_entity,t.Report_Type,t.Aggr_Type,
		
		-- General:
		sum(t.Navegaciones) as Num_tests,
		sum(t.[Fallos de acceso]) as Failed,
		sum(t.[Navegaciones fallidas]) as Dropped,
		sum(cast(t.[Session Time] as float)*t.[Count_SessionTime]) as Session_time_Num,
		sum(0) as Throughput_Den,
		sum(t.[Count_SessionTime]) as Session_time_Den,
		sum(0) as Throughput_Num,	max(0) as Throughput_Max,	sum(0) as Throughput_3M_Num,	sum(0) as Throughput_1M_Num,	sum(0) as Throughput_128K_Num,	sum(0) as Throughput_64K_Num, sum(0) as Throughput_384K_Num,

		--CAC 10/08/2017: thput de test sin error y con error
		sum(0) as Throughput_with_Error_Den,
		sum(0) as Throughput_with_Error_Num,

		sum(cast([IP Service Setup Time] as float)*[Count_IPServiceSetupTime])	as WEB_IP_ACCESS_TIME_NUM,
		sum([Count_IPServiceSetupTime])											as WEB_IP_ACCESS_TIME_DEN,
		sum(cast([Transfer Time] as float)*[Count_TransferTime])				as WEB_HTTP_TRANSFER_TIME_NUM,
		sum([Count_TransferTime])												as WEB_HTTP_TRANSFER_TIME_DEN,
		
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_NUM,		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_NUM,		sum(0) as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,	sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(0) as Radio_2G_use_Num,		sum(0) as Radio_3G_use_Num,    sum(0) as Radio_4G_use_Num,	sum(0) as Radio_use_Den,
		sum(0) as Radio_2G_use_Den,		sum(0) as Radio_3G_use_Den,		sum(0) as Radio_4G_use_Den,

		sum(0) as Radio_U2100_use_Num,	sum(0) as Radio_U900_use_Num,   sum(0) as Radio_LTE2100_use_Num,    sum(0) as Radio_LTE2600_use_Num,    sum(0) as Radio_LTE1800_use_Num,	sum(0) as Radio_LTE800_use_Num,	
		sum(0) as Radio_Band_Use_Den,	
		sum(0) as Radio_U2100_use_Den,	sum(0) as Radio_U900_use_Den,	sum(0) as Radio_LTE2100_use_Den,    sum(0) as Radio_LTE2600_use_Den,    sum(0) as Radio_LTE1800_use_Den,    sum(0) as Radio_LTE800_use_Den,

		sum(0) as [3G_DualCarrier_use_Num],	sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],		sum(0) as [3G_DC_2100_use_Den],
		sum(0) as [3G_DC_900_use_Num],		sum(0) as [3G_DC_900_use_Den],

		sum(0) as [3G_NumCodes_use_Num],	sum(0) as [3G_NumCodes_use_Den],
		sum(0) as [3G_QPSK_use_Num],		sum(0) as [3G_16QAM_use_Num],    sum(0) as [3G_64QAM_use_Num],
		sum(0) as [3G_QPSK_use_Den],		sum(0) as [3G_16QAM_use_Den],    sum(0) as [3G_64QAM_use_Den],

		sum(0) as [3G_%_SF22_Num],		sum(0) as [3G_%_SF22andSF42_Num],	sum(0) as [3G_%_SF4_Num],	sum(0) as [3G_%_SF42_Num],
		sum(0) as [3G_%_SF22_Den],		sum(0) as [3G_%_SF22andSF42_Den],	sum(0) as [3G_%_SF4_Den],	sum(0) as [3G_%_SF42_Den],
		sum(0) as [3G_%_TTI2ms_Num],	sum(0) as [3G_%_TTI2ms_Den],	
	
		sum(0) as [RSCP_Lin_Num],	sum(0) as [EcI0_Lin_Num],		sum(0) as [RSCP_Lin_Den],		sum(0) as [EcI0_Lin_Den],
		
		-- Performance:
		sum(0) as [3G_CQI],			sum(0) as [3G_DataStats_Den],
		Sum(0) as CQI_U900_Num,		sum(0) as CQI_U900_Den,
		Sum(0) as CQI_U2100_Num,	sum(0) as CQI_U2100_Den,

		sum(0) as [HSPA_PCT_Num],	sum(0) as [HSPA+_PCT_Num],	sum(0) as [HSPA+_DC_PCT_Num],
		sum(0) as [HSPA_PCT_Den],	sum(0) as [HSPA+_PCT_Den],	sum(0) as [HSPA+_DC_PCT_Den],

		sum(0) as [UL_Inter_Lin_Num],	sum(0) as [UL_Inter_Lin_Den],
	
		-- Performance LTE:
		sum(0) as CQI_4G_Num,	sum(0) as CQI_L800_Num,	sum(0) as CQI_L1800_Num,	sum(0) as CQI_L2100_Num,	sum(0) as CQI_L2600_Num,
		sum(0) as CQI_4G_Den,	sum(0) as CQI_L800_Den,	sum(0) as CQI_L1800_Den,	sum(0) as CQI_L2100_Den,	sum(0) as CQI_L2600_Den,

		sum(0) as LTE_5Mhz_SC_Use_Num,	sum(0) as LTE_10Mhz_SC_Use_Num,	sum(0) as LTE_15Mhz_SC_Use_Num,	sum(0) as LTE_20Mhz_SC_Use_Num,	sum(0) as LTE_15Mhz_CA_Use_Num,	sum(0) as LTE_20Mhz_CA_Use_Num,	sum(0) as LTE_25Mhz_CA_Use_Num,	sum(0) as LTE_30Mhz_CA_Use_Num,	sum(0) as LTE_35Mhz_CA_Use_Num,	sum(0) as LTE_40Mhz_CA_Use_Num,
		sum(0) as LTE_5Mhz_SC_Use_Den,	sum(0) as LTE_10Mhz_SC_Use_Den,	sum(0) as LTE_15Mhz_SC_Use_Den,	sum(0) as LTE_20Mhz_SC_Use_Den,	sum(0) as LTE_15Mhz_CA_Use_Den,	sum(0) as LTE_20Mhz_CA_Use_Den,	sum(0) as LTE_25Mhz_CA_Use_Den,	sum(0) as LTE_30Mhz_CA_Use_Den,	sum(0) as LTE_35Mhz_CA_Use_Den,	sum(0) as LTE_40Mhz_CA_Use_Den,
		sum(0) as LTE_BW_use_den,		sum(0) as [4G_RBs_use_Num],		sum(0) as [4G_RBs_use_Den],
		sum(0) as [4G_TM1_use_Num],			sum(0) as [4G_TM2_use_Num],	sum(0) as [4G_TM3_use_Num],		sum(0) as [4G_TM4_use_Num],	sum(0) as [4G_TM5_use_Num],	sum(0) as [4G_TM6_use_Num],	sum(0) as [4G_TM7_use_Num],	sum(0) as [4G_TM8_use_Num],	sum(0) as [4G_TM9_use_Num],
		sum(0) as [4G_TMInvalid_use_Num],	sum(0) as [4G_TMUnknown_use_Num],	sum(0) as [4G_TM_Den],

		-- Technology LTE:
		sum(0) as [4G_%CA_Num],			sum(0) as [4G_%CA_Den],
		sum(0) as [4G_BPSK_Use_Num],	sum(0) as [4G_QPSK_Use_Num],	sum(0) as [4G_16QAM_Use_Num],    sum(0) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],	sum(0) as [4G_QPSK_Use_Den],	sum(0) as [4G_16QAM_Use_Den],    sum(0) as [4G_64QAM_Use_Den],

		sum(0) as [4G_stats_Den],	
		sum(0) as [RSRP_Lin_Num],	sum(0) as [RSRQ_Lin_Num],	sum(0) as [SINR_Lin_Num],	sum(0) as [RSRP_Lin_Den],	sum(0) as [RSRQ_Lin_Den],	sum(0) as [SINR_Lin_Den],		

		--New KPIs:
		sum(0) as [MIMO_num],			sum(0) as [RI1_num],	sum(0) as [RI2_num],	sum(0) as [MIMO_den],	sum(0) as [RI1_den],	sum(0) as [RI2_den],
		sum(0) as RBs_Allocated_Den,	sum(0) as RBs_Allocated_Num,	max(0) as RBs_Allocated_Max,

		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		sum(0) as [1_N],	sum(0) as [2_N],	sum(0) as [3_N],	sum(0) as [4_N],	sum(0) as [5_N],	sum(0) as [6_N],	sum(0) as [7_N],	sum(0) as [8_N],	sum(0) as [9_N],	sum(0) as [10_N],
		sum(0) as [11_N],	sum(0) as [12_N],	sum(0) as [13_N],	sum(0) as [14_N],	sum(0) as [15_N],	sum(0) as [16_N],	sum(0) as [17_N],	sum(0) as [18_N],	sum(0) as [19_N],	sum(0) as [20_N],
		sum(0) as [21_N],	sum(0) as [22_N],	sum(0) as [23_N],	sum(0) as [24_N],	sum(0) as [25_N],	sum(0) as [26_N],	sum(0) as [27_N],	sum(0) as [28_N],	sum(0) as [29_N],	sum(0) as [30_N],
		sum(0) as [31_N],	sum(0) as [32_N],	sum(0) as [33_N],	sum(0) as [34_N],	sum(0) as [35_N],	sum(0) as [36_N],	sum(0) as [37_N],	sum(0) as [38_N],	sum(0) as [39_N],	sum(0) as [40_N],
		sum(0) as [41_N],	sum(0) as [42_N],	sum(0) as [43_N],	sum(0) as [44_N],	sum(0) as [45_N],	sum(0) as [46_N],	sum(0) as [47_N],	sum(0) as [48_N],	sum(0) as [49_N],	sum(0) as [50_N],
		sum(0) as [51_N],	sum(0) as [52_N],	sum(0) as [53_N],	sum(0) as [54_N],	sum(0) as [55_N],	sum(0) as [56_N],	sum(0) as [57_N],	sum(0) as [58_N],	sum(0) as [59_N],	sum(0) as [60_N],
		sum(0) as [61_N],	sum(0) as [62_N],	sum(0) as [63_N],	sum(0) as [64_N],	sum(0) as [65_N],	sum(0) as [66_N]
	
		--null as Region_Road_VF, null as Region_Road_OSP,
		--null as Region_VF, null as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,sum(0) as [1]	,sum(0) as [2]	,sum(0) as [3]	,sum(0) as [4]	,sum(0) as [5]	,sum(0) as [6]	,sum(0) as [7]	,sum(0) as [8]	,sum(0) as [9]	,sum(0) as [10]
		,sum(0) as [11]	,sum(0) as [12]	,sum(0) as [13]	,sum(0) as [14]	,sum(0) as [15]	,sum(0) as [16]	,sum(0) as [17]	,sum(0) as [18]	,sum(0) as [19]	,sum(0) as [20]
		,sum(0) as [21]	,sum(0) as [22]	,sum(0) as [23]	,sum(0) as [24]	,sum(0) as [25]	,sum(0) as [26]	,sum(0) as [27]	,sum(0) as [28]	,sum(0) as [29]	,sum(0) as [30]
		,sum(0) as [31]	,sum(0) as [32]	,sum(0) as [33]	,sum(0) as [34]	,sum(0) as [35]	,sum(0) as [36]	,sum(0) as [37]	,sum(0) as [38]	,sum(0) as [39]	,sum(0) as [40]
		,sum(0) as [41],

		-- Parametros de configuracion:
		null as ASideDevice, null as BSideDevice, null as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_Web_4GDevice] t, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end,mnc,meas_round,Date_Reporting,Week_Reporting,t.entidad,t.Report_Type,t.Aggr_Type
	
	-------------
	union all
	select  
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment,
		mnc,meas_round,Date_Reporting as meas_date,Week_Reporting as meas_week, 
		'NoCA_Device' as meas_Tech, 'WEB HTTPS' as Test_type, 'Downlink' as Direction, entidad as vf_entity,t.Report_Type,t.Aggr_Type,
		
		-- General:
		sum(t.[Navegaciones HTTPS]) as Num_tests,
		sum(t.[Fallos de acceso HTTPS]) as Failed,
		sum(t.[Navegaciones fallidas HTTPS]) as Dropped,
		sum(cast(t.[Session Time HTTPS] as float)*t.[Count_SessionTime HTTPS]) as Session_time_Num,
		sum(0) as Throughput_Den,
		sum(t.[Count_SessionTime HTTPS]) as Session_time_Den,
		sum(0) as Throughput_Num,	max(0) as Throughput_Max,	sum(0) as Throughput_3M_Num,	sum(0) as Throughput_1M_Num,	sum(0) as Throughput_128K_Num,	sum(0) as Throughput_64K_Num, sum(0) as Throughput_384K_Num,

		--CAC 10/08/2017: thput de test sin error y con error
		sum(0) as Throughput_with_Error_Den,
		sum(0) as Throughput_with_Error_Num,

		sum(0) as WEB_IP_ACCESS_TIME_NUM,		sum(0) as WEB_IP_ACCESS_TIME_DEN,
		sum(0) as WEB_HTTP_TRANSFER_TIME_NUM,	sum(0) as WEB_HTTP_TRANSFER_TIME_DEN,
		sum(cast([IP Service Setup Time HTTPS] as float)*[Count_IPServiceSetupTime HTTPS])	as WEB_IP_ACCESS_TIME_HTTPS_NUM,
		sum([Count_IPServiceSetupTime HTTPS])												as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(cast([Transfer Time HTTPS] as float)*[Count_TransferTime HTTPS])				as WEB_TRANSFER_TIME_HTTPS_NUM,
		sum([Count_TransferTime HTTPS])														as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,	sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,	sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(0) as Radio_2G_use_Num,		sum(0) as Radio_3G_use_Num,    sum(0) as Radio_4G_use_Num,	sum(0) as Radio_use_Den,
		sum(0) as Radio_2G_use_Den,		sum(0) as Radio_3G_use_Den,		sum(0) as Radio_4G_use_Den,

		sum(0) as Radio_U2100_use_Num,	sum(0) as Radio_U900_use_Num,   sum(0) as Radio_LTE2100_use_Num,    sum(0) as Radio_LTE2600_use_Num,    sum(0) as Radio_LTE1800_use_Num,	sum(0) as Radio_LTE800_use_Num,	
		sum(0) as Radio_Band_Use_Den,	
		sum(0) as Radio_U2100_use_Den,	sum(0) as Radio_U900_use_Den,	sum(0) as Radio_LTE2100_use_Den,    sum(0) as Radio_LTE2600_use_Den,    sum(0) as Radio_LTE1800_use_Den,    sum(0) as Radio_LTE800_use_Den,

		sum(0) as [3G_DualCarrier_use_Num],	sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],		sum(0) as [3G_DC_2100_use_Den],
		sum(0) as [3G_DC_900_use_Num],		sum(0) as [3G_DC_900_use_Den],

		sum(0) as [3G_NumCodes_use_Num],	sum(0) as [3G_NumCodes_use_Den],
		sum(0) as [3G_QPSK_use_Num],		sum(0) as [3G_16QAM_use_Num],    sum(0) as [3G_64QAM_use_Num],
		sum(0) as [3G_QPSK_use_Den],		sum(0) as [3G_16QAM_use_Den],    sum(0) as [3G_64QAM_use_Den],

		sum(0) as [3G_%_SF22_Num],		sum(0) as [3G_%_SF22andSF42_Num],	sum(0) as [3G_%_SF4_Num],	sum(0) as [3G_%_SF42_Num],
		sum(0) as [3G_%_SF22_Den],		sum(0) as [3G_%_SF22andSF42_Den],	sum(0) as [3G_%_SF4_Den],	sum(0) as [3G_%_SF42_Den],
		sum(0) as [3G_%_TTI2ms_Num],	sum(0) as [3G_%_TTI2ms_Den],	
	
		sum(0) as [RSCP_Lin_Num],	sum(0) as [EcI0_Lin_Num],		sum(0) as [RSCP_Lin_Den],		sum(0) as [EcI0_Lin_Den],
		
		-- Performance:
		sum(0) as [3G_CQI],			sum(0) as [3G_DataStats_Den],
		Sum(0) as CQI_U900_Num,		sum(0) as CQI_U900_Den,
		Sum(0) as CQI_U2100_Num,	sum(0) as CQI_U2100_Den,

		sum(0) as [HSPA_PCT_Num],	sum(0) as [HSPA+_PCT_Num],	sum(0) as [HSPA+_DC_PCT_Num],
		sum(0) as [HSPA_PCT_Den],	sum(0) as [HSPA+_PCT_Den],	sum(0) as [HSPA+_DC_PCT_Den],

		sum(0) as [UL_Inter_Lin_Num],	sum(0) as [UL_Inter_Lin_Den],
	
		-- Performance LTE:
		sum(0) as CQI_4G_Num,	sum(0) as CQI_L800_Num,	sum(0) as CQI_L1800_Num,	sum(0) as CQI_L2100_Num,	sum(0) as CQI_L2600_Num,
		sum(0) as CQI_4G_Den,	sum(0) as CQI_L800_Den,	sum(0) as CQI_L1800_Den,	sum(0) as CQI_L2100_Den,	sum(0) as CQI_L2600_Den,

		sum(0) as LTE_5Mhz_SC_Use_Num,	sum(0) as LTE_10Mhz_SC_Use_Num,	sum(0) as LTE_15Mhz_SC_Use_Num,	sum(0) as LTE_20Mhz_SC_Use_Num,	sum(0) as LTE_15Mhz_CA_Use_Num,	sum(0) as LTE_20Mhz_CA_Use_Num,	sum(0) as LTE_25Mhz_CA_Use_Num,	sum(0) as LTE_30Mhz_CA_Use_Num,	sum(0) as LTE_35Mhz_CA_Use_Num,	sum(0) as LTE_40Mhz_CA_Use_Num,
		sum(0) as LTE_5Mhz_SC_Use_Den,	sum(0) as LTE_10Mhz_SC_Use_Den,	sum(0) as LTE_15Mhz_SC_Use_Den,	sum(0) as LTE_20Mhz_SC_Use_Den,	sum(0) as LTE_15Mhz_CA_Use_Den,	sum(0) as LTE_20Mhz_CA_Use_Den,	sum(0) as LTE_25Mhz_CA_Use_Den,	sum(0) as LTE_30Mhz_CA_Use_Den,	sum(0) as LTE_35Mhz_CA_Use_Den,	sum(0) as LTE_40Mhz_CA_Use_Den,
		sum(0) as LTE_BW_use_den,		sum(0) as [4G_RBs_use_Num],		sum(0) as [4G_RBs_use_Den],
		sum(0) as [4G_TM1_use_Num],			sum(0) as [4G_TM2_use_Num],	sum(0) as [4G_TM3_use_Num],		sum(0) as [4G_TM4_use_Num],	sum(0) as [4G_TM5_use_Num],	sum(0) as [4G_TM6_use_Num],	sum(0) as [4G_TM7_use_Num],	sum(0) as [4G_TM8_use_Num],	sum(0) as [4G_TM9_use_Num],
		sum(0) as [4G_TMInvalid_use_Num],	sum(0) as [4G_TMUnknown_use_Num],	sum(0) as [4G_TM_Den],

		-- Technology LTE:
		sum(0) as [4G_%CA_Num],			sum(0) as [4G_%CA_Den],
		sum(0) as [4G_BPSK_Use_Num],	sum(0) as [4G_QPSK_Use_Num],	sum(0) as [4G_16QAM_Use_Num],    sum(0) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],	sum(0) as [4G_QPSK_Use_Den],	sum(0) as [4G_16QAM_Use_Den],    sum(0) as [4G_64QAM_Use_Den],

		sum(0) as [4G_stats_Den],	
		sum(0) as [RSRP_Lin_Num],	sum(0) as [RSRQ_Lin_Num],	sum(0) as [SINR_Lin_Num],	sum(0) as [RSRP_Lin_Den],	sum(0) as [RSRQ_Lin_Den],	sum(0) as [SINR_Lin_Den],		

		--New KPIs:
		sum(0) as [MIMO_num],			sum(0) as [RI1_num],	sum(0) as [RI2_num],	sum(0) as [MIMO_den],	sum(0) as [RI1_den],	sum(0) as [RI2_den],
		sum(0) as RBs_Allocated_Den,	sum(0) as RBs_Allocated_Num,	max(0) as RBs_Allocated_Max,
	
		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		sum(0) as [1_N],	sum(0) as [2_N],	sum(0) as [3_N],	sum(0) as [4_N],	sum(0) as [5_N],	sum(0) as [6_N],	sum(0) as [7_N],	sum(0) as [8_N],	sum(0) as [9_N],	sum(0) as [10_N],
		sum(0) as [11_N],	sum(0) as [12_N],	sum(0) as [13_N],	sum(0) as [14_N],	sum(0) as [15_N],	sum(0) as [16_N],	sum(0) as [17_N],	sum(0) as [18_N],	sum(0) as [19_N],	sum(0) as [20_N],
		sum(0) as [21_N],	sum(0) as [22_N],	sum(0) as [23_N],	sum(0) as [24_N],	sum(0) as [25_N],	sum(0) as [26_N],	sum(0) as [27_N],	sum(0) as [28_N],	sum(0) as [29_N],	sum(0) as [30_N],
		sum(0) as [31_N],	sum(0) as [32_N],	sum(0) as [33_N],	sum(0) as [34_N],	sum(0) as [35_N],	sum(0) as [36_N],	sum(0) as [37_N],	sum(0) as [38_N],	sum(0) as [39_N],	sum(0) as [40_N],
		sum(0) as [41_N],	sum(0) as [42_N],	sum(0) as [43_N],	sum(0) as [44_N],	sum(0) as [45_N],	sum(0) as [46_N],	sum(0) as [47_N],	sum(0) as [48_N],	sum(0) as [49_N],	sum(0) as [50_N],
		sum(0) as [51_N],	sum(0) as [52_N],	sum(0) as [53_N],	sum(0) as [54_N],	sum(0) as [55_N],	sum(0) as [56_N],	sum(0) as [57_N],	sum(0) as [58_N],	sum(0) as [59_N],	sum(0) as [60_N],
		sum(0) as [61_N],	sum(0) as [62_N],	sum(0) as [63_N],	sum(0) as [64_N],	sum(0) as [65_N],	sum(0) as [66_N]
	
		--null as Region_Road_VF, null as Region_Road_OSP,
		--null as Region_VF, null as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,sum(0) as [1]	,sum(0) as [2]	,sum(0) as [3]	,sum(0) as [4]	,sum(0) as [5]	,sum(0) as [6]	,sum(0) as [7]	,sum(0) as [8]	,sum(0) as [9]	,sum(0) as [10]
		,sum(0) as [11]	,sum(0) as [12]	,sum(0) as [13]	,sum(0) as [14]	,sum(0) as [15]	,sum(0) as [16]	,sum(0) as [17]	,sum(0) as [18]	,sum(0) as [19]	,sum(0) as [20]
		,sum(0) as [21]	,sum(0) as [22]	,sum(0) as [23]	,sum(0) as [24]	,sum(0) as [25]	,sum(0) as [26]	,sum(0) as [27]	,sum(0) as [28]	,sum(0) as [29]	,sum(0) as [30]
		,sum(0) as [31]	,sum(0) as [32]	,sum(0) as [33]	,sum(0) as [34]	,sum(0) as [35]	,sum(0) as [36]	,sum(0) as [37]	,sum(0) as [38]	,sum(0) as [39]	,sum(0) as [40]
		,sum(0) as [41],

		-- Parametros de configuracion:
		null as ASideDevice, null as BSideDevice, null as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_Web_4GDevice] t, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end,
		mnc,meas_round,Date_Reporting,Week_Reporting,t.entidad,t.Report_Type,t.Aggr_Type

	-------------
	-- YTB SD							
	insert into _RI_Data_e 
	select  
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment,mnc,meas_round,Date_Reporting as meas_date,Week_Reporting as meas_week, 
		'NoCA_Device' as meas_Tech, 'Youtube SD' as Test_type, 'Downlink' as Direction, entidad as vf_entity,t.Report_Type,t.Aggr_Type,
		
		-- General:
		sum(t.Reproducciones) as Num_tests,
		sum(t.Fails) as Failed,
		sum(t.reproducciones-t.fails-t.[Successful video download]) as Dropped,

		sum(0) as Session_time_Num,	sum(0) as Throughput_Den,	sum(0) as Session_time_Den,
		sum(0) as Throughput_Num,	max(0) as Throughput_Max,	sum(0) as Throughput_3M_Num,	sum(0) as Throughput_1M_Num,	sum(0) as Throughput_128K_Num,	sum(0) as Throughput_64K_Num, sum(0) as Throughput_384K_Num,
		
		--CAC 10/08/2017: thput de test sin error y con error
		sum(0) as Throughput_with_Error_Den,
		sum(0) as Throughput_with_Error_Num,
		
		sum(0) as WEB_IP_ACCESS_TIME_NUM,			sum(0) as WEB_IP_ACCESS_TIME_DEN,
		sum(0) as WEB_HTTP_TRANSFER_TIME_NUM,		sum(0) as WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_NUM,		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_NUM,		sum(0) as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,	sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(0) as Radio_2G_use_Num,	sum(0) as Radio_3G_use_Num,		sum(0) as Radio_4G_use_Num,	sum(0) as Radio_use_Den,	sum(0) as Radio_2G_use_Den,		sum(0) as Radio_3G_use_Den,	sum(0) as Radio_4G_use_Den,			
		sum(0) as Radio_U2100_use_Num,	sum(0) as Radio_U900_use_Num,    sum(0) as Radio_LTE2100_use_Num,    sum(0) as Radio_LTE2600_use_Num,    sum(0) as Radio_LTE1800_use_Num,    sum(0) as Radio_LTE800_use_Num,
		sum(0) as Radio_Band_Use_Den,	
		sum(0) as Radio_U2100_use_Den,	sum(0) as Radio_U900_use_Den,    sum(0) as Radio_LTE2100_use_Den,    sum(0) as Radio_LTE2600_use_Den,    sum(0) as Radio_LTE1800_use_Den,    sum(0) as Radio_LTE800_use_Den,

		sum(0) as [3G_DualCarrier_use_Num],	sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],		sum(0) as [3G_DC_2100_use_Den],	sum(0) as [3G_DC_900_use_Num],		sum(0) as [3G_DC_900_use_Den],

		sum(0) as [3G_NumCodes_use_Num],	sum(0) as [3G_NumCodes_use_Den],
		sum(0) as [3G_QPSK_use_Num],		sum(0) as [3G_16QAM_use_Num],    sum(0) as [3G_64QAM_use_Num],	
		sum(0) as [3G_QPSK_use_Den],		sum(0) as [3G_16QAM_use_Den],    sum(0) as [3G_64QAM_use_Den],

		sum(0) as [3G_%_SF22_Num],		sum(0) as [3G_%_SF22andSF42_Num],	sum(0) as [3G_%_SF4_Num],	sum(0) as [3G_%_SF42_Num],	
		sum(0) as [3G_%_SF22_Den],		sum(0) as [3G_%_SF22andSF42_Den],	sum(0) as [3G_%_SF4_Den],	sum(0) as [3G_%_SF42_Den],	
		sum(0) as [3G_%_TTI2ms_Num],	sum(0) as [3G_%_TTI2ms_Den],		
		sum(0) as [RSCP_Lin_Num],		sum(0) as [EcI0_Lin_Num],	
		sum(0) as [RSCP_Lin_Den],		sum(0) as [EcI0_Lin_Den],
	
		-- Performance:
		sum(0) as [3G_CQI],			sum(0) as [3G_DataStats_Den],
		Sum(0) as CQI_U900_Num,		sum(0) as CQI_U900_Den,	Sum(0) as CQI_U2100_Num,	sum(0) as CQI_U2100_Den,
		sum(0) as [HSPA_PCT_Num],	sum(0) as [HSPA+_PCT_Num],	sum(0) as [HSPA+_DC_PCT_Num],	sum(0) as [HSPA_PCT_Den],	sum(0) as [HSPA+_PCT_Den],	sum(0) as [HSPA+_DC_PCT_Den],
		sum(0) as [UL_Inter_Lin_Num],	sum(0) as [UL_Inter_Lin_Den],	
	
		-- Performance LTE:
		sum(0) as CQI_4G_Num,	sum(0) as CQI_L800_Num,	sum(0) as CQI_L1800_Num,	sum(0) as CQI_L2100_Num,	sum(0) as CQI_L2600_Num,
		sum(0) as CQI_4G_Den,	sum(0) as CQI_L800_Den,	sum(0) as CQI_L1800_Den,	sum(0) as CQI_L2100_Den,	sum(0) as CQI_L2600_Den,

		sum(0) as LTE_5Mhz_SC_Use_Num,	sum(0) as LTE_10Mhz_SC_Use_Num,	sum(0) as LTE_15Mhz_SC_Use_Num,	sum(0) as LTE_20Mhz_SC_Use_Num,	sum(0) as LTE_15Mhz_CA_Use_Num,	sum(0) as LTE_20Mhz_CA_Use_Num,	sum(0) as LTE_25Mhz_CA_Use_Num,	sum(0) as LTE_30Mhz_CA_Use_Num,	sum(0) as LTE_35Mhz_CA_Use_Num,	sum(0) as LTE_40Mhz_CA_Use_Num,	
		sum(0) as LTE_5Mhz_SC_Use_Den,	sum(0) as LTE_10Mhz_SC_Use_Den,	sum(0) as LTE_15Mhz_SC_Use_Den,	sum(0) as LTE_20Mhz_SC_Use_Den,sum(0) as LTE_15Mhz_CA_Use_Den,	sum(0) as LTE_20Mhz_CA_Use_Den,	sum(0) as LTE_25Mhz_CA_Use_Den,	sum(0) as LTE_30Mhz_CA_Use_Den,	sum(0) as LTE_35Mhz_CA_Use_Den,	sum(0) as LTE_40Mhz_CA_Use_Den,	
		sum(0) as LTE_BW_use_den,	
		sum(0) as [4G_RBs_use_Num],	sum(0) as [4G_RBs_use_Den],

		sum(0) as [4G_TM1_use_Num],	sum(0) as [4G_TM2_use_Num],	sum(0) as [4G_TM3_use_Num],	sum(0) as [4G_TM4_use_Num],	sum(0) as [4G_TM5_use_Num],	sum(0) as [4G_TM6_use_Num],	sum(0) as [4G_TM7_use_Num],	sum(0) as [4G_TM8_use_Num],	sum(0) as [4G_TM9_use_Num],
		sum(0) as [4G_TMInvalid_use_Num],	sum(0) as [4G_TMUnknown_use_Num],
		sum(0) as [4G_TM_Den],

		-- Technology LTE:
		sum(0) as [4G_%CA_Num],			sum(0) as [4G_%CA_Den],
		sum(0) as [4G_BPSK_Use_Num],	sum(0) as [4G_QPSK_Use_Num],	sum(0) as [4G_16QAM_Use_Num],   sum(0) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],	sum(0) as [4G_QPSK_Use_Den],	sum(0) as [4G_16QAM_Use_Den],   sum(0) as [4G_64QAM_Use_Den],		sum(0) as [4G_stats_Den],	
		sum(0) as [RSRP_Lin_Num],		sum(0) as [RSRQ_Lin_Num],		sum(0) as [SINR_Lin_Num],		sum(0) as [RSRP_Lin_Den],			sum(0) as [RSRQ_Lin_Den],	sum(0) as [SINR_Lin_Den],		

		--New KPIs:
		sum(0) as [MIMO_num],			sum(0) as [RI1_num],			sum(0) as [RI2_num],	sum(0) as [MIMO_den],	sum(0) as [RI1_den],	sum(0) as [RI2_den],
		sum(0) as RBs_Allocated_Den,	sum(0) as RBs_Allocated_Num,	max(0) as RBs_Allocated_Max,	
	
		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		sum(0) as [1_N],	sum(0) as [2_N],	sum(0) as [3_N],	sum(0) as [4_N],	sum(0) as [5_N],	sum(0) as [6_N],	sum(0) as [7_N],	sum(0) as [8_N],	sum(0) as [9_N],	sum(0) as [10_N],
		sum(0) as [11_N],	sum(0) as [12_N],	sum(0) as [13_N],	sum(0) as [14_N],	sum(0) as [15_N],	sum(0) as [16_N],	sum(0) as [17_N],	sum(0) as [18_N],	sum(0) as [19_N],	sum(0) as [20_N],
		sum(0) as [21_N],	sum(0) as [22_N],	sum(0) as [23_N],	sum(0) as [24_N],	sum(0) as [25_N],	sum(0) as [26_N],	sum(0) as [27_N],	sum(0) as [28_N],	sum(0) as [29_N],	sum(0) as [30_N],
		sum(0) as [31_N],	sum(0) as [32_N],	sum(0) as [33_N],	sum(0) as [34_N],	sum(0) as [35_N],	sum(0) as [36_N],	sum(0) as [37_N],	sum(0) as [38_N],	sum(0) as [39_N],	sum(0) as [40_N],
		sum(0) as [41_N],	sum(0) as [42_N],	sum(0) as [43_N],	sum(0) as [44_N],	sum(0) as [45_N],	sum(0) as [46_N],	sum(0) as [47_N],	sum(0) as [48_N],	sum(0) as [49_N],	sum(0) as [50_N],
		sum(0) as [51_N],	sum(0) as [52_N],	sum(0) as [53_N],	sum(0) as [54_N],	sum(0) as [55_N],	sum(0) as [56_N],	sum(0) as [57_N],	sum(0) as [58_N],	sum(0) as [59_N],	sum(0) as [60_N],
		sum(0) as [61_N],	sum(0) as [62_N],	sum(0) as [63_N],	sum(0) as [64_N],	sum(0) as [65_N],	sum(0) as [66_N]
	
		--null as Region_Road_VF, null as Region_Road_OSP,
		--null as Region_VF, null as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,sum(0) as [1]	,sum(0) as [2]	,sum(0) as [3]	,sum(0) as [4]	,sum(0) as [5]	,sum(0) as [6]	,sum(0) as [7]	,sum(0) as [8]	,sum(0) as [9]	,sum(0) as [10]
		,sum(0) as [11]	,sum(0) as [12]	,sum(0) as [13]	,sum(0) as [14]	,sum(0) as [15]	,sum(0) as [16]	,sum(0) as [17]	,sum(0) as [18]	,sum(0) as [19]	,sum(0) as [20]
		,sum(0) as [21]	,sum(0) as [22]	,sum(0) as [23]	,sum(0) as [24]	,sum(0) as [25]	,sum(0) as [26]	,sum(0) as [27]	,sum(0) as [28]	,sum(0) as [29]	,sum(0) as [30]
		,sum(0) as [31]	,sum(0) as [32]	,sum(0) as [33]	,sum(0) as [34]	,sum(0) as [35]	,sum(0) as [36]	,sum(0) as [37]	,sum(0) as [38]	,sum(0) as [39]	,sum(0) as [40]
		,sum(0) as [41],

		-- Parametros de configuracion:
		null as ASideDevice, null as BSideDevice, null as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_Youtube_4GDevice] t, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end,
		mnc,meas_round,Date_Reporting,Week_Reporting,t.entidad,t.Report_Type,t.Aggr_Type	

	-------------
	-- Latencia												   	
	insert into _RI_Data_l 
	select  
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment,mnc,meas_round,Date_Reporting as meas_date,Week_Reporting as meas_week, 
		'NoCA_Device' as meas_Tech, 'Ping' as Test_type, 'RTT' as Direction, entidad as vf_entity,t.Report_Type,t.Aggr_Type,
		Methodology as Methodology,

		sum(rtt*pings) as Latency_Num,
		sum(pings) as Latency_Den,

		-- Ranges - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:
		sum(t.[ 0-5Ms]) as [1],			sum(t.[ 5-10Ms]) as [2],		sum(t.[ 10-15Ms]) as [3],		sum(t.[ 15-20Ms]) as [4],		sum(t.[ 20-25Ms]) as [5],
		sum(t.[ 25-30Ms]) as [6],		sum(t.[ 30-35Ms]) as [7],		sum(t.[ 35-40Ms]) as [8],		sum(t.[ 40-45Ms]) as [9],		sum(t.[ 45-50Ms]) as [10],
		sum(t.[ 50-55Ms]) as [11],		sum(t.[ 55-60Ms]) as [12],		sum(t.[ 60-65Ms]) as [13],		sum(t.[ 65-70Ms]) as [14],		sum(t.[ 70-75Ms]) as [15],
		sum(t.[ 75-80Ms]) as [16],		sum(t.[ 80-85Ms]) as [17],		sum(t.[ 85-90Ms]) as [18],		sum(t.[ 90-95Ms]) as [19],		sum(t.[ 95-100Ms]) as [20],
		sum(t.[ 100-105Ms]) as [21],	sum(t.[ 105-110Ms]) as [22],	sum(t.[ 110-115Ms]) as [23],	sum(t.[ 115-120Ms]) as [24],	sum(t.[ 120-125Ms]) as [25],
		sum(t.[ 125-130Ms]) as [26],	sum(t.[ 130-135Ms]) as [27],	sum(t.[ 135-140Ms]) as [28],	sum(t.[ 140-145Ms]) as [29],	sum(t.[ 145-150Ms]) as [30],
		sum(t.[ 150-155Ms]) as [31],	sum(t.[ 155-160Ms]) as [32],	sum(t.[ 160-165Ms]) as [33],	sum(t.[ 165-170Ms]) as [34],	sum(t.[ 170-175Ms]) as [35],
		sum(t.[ 175-180Ms]) as [36],	sum(t.[ 180-185Ms]) as [37],	sum(t.[ 185-190Ms]) as [38],	sum(t.[ 190-195Ms]) as [39],	sum(t.[ 195-200Ms]) as [40],
		sum(t.[ >200Ms]) as [41],

		--null as Region_Road_VF, null as Region_Road_OSP,
		--null as Region_VF, null as Region_OSP,

		-- Parametros de configuracion:
		null as ASideDevice, null as BSideDevice, null as SWVersion, 
		null as YTB_Version, null as YTB_URL
	
	from [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_Ping_4GDevice] t, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end,mnc,meas_round,Date_Reporting,Week_Reporting,t.entidad,t.Report_Type,t.Aggr_Type,
		Methodology

	-------------
	-- Video Streaming YTB SD	
	insert into _RI_Data_y 
	select  
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment,
		mnc,meas_round,Date_Reporting as meas_date,Week_Reporting as meas_week, 
		'NoCA_Device' as meas_Tech, 'Youtube SD' as Test_type, 'Downlink' as Direction, entidad as vf_entity,t.Report_Type,t.Aggr_Type,
	
		sum(t.[Time To First Image]*(t.Reproducciones-t.Fails)) as Avg_Video_StarTime_Num,
		sum((t.Reproducciones-t.Fails)) as avg_Video_startTime_Den,
		sum(t.ReproduccionesSinInt) as Reproductions_WO_Interruptions,
		sum(t.Reproducciones) as Reproductions_WO_Interruptions_Den,
		sum(0) as B4,
		sum(0) as [ReproduccionesHD],
		sum(0) as [Successful video download],
		sum(0) as [Reproducciones],
		sum(0) as YTB_video_resolution_num,
		sum(0) as YTB_video_resolution_den,
		sum(0) as YTB_video_mos_num,
		sum(0) as YTB_video_mos_den,
		null   as [YTB_url],
		sum(0) as [YTB_1st_Resolution_Num],
		sum(0) as [YTB_1st_Resolution_Den],
		sum(0) as [YTB_2nd_Resolution_Num],
		sum(0) as [YTB_2nd_Resolution_Den],
		sum(0) as [YTB_FirstChangeFromInit_Num],
		sum(0) as [YTB_FirstChangeFromInit_Den],
		sum(0) as [YTB_initialResolution_Num],
		sum(0) as [YTB_initialResolution_Den],
		sum(0) as [YTB_finalResolution_Num],
		sum(0) as [YTB_finalResolution_Den],
		sum(0) as [YTB_video_resolution_144p_Num],
		sum(0) as [YTB_video_resolution_144p_Den],
		sum(0) as [YTB_video_mos_144p_Num],
		sum(0) as [YTB_video_mos_144p_Den],
		sum(0) as [YTB_video_resolution_%144p_Num],
		sum(0) as [YTB_video_resolution_%144p_Den],
		sum(0) as [YTB_video_resolution_240p_Num],
		sum(0) as [YTB_video_resolution_240p_Den],
		sum(0) as [YTB_video_mos_240p_Num],
		sum(0) as [YTB_video_mos_240p_Den],
		sum(0) as [YTB_video_resolution_%240p_Num],
		sum(0) as [YTB_video_resolution_%240p_Den],
		sum(0) as [YTB_video_resolution_360p_Num],
		sum(0) as [YTB_video_resolution_360p_Den],
		sum(0) as [YTB_video_mos_360p_Num],
		sum(0) as [YTB_video_mos_360p_Den],
		sum(0) as [YTB_video_resolution_%360p_Num],
		sum(0) as [YTB_video_resolution_%360p_Den],
		sum(0) as [YTB_video_resolution_480p_Num],
		sum(0) as [YTB_video_resolution_480p_Den],
		sum(0) as [YTB_video_mos_480p_Num],
		sum(0) as [YTB_video_mos_480p_Den],
		sum(0) as [YTB_video_resolution_%480p_Num],
		sum(0) as [YTB_video_resolution_%480p_Den],
		sum(0) as [YTB_video_resolution_720p_Num],
		sum(0) as [YTB_video_resolution_720p_Den],
		sum(0) as [YTB_video_mos_720p_Num],
		sum(0) as [YTB_video_mos_720p_Den],
		sum(0) as [YTB_video_resolution_%720p_Num],
		sum(0) as [YTB_video_resolution_%720p_Den],
		sum(0) as [YTB_video_resolution_1080p_Num],
		sum(0) as [YTB_video_resolution_1080p_Den],
		sum(0) as [YTB_video_mos_1080p_Num],
		sum(0) as [YTB_video_mos_1080p_Den],
		sum(0) as [YTB_video_resolution_%1080p_Num],
		sum(0) as [YTB_video_resolution_%1080p_Den],


		sum(0) as Avg_Video_StarTime_Num_Video1, sum(0) as avg_Video_startTime_Den_Video1, sum(0) as Reproductions_WO_Interruptions_Video1, sum(0) as Reproductions_WO_Interruptions_Den_Video1,
		sum(0) as B4_Video1, sum(0) as [ReproduccionesHD_Video1], sum(0) as [Successful video download_Video1], sum(0) as [Reproducciones_Video1], sum(0) as [Fails_Video1], sum(0) as YTB_video_resolution_num_Video1,
		sum(0) as YTB_video_resolution_den_Video1, sum(0) as YTB_video_mos_num_Video1, sum(0) as YTB_video_mos_den_Video1, null   as [YTB_url_Video1], sum(0) as [YTB_1st_Resolution_Num_Video1],
		sum(0) as [YTB_1st_Resolution_Den_Video1], sum(0) as [YTB_2nd_Resolution_Num_Video1], sum(0) as [YTB_2nd_Resolution_Den_Video1], sum(0) as [YTB_FirstChangeFromInit_Num_Video1],
		sum(0) as [YTB_FirstChangeFromInit_Den_Video1], sum(0) as [YTB_initialResolution_Num_Video1], sum(0) as [YTB_initialResolution_Den_Video1], sum(0) as [YTB_finalResolution_Num_Video1],
		sum(0) as [YTB_finalResolution_Den_Video1], sum(0) as [YTB_video_resolution_144p_Num_Video1], sum(0) as [YTB_video_resolution_144p_Den_Video1], sum(0) as [YTB_video_mos_144p_Num_Video1],
		sum(0) as [YTB_video_mos_144p_Den_Video1],sum(0) as [YTB_video_resolution_%144p_Num_Video1],sum(0) as [YTB_video_resolution_%144p_Den_Video1],sum(0) as [YTB_video_resolution_240p_Num_Video1],
		sum(0) as [YTB_video_resolution_240p_Den_Video1], sum(0) as [YTB_video_mos_240p_Num_Video1], sum(0) as [YTB_video_mos_240p_Den_Video1], sum(0) as [YTB_video_resolution_%240p_Num_Video1],
		sum(0) as [YTB_video_resolution_%240p_Den_Video1], sum(0) as [YTB_video_resolution_360p_Num_Video1], sum(0) as [YTB_video_resolution_360p_Den_Video1], sum(0) as [YTB_video_mos_360p_Num_Video1],
		sum(0) as [YTB_video_mos_360p_Den_Video1], sum(0) as [YTB_video_resolution_%360p_Num_Video1], sum(0) as [YTB_video_resolution_%360p_Den_Video1], sum(0) as [YTB_video_resolution_480p_Num_Video1],
		sum(0) as [YTB_video_resolution_480p_Den_Video1], sum(0) as [YTB_video_mos_480p_Num_Video1], sum(0) as [YTB_video_mos_480p_Den_Video1], sum(0) as [YTB_video_resolution_%480p_Num_Video1],
		sum(0) as [YTB_video_resolution_%480p_Den_Video1], sum(0) as [YTB_video_resolution_720p_Num_Video1], sum(0) as [YTB_video_resolution_720p_Den_Video1], sum(0) as [YTB_video_mos_720p_Num_Video1],
		sum(0) as [YTB_video_mos_720p_Den_Video1], sum(0) as [YTB_video_resolution_%720p_Num_Video1], sum(0) as [YTB_video_resolution_%720p_Den_Video1],
		sum(0) as [YTB_video_resolution_1080p_Num_Video1], sum(0) as [YTB_video_resolution_1080p_Den_Video1], sum(0) as [YTB_video_mos_1080p_Num_Video1], sum(0) as [YTB_video_mos_1080p_Den_Video1],
		sum(0) as [YTB_video_resolution_%1080p_Num_Video1], sum(0) as [YTB_video_resolution_%1080p_Den_Video1],

		sum(0) as Avg_Video_StarTime_Num_Video2, sum(0) as avg_Video_startTime_Den_Video2, sum(0) as Reproductions_WO_Interruptions_Video2, sum(0) as Reproductions_WO_Interruptions_Den_Video2,
		sum(0) as B4_Video2, sum(0) as [ReproduccionesHD_Video2], sum(0) as [Successful video download_Video2], sum(0) as [Reproducciones_Video2], sum(0) as [Fails_Video2],sum(0) as YTB_video_resolution_num_Video2,
		sum(0) as YTB_video_resolution_den_Video2, sum(0) as YTB_video_mos_num_Video2, sum(0) as YTB_video_mos_den_Video2, null   as [YTB_url_Video2], sum(0) as [YTB_1st_Resolution_Num_Video2],
		sum(0) as [YTB_1st_Resolution_Den_Video2], sum(0) as [YTB_2nd_Resolution_Num_Video2], sum(0) as [YTB_2nd_Resolution_Den_Video2], sum(0) as [YTB_FirstChangeFromInit_Num_Video2],
		sum(0) as [YTB_FirstChangeFromInit_Den_Video2], sum(0) as [YTB_initialResolution_Num_Video2], sum(0) as [YTB_initialResolution_Den_Video2], sum(0) as [YTB_finalResolution_Num_Video2],
		sum(0) as [YTB_finalResolution_Den_Video2], sum(0) as [YTB_video_resolution_144p_Num_Video2], sum(0) as [YTB_video_resolution_144p_Den_Video2], sum(0) as [YTB_video_mos_144p_Num_Video2],
		sum(0) as [YTB_video_mos_144p_Den_Video2],sum(0) as [YTB_video_resolution_%144p_Num_Video2],sum(0) as [YTB_video_resolution_%144p_Den_Video2],sum(0) as [YTB_video_resolution_240p_Num_Video2],
		sum(0) as [YTB_video_resolution_240p_Den_Video2], sum(0) as [YTB_video_mos_240p_Num_Video2], sum(0) as [YTB_video_mos_240p_Den_Video2], sum(0) as [YTB_video_resolution_%240p_Num_Video2],
		sum(0) as [YTB_video_resolution_%240p_Den_Video2], sum(0) as [YTB_video_resolution_360p_Num_Video2], sum(0) as [YTB_video_resolution_360p_Den_Video2], sum(0) as [YTB_video_mos_360p_Num_Video2],
		sum(0) as [YTB_video_mos_360p_Den_Video2], sum(0) as [YTB_video_resolution_%360p_Num_Video2], sum(0) as [YTB_video_resolution_%360p_Den_Video2], sum(0) as [YTB_video_resolution_480p_Num_Video2],
		sum(0) as [YTB_video_resolution_480p_Den_Video2], sum(0) as [YTB_video_mos_480p_Num_Video2], sum(0) as [YTB_video_mos_480p_Den_Video2], sum(0) as [YTB_video_resolution_%480p_Num_Video2],
		sum(0) as [YTB_video_resolution_%480p_Den_Video2], sum(0) as [YTB_video_resolution_720p_Num_Video2], sum(0) as [YTB_video_resolution_720p_Den_Video2], sum(0) as [YTB_video_mos_720p_Num_Video2],
		sum(0) as [YTB_video_mos_720p_Den_Video2], sum(0) as [YTB_video_resolution_%720p_Num_Video2], sum(0) as [YTB_video_resolution_%720p_Den_Video2],
		sum(0) as [YTB_video_resolution_1080p_Num_Video2], sum(0) as [YTB_video_resolution_1080p_Den_Video2], sum(0) as [YTB_video_mos_1080p_Num_Video2], sum(0) as [YTB_video_mos_1080p_Den_Video2],
		sum(0) as [YTB_video_resolution_%1080p_Num_Video2], sum(0) as [YTB_video_resolution_%1080p_Den_Video2],

		sum(0) as Avg_Video_StarTime_Num_Video3, sum(0) as avg_Video_startTime_Den_Video3, sum(0) as Reproductions_WO_Interruptions_Video3, sum(0) as Reproductions_WO_Interruptions_Den_Video3,
		sum(0) as B4_Video3, sum(0) as [ReproduccionesHD_Video3], sum(0) as [Successful video download_Video3], sum(0) as [Reproducciones_Video3], sum(0) as [Fails_Video3],sum(0) as YTB_video_resolution_num_Video3,
		sum(0) as YTB_video_resolution_den_Video3, sum(0) as YTB_video_mos_num_Video3, sum(0) as YTB_video_mos_den_Video3, null   as [YTB_url_Video3], sum(0) as [YTB_1st_Resolution_Num_Video3],
		sum(0) as [YTB_1st_Resolution_Den_Video3], sum(0) as [YTB_2nd_Resolution_Num_Video3], sum(0) as [YTB_2nd_Resolution_Den_Video3], sum(0) as [YTB_FirstChangeFromInit_Num_Video3],
		sum(0) as [YTB_FirstChangeFromInit_Den_Video3], sum(0) as [YTB_initialResolution_Num_Video3], sum(0) as [YTB_initialResolution_Den_Video3], sum(0) as [YTB_finalResolution_Num_Video3],
		sum(0) as [YTB_finalResolution_Den_Video3], sum(0) as [YTB_video_resolution_144p_Num_Video3], sum(0) as [YTB_video_resolution_144p_Den_Video3], sum(0) as [YTB_video_mos_144p_Num_Video3],
		sum(0) as [YTB_video_mos_144p_Den_Video3],sum(0) as [YTB_video_resolution_%144p_Num_Video3],sum(0) as [YTB_video_resolution_%144p_Den_Video3],sum(0) as [YTB_video_resolution_240p_Num_Video3],
		sum(0) as [YTB_video_resolution_240p_Den_Video3], sum(0) as [YTB_video_mos_240p_Num_Video3], sum(0) as [YTB_video_mos_240p_Den_Video3], sum(0) as [YTB_video_resolution_%240p_Num_Video3],
		sum(0) as [YTB_video_resolution_%240p_Den_Video3], sum(0) as [YTB_video_resolution_360p_Num_Video3], sum(0) as [YTB_video_resolution_360p_Den_Video3], sum(0) as [YTB_video_mos_360p_Num_Video3],
		sum(0) as [YTB_video_mos_360p_Den_Video3], sum(0) as [YTB_video_resolution_%360p_Num_Video3], sum(0) as [YTB_video_resolution_%360p_Den_Video3], sum(0) as [YTB_video_resolution_480p_Num_Video3],
		sum(0) as [YTB_video_resolution_480p_Den_Video3], sum(0) as [YTB_video_mos_480p_Num_Video3], sum(0) as [YTB_video_mos_480p_Den_Video3], sum(0) as [YTB_video_resolution_%480p_Num_Video3],
		sum(0) as [YTB_video_resolution_%480p_Den_Video3], sum(0) as [YTB_video_resolution_720p_Num_Video3], sum(0) as [YTB_video_resolution_720p_Den_Video3], sum(0) as [YTB_video_mos_720p_Num_Video3],
		sum(0) as [YTB_video_mos_720p_Den_Video3], sum(0) as [YTB_video_resolution_%720p_Num_Video3], sum(0) as [YTB_video_resolution_%720p_Den_Video3],
		sum(0) as [YTB_video_resolution_1080p_Num_Video3], sum(0) as [YTB_video_resolution_1080p_Den_Video3], sum(0) as [YTB_video_mos_1080p_Num_Video3], sum(0) as [YTB_video_mos_1080p_Den_Video3],
		sum(0) as [YTB_video_resolution_%1080p_Num_Video3], sum(0) as [YTB_video_resolution_%1080p_Den_Video3],

		sum(0) as Avg_Video_StarTime_Num_Video4, sum(0) as avg_Video_startTime_Den_Video4, sum(0) as Reproductions_WO_Interruptions_Video4, sum(0) as Reproductions_WO_Interruptions_Den_Video4,
		sum(0) as B4_Video4, sum(0) as [ReproduccionesHD_Video4], sum(0) as [Successful video download_Video4], sum(0) as [Reproducciones_Video4], sum(0) as [Fails_Video4],sum(0) as YTB_video_resolution_num_Video4,
		sum(0) as YTB_video_resolution_den_Video4, sum(0) as YTB_video_mos_num_Video4, sum(0) as YTB_video_mos_den_Video4, null   as [YTB_url_Video4], sum(0) as [YTB_1st_Resolution_Num_Video4],
		sum(0) as [YTB_1st_Resolution_Den_Video4], sum(0) as [YTB_2nd_Resolution_Num_Video4], sum(0) as [YTB_2nd_Resolution_Den_Video4], sum(0) as [YTB_FirstChangeFromInit_Num_Video4],
		sum(0) as [YTB_FirstChangeFromInit_Den_Video4], sum(0) as [YTB_initialResolution_Num_Video4], sum(0) as [YTB_initialResolution_Den_Video4], sum(0) as [YTB_finalResolution_Num_Video4],
		sum(0) as [YTB_finalResolution_Den_Video4], sum(0) as [YTB_video_resolution_144p_Num_Video4], sum(0) as [YTB_video_resolution_144p_Den_Video4], sum(0) as [YTB_video_mos_144p_Num_Video4],
		sum(0) as [YTB_video_mos_144p_Den_Video4],sum(0) as [YTB_video_resolution_%144p_Num_Video4],sum(0) as [YTB_video_resolution_%144p_Den_Video4],sum(0) as [YTB_video_resolution_240p_Num_Video4],
		sum(0) as [YTB_video_resolution_240p_Den_Video4], sum(0) as [YTB_video_mos_240p_Num_Video4], sum(0) as [YTB_video_mos_240p_Den_Video4], sum(0) as [YTB_video_resolution_%240p_Num_Video4],
		sum(0) as [YTB_video_resolution_%240p_Den_Video4], sum(0) as [YTB_video_resolution_360p_Num_Video4], sum(0) as [YTB_video_resolution_360p_Den_Video4], sum(0) as [YTB_video_mos_360p_Num_Video4],
		sum(0) as [YTB_video_mos_360p_Den_Video4], sum(0) as [YTB_video_resolution_%360p_Num_Video4], sum(0) as [YTB_video_resolution_%360p_Den_Video4], sum(0) as [YTB_video_resolution_480p_Num_Video4],
		sum(0) as [YTB_video_resolution_480p_Den_Video4], sum(0) as [YTB_video_mos_480p_Num_Video4], sum(0) as [YTB_video_mos_480p_Den_Video4], sum(0) as [YTB_video_resolution_%480p_Num_Video4],
		sum(0) as [YTB_video_resolution_%480p_Den_Video4], sum(0) as [YTB_video_resolution_720p_Num_Video4], sum(0) as [YTB_video_resolution_720p_Den_Video4], sum(0) as [YTB_video_mos_720p_Num_Video4],
		sum(0) as [YTB_video_mos_720p_Den_Video4], sum(0) as [YTB_video_resolution_%720p_Num_Video4], sum(0) as [YTB_video_resolution_%720p_Den_Video4],
		sum(0) as [YTB_video_resolution_1080p_Num_Video4], sum(0) as [YTB_video_resolution_1080p_Den_Video4], sum(0) as [YTB_video_mos_1080p_Num_Video4], sum(0) as [YTB_video_mos_1080p_Den_Video4],
		sum(0) as [YTB_video_resolution_%1080p_Num_Video4], sum(0) as [YTB_video_resolution_%1080p_Den_Video4],

		-- Parametros de configuracion:
		null as ASideDevice, null as BSideDevice, null as SWVersion, null as YTB_Version
			

	from [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_Youtube_4GDevice] t, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end,
		mnc,meas_round,Date_Reporting,Week_Reporting,t.entidad,t.Report_Type,t.Aggr_Type

	-------------
	-- Video Streaming YTB HD	
	insert into _RI_Data_y 
	select  
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment,mnc,meas_round,Date_Reporting as meas_date,Week_Reporting as meas_week, 
		'NoCA_Device' as meas_Tech, 'Youtube HD' as Test_type, 'Downlink' as Direction, entidad as vf_entity,t.Report_Type,t.Aggr_Type,
	
		sum(t.[Time To First Image]*(t.Reproducciones-t.Fails)) as Avg_Video_StarTime_Num,
		sum((t.Reproducciones-t.Fails)) as avg_Video_startTime_Den,
		sum(t.ReproduccionesSinInt) as Reproductions_WO_Interruptions,
		sum(t.Reproducciones) as Reproductions_WO_Interruptions_Den,
		sum(0) as B4,
		sum(t.[ReproduccionesHD]) as [ReproduccionesHD],
		sum(t.[Successful video download]) as [Successful video download],
		sum(t.[Reproducciones]) as [Reproducciones],
		sum(0) as YTB_video_resolution_num,
		sum(0) as YTB_video_resolution_den,
		sum(0) as YTB_video_mos_num,
		sum(0) as YTB_video_mos_den,
		null as YTB_URL,
		sum(0) as [YTB_1st_Resolution_Num],
		sum(0) as [YTB_1st_Resolution_Den],
		sum(0) as [YTB_2nd_Resolution_Num],
		sum(0) as [YTB_2nd_Resolution_Den],
		sum(0) as [YTB_FirstChangeFromInit_Num],
		sum(0) as [YTB_FirstChangeFromInit_Den],
		sum(0) as [YTB_initialResolution_Num],
		sum(0) as [YTB_initialResolution_Den],
		sum(0) as [YTB_finalResolution_Num],
		sum(0) as [YTB_finalResolution_Den],
		sum(0) as [YTB_video_resolution_144p_Num],
		sum(0) as [YTB_video_resolution_144p_Den],
		sum(0) as [YTB_video_mos_144p_Num],
		sum(0) as [YTB_video_mos_144p_Den],
		sum(0) as [YTB_video_resolution_%144p_Num],
		sum(0) as [YTB_video_resolution_%144p_Den],
		sum(0) as [YTB_video_resolution_240p_Num],
		sum(0) as [YTB_video_resolution_240p_Den],
		sum(0) as [YTB_video_mos_240p_Num],
		sum(0) as [YTB_video_mos_240p_Den],
		sum(0) as [YTB_video_resolution_%240p_Num],
		sum(0) as [YTB_video_resolution_%240p_Den],
		sum(0) as [YTB_video_resolution_360p_Num],
		sum(0) as [YTB_video_resolution_360p_Den],
		sum(0) as [YTB_video_mos_360p_Num],
		sum(0) as [YTB_video_mos_360p_Den],
		sum(0) as [YTB_video_resolution_%360p_Num],
		sum(0) as [YTB_video_resolution_%360p_Den],
		sum(0) as [YTB_video_resolution_480p_Num],
		sum(0) as [YTB_video_resolution_480p_Den],
		sum(0) as [YTB_video_mos_480p_Num],
		sum(0) as [YTB_video_mos_480p_Den],
		sum(0) as [YTB_video_resolution_%480p_Num],
		sum(0) as [YTB_video_resolution_%480p_Den],
		sum(0) as [YTB_video_resolution_720p_Num],
		sum(0) as [YTB_video_resolution_720p_Den],
		sum(0) as [YTB_video_mos_720p_Num],
		sum(0) as [YTB_video_mos_720p_Den],
		sum(0) as [YTB_video_resolution_%720p_Num],
		sum(0) as [YTB_video_resolution_%720p_Den],
		sum(0) as [YTB_video_resolution_1080p_Num],
		sum(0) as [YTB_video_resolution_1080p_Den],
		sum(0) as [YTB_video_mos_1080p_Num],
		sum(0) as [YTB_video_mos_1080p_Den],
		sum(0) as [YTB_video_resolution_%1080p_Num],
		sum(0) as [YTB_video_resolution_%1080p_Den],

		sum(0) as Avg_Video_StarTime_Num_Video1, sum(0) as avg_Video_startTime_Den_Video1, sum(0) as Reproductions_WO_Interruptions_Video1, sum(0) as Reproductions_WO_Interruptions_Den_Video1,
		sum(0) as B4_Video1, sum(0) as [ReproduccionesHD_Video1], sum(0) as [Successful video download_Video1], sum(0) as [Reproducciones_Video1], sum(0) as [Fails_Video1], sum(0) as YTB_video_resolution_num_Video1,
		sum(0) as YTB_video_resolution_den_Video1, sum(0) as YTB_video_mos_num_Video1, sum(0) as YTB_video_mos_den_Video1, null   as [YTB_url_Video1], sum(0) as [YTB_1st_Resolution_Num_Video1],
		sum(0) as [YTB_1st_Resolution_Den_Video1], sum(0) as [YTB_2nd_Resolution_Num_Video1], sum(0) as [YTB_2nd_Resolution_Den_Video1], sum(0) as [YTB_FirstChangeFromInit_Num_Video1],
		sum(0) as [YTB_FirstChangeFromInit_Den_Video1], sum(0) as [YTB_initialResolution_Num_Video1], sum(0) as [YTB_initialResolution_Den_Video1], sum(0) as [YTB_finalResolution_Num_Video1],
		sum(0) as [YTB_finalResolution_Den_Video1], sum(0) as [YTB_video_resolution_144p_Num_Video1], sum(0) as [YTB_video_resolution_144p_Den_Video1], sum(0) as [YTB_video_mos_144p_Num_Video1],
		sum(0) as [YTB_video_mos_144p_Den_Video1],sum(0) as [YTB_video_resolution_%144p_Num_Video1],sum(0) as [YTB_video_resolution_%144p_Den_Video1],sum(0) as [YTB_video_resolution_240p_Num_Video1],
		sum(0) as [YTB_video_resolution_240p_Den_Video1], sum(0) as [YTB_video_mos_240p_Num_Video1], sum(0) as [YTB_video_mos_240p_Den_Video1], sum(0) as [YTB_video_resolution_%240p_Num_Video1],
		sum(0) as [YTB_video_resolution_%240p_Den_Video1], sum(0) as [YTB_video_resolution_360p_Num_Video1], sum(0) as [YTB_video_resolution_360p_Den_Video1], sum(0) as [YTB_video_mos_360p_Num_Video1],
		sum(0) as [YTB_video_mos_360p_Den_Video1], sum(0) as [YTB_video_resolution_%360p_Num_Video1], sum(0) as [YTB_video_resolution_%360p_Den_Video1], sum(0) as [YTB_video_resolution_480p_Num_Video1],
		sum(0) as [YTB_video_resolution_480p_Den_Video1], sum(0) as [YTB_video_mos_480p_Num_Video1], sum(0) as [YTB_video_mos_480p_Den_Video1], sum(0) as [YTB_video_resolution_%480p_Num_Video1],
		sum(0) as [YTB_video_resolution_%480p_Den_Video1], sum(0) as [YTB_video_resolution_720p_Num_Video1], sum(0) as [YTB_video_resolution_720p_Den_Video1], sum(0) as [YTB_video_mos_720p_Num_Video1],
		sum(0) as [YTB_video_mos_720p_Den_Video1], sum(0) as [YTB_video_resolution_%720p_Num_Video1], sum(0) as [YTB_video_resolution_%720p_Den_Video1],
		sum(0) as [YTB_video_resolution_1080p_Num_Video1], sum(0) as [YTB_video_resolution_1080p_Den_Video1], sum(0) as [YTB_video_mos_1080p_Num_Video1], sum(0) as [YTB_video_mos_1080p_Den_Video1],
		sum(0) as [YTB_video_resolution_%1080p_Num_Video1], sum(0) as [YTB_video_resolution_%1080p_Den_Video1],

		sum(0) as Avg_Video_StarTime_Num_Video2, sum(0) as avg_Video_startTime_Den_Video2, sum(0) as Reproductions_WO_Interruptions_Video2, sum(0) as Reproductions_WO_Interruptions_Den_Video2,
		sum(0) as B4_Video2, sum(0) as [ReproduccionesHD_Video2], sum(0) as [Successful video download_Video2], sum(0) as [Reproducciones_Video2], sum(0) as [Fails_Video2],sum(0) as YTB_video_resolution_num_Video2,
		sum(0) as YTB_video_resolution_den_Video2, sum(0) as YTB_video_mos_num_Video2, sum(0) as YTB_video_mos_den_Video2, null   as [YTB_url_Video2], sum(0) as [YTB_1st_Resolution_Num_Video2],
		sum(0) as [YTB_1st_Resolution_Den_Video2], sum(0) as [YTB_2nd_Resolution_Num_Video2], sum(0) as [YTB_2nd_Resolution_Den_Video2], sum(0) as [YTB_FirstChangeFromInit_Num_Video2],
		sum(0) as [YTB_FirstChangeFromInit_Den_Video2], sum(0) as [YTB_initialResolution_Num_Video2], sum(0) as [YTB_initialResolution_Den_Video2], sum(0) as [YTB_finalResolution_Num_Video2],
		sum(0) as [YTB_finalResolution_Den_Video2], sum(0) as [YTB_video_resolution_144p_Num_Video2], sum(0) as [YTB_video_resolution_144p_Den_Video2], sum(0) as [YTB_video_mos_144p_Num_Video2],
		sum(0) as [YTB_video_mos_144p_Den_Video2],sum(0) as [YTB_video_resolution_%144p_Num_Video2],sum(0) as [YTB_video_resolution_%144p_Den_Video2],sum(0) as [YTB_video_resolution_240p_Num_Video2],
		sum(0) as [YTB_video_resolution_240p_Den_Video2], sum(0) as [YTB_video_mos_240p_Num_Video2], sum(0) as [YTB_video_mos_240p_Den_Video2], sum(0) as [YTB_video_resolution_%240p_Num_Video2],
		sum(0) as [YTB_video_resolution_%240p_Den_Video2], sum(0) as [YTB_video_resolution_360p_Num_Video2], sum(0) as [YTB_video_resolution_360p_Den_Video2], sum(0) as [YTB_video_mos_360p_Num_Video2],
		sum(0) as [YTB_video_mos_360p_Den_Video2], sum(0) as [YTB_video_resolution_%360p_Num_Video2], sum(0) as [YTB_video_resolution_%360p_Den_Video2], sum(0) as [YTB_video_resolution_480p_Num_Video2],
		sum(0) as [YTB_video_resolution_480p_Den_Video2], sum(0) as [YTB_video_mos_480p_Num_Video2], sum(0) as [YTB_video_mos_480p_Den_Video2], sum(0) as [YTB_video_resolution_%480p_Num_Video2],
		sum(0) as [YTB_video_resolution_%480p_Den_Video2], sum(0) as [YTB_video_resolution_720p_Num_Video2], sum(0) as [YTB_video_resolution_720p_Den_Video2], sum(0) as [YTB_video_mos_720p_Num_Video2],
		sum(0) as [YTB_video_mos_720p_Den_Video2], sum(0) as [YTB_video_resolution_%720p_Num_Video2], sum(0) as [YTB_video_resolution_%720p_Den_Video2],
		sum(0) as [YTB_video_resolution_1080p_Num_Video2], sum(0) as [YTB_video_resolution_1080p_Den_Video2], sum(0) as [YTB_video_mos_1080p_Num_Video2], sum(0) as [YTB_video_mos_1080p_Den_Video2],
		sum(0) as [YTB_video_resolution_%1080p_Num_Video2], sum(0) as [YTB_video_resolution_%1080p_Den_Video2],

		sum(0) as Avg_Video_StarTime_Num_Video3, sum(0) as avg_Video_startTime_Den_Video3, sum(0) as Reproductions_WO_Interruptions_Video3, sum(0) as Reproductions_WO_Interruptions_Den_Video3,
		sum(0) as B4_Video3, sum(0) as [ReproduccionesHD_Video3], sum(0) as [Successful video download_Video3], sum(0) as [Reproducciones_Video3], sum(0) as [Fails_Video3],sum(0) as YTB_video_resolution_num_Video3,
		sum(0) as YTB_video_resolution_den_Video3, sum(0) as YTB_video_mos_num_Video3, sum(0) as YTB_video_mos_den_Video3, null   as [YTB_url_Video3], sum(0) as [YTB_1st_Resolution_Num_Video3],
		sum(0) as [YTB_1st_Resolution_Den_Video3], sum(0) as [YTB_2nd_Resolution_Num_Video3], sum(0) as [YTB_2nd_Resolution_Den_Video3], sum(0) as [YTB_FirstChangeFromInit_Num_Video3],
		sum(0) as [YTB_FirstChangeFromInit_Den_Video3], sum(0) as [YTB_initialResolution_Num_Video3], sum(0) as [YTB_initialResolution_Den_Video3], sum(0) as [YTB_finalResolution_Num_Video3],
		sum(0) as [YTB_finalResolution_Den_Video3], sum(0) as [YTB_video_resolution_144p_Num_Video3], sum(0) as [YTB_video_resolution_144p_Den_Video3], sum(0) as [YTB_video_mos_144p_Num_Video3],
		sum(0) as [YTB_video_mos_144p_Den_Video3],sum(0) as [YTB_video_resolution_%144p_Num_Video3],sum(0) as [YTB_video_resolution_%144p_Den_Video3],sum(0) as [YTB_video_resolution_240p_Num_Video3],
		sum(0) as [YTB_video_resolution_240p_Den_Video3], sum(0) as [YTB_video_mos_240p_Num_Video3], sum(0) as [YTB_video_mos_240p_Den_Video3], sum(0) as [YTB_video_resolution_%240p_Num_Video3],
		sum(0) as [YTB_video_resolution_%240p_Den_Video3], sum(0) as [YTB_video_resolution_360p_Num_Video3], sum(0) as [YTB_video_resolution_360p_Den_Video3], sum(0) as [YTB_video_mos_360p_Num_Video3],
		sum(0) as [YTB_video_mos_360p_Den_Video3], sum(0) as [YTB_video_resolution_%360p_Num_Video3], sum(0) as [YTB_video_resolution_%360p_Den_Video3], sum(0) as [YTB_video_resolution_480p_Num_Video3],
		sum(0) as [YTB_video_resolution_480p_Den_Video3], sum(0) as [YTB_video_mos_480p_Num_Video3], sum(0) as [YTB_video_mos_480p_Den_Video3], sum(0) as [YTB_video_resolution_%480p_Num_Video3],
		sum(0) as [YTB_video_resolution_%480p_Den_Video3], sum(0) as [YTB_video_resolution_720p_Num_Video3], sum(0) as [YTB_video_resolution_720p_Den_Video3], sum(0) as [YTB_video_mos_720p_Num_Video3],
		sum(0) as [YTB_video_mos_720p_Den_Video3], sum(0) as [YTB_video_resolution_%720p_Num_Video3], sum(0) as [YTB_video_resolution_%720p_Den_Video3],
		sum(0) as [YTB_video_resolution_1080p_Num_Video3], sum(0) as [YTB_video_resolution_1080p_Den_Video3], sum(0) as [YTB_video_mos_1080p_Num_Video3], sum(0) as [YTB_video_mos_1080p_Den_Video3],
		sum(0) as [YTB_video_resolution_%1080p_Num_Video3], sum(0) as [YTB_video_resolution_%1080p_Den_Video3],

		sum(0) as Avg_Video_StarTime_Num_Video4, sum(0) as avg_Video_startTime_Den_Video4, sum(0) as Reproductions_WO_Interruptions_Video4, sum(0) as Reproductions_WO_Interruptions_Den_Video4,
		sum(0) as B4_Video4, sum(0) as [ReproduccionesHD_Video4], sum(0) as [Successful video download_Video4], sum(0) as [Reproducciones_Video4], sum(0) as [Fails_Video4],sum(0) as YTB_video_resolution_num_Video4,
		sum(0) as YTB_video_resolution_den_Video4, sum(0) as YTB_video_mos_num_Video4, sum(0) as YTB_video_mos_den_Video4, null   as [YTB_url_Video4], sum(0) as [YTB_1st_Resolution_Num_Video4],
		sum(0) as [YTB_1st_Resolution_Den_Video4], sum(0) as [YTB_2nd_Resolution_Num_Video4], sum(0) as [YTB_2nd_Resolution_Den_Video4], sum(0) as [YTB_FirstChangeFromInit_Num_Video4],
		sum(0) as [YTB_FirstChangeFromInit_Den_Video4], sum(0) as [YTB_initialResolution_Num_Video4], sum(0) as [YTB_initialResolution_Den_Video4], sum(0) as [YTB_finalResolution_Num_Video4],
		sum(0) as [YTB_finalResolution_Den_Video4], sum(0) as [YTB_video_resolution_144p_Num_Video4], sum(0) as [YTB_video_resolution_144p_Den_Video4], sum(0) as [YTB_video_mos_144p_Num_Video4],
		sum(0) as [YTB_video_mos_144p_Den_Video4],sum(0) as [YTB_video_resolution_%144p_Num_Video4],sum(0) as [YTB_video_resolution_%144p_Den_Video4],sum(0) as [YTB_video_resolution_240p_Num_Video4],
		sum(0) as [YTB_video_resolution_240p_Den_Video4], sum(0) as [YTB_video_mos_240p_Num_Video4], sum(0) as [YTB_video_mos_240p_Den_Video4], sum(0) as [YTB_video_resolution_%240p_Num_Video4],
		sum(0) as [YTB_video_resolution_%240p_Den_Video4], sum(0) as [YTB_video_resolution_360p_Num_Video4], sum(0) as [YTB_video_resolution_360p_Den_Video4], sum(0) as [YTB_video_mos_360p_Num_Video4],
		sum(0) as [YTB_video_mos_360p_Den_Video4], sum(0) as [YTB_video_resolution_%360p_Num_Video4], sum(0) as [YTB_video_resolution_%360p_Den_Video4], sum(0) as [YTB_video_resolution_480p_Num_Video4],
		sum(0) as [YTB_video_resolution_480p_Den_Video4], sum(0) as [YTB_video_mos_480p_Num_Video4], sum(0) as [YTB_video_mos_480p_Den_Video4], sum(0) as [YTB_video_resolution_%480p_Num_Video4],
		sum(0) as [YTB_video_resolution_%480p_Den_Video4], sum(0) as [YTB_video_resolution_720p_Num_Video4], sum(0) as [YTB_video_resolution_720p_Den_Video4], sum(0) as [YTB_video_mos_720p_Num_Video4],
		sum(0) as [YTB_video_mos_720p_Den_Video4], sum(0) as [YTB_video_resolution_%720p_Num_Video4], sum(0) as [YTB_video_resolution_%720p_Den_Video4],
		sum(0) as [YTB_video_resolution_1080p_Num_Video4], sum(0) as [YTB_video_resolution_1080p_Den_Video4], sum(0) as [YTB_video_mos_1080p_Num_Video4], sum(0) as [YTB_video_mos_1080p_Den_Video4],
		sum(0) as [YTB_video_resolution_%1080p_Num_Video4], sum(0) as [YTB_video_resolution_%1080p_Den_Video4],
	
		-- Parametros de configuracion:
		null as ASideDevice, null as BSideDevice, null as SWVersion, null as YTB_Version

	from [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_Youtube_HD_4GDevice] t, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end,
		mnc,meas_round,Date_Reporting,Week_Reporting,t.entidad,t.Report_Type,t.Aggr_Type

	-------------
	insert into [dbo].[_RI_Data_Ejecucion]
	select 'Fin 1.1 Insert Estadisticos NoCA_Device', getdate()


	-------------------------------------
	-- 1.2) Estadisticos DL/UL 
	-------------------------------------	
	print '1.2. Insert Estadisticos DL/UL 3G, 4G, 4G_Road' 	
	-------------
	-- 3G - DL-CE/NC y UL-CE/NC
	insert into _RI_Data_e 
	select  
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment,t.mnc,t.meas_round,t.Date_Reporting as meas_date,t.Week_Reporting as meas_week, 
		'3G' as meas_Tech, 'CE_DL' as Test_type, 'Downlink' as Direction, t.entidad as vf_entity,t.Report_Type,t.Aggr_Type,
	
		-- General:
		sum(t.navegaciones) as Num_tests,
		sum(t.[fallos de acceso]) as Failed,
		sum(t.[fallos de descarga]) as Dropped,
		sum(t.[SessionTime]*t.navegaciones) as Session_time_Num,
		--sum(t.[tiempo de descarga]*t.count_throughput) as Session_time_Num,	-- SESSION_TIME de DL/UL, calculado como TRANSFER_TIME - se haría el cambio al calculo correcto en cambio de metodología para evitar salto de valor en QLIK.
		sum(t.count_throughput) as Throughput_Den,
		sum(t.navegaciones) as Session_time_Den,
		--sum(t.count_throughput) as Session_time_Den,
		sum(t.Throughput*t.count_throughput) as Throughput_Num,
		max(t.[Throughput Max]) as Throughput_Max,
		sum(t.Count_Throughput_3M) as Throughput_3M_Num,
		sum(t.Count_Throughput_1M) as Throughput_1M_Num,
		sum(0) as Throughput_128K_Num,
		sum(0) as Throughput_64K_Num,
		sum(0) as Throughput_384K_Num,
		--CAC 10/08/2017: thput de test sin error y con error
		sum(t.Count_Throughput_ALL) as Throughput_with_Error_Den,
		sum(t.Throughput_ALL*t.Count_Throughput_ALL) as Throughput_with_Error_Num,

		sum(0) as WEB_IP_ACCESS_TIME_NUM,			sum(0) as WEB_IP_ACCESS_TIME_DEN,	
		sum(0) as WEB_HTTP_TRANSFER_TIME_NUM,		sum(0) as WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_NUM,		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_NUM,		sum(0) as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,	sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(te.[% GSM]*te.[Count_%GSM]) as Radio_2G_use_Num,
		sum(te.[% WCDMA]*te.[Count_%WCDMA]) as Radio_3G_use_Num,
		sum(te.[% LTE]*te.[Count_%LTE]) as Radio_4G_use_Num,
		sum(t.navegaciones*(isnull(te.[% GSM],0)+isnull(te.[% WCDMA],0)+isnull(te.[% LTE],0))) as Radio_use_Den,				-- Se usaria solo en NoCA_Device
		sum(te.[Count_%GSM]) as Radio_2G_use_Den,
		sum(te.[Count_%WCDMA]) as Radio_3G_use_Den,
		sum(te.[Count_%LTE]) as Radio_4G_use_Den,

		sum(te.[% U2100]*te.[Count_%U2100]) as Radio_U2100_use_Num,
		sum(te.[% U900]*te.[Count_%U900]) as Radio_U900_use_Num,
		sum(te.[% LTE2100]*te.[Count_%LTE2100]) as Radio_LTE2100_use_Num,
		sum(te.[% LTE2600]*te.[Count_%LTE2600]) as Radio_LTE2600_use_Num,
		sum(te.[% LTE1800]*te.[Count_%LTE1800]) as Radio_LTE1800_use_Num,
		sum(te.[% LTE800]*te.[Count_%LTE800]) as Radio_LTE800_use_Num,
		sum(t.navegaciones*(isnull(te.[% U2100],0)+isnull(te.[% U900],0)+isnull(te.[% LTE2100],0)+
							isnull(te.[% LTE2600],0)+isnull(te.[% LTE1800],0)+isnull(te.[% LTE800],0))) as Radio_Band_Use_Den,	-- Se usaria solo en NoCA_Device
		sum(te.[Count_%U2100]) as Radio_U2100_use_Den,
		sum(te.[Count_%U900]) as Radio_U900_use_Den,
		sum(te.[Count_%LTE2100]) as Radio_LTE2100_use_Den,
		sum(te.[Count_%LTE2600]) as Radio_LTE2600_use_Den,
		sum(te.[Count_%LTE1800]) as Radio_LTE1800_use_Den,
		sum(te.[Count_%LTE800]) as Radio_LTE800_use_Den,

		-- Solo en DL:
		sum(te.[% Dual Carrier]*te.[Count_Dual_Carrier]) as [3G_DualCarrier_use_Num],	sum(te.[Count_Dual_Carrier]) as [3G_DualCarrier_use_Den],
		sum(te.[%DC_U2100]*te.[Count_DC_U2100]) as [3G_DC_2100_use_Num],				sum(te.[Count_DC_U2100]) as [3G_DC_2100_use_Den],
		sum(te.[%DC_U900]*te.[Count_DC_U900]) as [3G_DC_900_use_Num],					sum(te.[Count_DC_U900]) as [3G_DC_900_use_Den],

		sum(te.[Num Codes]*te.[Count_Num_Codes]) as [3G_NumCodes_use_Num],
		sum(te.[Count_Num_Codes]) as [3G_NumCodes_use_Den],

		sum(te.[QPSK]*te.[Count_QPSK]) as [3G_QPSK_use_Num],
		sum(te.[16QAM]*te.[Count_16QAM]) as [3G_16QAM_use_Num],
		sum(te.[64QAM]*te.[Count_64QAM]) as [3G_64QAM_use_Num],
		sum(te.[Count_QPSK]) as [3G_QPSK_use_Den],
		sum(te.[Count_16QAM]) as [3G_16QAM_use_Den],
		sum(te.[Count_64QAM]) as [3G_64QAM_use_Den],

		-- Solo en UL:
		sum(0) as [3G_%_SF22_Num],		sum(0) as [3G_%_SF22andSF42_Num],		sum(0) as [3G_%_SF4_Num],		sum(0) as [3G_%_SF42_Num],
		sum(0) as [3G_%_SF22_Den],		sum(0) as [3G_%_SF22andSF42_Den],		sum(0) as [3G_%_SF4_Den],		sum(0) as [3G_%_SF42_Den],
		sum(0) as [3G_%_TTI2ms_Num],	sum(0) as [3G_%_TTI2ms_Den],

		-- Ambos:
		sum(te.[RSCP_Lin]*te.[Count_RSCP_Lin]) as [RSCP_Lin_Num],
		sum(te.[EcI0_Lin]*te.[Count_EcI0_Lin]) as [EcI0_Lin_Num],	
		sum(te.[Count_RSCP_Lin]) as [RSCP_Lin_Den],	
		sum(te.[Count_EcI0_Lin]) as [EcI0_Lin_Den],	

		-- Performance:
		-- Solo en DL:
		sum(pf.CQI*(isnull(pf.count_cqi_u2100,0)+isnull(pf.count_cqi_u900,0))) [3G_CQI],
		sum((isnull(pf.count_cqi_u2100,0)+isnull(pf.count_cqi_u900,0))) as [3G_DataStats_Den],
		Sum(pf.CQI_U900*isnull(pf.count_cqi_u900,0)) as CQI_U900_Num,
		sum(isnull(pf.count_cqi_u900,0)) as CQI_U900_Den,
		Sum(pf.CQI_U2100*isnull(pf.count_cqi_u2100,0)) as CQI_U2100_Num,
		sum(isnull(pf.count_cqi_u2100,0)) as CQI_U2100_Den,

		-- Ambos:
		sum(pf.[HSPA_PCT]*pf.[Count_HSPA]) as [HSPA_PCT_Num],
		sum(pf.[HSPA+_PCT]*pf.[Count_HSPA+]) as [HSPA+_PCT_Num],
		sum(pf.[HSPA+_DC_PCT]*pf.[Count_HSPA+_DC]) as [HSPA+_DC_PCT_Num],
		sum(pf.[Count_HSPA]) as [HSPA_PCT_Den],
		sum(pf.[Count_HSPA+]) as [HSPA+_PCT_Den],
		sum(pf.[Count_HSPA+_DC]) as [HSPA+_DC_PCT_Den],

		sum(pf.[UL_Inter_Lin]*pf.[Count_UL_Inter]) as [UL_Inter_Lin_Num],
		sum(pf.[Count_UL_Inter]) as [UL_Inter_Lin_Den],	
		
		-- Performance LTE:
		sum(0) as CQI_4G_Num,		sum(0) as CQI_L800_Num,		sum(0) as CQI_L1800_Num,		sum(0) as CQI_L2100_Num,		sum(0) as CQI_L2600_Num,
		sum(0) as CQI_4G_Den,		sum(0) as CQI_L800_Den,		sum(0) as CQI_L1800_Den,		sum(0) as CQI_L2100_Den,		sum(0) as CQI_L2600_Den,

		sum(0) as LTE_5Mhz_SC_Use_Num,	sum(0) as LTE_10Mhz_SC_Use_Num,	sum(0) as LTE_15Mhz_SC_Use_Num,	sum(0) as LTE_20Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_CA_Use_Num,	sum(0) as LTE_20Mhz_CA_Use_Num,	sum(0) as LTE_25Mhz_CA_Use_Num,	sum(0) as LTE_30Mhz_CA_Use_Num,	sum(0) as LTE_35Mhz_CA_Use_Num,	sum(0) as LTE_40Mhz_CA_Use_Num,	
		sum(0) as LTE_5Mhz_SC_Use_Den,	sum(0) as LTE_10Mhz_SC_Use_Den,	sum(0) as LTE_15Mhz_SC_Use_Den,	sum(0) as LTE_20Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_CA_Use_Den,	sum(0) as LTE_20Mhz_CA_Use_Den,	sum(0) as LTE_25Mhz_CA_Use_Den,	sum(0) as LTE_30Mhz_CA_Use_Den,	sum(0) as LTE_35Mhz_CA_Use_Den,	sum(0) as LTE_40Mhz_CA_Use_Den,	

		sum(0) as LTE_BW_use_den,	sum(0) as [4G_RBs_use_Num],	sum(0) as [4G_RBs_use_Den],
	
		sum(0) as [4G_TM1_use_Num],			sum(0) as [4G_TM2_use_Num],			sum(0) as [4G_TM3_use_Num],		sum(0) as [4G_TM4_use_Num],		sum(0) as [4G_TM5_use_Num],
		sum(0) as [4G_TM6_use_Num],			sum(0) as [4G_TM7_use_Num],			sum(0) as [4G_TM8_use_Num],		sum(0) as [4G_TM9_use_Num],
		sum(0) as [4G_TMInvalid_use_Num],	sum(0) as [4G_TMUnknown_use_Num],
		sum(0) as [4G_TM_Den],

		-- Technology LTE:
		sum(0) as [4G_%CA_Num],			sum(0) as [4G_%CA_Den],	
		sum(0) as [4G_BPSK_Use_Num],	sum(0) as [4G_QPSK_Use_Num],	sum(0) as [4G_16QAM_Use_Num],    sum(0) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],	sum(0) as [4G_QPSK_Use_Den],	sum(0) as [4G_16QAM_Use_Den],    sum(0) as [4G_64QAM_Use_Den],

		sum(0) as [4G_stats_Den],

		sum(0) as [RSRP_Lin_Num],	sum(0) as [RSRQ_Lin_Num],	sum(0) as [SINR_Lin_Num],			
		sum(0) as [RSRP_Lin_Den],	sum(0) as [RSRQ_Lin_Den],	sum(0) as [SINR_Lin_Den],			

		--New KPIs:
		sum(0) as [MIMO_num],	sum(0) as [RI1_num],	sum(0) as [RI2_num],
		sum(0) as [MIMO_den],	sum(0) as [RI1_den],	sum(0) as [RI2_den],
		sum(0) as RBs_Allocated_Den,	sum(0) as RBs_Allocated_Num,	max(0) as RBs_Allocated_Max,

		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:
		sum(t.[ 0-0.75Mbps_N ]) as [1_N],		sum(t.[ 0.75-1.5Mbps_N ]) as [2_N],		sum(t.[ 1.5-2.25Mbps_N ]) as [3_N],
		sum(t.[ 2.25-3Mbps_N ]) as [4_N],		sum(t.[ 3-3.75Mbps_N ]) as [5_N],		sum(t.[ 3.75-4.5Mbps_N ]) as [6_N],
		sum(t.[ 4.5-5.25Mbps_N ]) as [7_N],		sum(t.[ 5.25-6Mbps_N ]) as [8_N],		sum(t.[ 6-6.75Mbps_N ]) as [9_N],
		sum(t.[ 6.75-7.5Mbps_N ]) as [10_N],	sum(t.[ 7.5-8.25Mbps_N ]) as [11_N],	sum(t.[ 8.25-9Mbps_N ]) as [12_N],
		sum(t.[ 9-9.75Mbps_N ]) as [13_N],		sum(t.[ 9.75-10.5Mbps_N ]) as [14_N],	sum(t.[ 10.5-11.25Mbps_N ]) as [15_N],
		sum(t.[ 11.25-12Mbps_N ]) as [16_N],	sum(t.[ 12-12.75Mbps_N ]) as [17_N],	sum(t.[ 12.75-13.5Mbps_N ]) as [18_N],
		sum(t.[ 13.5-14.25Mbps_N ]) as [19_N],	sum(t.[ 14.25-15Mbps_N ]) as [20_N],	sum(t.[ 15-15.75Mbps_N ]) as [21_N],
		sum(t.[ 15.75-16.5Mbps_N ]) as [22_N],	sum(t.[ 16.5-17.25Mbps_N ]) as [23_N],	sum(t.[ 17.25-18Mbps_N ]) as [24_N],
		sum(t.[ 18-18.75Mbps_N ]) as [25_N],	sum(t.[ 18.75-19.5Mbps_N ]) as [26_N],	sum(t.[ 19.5-20.25Mbps_N ]) as [27_N],
		sum(t.[ 20.25-21Mbps_N ]) as [28_N],	sum(t.[ 21-21.75Mbps_N ]) as [29_N],	sum(t.[ 21.75-22.5Mbps_N ]) as [30_N],
		sum(t.[ 22.5-23.25Mbps_N ]) as [31_N],	sum(t.[ 23.25-24Mbps_N ]) as [32_N],	sum(t.[ 24-24.75Mbps_N ]) as [33_N],
		sum(t.[ 24.75-25.5Mbps_N ]) as [34_N],	sum(t.[ 25.5-26.25Mbps_N ]) as [35_N],	sum(t.[ 26.25-27Mbps_N ]) as [36_N],
		sum(t.[ 27-27.75Mbps_N ]) as [37_N],	sum(t.[ 27.75-28.5Mbps_N ]) as [38_N],	sum(t.[ 28.5-29.25Mbps_N ]) as [39_N],
		sum(t.[ 29.25-30Mbps_N ]) as [40_N],	sum(t.[ 30-30.75Mbps_N ]) as [41_N],	sum(t.[ 30.75-31.5Mbps_N ]) as [42_N],
		sum(t.[ 31.5-32.25Mbps_N ]) as [43_N],	sum(t.[ 32.25-33Mbps_N ]) as [44_N],	sum(t.[ >33Mbps_N]) as [45_N],
		null as [46_N],	null as [47_N],	null as [48_N],	null as [49_N],	null as [50_N],	null as [51_N],	null as [52_N],	null as [53_N],	null as [54_N],	null as [55_N],
		null as [56_N],	null as [57_N],	null as [58_N],	null as [59_N],	null as [60_N],	null as [61_N],	null as [62_N],	null as [63_N],	null as [64_N],	null as [65_N],
		null as [66_N]
	
		--null as Region_Road_VF, null as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,sum(t.[ 0-1Mbps]) as [1]		,sum(t.[ 1-2Mbps]) as [2]		,sum(t.[ 2-3Mbps]) as [3]		,sum(t.[ 3-4Mbps]) as [4]		,sum(t.[ 4-5Mbps]) as [5]
		,sum(t.[ 5-6Mbps]) as [6]		,sum(t.[ 6-7Mbps]) as [7]		,sum(t.[ 7-8Mbps]) as [8]		,sum(t.[ 8-9Mbps]) as [9]		,sum(t.[ 9-10Mbps]) as [10]
		,sum(t.[ 10-11Mbps]) as [11]	,sum(t.[ 11-12Mbps]) as [12]	,sum(t.[ 12-13Mbps]) as [13]	,sum(t.[ 13-14Mbps]) as [14]	,sum(t.[ 14-15Mbps]) as [15]
		,sum(t.[ 15-16Mbps]) as [16]	,sum(t.[ 16-17Mbps]) as [17]	,sum(t.[ 17-18Mbps]) as [18]	,sum(t.[ 18-19Mbps]) as [19]	,sum(t.[ 19-20Mbps]) as [20]
		,sum(t.[ 20-21Mbps]) as [21]	,sum(t.[ 21-22Mbps]) as [22]	,sum(t.[ 22-23Mbps]) as [23]	,sum(t.[ 23-24Mbps]) as [24]	,sum(t.[ 24-25Mbps]) as [25]
		,sum(t.[ 25-26Mbps]) as [26]	,sum(t.[ 26-27Mbps]) as [27]	,sum(t.[ 27-28Mbps]) as [28]	,sum(t.[ 28-29Mbps]) as [29]	,sum(t.[ 29-30Mbps]) as [30]
		,sum(t.[ 30-31Mbps]) as [31]	,sum(t.[ 31-32Mbps]) as [32]	,sum(t.[ >32Mbps]) as [33]
		,null as [34]	,null as [35]	,null as [36]	,null as [37]	,null as [38]	,null as [39]	,null as [40]	,null as [41],

		-- Parametros de configuracion:
		pf.ASideDevice as ASideDevice, pf.BSideDevice as BSideDevice, pf.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from	[AGGRData3G].dbo.[lcc_aggr_sp_MDD_Data_DL_Thput_CE] t
				left outer join [AGGRData3G].[dbo].[lcc_aggr_sp_MDD_Data_DL_Performance_CE] pf
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(pf.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=pf.mnc and t.Date_Reporting=pf.Date_Reporting and t.entidad=pf.entidad and t.Aggr_Type=pf.Aggr_Type and t.Report_Type=pf.Report_Type and t.meas_round=pf.meas_round 
				left outer join [AGGRData3G].[dbo].[lcc_aggr_sp_MDD_Data_DL_Technology_CE] te
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(te.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=te.mnc and t.Date_Reporting=te.Date_Reporting and t.entidad=te.entidad and t.Aggr_Type=te.Aggr_Type and t.Report_Type=te.Report_Type and t.meas_round=te.meas_round
			, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end,
		t.mnc,t.meas_round,t.Date_Reporting,t.Week_Reporting,t.entidad,t.Report_Type,t.Aggr_Type,
		pf.ASideDevice, pf.BSideDevice, pf.SWVersion--, t.Region_VF, t.Region_OSP

	-------------	
	union all 
	select   
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment,t.mnc,t.meas_round,t.Date_Reporting as meas_date,t.Week_Reporting as meas_week, 
		'3G' as meas_Tech, 'NC_DL' as Test_type, 'Downlink' as Direction, t.entidad as vf_entity,t.Report_Type,t.Aggr_Type,
		
		-- General:
		sum(t.navegaciones) as Num_tests,
		sum(t.[fallos de acceso]) as Failed,
		sum(t.[fallos de descarga]) as Dropped,
		sum(0) as Session_time_Num,
		sum(t.count_throughput) as Throughput_Den,
		sum(0) as Session_time_Den,
		sum(t.Throughput*t.count_throughput) as Throughput_Num,
		max(t.[Throughput Max]) as Throughput_Max,
		sum(t.Count_Throughput_3M) as Throughput_3M_Num,
		sum(t.Count_Throughput_1M) as Throughput_1M_Num,
		sum(t.Count_Throughput_128k) as Throughput_128K_Num,
		sum(0) as Throughput_64K_Num,
		sum(t.Count_Throughput_384k) as Throughput_384K_Num,
		--CAC 10/08/2017: thput de test sin error y con error
		sum(t.Count_Throughput_ALL) as Throughput_with_Error_Den,
		sum(t.Throughput_ALL*t.Count_Throughput_ALL) as Throughput_with_Error_Num,

		sum(0) as WEB_IP_ACCESS_TIME_NUM,			sum(0) as WEB_IP_ACCESS_TIME_DEN,	
		sum(0) as WEB_HTTP_TRANSFER_TIME_NUM,		sum(0) as WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_NUM,		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_NUM,		sum(0) as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,	sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(te.[% GSM]*te.[Count_%GSM]) as Radio_2G_use_Num,
		sum(te.[% WCDMA]*te.[Count_%WCDMA]) as Radio_3G_use_Num,
		sum(te.[% LTE]*te.[Count_%LTE]) as Radio_4G_use_Num,
		sum(t.navegaciones*(isnull(te.[% GSM],0)+isnull(te.[% WCDMA],0)+isnull(te.[% LTE],0))) as Radio_use_Den,				-- Se usaria solo en NoCA_Device
		sum(te.[Count_%GSM]) as Radio_2G_use_Den,
		sum(te.[Count_%WCDMA]) as Radio_3G_use_Den,
		sum(te.[Count_%LTE]) as Radio_4G_use_Den,

		sum(te.[% U2100]*te.[Count_%U2100]) as Radio_U2100_use_Num,
		sum(te.[% U900]*te.[Count_%U900]) as Radio_U900_use_Num,
		sum(te.[% LTE2100]*te.[Count_%LTE2100]) as Radio_LTE2100_use_Num,
		sum(te.[% LTE2600]*te.[Count_%LTE2600]) as Radio_LTE2600_use_Num,
		sum(te.[% LTE1800]*te.[Count_%LTE1800]) as Radio_LTE1800_use_Num,
		sum(te.[% LTE800]*te.[Count_%LTE800]) as Radio_LTE800_use_Num,
		sum(t.navegaciones*(isnull(te.[% U2100],0)+isnull(te.[% U900],0)+isnull(te.[% LTE2100],0)+
							isnull(te.[% LTE2600],0)+isnull(te.[% LTE1800],0)+isnull(te.[% LTE800],0))) as Radio_Band_Use_Den,	-- Se usaria solo en NoCA_Device
		sum(te.[Count_%U2100]) as Radio_U2100_use_Den,
		sum(te.[Count_%U900]) as Radio_U900_use_Den,
		sum(te.[Count_%LTE2100]) as Radio_LTE2100_use_Den,
		sum(te.[Count_%LTE2600]) as Radio_LTE2600_use_Den,
		sum(te.[Count_%LTE1800]) as Radio_LTE1800_use_Den,
		sum(te.[Count_%LTE800]) as Radio_LTE800_use_Den,

		-- Solo en DL:
		sum(te.[% Dual Carrier]*te.[Count_Dual_Carrier]) as [3G_DualCarrier_use_Num],	sum(te.[Count_Dual_Carrier]) as [3G_DualCarrier_use_Den],
		sum(te.[%DC_U2100]*te.[Count_DC_U2100]) as [3G_DC_2100_use_Num],				sum(te.[Count_DC_U2100]) as [3G_DC_2100_use_Den],
		sum(te.[%DC_U900]*te.[Count_DC_U900]) as [3G_DC_2100_use_Num],					sum(te.[Count_DC_U900]) as [3G_DC_2100_use_Den],

		sum(te.[Num Codes]*te.[Count_Num_Codes]) as [3G_NumCodes_use_Num],
		sum(te.[Count_Num_Codes]) as [3G_NumCodes_use_Den],

		sum(te.[QPSK]*te.[Count_QPSK]) as [3G_QPSK_use_Num],
		sum(te.[16QAM]*te.[Count_16QAM]) as [3G_16QAM_use_Num],
		sum(te.[64QAM]*te.[Count_64QAM]) as [3G_64QAM_use_Num],
		sum(te.[Count_QPSK]) as [3G_QPSK_use_Den],
		sum(te.[Count_16QAM]) as [3G_16QAM_use_Den],
		sum(te.[Count_64QAM]) as [3G_64QAM_use_Den],

		-- Solo en UL:
		sum(0) as [3G_%_SF22_Num],		sum(0) as [3G_%_SF22andSF42_Num],		sum(0) as [3G_%_SF4_Num],		sum(0) as [3G_%_SF42_Num],
		sum(0) as [3G_%_SF22_Den],		sum(0) as [3G_%_SF22andSF42_Den],		sum(0) as [3G_%_SF4_Den],		sum(0) as [3G_%_SF42_Den],
		sum(0) as [3G_%_TTI2ms_Num],	sum(0) as [3G_%_TTI2ms_Den],

		-- Ambos:
		sum(te.[RSCP_Lin]*te.[Count_RSCP_Lin]) as [RSCP_Lin_Num],
		sum(te.[EcI0_Lin]*te.[Count_EcI0_Lin]) as [EcI0_Lin_Num],	
		sum(te.[Count_RSCP_Lin]) as [RSCP_Lin_Den],	
		sum(te.[Count_EcI0_Lin]) as [EcI0_Lin_Den],	

		-- Performance:
		-- Solo en DL:
		sum(pf.CQI*(isnull(pf.count_cqi_u2100,0)+isnull(pf.count_cqi_u900,0))) [3G_CQI],
		sum((isnull(pf.count_cqi_u2100,0)+isnull(pf.count_cqi_u900,0))) as [3G_DataStats_Den],
		Sum(pf.CQI_U900*isnull(pf.count_cqi_u900,0)) as CQI_U900_Num,
		sum(isnull(pf.count_cqi_u900,0)) as CQI_U900_Den,
		Sum(pf.CQI_U2100*isnull(pf.count_cqi_u2100,0)) as CQI_U2100_Num,
		sum(isnull(pf.count_cqi_u2100,0)) as CQI_U2100_Den,

		-- Ambos:
		sum(pf.[HSPA_PCT]*pf.[Count_HSPA]) as [HSPA_PCT_Num],
		sum(pf.[HSPA+_PCT]*pf.[Count_HSPA+]) as [HSPA+_PCT_Num],
		sum(pf.[HSPA+_DC_PCT]*pf.[Count_HSPA+_DC]) as [HSPA+_DC_PCT_Num],
		sum(pf.[Count_HSPA]) as [HSPA_PCT_Den],
		sum(pf.[Count_HSPA+]) as [HSPA+_PCT_Den],
		sum(pf.[Count_HSPA+_DC]) as [HSPA+_DC_PCT_Den],

		sum(pf.[UL_Inter_Lin]*pf.[Count_UL_Inter]) as [UL_Inter_Lin_Num],
		sum(pf.[Count_UL_Inter]) as [UL_Inter_Lin_Den],	
	
		-- Performance LTE:
		sum(0) as CQI_4G_Num,		sum(0) as CQI_L800_Num,		sum(0) as CQI_L1800_Num,		sum(0) as CQI_L2100_Num,		sum(0) as CQI_L2600_Num,
		sum(0) as CQI_4G_Den,		sum(0) as CQI_L800_Den,		sum(0) as CQI_L1800_Den,		sum(0) as CQI_L2100_Den,		sum(0) as CQI_L2600_Den,

		sum(0) as LTE_5Mhz_SC_Use_Num,	sum(0) as LTE_10Mhz_SC_Use_Num,	sum(0) as LTE_15Mhz_SC_Use_Num,	sum(0) as LTE_20Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_CA_Use_Num,	sum(0) as LTE_20Mhz_CA_Use_Num,	sum(0) as LTE_25Mhz_CA_Use_Num,	sum(0) as LTE_30Mhz_CA_Use_Num,	sum(0) as LTE_35Mhz_CA_Use_Num,	sum(0) as LTE_40Mhz_CA_Use_Num,	
		sum(0) as LTE_5Mhz_SC_Use_Den,	sum(0) as LTE_10Mhz_SC_Use_Den,	sum(0) as LTE_15Mhz_SC_Use_Den,	sum(0) as LTE_20Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_CA_Use_Den,	sum(0) as LTE_20Mhz_CA_Use_Den,	sum(0) as LTE_25Mhz_CA_Use_Den,	sum(0) as LTE_30Mhz_CA_Use_Den,	sum(0) as LTE_35Mhz_CA_Use_Den,	sum(0) as LTE_40Mhz_CA_Use_Den,	

		sum(0) as LTE_BW_use_den,	sum(0) as [4G_RBs_use_Num],	sum(0) as [4G_RBs_use_Den],
	
		sum(0) as [4G_TM1_use_Num],			sum(0) as [4G_TM2_use_Num],			sum(0) as [4G_TM3_use_Num],		sum(0) as [4G_TM4_use_Num],		sum(0) as [4G_TM5_use_Num],
		sum(0) as [4G_TM6_use_Num],			sum(0) as [4G_TM7_use_Num],			sum(0) as [4G_TM8_use_Num],		sum(0) as [4G_TM9_use_Num],
		sum(0) as [4G_TMInvalid_use_Num],	sum(0) as [4G_TMUnknown_use_Num],
		sum(0) as [4G_TM_Den],

		-- Technology LTE:
		sum(0) as [4G_%CA_Num],			sum(0) as [4G_%CA_Den],	
		sum(0) as [4G_BPSK_Use_Num],	sum(0) as [4G_QPSK_Use_Num],	sum(0) as [4G_16QAM_Use_Num],    sum(0) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],	sum(0) as [4G_QPSK_Use_Den],	sum(0) as [4G_16QAM_Use_Den],    sum(0) as [4G_64QAM_Use_Den],

		sum(0) as [4G_stats_Den],

		sum(0) as [RSRP_Lin_Num],	sum(0) as [RSRQ_Lin_Num],	sum(0) as [SINR_Lin_Num],			
		sum(0) as [RSRP_Lin_Den],	sum(0) as [RSRQ_Lin_Den],	sum(0) as [SINR_Lin_Den],			

		--New KPIs:
		sum(0) as [MIMO_num],	sum(0) as [RI1_num],	sum(0) as [RI2_num],
		sum(0) as [MIMO_den],	sum(0) as [RI1_den],	sum(0) as [RI2_den],
		sum(0) as RBs_Allocated_Den,	sum(0) as RBs_Allocated_Num,	max(0) as RBs_Allocated_Max,

		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		sum(t.[ 0-0.75Mbps_N ]) as [1_N],		sum(t.[ 0.75-1.5Mbps_N ]) as [2_N],		sum(t.[ 1.5-2.25Mbps_N ]) as [3_N],		sum(t.[ 2.25-3Mbps_N ]) as [4_N],		sum(t.[ 3-3.75Mbps_N ]) as [5_N],
		sum(t.[ 3.75-4.5Mbps_N ]) as [6_N],		sum(t.[ 4.5-5.25Mbps_N ]) as [7_N],		sum(t.[ 5.25-6Mbps_N ]) as [8_N],		sum(t.[ 6-6.75Mbps_N ]) as [9_N],		sum(t.[ 6.75-7.5Mbps_N ]) as [10_N],
		sum(t.[ 7.5-8.25Mbps_N ]) as [11_N],	sum(t.[ 8.25-9Mbps_N ]) as [12_N],		sum(t.[ 9-9.75Mbps_N ]) as [13_N],		sum(t.[ 9.75-10.5Mbps_N ]) as [14_N],	sum(t.[ 10.5-11.25Mbps_N ]) as [15_N],
		sum(t.[ 11.25-12Mbps_N ]) as [16_N],	sum(t.[ 12-12.75Mbps_N ]) as [17_N],	sum(t.[ 12.75-13.5Mbps_N ]) as [18_N],	sum(t.[ 13.5-14.25Mbps_N ]) as [19_N],	sum(t.[ 14.25-15Mbps_N ]) as [20_N],
		sum(t.[ 15-15.75Mbps_N ]) as [21_N],	sum(t.[ 15.75-16.5Mbps_N ]) as [22_N],	sum(t.[ 16.5-17.25Mbps_N ]) as [23_N],	sum(t.[ 17.25-18Mbps_N ]) as [24_N],	sum(t.[ 18-18.75Mbps_N ]) as [25_N],
		sum(t.[ 18.75-19.5Mbps_N ]) as [26_N],	sum(t.[ 19.5-20.25Mbps_N ]) as [27_N],	sum(t.[ 20.25-21Mbps_N ]) as [28_N],	sum(t.[ 21-21.75Mbps_N ]) as [29_N],	sum(t.[ 21.75-22.5Mbps_N ]) as [30_N],
		sum(t.[ 22.5-23.25Mbps_N ]) as [31_N],	sum(t.[ 23.25-24Mbps_N ]) as [32_N],	sum(t.[ 24-24.75Mbps_N ]) as [33_N],	sum(t.[ 24.75-25.5Mbps_N ]) as [34_N],	sum(t.[ 25.5-26.25Mbps_N ]) as [35_N],
		sum(t.[ 26.25-27Mbps_N ]) as [36_N],	sum(t.[ 27-27.75Mbps_N ]) as [37_N],	sum(t.[ 27.75-28.5Mbps_N ]) as [38_N],	sum(t.[ 28.5-29.25Mbps_N ]) as [39_N],	sum(t.[ 29.25-30Mbps_N ]) as [40_N],
		sum(t.[ 30-30.75Mbps_N ]) as [41_N],	sum(t.[ 30.75-31.5Mbps_N ]) as [42_N],	sum(t.[ 31.5-32.25Mbps_N ]) as [43_N],	sum(t.[ 32.25-33Mbps_N ]) as [44_N],	sum(t.[ >33Mbps_N ]) as [45_N],
		null as [46_N],	null as [47_N],	null as [48_N],	null as [49_N],	null as [50_N],	null as [51_N],	null as [52_N],	null as [53_N],	null as [54_N],	null as [55_N],	null as [56_N],	null as [57_N],	null as [58_N],	null as [59_N],	null as [60_N],
		null as [61_N],	null as [62_N],	null as [63_N],	null as [64_N],	null as [65_N],	null as [66_N]
	
		--null as Region_Road_VF, null as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,sum(t.[ 0-1Mbps]) as [1]		,sum(t.[ 1-2Mbps]) as [2]		,sum(t.[ 2-3Mbps]) as [3]		,sum(t.[ 3-4Mbps]) as [4]		,sum(t.[ 4-5Mbps]) as [5]
		,sum(t.[ 5-6Mbps]) as [6]		,sum(t.[ 6-7Mbps]) as [7]		,sum(t.[ 7-8Mbps]) as [8]		,sum(t.[ 8-9Mbps]) as [9]		,sum(t.[ 9-10Mbps]) as [10]
		,sum(t.[ 10-11Mbps]) as [11]	,sum(t.[ 11-12Mbps]) as [12]	,sum(t.[ 12-13Mbps]) as [13]	,sum(t.[ 13-14Mbps]) as [14]	,sum(t.[ 14-15Mbps]) as [15]
		,sum(t.[ 15-16Mbps]) as [16]	,sum(t.[ 16-17Mbps]) as [17]	,sum(t.[ 17-18Mbps]) as [18]	,sum(t.[ 18-19Mbps]) as [19]	,sum(t.[ 19-20Mbps]) as [20]
		,sum(t.[ 20-21Mbps]) as [21]	,sum(t.[ 21-22Mbps]) as [22]	,sum(t.[ 22-23Mbps]) as [23]	,sum(t.[ 23-24Mbps]) as [24]	,sum(t.[ 24-25Mbps]) as [25]
		,sum(t.[ 25-26Mbps]) as [26]	,sum(t.[ 26-27Mbps]) as [27]	,sum(t.[ 27-28Mbps]) as [28]	,sum(t.[ 28-29Mbps]) as [29]	,sum(t.[ 29-30Mbps]) as [30]
		,sum(t.[ 30-31Mbps]) as [31]	,sum(t.[ 31-32Mbps]) as [32]	,sum(t.[ >32Mbps]) as [33]	
		,null as [34]	,null as [35]	,null as [36]	,null as [37]	,null as [38]	,null as [39]	,null as [40]	,null as [41],

		-- Parametros de configuracion:
		pf.ASideDevice as ASideDevice, pf.BSideDevice as BSideDevice, pf.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from	[AGGRData3G].dbo.[lcc_aggr_sp_MDD_Data_DL_Thput_NC] t
				left outer join [AGGRData3G].[dbo].[lcc_aggr_sp_MDD_Data_DL_Performance_NC] pf
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(pf.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=pf.mnc and t.Date_Reporting=pf.Date_Reporting and t.entidad=pf.entidad and t.Aggr_Type=pf.Aggr_Type and t.Report_Type=pf.Report_Type and t.meas_round=pf.meas_round
				left outer join  [AGGRData3G].[dbo].[lcc_aggr_sp_MDD_Data_DL_Technology_NC] te
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(te.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=te.mnc and t.Date_Reporting=te.Date_Reporting and t.entidad=te.entidad and t.Aggr_Type=te.Aggr_Type and t.Report_Type=te.Report_Type and t.meas_round=te.meas_round
				, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end,
		t.mnc,t.meas_round,t.Date_Reporting,t.Week_Reporting,t.entidad,t.Report_Type,t.Aggr_Type,
		pf.ASideDevice, pf.BSideDevice, pf.SWVersion--, t.Region_VF, t.Region_OSP

	-------------
	union all 
	select   
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment,t.mnc,t.meas_round,t.Date_Reporting as meas_date,t.Week_Reporting as meas_week, 
		'3G' as meas_Tech, 'CE_UL' as Test_type, 'Uplink' as Direction, t.entidad as vf_entity,t.Report_Type,t.Aggr_Type,
	
		-- General:
		sum(t.Subidas) as Num_tests,
		sum(t.[fallos de acceso]) as Failed,
		sum(t.[fallos de descarga]) as Dropped,
		sum(t.[SessionTime]*t.Subidas) as Session_time_Num,
		--sum(t.[Tiempo de subida]*t.count_throughput) as Session_time_Num,	-- SESSION_TIME de DL/UL, calculado como TRANSFER_TIME - se haría el cambio al calculo correcto en cambio de metodología para evitar salto de valor en QLIK.
		sum(t.count_throughput) as Throughput_Den,
		sum(t.Subidas) as Session_time_Den,
		--sum(t.count_throughput) as Session_time_Den,
		sum(t.Throughput*t.count_throughput) as Throughput_Num,
		max(t.[Throughput Max]) as Throughput_Max,
		sum(0) as Throughput_3M_Num,
		sum(t.Count_Throughput_1M) as Throughput_1M_Num,
		sum(0) as Throughput_128K_Num,
		sum(0) as Throughput_64K_Num,
		sum(0) as Throughput_384K_Num,
		--CAC 10/08/2017: thput de test sin error y con error
		sum(t.Count_Throughput_ALL) as Throughput_with_Error_Den,
		sum(t.Throughput_ALL*t.Count_Throughput_ALL) as Throughput_with_Error_Num,

		sum(0) as WEB_IP_ACCESS_TIME_NUM,			sum(0) as WEB_IP_ACCESS_TIME_DEN,	
		sum(0) as WEB_HTTP_TRANSFER_TIME_NUM,		sum(0) as WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_NUM,		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_NUM,		sum(0) as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,	sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(te.[% GSM]*te.[Count_%GSM]) as Radio_2G_use_Num,
		sum(te.[% WCDMA]*te.[Count_%WCDMA]) as Radio_3G_use_Num,
		sum(te.[% LTE]*te.[Count_%LTE]) as Radio_4G_use_Num,
		sum(t.subidas*(isnull(te.[% GSM],0)+isnull(te.[% WCDMA],0)+isnull(te.[% LTE],0))) as Radio_use_Den,					-- Se usaria solo en NoCA_Device
		sum(te.[Count_%GSM]) as Radio_2G_use_Den,
		sum(te.[Count_%WCDMA]) as Radio_3G_use_Den,
		sum(te.[Count_%LTE]) as Radio_4G_use_Den,

		sum(te.[% U2100]*te.[Count_%U2100]) as Radio_U2100_use_Num,
		sum(te.[% U900]*te.[Count_%U900]) as Radio_U900_use_Num,
		sum(te.[% LTE2100]*te.[Count_%LTE2100]) as Radio_LTE2100_use_Num,
		sum(te.[% LTE2600]*te.[Count_%LTE2600]) as Radio_LTE2600_use_Num,
		sum(te.[% LTE1800]*te.[Count_%LTE1800]) as Radio_LTE1800_use_Num,
		sum(te.[% LTE800]*te.[Count_%LTE800]) as Radio_LTE800_use_Num,
		sum(t.subidas*(isnull(te.[% U2100],0)+isnull(te.[% U900],0)+isnull(te.[% LTE2100],0)+
						isnull(te.[% LTE2600],0)+isnull(te.[% LTE1800],0)+isnull(te.[% LTE800],0))) as Radio_Band_Use_Den,	-- Se usaria solo en NoCA_Device
		sum(te.[Count_%U2100]) as Radio_U2100_use_Den,
		sum(te.[Count_%U900]) as Radio_U900_use_Den,
		sum(te.[Count_%LTE2100]) as Radio_LTE2100_use_Den,
		sum(te.[Count_%LTE2600]) as Radio_LTE2600_use_Den,
		sum(te.[Count_%LTE1800]) as Radio_LTE1800_use_Den,
		sum(te.[Count_%LTE800]) as Radio_LTE800_use_Den,

		-- Solo en DL:
		sum(0) as [3G_DualCarrier_use_Num],		sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],			sum(0) as [3G_DC_2100_use_Den],
		sum(0) as [3G_DC_900_use_Num],			sum(0) as [3G_DC_900_use_Den],

		sum(0) as [3G_NumCodes_use_Num],	sum(0) as [3G_NumCodes_use_Den],
		sum(0) as [3G_QPSK_use_Num],		sum(0) as [3G_16QAM_use_Num],	sum(0) as [3G_64QAM_use_Num],
		sum(0) as [3G_QPSK_use_Den],		sum(0) as [3G_16QAM_use_Den],	sum(0) as [3G_64QAM_use_Den],

		-- Solo en UL:
		sum((te.[% SF22]/100.0)*te.[Count_%_SF22]) as [3G_%_SF22_Num],
		sum((te.[% SF22andSF42]/100.0)*te.[Count_%_SF22andSF42]) as [3G_%_SF22andSF42_Num],
		sum((te.[% SF4]/100.0)*te.[Count_%SF4]) as [3G_%_SF4_Num],
		sum((te.[% SF42]/100.0)*te.[Count_%_SF42]) as [3G_%_SF42_Num],
		sum(te.[Count_%_SF22]) as [3G_%_SF22_Den],
		sum(te.[Count_%_SF22andSF42]) as [3G_%_SF22andSF42_Den],
		sum(te.[Count_%SF4]) as [3G_%_SF4_Den],
		sum(te.[Count_%_SF42]) as [3G_%_SF42_Den],
		sum(te.[% TTI 2ms_float]*te.[Count_%TTI_2ms]) as [3G_%_TTI2ms_Num],
		sum(te.[Count_%TTI_2ms]) as [3G_%_TTI2ms_Den],

		-- Ambos:
		sum(te.[RSCP_Lin]*te.[Count_RSCP_Lin]) as [RSCP_Lin_Num],
		sum(te.[EcI0_Lin]*te.[Count_EcI0_Lin]) as [EcI0_Lin_Num],	
		sum(te.[Count_RSCP_Lin]) as [RSCP_Lin_Den],	
		sum(te.[Count_EcI0_Lin]) as [EcI0_Lin_Den],	
			
		-- Performance:
		-- Solo DL:
		sum(0) as [3G_CQI],			sum(0) as [3G_DataStats_Den],
		Sum(0) as CQI_U900_Num,		sum(0) as CQI_U900_Den,
		Sum(0) as CQI_U2100_Num,	sum(0) as CQI_U2100_Den,

		-- Ambos:
		sum(pf.[HSPA_PCT]*pf.[Count_HSPA]) as [HSPA_PCT_Num],
		sum(pf.[HSPA+_PCT]*pf.[Count_HSPA+]) as [HSPA+_PCT_Num],
		sum(pf.[HSPA+_DC_PCT]*pf.[Count_HSPA+_DC]) as [HSPA+_DC_PCT_Num],
		sum(pf.[Count_HSPA]) as [HSPA_PCT_Den],
		sum(pf.[Count_HSPA+]) as [HSPA+_PCT_Den],
		sum(pf.[Count_HSPA+_DC]) as [HSPA+_DC_PCT_Den],

		sum(pf.[UL_Inter_Lin]*pf.[Count_UL_Inter]) as [UL_Inter_Lin_Num],
		sum(pf.[Count_UL_Inter]) as [UL_Inter_Lin_Den],	
	
		-- Performance LTE:
		sum(0) as CQI_4G_Num,		sum(0) as CQI_L800_Num,		sum(0) as CQI_L1800_Num,		sum(0) as CQI_L2100_Num,		sum(0) as CQI_L2600_Num,
		sum(0) as CQI_4G_Den,		sum(0) as CQI_L800_Den,		sum(0) as CQI_L1800_Den,		sum(0) as CQI_L2100_Den,		sum(0) as CQI_L2600_Den,

		sum(0) as LTE_5Mhz_SC_Use_Num,	sum(0) as LTE_10Mhz_SC_Use_Num,	sum(0) as LTE_15Mhz_SC_Use_Num,	sum(0) as LTE_20Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_CA_Use_Num,	sum(0) as LTE_20Mhz_CA_Use_Num,	sum(0) as LTE_25Mhz_CA_Use_Num,	sum(0) as LTE_30Mhz_CA_Use_Num,	sum(0) as LTE_35Mhz_CA_Use_Num,	sum(0) as LTE_40Mhz_CA_Use_Num,	
		sum(0) as LTE_5Mhz_SC_Use_Den,	sum(0) as LTE_10Mhz_SC_Use_Den,	sum(0) as LTE_15Mhz_SC_Use_Den,	sum(0) as LTE_20Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_CA_Use_Den,	sum(0) as LTE_20Mhz_CA_Use_Den,	sum(0) as LTE_25Mhz_CA_Use_Den,	sum(0) as LTE_30Mhz_CA_Use_Den,	sum(0) as LTE_35Mhz_CA_Use_Den,	sum(0) as LTE_40Mhz_CA_Use_Den,	

		sum(0) as LTE_BW_use_den,	sum(0) as [4G_RBs_use_Num],	sum(0) as [4G_RBs_use_Den],
	
		sum(0) as [4G_TM1_use_Num],			sum(0) as [4G_TM2_use_Num],			sum(0) as [4G_TM3_use_Num],		sum(0) as [4G_TM4_use_Num],		sum(0) as [4G_TM5_use_Num],
		sum(0) as [4G_TM6_use_Num],			sum(0) as [4G_TM7_use_Num],			sum(0) as [4G_TM8_use_Num],		sum(0) as [4G_TM9_use_Num],
		sum(0) as [4G_TMInvalid_use_Num],	sum(0) as [4G_TMUnknown_use_Num],
		sum(0) as [4G_TM_Den],

		-- Technology LTE:
		sum(0) as [4G_%CA_Num],			sum(0) as [4G_%CA_Den],	
		sum(0) as [4G_BPSK_Use_Num],	sum(0) as [4G_QPSK_Use_Num],	sum(0) as [4G_16QAM_Use_Num],    sum(0) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],	sum(0) as [4G_QPSK_Use_Den],	sum(0) as [4G_16QAM_Use_Den],    sum(0) as [4G_64QAM_Use_Den],

		sum(0) as [4G_stats_Den],

		sum(0) as [RSRP_Lin_Num],	sum(0) as [RSRQ_Lin_Num],	sum(0) as [SINR_Lin_Num],			
		sum(0) as [RSRP_Lin_Den],	sum(0) as [RSRQ_Lin_Den],	sum(0) as [SINR_Lin_Den],			

		--New KPIs:
		sum(0) as [MIMO_num],	sum(0) as [RI1_num],	sum(0) as [RI2_num],
		sum(0) as [MIMO_den],	sum(0) as [RI1_den],	sum(0) as [RI2_den],
		sum(0) as RBs_Allocated_Den,	sum(0) as RBs_Allocated_Num,	max(0) as RBs_Allocated_Max,

		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:
		sum(t.[ 0-0.25Mbps_N ]) as [1_N],		sum(t.[ 0.25-0.5Mbps_N ]) as [2_N],	sum(t.[ 0.5-0.75Mbps_N ]) as [3_N],	sum(t.[ 0.75-1Mbps_N ]) as [4_N],		sum(t.[ 1-1.25Mbps_N ]) as [5_N],
		sum(t.[ 1.25-1.5Mbps_N ]) as [6_N],	sum(t.[ 1.5-1.75Mbps_N ]) as [7_N],	sum(t.[ 1.75-2Mbps_N ]) as [8_N],		sum(t.[ 2-2.25Mbps_N ]) as [9_N],		sum(t.[ 2.25-2.5Mbps_N ]) as [10_N],
		sum(t.[ 2.5-2.75Mbps_N ]) as [11_N],	sum(t.[ 2.75-3Mbps_N ]) as [12_N],	sum(t.[ 3-3.25Mbps_N ]) as [13_N],	sum(t.[ 3.25-3.5Mbps_N ]) as [14_N],	sum(t.[ 3.5-3.75Mbps_N ]) as [15_N],
		sum(t.[ 3.75-4Mbps_N ]) as [16_N],	sum(t.[ 4-4.25Mbps_N ]) as [17_N],	sum(t.[ 4.25-4.5Mbps_N ]) as [18_N],	sum(t.[ 4.5-4.75Mbps_N ]) as [19_N],	sum(t.[ 4.75-5Mbps_N ]) as [20_N],
		sum(t.[ >5Mbps_N ]) as [21_N],
		null as [22_N],	null as [23_N],	null as [24_N],	null as [25_N],	null as [26_N],	null as [27_N],	null as [28_N],	null as [29_N],	null as [30_N],
		null as [31_N],	null as [32_N],	null as [33_N],	null as [34_N],	null as [35_N],	null as [36_N],	null as [37_N],	null as [38_N],	null as [39_N],
		null as [40_N],	null as [41_N],	null as [42_N],	null as [43_N],	null as [44_N],	null as [45_N],	null as [46_N],	null as [47_N],	null as [48_N],
		null as [49_N],	null as [50_N],	null as [51_N],	null as [52_N],	null as [53_N],	null as [54_N],	null as [55_N],	null as [56_N],	null as [57_N],
		null as [58_N],	null as [59_N],	null as [60_N],	null as [61_N],	null as [62_N],	null as [63_N],	null as [64_N],	null as [65_N],	null as [66_N]
	
		--null as Region_Road_VF, null as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,sum(t.[ 0-0.5Mbps]) as [1]		,sum(t.[ 0.5-1Mbps]) as [2]		,sum(t.[ 1-1.5Mbps]) as [3]		,sum(t.[ 1.5-2Mbps]) as [4]		,sum(t.[ 2-2.5Mbps]) as [5]
		,sum(t.[ 2.5-3Mbps]) as [6]		,sum(t.[ 3-3.5Mbps]) as [7]		,sum(t.[ 3.5-4Mbps]) as [8]		,sum(t.[ 4-4.5Mbps]) as [9]		,sum(t.[ 4.5-5Mbps]) as [10]
		,sum(t.[ >5Mbps]) as [11]
		,null as [12]	,null as [13]	,null as [14]	,null as [15]	,null as [16]	,null as [17]	,null as [18]	,null as [19]	,null as [20]
		,null as [21]	,null as [22]	,null as [23]	,null as [24]	,null as [25]	,null as [26]	,null as [27]	,null as [28]	,null as [29]
		,null as [30]	,null as [31]	,null as [32]	,null as [33]	,null as [34]	,null as [35]	,null as [36]	,null as [37]	,null as [38]
		,null as [39]	,null as [40]	,null as [41],

		-- Parametros de configuracion:
		pf.ASideDevice as ASideDevice, pf.BSideDevice as BSideDevice, pf.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from	[AGGRData3G].dbo.[lcc_aggr_sp_MDD_Data_UL_Thput_CE] t
				left outer join [AGGRData3G].[dbo].[lcc_aggr_sp_MDD_Data_UL_Performance_CE] pf
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(pf.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=pf.mnc and t.Date_Reporting=pf.Date_Reporting and t.entidad=pf.entidad and t.Aggr_Type=pf.Aggr_Type and t.Report_Type=pf.Report_Type and t.meas_round=pf.meas_round
				left outer join  [AGGRData3G].[dbo].[lcc_aggr_sp_MDD_Data_UL_Technology_CE] te
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(te.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=te.mnc and t.Date_Reporting=te.Date_Reporting and t.entidad=te.entidad and t.Aggr_Type=te.Aggr_Type and t.Report_Type=te.Report_Type and t.meas_round=te.meas_round
				, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end,
		t.mnc,t.meas_round,t.Date_Reporting,t.Week_Reporting,t.entidad,t.Report_Type,t.Aggr_Type,
		pf.ASideDevice, pf.BSideDevice, pf.SWVersion--, t.Region_VF, t.Region_OSP

	-------------
	union all 
	select   
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment,t.mnc,t.meas_round,t.Date_Reporting as meas_date,t.Week_Reporting as meas_week, 
		'3G' as meas_Tech, 'NC_UL' as Test_type, 'Uplink' as Direction, t.entidad as vf_entity,t.Report_Type,t.Aggr_Type,
	
		-- General:
		sum(t.Subidas) as Num_tests,
		sum(t.[fallos de acceso]) as Failed,
		sum(t.[fallos de descarga]) as Dropped,
		sum(0) as Session_time_Num,
		sum(t.count_throughput) as Throughput_Den,
		sum(0) as Session_time_Den,
		sum(t.Throughput*t.count_throughput) as Throughput_Num,
		max(t.[Throughput Max]) as Throughput_Max,
		sum(0) as Throughput_3M_Num,
		sum(t.Count_Throughput_1M) as Throughput_1M_Num,
		sum(0) as Throughput_128K_Num,
		sum(t.Count_Throughput_64k) as Throughput_64K_Num,
		sum(t.Count_Throughput_384k) as Throughput_384K_Num,
		--CAC 10/08/2017: thput de test sin error y con error
		sum(t.Count_Throughput_ALL) as Throughput_with_Error_Den,
		sum(t.Throughput_ALL*t.Count_Throughput_ALL) as Throughput_with_Error_Num,

		sum(0) as WEB_IP_ACCESS_TIME_NUM,			sum(0) as WEB_IP_ACCESS_TIME_DEN,	
		sum(0) as WEB_HTTP_TRANSFER_TIME_NUM,		sum(0) as WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_NUM,		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_NUM,		sum(0) as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,	sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(te.[% GSM]*te.[Count_%GSM]) as Radio_2G_use_Num,
		sum(te.[% WCDMA]*te.[Count_%WCDMA]) as Radio_3G_use_Num,
		sum(te.[% LTE]*te.[Count_%LTE]) as Radio_4G_use_Num,
		sum(t.Subidas*(isnull(te.[% GSM],0)+isnull(te.[% WCDMA],0)+isnull(te.[% LTE],0))) as Radio_use_Den,						-- Se usaria solo en NoCA_Device
		sum(te.[Count_%GSM]) as Radio_2G_use_Den,
		sum(te.[Count_%WCDMA]) as Radio_3G_use_Den,
		sum(te.[Count_%LTE]) as Radio_4G_use_Den,

		sum(te.[% U2100]*te.[Count_%U2100]) as Radio_U2100_use_Num,
		sum(te.[% U900]*te.[Count_%U900]) as Radio_U900_use_Num,
		sum(te.[% LTE2100]*te.[Count_%LTE2100]) as Radio_LTE2100_use_Num,
		sum(te.[% LTE2600]*te.[Count_%LTE2600]) as Radio_LTE2600_use_Num,
		sum(te.[% LTE1800]*te.[Count_%LTE1800]) as Radio_LTE1800_use_Num,
		sum(te.[% LTE800]*te.[Count_%LTE800]) as Radio_LTE800_use_Num,
		sum(t.Subidas*(isnull(te.[% U2100],0)+isnull(te.[% U900],0)+isnull(te.[% LTE2100],0)+
						isnull(te.[% LTE2600],0)+isnull(te.[% LTE1800],0)+isnull(te.[% LTE800],0))) as Radio_Band_Use_Den,		-- Se usaria solo en NoCA_Device
		sum(te.[Count_%U2100]) as Radio_U2100_use_Den,
		sum(te.[Count_%U900]) as Radio_U900_use_Den,
		sum(te.[Count_%LTE2100]) as Radio_LTE2100_use_Den,
		sum(te.[Count_%LTE2600]) as Radio_LTE2600_use_Den,
		sum(te.[Count_%LTE1800]) as Radio_LTE1800_use_Den,
		sum(te.[Count_%LTE800]) as Radio_LTE800_use_Den,

		-- Solo en DL:
		sum(0) as [3G_DualCarrier_use_Num],		sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],			sum(0) as [3G_DC_2100_use_Den],
		sum(0) as [3G_DC_900_use_Num],			sum(0) as [3G_DC_900_use_Den],

		sum(0) as [3G_NumCodes_use_Num],	sum(0) as [3G_NumCodes_use_Den],
		sum(0) as [3G_QPSK_use_Num],		sum(0) as [3G_16QAM_use_Num],	sum(0) as [3G_64QAM_use_Num],
		sum(0) as [3G_QPSK_use_Den],		sum(0) as [3G_16QAM_use_Den],	sum(0) as [3G_64QAM_use_Den],

		-- Solo en UL:
		sum((te.[% SF22]/100.0)*te.[Count_%_SF22]) as [3G_%_SF22_Num],
		sum((te.[% SF22andSF42]/100.0)*te.[Count_%_SF22andSF42]) as [3G_%_SF22andSF42_Num],
		sum((te.[% SF4]/100.0)*te.[Count_%SF4]) as [3G_%_SF4_Num],
		sum((te.[% SF42]/100.0)*te.[Count_%_SF42]) as [3G_%_SF42_Num],
		sum(te.[Count_%_SF22]) as [3G_%_SF22_Den],
		sum(te.[Count_%_SF22andSF42]) as [3G_%_SF22andSF42_Den],
		sum(te.[Count_%SF4]) as [3G_%_SF4_Den],
		sum(te.[Count_%_SF42]) as [3G_%_SF42_Den],
		sum(1.0*te.[% TTI 2ms_float]*te.[Count_%TTI_2ms]) as [3G_%_TTI2ms_Num],
		sum(te.[Count_%TTI_2ms]) as [3G_%_TTI2ms_Den],	
	
		sum(te.[RSCP_Lin]*te.[Count_RSCP_Lin]) as [RSCP_Lin_Num],
		sum(te.[EcI0_Lin]*te.[Count_EcI0_Lin]) as [EcI0_Lin_Num],	
		sum(te.[Count_RSCP_Lin]) as [RSCP_Lin_Den],	
		sum(te.[Count_EcI0_Lin]) as [EcI0_Lin_Den],
			
		-- Performance:
		-- Solo DL:
		sum(0) as [3G_CQI],			sum(0) as [3G_DataStats_Den],
		Sum(0) as CQI_U900_Num,		sum(0) as CQI_U900_Den,
		Sum(0) as CQI_U2100_Num,	sum(0) as CQI_U2100_Den,

		-- Ambos:
		sum(pf.[HSPA_PCT]*pf.[Count_HSPA]) as [HSPA_PCT_Num],
		sum(pf.[HSPA+_PCT]*pf.[Count_HSPA+]) as [HSPA+_PCT_Num],
		sum(pf.[HSPA+_DC_PCT]*pf.[Count_HSPA+_DC]) as [HSPA+_DC_PCT_Num],
		sum(pf.[Count_HSPA]) as [HSPA_PCT_Den],
		sum(pf.[Count_HSPA+]) as [HSPA+_PCT_Den],
		sum(pf.[Count_HSPA+_DC]) as [HSPA+_DC_PCT_Den],

		sum(pf.[UL_Inter_Lin]*pf.[Count_UL_Inter]) as [UL_Inter_Lin_Num],
		sum(pf.[Count_UL_Inter]) as [UL_Inter_Lin_Den],	
	
		-- Performance LTE:
		sum(0) as CQI_4G_Num,		sum(0) as CQI_L800_Num,		sum(0) as CQI_L1800_Num,		sum(0) as CQI_L2100_Num,		sum(0) as CQI_L2600_Num,
		sum(0) as CQI_4G_Den,		sum(0) as CQI_L800_Den,		sum(0) as CQI_L1800_Den,		sum(0) as CQI_L2100_Den,		sum(0) as CQI_L2600_Den,

		sum(0) as LTE_5Mhz_SC_Use_Num,	sum(0) as LTE_10Mhz_SC_Use_Num,	sum(0) as LTE_15Mhz_SC_Use_Num,	sum(0) as LTE_20Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_CA_Use_Num,	sum(0) as LTE_20Mhz_CA_Use_Num,	sum(0) as LTE_25Mhz_CA_Use_Num,	sum(0) as LTE_30Mhz_CA_Use_Num,	sum(0) as LTE_35Mhz_CA_Use_Num,	sum(0) as LTE_40Mhz_CA_Use_Num,	
		sum(0) as LTE_5Mhz_SC_Use_Den,	sum(0) as LTE_10Mhz_SC_Use_Den,	sum(0) as LTE_15Mhz_SC_Use_Den,	sum(0) as LTE_20Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_CA_Use_Den,	sum(0) as LTE_20Mhz_CA_Use_Den,	sum(0) as LTE_25Mhz_CA_Use_Den,	sum(0) as LTE_30Mhz_CA_Use_Den,	sum(0) as LTE_35Mhz_CA_Use_Den,	sum(0) as LTE_40Mhz_CA_Use_Den,	

		sum(0) as LTE_BW_use_den,	sum(0) as [4G_RBs_use_Num],	sum(0) as [4G_RBs_use_Den],
	
		sum(0) as [4G_TM1_use_Num],			sum(0) as [4G_TM2_use_Num],			sum(0) as [4G_TM3_use_Num],		sum(0) as [4G_TM4_use_Num],		sum(0) as [4G_TM5_use_Num],
		sum(0) as [4G_TM6_use_Num],			sum(0) as [4G_TM7_use_Num],			sum(0) as [4G_TM8_use_Num],		sum(0) as [4G_TM9_use_Num],
		sum(0) as [4G_TMInvalid_use_Num],	sum(0) as [4G_TMUnknown_use_Num],
		sum(0) as [4G_TM_Den],

		-- Technology LTE:
		sum(0) as [4G_%CA_Num],			sum(0) as [4G_%CA_Den],	
		sum(0) as [4G_BPSK_Use_Num],	sum(0) as [4G_QPSK_Use_Num],	sum(0) as [4G_16QAM_Use_Num],    sum(0) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],	sum(0) as [4G_QPSK_Use_Den],	sum(0) as [4G_16QAM_Use_Den],    sum(0) as [4G_64QAM_Use_Den],

		sum(0) as [4G_stats_Den],

		sum(0) as [RSRP_Lin_Num],	sum(0) as [RSRQ_Lin_Num],	sum(0) as [SINR_Lin_Num],			
		sum(0) as [RSRP_Lin_Den],	sum(0) as [RSRQ_Lin_Den],	sum(0) as [SINR_Lin_Den],			

		--New KPIs:
		sum(0) as [MIMO_num],	sum(0) as [RI1_num],	sum(0) as [RI2_num],
		sum(0) as [MIMO_den],	sum(0) as [RI1_den],	sum(0) as [RI2_den],
		sum(0) as RBs_Allocated_Den,	sum(0) as RBs_Allocated_Num,	max(0) as RBs_Allocated_Max,

		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		sum(t.[ 0-0.25Mbps_N ]) as [1_N],		sum(t.[ 0.25-0.5Mbps_N ]) as [2_N],	sum(t.[ 0.5-0.75Mbps_N ]) as [3_N],	sum(t.[ 0.75-1Mbps_N ]) as [4_N],		sum(t.[ 1-1.25Mbps_N ]) as [5_N],
		sum(t.[ 1.25-1.5Mbps_N ]) as [6_N],	sum(t.[ 1.5-1.75Mbps_N ]) as [7_N],	sum(t.[ 1.75-2Mbps_N ]) as [8_N],		sum(t.[ 2-2.25Mbps_N ]) as [9_N],		sum(t.[ 2.25-2.5Mbps_N ]) as [10_N],
		sum(t.[ 2.5-2.75Mbps_N ]) as [11_N],	sum(t.[ 2.75-3Mbps_N ]) as [12_N],	sum(t.[ 3-3.25Mbps_N ]) as [13_N],	sum(t.[ 3.25-3.5Mbps_N ]) as [14_N],	sum(t.[ 3.5-3.75Mbps_N ]) as [15_N],
		sum(t.[ 3.75-4Mbps_N ]) as [16_N],	sum(t.[ 4-4.25Mbps_N ]) as [17_N],	sum(t.[ 4.25-4.5Mbps_N ]) as [18_N],	sum(t.[ 4.5-4.75Mbps_N ]) as [19_N],	sum(t.[ 4.75-5Mbps_N ]) as [20_N],
		sum(t.[ >5Mbps_N ]) as [21_N],
		null as [22_N],	null as [23_N],	null as [24_N],	null as [25_N],	null as [26_N],	null as [27_N],	null as [28_N],	null as [29_N],	null as [30_N],	null as [31_N],	null as [32_N],	null as [33_N],	null as [34_N],	null as [35_N],
		null as [36_N],	null as [37_N],	null as [38_N],	null as [39_N],	null as [40_N],	null as [41_N],	null as [42_N],	null as [43_N],	null as [44_N],	null as [45_N],	null as [46_N],	null as [47_N],	null as [48_N],	null as [49_N],
		null as [50_N],	null as [51_N],	null as [52_N],	null as [53_N],	null as [54_N],	null as [55_N],	null as [56_N],	null as [57_N],	null as [58_N],	null as [59_N],	null as [60_N],	null as [61_N],	null as [62_N],	null as [63_N],
		null as [64_N],	null as [65_N],	null as [66_N]
	
		--null as Region_Road_VF, null as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,sum(t.[ 0-0.5Mbps]) as [1]		,sum(t.[ 0.5-1Mbps]) as [2]		,sum(t.[ 1-1.5Mbps]) as [3]		,sum(t.[ 1.5-2Mbps]) as [4]		,sum(t.[ 2-2.5Mbps]) as [5]
		,sum(t.[ 2.5-3Mbps]) as [6]		,sum(t.[ 3-3.5Mbps]) as [7]		,sum(t.[ 3.5-4Mbps]) as [8]		,sum(t.[ 4-4.5Mbps]) as [9]		,sum(t.[ 4.5-5Mbps]) as [10]
		,sum(t.[ >5Mbps]) as [11]
		,null as [12]	,null as [13]	,null as [14]	,null as [15]	,null as [16]	,null as [17]	,null as [18]	,null as [19]	,null as [20]
		,null as [21]	,null as [22]	,null as [23]	,null as [24]	,null as [25]	,null as [26]	,null as [27]	,null as [28]	,null as [29]
		,null as [30]	,null as [31]	,null as [32]	,null as [33]	,null as [34]	,null as [35]	,null as [36]	,null as [37]	,null as [38]
		,null as [39]	,null as [40]	,null as [41],

		-- Parametros de configuracion:
		pf.ASideDevice as ASideDevice, pf.BSideDevice as BSideDevice, pf.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from	[AGGRData3G].dbo.[lcc_aggr_sp_MDD_Data_UL_Thput_NC] t
				left outer join [AGGRData3G].[dbo].[lcc_aggr_sp_MDD_Data_UL_Performance_NC] pf
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(pf.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=pf.mnc and t.Date_Reporting=pf.Date_Reporting and t.entidad=pf.entidad and t.Aggr_Type=pf.Aggr_Type and t.Report_Type=pf.Report_Type and t.meas_round=pf.meas_round
				left outer join  [AGGRData3G].[dbo].[lcc_aggr_sp_MDD_Data_UL_Technology_NC] te
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(te.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=te.mnc and t.Date_Reporting=te.Date_Reporting and t.entidad=te.entidad and t.Aggr_Type=te.Aggr_Type and t.Report_Type=te.Report_Type and t.meas_round=te.meas_round 
				, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end,t.mnc,t.meas_round,t.Date_Reporting,t.Week_Reporting,t.entidad,t.Report_Type,t.Aggr_Type,
		pf.ASideDevice, pf.BSideDevice, pf.SWVersion--, t.Region_VF, t.Region_OSP

	-------------
	-- 4G - DL-CE/NC
	insert into _RI_Data_e 
	select  
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment,
		t.mnc,t.meas_round,t.Date_Reporting as meas_date,t.Week_Reporting as meas_week, 
		'4G' as meas_Tech, 'CE_DL' as Test_type, 'Downlink' as Direction, t.entidad as vf_entity,t.Report_Type,t.Aggr_Type,
	
		-- General:
		sum(t.navegaciones) as Num_tests,
		sum(t.[fallos de acceso]) as Failed,
		sum(t.[fallos de descarga]) as Dropped,
		sum(t.[SessionTime]*t.navegaciones) as Session_time_Num,
		--sum(t.[tiempo de descarga]*t.count_throughput) as Session_time_Num,	-- SESSION_TIME de DL/UL, calculado como TRANSFER_TIME - se haría el cambio al calculo correcto en cambio de metodología para evitar salto de valor en QLIK.
		sum(t.count_throughput) as Throughput_Den,
		sum(t.navegaciones) as Session_time_Den,
		--sum(t.count_throughput) as Session_time_Den,
		sum(t.Throughput*t.count_throughput) as Throughput_Num,
		max(t.[Throughput Max]) as Throughput_Max,
		sum(t.Count_Throughput_3M) as Throughput_3M_Num,
		sum(t.Count_Throughput_1M) as Throughput_1M_Num,
		sum(0) as Throughput_128K_Num,
		sum(0) as Throughput_64K_Num,
		sum(0) as Throughput_384K_Num,
		--CAC 10/08/2017: thput de test sin error y con error
		sum(t.Count_Throughput_ALL) as Throughput_with_Error_Den,
		sum(t.Throughput_ALL*t.Count_Throughput_ALL) as Throughput_with_Error_Num,

		sum(0) as WEB_IP_ACCESS_TIME_NUM,			sum(0) as WEB_IP_ACCESS_TIME_DEN,	
		sum(0) as WEB_HTTP_TRANSFER_TIME_NUM,		sum(0) as WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_NUM,		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_NUM,		sum(0) as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,	sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,
		
		-- Technology:
		sum(te.[% GSM]*te.[Count_%GSM]) as Radio_2G_use_Num,
		sum(te.[% WCDMA]*te.[Count_%WCDMA]) as Radio_3G_use_Num,
		sum(te.[% LTE]*te.[Count_%LTE]) as Radio_4G_use_Num,
		sum(t.navegaciones*(isnull(te.[% GSM],0)+isnull(te.[% WCDMA],0)+isnull(te.[% LTE],0))) as Radio_use_Den,				-- Se usaria solo en NoCA_Device
		sum(te.[Count_%GSM]) as Radio_2G_use_Den,
		sum(te.[Count_%WCDMA]) as Radio_3G_use_Den,
		sum(te.[Count_%LTE]) as Radio_4G_use_Den,

		sum(te.[% U2100]*te.[Count_%U2100]) as Radio_U2100_use_Num,
		sum(te.[% U900]*te.[Count_%U900]) as Radio_U900_use_Num,
		sum(te.[% LTE2100]*te.[Count_%LTE2100]) as Radio_LTE2100_use_Num,
		sum(te.[% LTE2600]*te.[Count_%LTE2600]) as Radio_LTE2600_use_Num,
		sum(te.[% LTE1800]*te.[Count_%LTE1800]) as Radio_LTE1800_use_Num,
		sum(te.[% LTE800]*te.[Count_%LTE800]) as Radio_LTE800_use_Num,
		sum(t.navegaciones*(isnull(te.[% U2100],0)+isnull(te.[% U900],0)+isnull(te.[% LTE2100],0)+
							isnull(te.[% LTE2600],0)+isnull(te.[% LTE1800],0)+isnull(te.[% LTE800],0))) as Radio_Band_Use_Den,	-- Se usaria solo en NoCA_Device
		sum(te.[Count_%U2100]) as Radio_U2100_use_Den,
		sum(te.[Count_%U900]) as Radio_U900_use_Den,
		sum(te.[Count_%LTE2100]) as Radio_LTE2100_use_Den,
		sum(te.[Count_%LTE2600]) as Radio_LTE2600_use_Den,
		sum(te.[Count_%LTE1800]) as Radio_LTE1800_use_Den,
		sum(te.[Count_%LTE800]) as Radio_LTE800_use_Den,

		-- Solo en DL:
		sum(te.[% Dual Carrier]*te.[Count_Dual_Carrier]) as [3G_DualCarrier_use_Num],	sum(te.[Count_Dual_Carrier]) as [3G_DualCarrier_use_Den],
		sum(te.[%DC_U2100]*te.[Count_DC_U2100]) as [3G_DC_2100_use_Num],				sum(te.[Count_DC_U2100]) as [3G_DC_2100_use_Den],
		sum(te.[%DC_U900]*te.[Count_DC_U900]) as [3G_DC_900_use_Num],					sum(te.[Count_DC_U900]) as [3G_DC_900_use_Den],

		sum(te.[Num Codes]*te.[Count_Num_Codes]) as [3G_NumCodes_use_Num],
		sum(te.[Count_Num_Codes]) as [3G_NumCodes_use_Den],

		sum(te.[QPSK]*te.[Count_QPSK]) as [3G_QPSK_use_Num],
		sum(te.[16QAM]*te.[Count_16QAM]) as [3G_16QAM_use_Num],
		sum(te.[64QAM]*te.[Count_64QAM]) as [3G_64QAM_use_Num],
		sum(te.[Count_QPSK]) as [3G_QPSK_use_Den],
		sum(te.[Count_16QAM]) as [3G_16QAM_use_Den],
		sum(te.[Count_64QAM]) as [3G_64QAM_use_Den],

		-- Solo en UL:
		sum(0) as [3G_%_SF22_Num],		sum(0) as [3G_%_SF22andSF42_Num],	sum(0) as [3G_%_SF4_Num],	sum(0) as [3G_%_SF42_Num],
		sum(0) as [3G_%_SF22_Den],		sum(0) as [3G_%_SF22andSF42_Den],	sum(0) as [3G_%_SF4_Den],	sum(0) as [3G_%_SF42_Den],
		sum(0) as [3G_%_TTI2ms_Num],	sum(0) as [3G_%_TTI2ms_Den],

		-- Ambos:
		sum(te.[RSCP_Lin]*te.[Count_RSCP_Lin]) as [RSCP_Lin_Num],
		sum(te.[EcI0_Lin]*te.[Count_EcI0_Lin]) as [EcI0_Lin_Num],	
		sum(te.[Count_RSCP_Lin]) as [RSCP_Lin_Den],	
		sum(te.[Count_EcI0_Lin]) as [EcI0_Lin_Den],	

		-- Performance:
		sum(pf.CQI*(isnull(pf.count_cqi_u2100,0)+isnull(pf.count_cqi_u900,0))) [3G_CQI],
		sum((isnull(pf.count_cqi_u2100,0)+isnull(pf.count_cqi_u900,0))) as [3G_DataStats_Den],
		Sum(pfl.CQI_U900*isnull(pfl.count_cqi_u900,0)) as CQI_U900_Num,
		sum(isnull(pfl.count_cqi_u900,0)) as CQI_U900_Den,
		Sum(pfl.CQI_U2100*isnull(pfl.count_cqi_u2100,0)) as CQI_U2100_Num,
		sum(isnull(pfl.count_cqi_u2100,0)) as CQI_U2100_Den,

		sum(pf.[HSPA_PCT]*pf.[Count_HSPA]) as [HSPA_PCT_Num],
		sum(pf.[HSPA+_PCT]*pf.[Count_HSPA+]) as [HSPA+_PCT_Num],
		sum(pf.[HSPA+_DC_PCT]*pf.[Count_HSPA+_DC]) as [HSPA+_DC_PCT_Num],
		sum(pf.[Count_HSPA]) as [HSPA_PCT_Den],
		sum(pf.[Count_HSPA+]) as [HSPA+_PCT_Den],
		sum(pf.[Count_HSPA+_DC]) as [HSPA+_DC_PCT_Den],

		sum(pf.[UL_Inter_Lin]*pf.[Count_UL_Inter]) as [UL_Inter_Lin_Num],
		sum(pf.[Count_UL_Inter]) as [UL_Inter_Lin_Den],	
	
		-- Performance LTE:
		sum(pfl.[Count_CQI_4G]*pfl.[CQI_4G]) as CQI_4G_Num,
		sum(pfl.Count_CQI_L800*pfl.CQI_L800) as CQI_L800_Num,
		sum(pfl.Count_CQI_L1800*pfl.CQI_L1800) as CQI_L1800_Num,
		sum(pfl.Count_CQI_L2100*pfl.CQI_L2100) as CQI_L2100_Num,
		sum(pfl.Count_CQI_L2600*pfl.CQI_L2600) as CQI_L2600_Num,
		sum(pfl.[Count_CQI_4G]) as CQI_4G_Den,
		sum(pfl.Count_CQI_L800) as CQI_L800_Den,
		sum(pfl.Count_CQI_L1800) as CQI_L1800_Den,
		sum(pfl.Count_CQI_L2100) as CQI_L2100_Den,
		sum(pfl.Count_CQI_L2600) as CQI_L2600_Den,

		sum(pfl.Count_LTE_5Mhz_SC *pfl.LTE_5Mhz_SC_PCT) as LTE_5Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_10Mhz_SC*pfl.LTE_10Mhz_SC_PCT) as LTE_10Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_15Mhz_SC*pfl.LTE_15Mhz_SC_PCT) as LTE_15Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_20Mhz_SC*pfl.LTE_20Mhz_SC_PCT) as LTE_20Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_15Mhz_CA*pfl.LTE_15Mhz_CA_PCT) as LTE_15Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_20Mhz_CA*pfl.LTE_20Mhz_CA_PCT) as LTE_20Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_25Mhz_CA*pfl.LTE_25Mhz_CA_PCT) as LTE_25Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_30Mhz_CA*pfl.LTE_30Mhz_CA_PCT) as LTE_30Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_35Mhz_CA*pfl.LTE_35Mhz_CA_PCT) as LTE_35Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_40Mhz_CA*pfl.LTE_40Mhz_CA_PCT) as LTE_40Mhz_CA_Use_Num,	
		sum(pfl.Count_LTE_5Mhz_SC) as LTE_5Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_10Mhz_SC) as LTE_10Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_15Mhz_SC) as LTE_15Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_20Mhz_SC) as LTE_20Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_15Mhz_CA) as LTE_15Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_20Mhz_CA) as LTE_20Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_25Mhz_CA) as LTE_25Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_30Mhz_CA) as LTE_30Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_35Mhz_CA) as LTE_35Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_40Mhz_CA) as LTE_40Mhz_CA_Use_Den,	
	
		sum((isnull(pfl.Count_LTE_5Mhz_SC,0) 
		 --    +isnull(pfl.Count_LTE_10Mhz_SC,0) +isnull(pfl.Count_LTE_15Mhz_SC,0) +isnull(pfl.Count_LTE_20Mhz_SC,0) +
		 --    isnull(pfl.Count_LTE_15Mhz_CA,0) +isnull(pfl.Count_LTE_20Mhz_CA,0) +isnull(pfl.Count_LTE_25Mhz_CA,0) +isnull(pfl.Count_LTE_30Mhz_CA,0) +
		 --    isnull(pfl.Count_LTE_35Mhz_CA,0) +isnull(pfl.Count_LTE_40Mhz_CA,0)
			)
			*(
			pfl.LTE_5Mhz_SC_PCT+pfl.LTE_10Mhz_SC_PCT+pfl.LTE_15Mhz_SC_PCT+pfl.LTE_20Mhz_SC_PCT+pfl.LTE_15Mhz_CA_PCT+
			pfl.LTE_20Mhz_CA_PCT+pfl.LTE_25Mhz_CA_PCT+pfl.LTE_30Mhz_CA_PCT+pfl.LTE_35Mhz_CA_PCT+pfl.LTE_40Mhz_CA_PCT
			)) as LTE_BW_use_den,																						-- Se usaria solo en NoCA_Device

		sum(pfl.[ RBs]*pfl.[Count_RBs]) as [4G_RBs_use_Num],
		sum(pfl.[Count_RBs]) as [4G_RBs_use_Den],

		sum(pfl.[ % TM1]* ([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM1_use_Num],
		sum(pfl.[ % TM2]* ([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM2_use_Num],
		sum(pfl.[ % TM3]* ([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM3_use_Num],
		sum(pfl.[ % TM4]* ([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM4_use_Num],
		sum(pfl.[ % MIMO]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM5_use_Num],
		sum(pfl.[ % TM6]* ([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM6_use_Num],
		sum(pfl.[ % TM7]* ([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM7_use_Num],
		sum(0) as [4G_TM8_use_Num],
		sum(0) as [4G_TM9_use_Num],
		sum(pfl.[ % TM Invalid]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TMInvalid_use_Num],
		sum(pfl.[ % TM Unknown]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TMUnknown_use_Num],
		sum([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown]) as [4G_TM_Den],

		-- Technology LTE:
		sum(tel.[Count_%CA]*tel.[% CA]) as [4G_%CA_Num],
		sum(tel.[Count_%CA]) as [4G_%CA_Den],
		sum(0) as [4G_BPSK_Use_Num],
		sum((tel.QPSK/100.0)*tel.Count_QPSK) as [4G_QPSK_Use_Num],
		sum((tel.[16QAM]/100.0)*tel.Count_16QAM) as [4G_16QAM_Use_Num],
		sum((tel.[64QAM]/100.0)*tel.Count_64QAM) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],
		sum(tel.Count_QPSK) as [4G_QPSK_Use_Den],
		sum(tel.Count_16QAM) as [4G_16QAM_Use_Den],
		sum(tel.Count_64QAM) as [4G_64QAM_Use_Den],

		sum((isnull(pfl.Count_CQI_L800,0)+isnull(pfl.Count_CQI_L1800,0)+isnull(pfl.Count_CQI_L2100,0)+
			 isnull(pfl.Count_CQI_L2600,0))*(isnull(tel.[64QAM]/100.0,0)+isnull(tel.[16QAM]/100.0,0)+isnull(tel.QPSK/100.0,0)))  as [4G_stats_Den],			-- Se usaria solo en NoCA_Device

		sum(tel.[RSRP_Lin]*tel.[Count_RSRP_Lin]) as [RSRP_Lin_Num],
		sum(tel.[RSRQ_Lin]*tel.[Count_RSRQ_Lin]) as [RSRQ_Lin_Num],	
		sum(tel.[SINR_Lin]*tel.[Count_SINR_Lin]) as [SINR_Lin_Num],	
		sum(tel.[Count_RSRP_Lin]) as [RSRP_Lin_Den],	
		sum(tel.[Count_RSRQ_Lin]) as [RSRQ_Lin_Den],	
		sum(tel.[Count_SINR_Lin]) as [SINR_Lin_Den],	

		-- New KPIs:
		sum(newk.[MIMO_CE_num]) as [MIMO_num],
		sum(newk.[RI1_CE_num]) as [RI1_num],
		sum(newk.[RI2_CE_num]) as [RI2_num],
		sum(newk.[MIMO_CE_den]) as [MIMO_den],
		sum(newk.[RI1_CE_den]) as [RI1_den],
		sum(newk.[RI2_CE_den]) as [RI2_den],
		sum(newk.Count_RBs_CE) as RBs_Allocated_Den,
		sum(newk.Count_RBs_CE*isnull(newk.[RBs CE],0)) as RBs_Allocated_Num,
		max(newk.[Max RBs CE]) as RBs_Allocated_Max,

		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:
		sum(tLTE.[ 0-2Mbps_N ]) as [1_N],		sum(tLTE.[ 2-4Mbps_N ]) as [2_N],		sum(tLTE.[ 4-6Mbps_N ]) as [3_N],		sum(tLTE.[ 6-8Mbps_N ]) as [4_N],		sum(tLTE.[ 8-10Mbps_N ]) as [5_N],
		sum(tLTE.[ 10-12Mbps_N ]) as [6_N],		sum(tLTE.[ 12-14Mbps_N ]) as [7_N],		sum(tLTE.[ 14-16Mbps_N ]) as [8_N],		sum(tLTE.[ 16-18Mbps_N ]) as [9_N],		sum(tLTE.[ 18-20Mbps_N ]) as [10_N],
		sum(tLTE.[ 20-22Mbps_N ]) as [11_N],	sum(tLTE.[ 22-24Mbps_N ]) as [12_N],	sum(tLTE.[ 24-26Mbps_N ]) as [13_N],	sum(tLTE.[ 26-28Mbps_N ]) as [14_N],	sum(tLTE.[ 28-30Mbps_N ]) as [15_N],
		sum(tLTE.[ 30-32Mbps_N ]) as [16_N],	sum(tLTE.[ 32-34Mbps_N ]) as [17_N],	sum(tLTE.[ 34-36Mbps_N ]) as [18_N],	sum(tLTE.[ 36-38Mbps_N ]) as [19_N],	sum(tLTE.[ 38-40Mbps_N ]) as [20_N],
		sum(tLTE.[ 40-42Mbps_N ]) as [21_N],	sum(tLTE.[ 42-44Mbps_N ]) as [22_N],	sum(tLTE.[ 44-46Mbps_N ]) as [23_N],	sum(tLTE.[ 46-48Mbps_N ]) as [24_N],	sum(tLTE.[ 48-50Mbps_N ]) as [25_N],
		sum(tLTE.[ 50-52Mbps_N ]) as [26_N],	sum(tLTE.[ 52-54Mbps_N ]) as [27_N],	sum(tLTE.[ 54-56Mbps_N ]) as [28_N],	sum(tLTE.[ 56-58Mbps_N ]) as [29_N],	sum(tLTE.[ 58-60Mbps_N ]) as [30_N],
		sum(tLTE.[ 60-62Mbps_N ]) as [31_N],	sum(tLTE.[ 62-64Mbps_N ]) as [32_N],	sum(tLTE.[ 64-66Mbps_N ]) as [33_N],	sum(tLTE.[ 66-68Mbps_N ]) as [34_N],	sum(tLTE.[ 68-70Mbps_N ]) as [35_N],
		sum(tLTE.[ 70-72Mbps_N ]) as [36_N],	sum(tLTE.[ 72-74Mbps_N ]) as [37_N],	sum(tLTE.[ 74-76Mbps_N ]) as [38_N],	sum(tLTE.[ 76-78Mbps_N ]) as [39_N],	sum(tLTE.[ 78-80Mbps_N ]) as [40_N],
		sum(tLTE.[ 80-82Mbps_N ]) as [41_N],	sum(tLTE.[ 82-84Mbps_N ]) as [42_N],	sum(tLTE.[ 84-86Mbps_N ]) as [43_N],	sum(tLTE.[ 86-88Mbps_N ]) as [44_N],	sum(tLTE.[ 88-90Mbps_N ]) as [45_N],
		sum(tLTE.[ 90-92Mbps_N ]) as [46_N],	sum(tLTE.[ 92-94Mbps_N ]) as [47_N],	sum(tLTE.[ 94-96Mbps_N ]) as [48_N],	sum(tLTE.[ 96-98Mbps_N ]) as [49_N],	sum(tLTE.[ 98-100Mbps_N ]) as [50_N],
		sum(tLTE.[ >100Mbps_N]) as [51_N],	
		null as [52_N],	null as [53_N],	null as [54_N],	null as [55_N],	null as [56_N],	null as [57_N],	null as [58_N],	null as [59_N],	null as [60_N],
		null as [61_N],	null as [62_N],	null as [63_N],	null as [64_N],	null as [65_N],	null as [66_N]
	
		--null as Region_Road_VF, null as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,sum(tLTE.[ 0-5Mbps]) as [1]		,sum(tLTE.[ 5-10Mbps]) as [2]		,sum(tLTE.[ 10-15Mbps]) as [3]		,sum(tLTE.[ 15-20Mbps]) as [4]		,sum(tLTE.[ 20-25Mbps]) as [5]
		,sum(tLTE.[ 25-30Mbps]) as [6]		,sum(tLTE.[ 30-35Mbps]) as [7]		,sum(tLTE.[ 35-40Mbps]) as [8]		,sum(tLTE.[ 40-45Mbps]) as [9]		,sum(tLTE.[ 45-50Mbps]) as [10]
		,sum(tLTE.[ 50-55Mbps]) as [11]		,sum(tLTE.[ 55-60Mbps]) as [12]		,sum(tLTE.[ 60-65Mbps]) as [13]		,sum(tLTE.[ 65-70Mbps]) as [14]		,sum(tLTE.[ 70-75Mbps]) as [15]
		,sum(tLTE.[ 75-80Mbps]) as [16]		,sum(tLTE.[ 80-85Mbps]) as [17]		,sum(tLTE.[ 85-90Mbps]) as [18]		,sum(tLTE.[ 90-95Mbps]) as [19]		,sum(tLTE.[ 95-100Mbps]) as [20]
		,sum(tLTE.[ 100-105Mbps]) as [21]	,sum(tLTE.[ 105-110Mbps]) as [22]	,sum(tLTE.[ 110-115Mbps]) as [23]	,sum(tLTE.[ 115-120Mbps]) as [24]	,sum(tLTE.[ 120-125Mbps]) as [25]
		,sum(tLTE.[ 125-130Mbps]) as [26]	,sum(tLTE.[ 130-135Mbps]) as [27]	,sum(tLTE.[ 135-140Mbps]) as [28]	,sum(tLTE.[ 140-145Mbps]) as [29]	,sum(tLTE.[ 145-150Mbps]) as [30]
		,sum(tLTE.[ >150Mbps]) as [31]
		,null as [32]	,null as [33]	,null as [34]	,null as [35]	,null as [36]	,null as [37]	,null as [38]	,null as [39]	,null as [40]	,null as [41],

		-- Parametros de configuracion:
		pfl.ASideDevice as ASideDevice, pfl.BSideDevice as BSideDevice, pfl.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_DL_Thput_CE] t
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_DL_Performance_CE] pf
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(pf.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=pf.mnc and t.Date_Reporting=pf.Date_Reporting and t.entidad=pf.entidad and t.Aggr_Type=pf.Aggr_Type and t.Report_Type=pf.Report_Type and t.meas_round=pf.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_DL_Technology_CE] te
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(te.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=te.mnc and t.Date_Reporting=te.Date_Reporting and t.entidad=te.entidad and t.Aggr_Type=te.Aggr_Type and t.Report_Type=te.Report_Type and t.meas_round=te.meas_round
				left outer join  [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_DL_Performance_CE_LTE] pfl
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(pfl.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=pfl.mnc and t.Date_Reporting=pfl.Date_Reporting and t.entidad=pfl.entidad and t.Aggr_Type=pfl.Aggr_Type and t.Report_Type=pfl.Report_Type and t.meas_round=pfl.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_DL_Technology_CE_LTE] tel
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(tel.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=tel.mnc and t.Date_Reporting=tel.Date_Reporting and t.entidad=tel.entidad and t.Aggr_Type=tel.Aggr_Type and t.Report_Type=tel.Report_Type and t.meas_round=tel.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_DL_Thput_CE_4G] O4G
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(O4G.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=O4G.mnc and t.Date_Reporting=O4G.Date_Reporting and t.entidad=O4G.entidad and t.Aggr_Type=O4G.Aggr_Type and t.Report_Type=O4G.Report_Type and t.meas_round=O4G.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_NEW_KPIs_DL_LTE] newk
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(newk.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=newk.mnc and t.Date_Reporting=newk.Date_Reporting and t.entidad=newk.entidad and t.Aggr_Type=newk.Aggr_Type and t.Report_Type=newk.Report_Type and t.meas_round=newk.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_DL_Thput_CE_LTE] tLTE
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(tLTE.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=tLTE.mnc and t.Date_Reporting=tLTE.Date_Reporting and t.entidad=tLTE.entidad and t.Aggr_Type=tLTE.Aggr_Type and t.Report_Type=tLTE.Report_Type and t.meas_round=tLTE.meas_round
				, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end,
		t.mnc,t.meas_round,t.Date_Reporting,t.Week_Reporting,t.entidad,t.Report_Type,t.Aggr_Type,
		pfl.ASideDevice, pfl.BSideDevice, pfl.SWVersion--, t.Region_VF, t.Region_OSP
	

	-------------
	union all
	select  
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment,t.mnc,t.meas_round,t.Date_Reporting as meas_date,t.Week_Reporting as meas_week, 
		'4G' as meas_Tech, 'NC_DL' as Test_type, 'Downlink' as Direction, t.entidad as vf_entity,t.Report_Type,t.Aggr_Type,
	
		-- General:
		sum(t.navegaciones) as Num_tests,
		sum(t.[fallos de acceso]) as Failed,
		sum(t.[fallos de descarga]) as Dropped,
		sum(0) as Session_time_Num,
		sum(t.count_throughput) as Throughput_Den,
		sum(0) as Session_time_Den,
		sum(t.Throughput*t.count_throughput) as Throughput_Num,
		max(t.[Throughput Max]) as Throughput_Max,
		sum(t.Count_Throughput_3M) as Throughput_3M_Num,
		sum(t.Count_Throughput_1M) as Throughput_1M_Num,
		sum(t.Count_Throughput_128k) as Throughput_128K_Num,
		sum(0) as Throughput_64K_Num,
		sum(t.Count_Throughput_384k) as Throughput_384K_Num,
		--CAC 10/08/2017: thput de test sin error y con error
		sum(t.Count_Throughput_ALL) as Throughput_with_Error_Den,
		sum(t.Throughput_ALL*t.Count_Throughput_ALL) as Throughput_with_Error_Num,

		sum(0) as WEB_IP_ACCESS_TIME_NUM,			sum(0) as WEB_IP_ACCESS_TIME_DEN,	
		sum(0) as WEB_HTTP_TRANSFER_TIME_NUM,		sum(0) as WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_NUM,		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_NUM,		sum(0) as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,	sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(te.[% GSM]*te.[Count_%GSM]) as Radio_2G_use_Num,
		sum(te.[% WCDMA]*te.[Count_%WCDMA]) as Radio_3G_use_Num,
		sum(te.[% LTE]*te.[Count_%LTE]) as Radio_4G_use_Num,
		sum(t.navegaciones*(isnull(te.[% GSM],0)+isnull(te.[% WCDMA],0)+isnull(te.[% LTE],0))) as Radio_use_Den,				-- Se usaria solo en NoCA_Device
		sum(te.[Count_%GSM]) as Radio_2G_use_Den,
		sum(te.[Count_%WCDMA]) as Radio_3G_use_Den,
		sum(te.[Count_%LTE]) as Radio_4G_use_Den,

		sum(te.[% U2100]*te.[Count_%U2100]) as Radio_U2100_use_Num,
		sum(te.[% U900]*te.[Count_%U900]) as Radio_U900_use_Num,
		sum(te.[% LTE2100]*te.[Count_%LTE2100]) as Radio_LTE2100_use_Num,
		sum(te.[% LTE2600]*te.[Count_%LTE2600]) as Radio_LTE2600_use_Num,
		sum(te.[% LTE1800]*te.[Count_%LTE1800]) as Radio_LTE1800_use_Num,
		sum(te.[% LTE800]*te.[Count_%LTE800]) as Radio_LTE800_use_Num,
		sum(t.navegaciones*(isnull(te.[% U2100],0)+isnull(te.[% U900],0)+isnull(te.[% LTE2100],0)+
							isnull(te.[% LTE2600],0)+isnull(te.[% LTE1800],0)+isnull(te.[% LTE800],0))) as Radio_Band_Use_Den,	-- Se usaria solo en NoCA_Device
		sum(te.[Count_%U2100]) as Radio_U2100_use_Den,
		sum(te.[Count_%U900]) as Radio_U900_use_Den,
		sum(te.[Count_%LTE2100]) as Radio_LTE2100_use_Den,
		sum(te.[Count_%LTE2600]) as Radio_LTE2600_use_Den,
		sum(te.[Count_%LTE1800]) as Radio_LTE1800_use_Den,
		sum(te.[Count_%LTE800]) as Radio_LTE800_use_Den,

		-- Solo en DL:
		sum(te.[% Dual Carrier]*te.[Count_Dual_Carrier]) as [3G_DualCarrier_use_Num],
		sum(te.[Count_Dual_Carrier]) as [3G_DualCarrier_use_Den],
		sum(te.[%DC_U2100]*te.[Count_DC_U2100]) as [3G_DC_2100_use_Num],
		sum(te.[Count_DC_U2100]) as [3G_DC_2100_use_Den],
		sum(te.[%DC_U900]*te.[Count_DC_U900]) as [3G_DC_2100_use_Num],
		sum(te.[Count_DC_U900]) as [3G_DC_2100_use_Den],

		sum(te.[Num Codes]*te.[Count_Num_Codes]) as [3G_NumCodes_use_Num],
		sum(te.[Count_Num_Codes]) as [3G_NumCodes_use_Den],

		sum(te.[QPSK]*te.[Count_QPSK]) as [3G_QPSK_use_Num],
		sum(te.[16QAM]*te.[Count_16QAM]) as [3G_16QAM_use_Num],
		sum(te.[64QAM]*te.[Count_64QAM]) as [3G_64QAM_use_Num],
		sum(te.[Count_QPSK]) as [3G_QPSK_use_Den],
		sum(te.[Count_16QAM]) as [3G_16QAM_use_Den],
		sum(te.[Count_64QAM]) as [3G_64QAM_use_Den],

		-- Solo en UL:
		sum(0) as [3G_%_SF22_Num],		sum(0) as [3G_%_SF22andSF42_Num],	sum(0) as [3G_%_SF4_Num],	sum(0) as [3G_%_SF42_Num],
		sum(0) as [3G_%_SF22_Den],		sum(0) as [3G_%_SF22andSF42_Den],	sum(0) as [3G_%_SF4_Den],	sum(0) as [3G_%_SF42_Den],
		sum(0) as [3G_%_TTI2ms_Num],	sum(0) as [3G_%_TTI2ms_Den],	
	
		-- Ambos:
		sum(te.[RSCP_Lin]*te.[Count_RSCP_Lin]) as [RSCP_Lin_Num],
		sum(te.[EcI0_Lin]*te.[Count_EcI0_Lin]) as [EcI0_Lin_Num],	
		sum(te.[Count_RSCP_Lin]) as [RSCP_Lin_Den],	
		sum(te.[Count_EcI0_Lin]) as [EcI0_Lin_Den],	

		-- Performance:
		sum(pf.CQI*(isnull(pf.count_cqi_u2100,0)+isnull(pf.count_cqi_u900,0))) [3G_CQI],
		sum((isnull(pf.count_cqi_u2100,0)+isnull(pf.count_cqi_u900,0))) as [3G_DataStats_Den],
		Sum(pfl.CQI_U900*isnull(pfl.count_cqi_u900,0)) as CQI_U900_Num,
		sum(isnull(pfl.count_cqi_u900,0)) as CQI_U900_Den,
		Sum(pfl.CQI_U2100*isnull(pfl.count_cqi_u2100,0)) as CQI_U2100_Num,
		sum(isnull(pfl.count_cqi_u2100,0)) as CQI_U2100_Den,

		sum(pf.[HSPA_PCT]*pf.[Count_HSPA]) as [HSPA_PCT_Num],
		sum(pf.[HSPA+_PCT]*pf.[Count_HSPA+]) as [HSPA+_PCT_Num],
		sum(pf.[HSPA+_DC_PCT]*pf.[Count_HSPA+_DC]) as [HSPA+_DC_PCT_Num],
		sum(pf.[Count_HSPA]) as [HSPA_PCT_Den],
		sum(pf.[Count_HSPA+]) as [HSPA+_PCT_Den],
		sum(pf.[Count_HSPA+_DC]) as [HSPA+_DC_PCT_Den],

		sum(pf.[UL_Inter_Lin]*pf.[Count_UL_Inter]) as [UL_Inter_Lin_Num],
		sum(pf.[Count_UL_Inter]) as [UL_Inter_Lin_Den],	
	
		-- Performance LTE:
		-- Solo en DL:
		sum(pfl.[Count_CQI_4G]*pfl.[CQI_4G]) as CQI_4G_Num,
		sum(pfl.Count_CQI_L800*pfl.CQI_L800) as CQI_L800_Num,
		sum(pfl.Count_CQI_L1800*pfl.CQI_L1800) as CQI_L1800_Num,
		sum(pfl.Count_CQI_L2100*pfl.CQI_L2100) as CQI_L2100_Num,
		sum(pfl.Count_CQI_L2600*pfl.CQI_L2600) as CQI_L2600_Num,
		sum(pfl.[Count_CQI_4G]) as CQI_4G_Den,
		sum(pfl.Count_CQI_L800) as CQI_L800_Den,
		sum(pfl.Count_CQI_L1800) as CQI_L1800_Den,
		sum(pfl.Count_CQI_L2100) as CQI_L2100_Den,
		sum(pfl.Count_CQI_L2600) as CQI_L2600_Den,

		sum(pfl.Count_LTE_5Mhz_SC *pfl.LTE_5Mhz_SC_PCT) as LTE_5Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_10Mhz_SC*pfl.LTE_10Mhz_SC_PCT) as LTE_10Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_15Mhz_SC*pfl.LTE_15Mhz_SC_PCT) as LTE_15Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_20Mhz_SC*pfl.LTE_20Mhz_SC_PCT) as LTE_20Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_15Mhz_CA*pfl.LTE_15Mhz_CA_PCT) as LTE_15Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_20Mhz_CA*pfl.LTE_20Mhz_CA_PCT) as LTE_20Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_25Mhz_CA*pfl.LTE_25Mhz_CA_PCT) as LTE_25Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_30Mhz_CA*pfl.LTE_30Mhz_CA_PCT) as LTE_30Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_35Mhz_CA*pfl.LTE_35Mhz_CA_PCT) as LTE_35Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_40Mhz_CA*pfl.LTE_40Mhz_CA_PCT) as LTE_40Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_5Mhz_SC) as LTE_5Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_10Mhz_SC) as LTE_10Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_15Mhz_SC) as LTE_15Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_20Mhz_SC) as LTE_20Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_15Mhz_CA) as LTE_15Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_20Mhz_CA) as LTE_20Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_25Mhz_CA) as LTE_25Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_30Mhz_CA) as LTE_30Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_35Mhz_CA) as LTE_35Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_40Mhz_CA) as LTE_40Mhz_CA_Use_Den,	
			
		sum((isnull(pfl.Count_LTE_5Mhz_SC,0) 
		 --    +isnull(pfl.Count_LTE_10Mhz_SC,0) +isnull(pfl.Count_LTE_15Mhz_SC,0) +isnull(pfl.Count_LTE_20Mhz_SC,0) +
		 --    isnull(pfl.Count_LTE_15Mhz_CA,0) +isnull(pfl.Count_LTE_20Mhz_CA,0) +isnull(pfl.Count_LTE_25Mhz_CA,0) +isnull(pfl.Count_LTE_30Mhz_CA,0) +
		 --    isnull(pfl.Count_LTE_35Mhz_CA,0) +isnull(pfl.Count_LTE_40Mhz_CA,0)
			)
			*(
			pfl.LTE_5Mhz_SC_PCT+pfl.LTE_10Mhz_SC_PCT+pfl.LTE_15Mhz_SC_PCT+pfl.LTE_20Mhz_SC_PCT+pfl.LTE_15Mhz_CA_PCT+
			pfl.LTE_20Mhz_CA_PCT+pfl.LTE_25Mhz_CA_PCT+pfl.LTE_30Mhz_CA_PCT+pfl.LTE_35Mhz_CA_PCT+pfl.LTE_40Mhz_CA_PCT
			)) as LTE_BW_use_den,
		sum(pfl.[ RBs]*pfl.[Count_RBs]) as [4G_RBs_use_Num],
		sum(pfl.[Count_RBs]) as [4G_RBs_use_Den],

		sum(pfl.[ % TM1]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM1_use_Num],
		sum(pfl.[ % TM2]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM2_use_Num],
		sum(pfl.[ % TM3]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM3_use_Num],
		sum(pfl.[ % TM4]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM4_use_Num],
		sum(pfl.[ % MIMO]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM5_use_Num],
		sum(pfl.[ % TM6]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM6_use_Num],
		sum(pfl.[ % TM7]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM7_use_Num],
		sum(0) as [4G_TM8_use_Num],
		sum(0) as [4G_TM9_use_Num],
		sum(pfl.[ % TM Invalid]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TMInvalid_use_Num],
		sum(pfl.[ % TM Unknown]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TMUnknown_use_Num],
		sum([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown]) as [4G_TM_Den],

		-- Technology LTE:
		sum(tel.[Count_%CA]*tel.[% CA]) as [4G_%CA_Num],
		sum(tel.[Count_%CA]) as [4G_%CA_Den],
		sum(0) as [4G_BPSK_Use_Num],
		sum((tel.QPSK/100.0)*tel.Count_QPSK) as [4G_QPSK_Use_Num],
		sum((tel.[16QAM]/100.0)*tel.Count_16QAM) as [4G_16QAM_Use_Num],
		sum((tel.[64QAM]/100.0)*tel.Count_64QAM) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],
		sum(tel.Count_QPSK) as [4G_QPSK_Use_Den],
		sum(tel.Count_16QAM) as [4G_16QAM_Use_Den],
		sum(tel.Count_64QAM) as [4G_64QAM_Use_Den],
	
		sum((isnull(pfl.Count_CQI_L800,0)+isnull(pfl.Count_CQI_L1800,0)+isnull(pfl.Count_CQI_L2100,0)+isnull(pfl.Count_CQI_L2600,0))*(isnull(tel.[64QAM]/100.0,0)+isnull(tel.[16QAM]/100.0,0)+isnull(tel.QPSK/100.0,0))) as [4G_stats_Den],

		sum(tel.[RSRP_Lin]*tel.[Count_RSRP_Lin]) as [RSRP_Lin_Num],
		sum(tel.[RSRQ_Lin]*tel.[Count_RSRQ_Lin]) as [RSRQ_Lin_Num],	
		sum(tel.[SINR_Lin]*tel.[Count_SINR_Lin]) as [SINR_Lin_Num],	
		sum(tel.[Count_RSRP_Lin]) as [RSRP_Lin_Den],	
		sum(tel.[Count_RSRQ_Lin]) as [RSRQ_Lin_Den],	
		sum(tel.[Count_SINR_Lin]) as [SINR_Lin_Den],

		-- New KPIs:
		sum(newk.[MIMO_NC_num]) as [MIMO_num],
		sum(newk.[RI1_NC_num]) as [RI1_num],
		sum(newk.[RI2_NC_num]) as [RI2_num],

		sum(newk.[MIMO_NC_den]) as [MIMO_den],
		sum(newk.[RI1_NC_den]) as [RI1_den],
		sum(newk.[RI2_NC_den]) as [RI2_den],

		sum(newk.Count_RBs_NC) as RBs_Allocated_Den,
		sum(newk.Count_RBs_NC*isnull(newk.[RBs NC],0)) as RBs_Allocated_Num,
		max(newk.[Max RBs NC]) as RBs_Allocated_Max,

		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		sum(tLTE.[ 0-3.5Mbps_N ]) as [1_N],		sum(tLTE.[ 3.5-7Mbps_N ]) as [2_N],		sum(tLTE.[ 7-10.5Mbps_N ]) as [3_N],		sum(tLTE.[ 10.5-14Mbps_N ]) as [4_N],		sum(tLTE.[ 14-17.5Mbps_N ]) as [5_N],
		sum(tLTE.[ 17.5-21Mbps_N ]) as [6_N],	sum(tLTE.[ 21-24.5Mbps_N ]) as [7_N],	sum(tLTE.[ 24.5-28Mbps_N ]) as [8_N],		sum(tLTE.[ 28-31.5Mbps_N ]) as [9_N],		sum(tLTE.[ 31.5-35Mbps_N ]) as [10_N],
		sum(tLTE.[ 35-38.5Mbps_N ]) as [11_N],	sum(tLTE.[ 38.5-42Mbps_N ]) as [12_N],	sum(tLTE.[ 42-45.5Mbps_N ]) as [13_N],	sum(tLTE.[ 45.5-49Mbps_N ]) as [14_N],	sum(tLTE.[ 49-52.5Mbps_N ]) as [15_N],
		sum(tLTE.[ 52.5-56Mbps_N ]) as [16_N],	sum(tLTE.[ 56-59.5Mbps_N ]) as [17_N],	sum(tLTE.[ 59.5-63Mbps_N ]) as [18_N],	sum(tLTE.[ 63-66.5Mbps_N ]) as [19_N],	sum(tLTE.[ 66.5-70Mbps_N ]) as [20_N],
		sum(tLTE.[ 70-73.5Mbps_N ]) as [21_N],	sum(tLTE.[ 73.5-77Mbps_N ]) as [22_N],	sum(tLTE.[ 77-80.5Mbps_N ]) as [23_N],	sum(tLTE.[ 80.5-84Mbps_N ]) as [24_N],	sum(tLTE.[ 84-87.5Mbps_N ]) as [25_N],
		sum(tLTE.[ 87.5-91Mbps_N ]) as [26_N],	sum(tLTE.[ 91-94.5Mbps_N ]) as [27_N],	sum(tLTE.[ 94.5-98Mbps_N ]) as [28_N],	sum(tLTE.[ 98-101.5Mbps_N ]) as [29_N],	sum(tLTE.[ 101.5-105Mbps_N ]) as [30_N],
		sum(tLTE.[ 105-108.5Mbps_N ]) as [31_N],	sum(tLTE.[ 108.5-112Mbps_N ]) as [32_N],	sum(tLTE.[ 112-115.5Mbps_N ]) as [33_N],	sum(tLTE.[ 115.5-119Mbps_N ]) as [34_N],	sum(tLTE.[ 119-122.5Mbps_N ]) as [35_N],
		sum(tLTE.[ 122.5-126Mbps_N ]) as [36_N],	sum(tLTE.[ 126-129.5Mbps_N ]) as [37_N],	sum(tLTE.[ 129.5-133Mbps_N ]) as [38_N],	sum(tLTE.[ 133-136.5Mbps_N ]) as [39_N],	sum(tLTE.[ 136.5-140Mbps_N ]) as [40_N],
		sum(tLTE.[ 140-143.5Mbps_N ]) as [41_N],	sum(tLTE.[ 143.5-147Mbps_N ]) as [42_N],	sum(tLTE.[ 147-150.5Mbps_N ]) as [43_N],	sum(tLTE.[ 150.5-154Mbps_N ]) as [44_N],	sum(tLTE.[ 154-157.5Mbps_N ]) as [45_N],
		sum(tLTE.[ 157.5-161Mbps_N ]) as [46_N],	sum(tLTE.[ 161-164.5Mbps_N ]) as [47_N],	sum(tLTE.[ 164.5-168Mbps_N ]) as [48_N],	sum(tLTE.[ 168-171.5Mbps_N ]) as [49_N],	sum(tLTE.[ 171.5-175Mbps_N ]) as [50_N],
		sum(tLTE.[ 175-178.5Mbps_N ]) as [51_N],	sum(tLTE.[ 178.5-182Mbps_N ]) as [52_N],	sum(tLTE.[ 182-185.5Mbps_N ]) as [53_N],	sum(tLTE.[ 185.5-189Mbps_N ]) as [54_N],	sum(tLTE.[ 189-192.5Mbps_N ]) as [55_N],
		sum(tLTE.[ 192.5-196Mbps_N ]) as [56_N],	sum(tLTE.[ >196Mbps_N ]) as [57_N],
		null as [58_N],	null as [59_N],	null as [60_N],	null as [61_N],	null as [62_N],	null as [63_N],	null as [64_N],	null as [65_N],	null as [66_N]
	
		--null as Region_Road_VF, null as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,sum(tLTE.[ 0-5Mbps]) as [1]		,sum(tLTE.[ 5-10Mbps]) as [2]		,sum(tLTE.[ 10-15Mbps]) as [3]		,sum(tLTE.[ 15-20Mbps]) as [4]		,sum(tLTE.[ 20-25Mbps]) as [5]
		,sum(tLTE.[ 25-30Mbps]) as [6]		,sum(tLTE.[ 30-35Mbps]) as [7]		,sum(tLTE.[ 35-40Mbps]) as [8]		,sum(tLTE.[ 40-45Mbps]) as [9]		,sum(tLTE.[ 45-50Mbps]) as [10]
		,sum(tLTE.[ 50-55Mbps]) as [11]		,sum(tLTE.[ 55-60Mbps]) as [12]		,sum(tLTE.[ 60-65Mbps]) as [13]		,sum(tLTE.[ 65-70Mbps]) as [14]		,sum(tLTE.[ 70-75Mbps]) as [15]
		,sum(tLTE.[ 75-80Mbps]) as [16]		,sum(tLTE.[ 80-85Mbps]) as [17]		,sum(tLTE.[ 85-90Mbps]) as [18]		,sum(tLTE.[ 90-95Mbps]) as [19]		,sum(tLTE.[ 95-100Mbps]) as [20]
		,sum(tLTE.[ 100-105Mbps]) as [21]	,sum(tLTE.[ 105-110Mbps]) as [22]	,sum(tLTE.[ 110-115Mbps]) as [23]	,sum(tLTE.[ 115-120Mbps]) as [24]	,sum(tLTE.[ 120-125Mbps]) as [25]
		,sum(tLTE.[ 125-130Mbps]) as [26]	,sum(tLTE.[ 130-135Mbps]) as [27]	,sum(tLTE.[ 135-140Mbps]) as [28]	,sum(tLTE.[ 140-145Mbps]) as [29]	,sum(tLTE.[ 145-150Mbps]) as [30]
		,sum(tLTE.[ >150Mbps]) as [31]
		,null as [32]	,null as [33]	,null as [34]	,null as [35]	,null as [36]	,null as [37]	,null as [38]	,null as [39]	,null as [40]	,null as [41],

		-- Parametros de configuracion:
		pfl.ASideDevice as ASideDevice, pfl.BSideDevice as BSideDevice, pfl.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from	[AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_DL_Thput_NC] t
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_DL_Performance_NC] pf
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(pf.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=pf.mnc and t.Date_Reporting=pf.Date_Reporting and t.entidad=pf.entidad and t.Aggr_Type=pf.Aggr_Type and t.Report_Type=pf.Report_Type and t.meas_round=pf.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_DL_Technology_NC] te
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(te.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=te.mnc and t.Date_Reporting=te.Date_Reporting and t.entidad=te.entidad and t.Aggr_Type=te.Aggr_Type and t.Report_Type=te.Report_Type and t.meas_round=te.meas_round 
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_DL_Performance_NC_LTE] pfl
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(pfl.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=pfl.mnc and t.Date_Reporting=pfl.Date_Reporting and t.entidad=pfl.entidad and t.Aggr_Type=pfl.Aggr_Type and t.Report_Type=pfl.Report_Type and t.meas_round=pfl.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_DL_Technology_NC_LTE] tel
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(tel.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=tel.mnc and t.Date_Reporting=tel.Date_Reporting and t.entidad=tel.entidad and t.Aggr_Type=tel.Aggr_Type and t.Report_Type=tel.Report_Type and t.meas_round=tel.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_DL_Thput_NC_4G] O4G
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(O4G.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=O4G.mnc and t.Date_Reporting=O4G.Date_Reporting and t.entidad=O4G.entidad and t.Aggr_Type=O4G.Aggr_Type and t.Report_Type=O4G.Report_Type and t.meas_round=O4G.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_NEW_KPIs_DL_LTE] newk
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(newk.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=newk.mnc and t.Date_Reporting=newk.Date_Reporting and t.entidad=newk.entidad and t.Aggr_Type=newk.Aggr_Type and t.Report_Type=newk.Report_Type and t.meas_round=newk.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_DL_Thput_NC_LTE] tLTE
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(tLTE.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=tLTE.mnc and t.Date_Reporting=tLTE.Date_Reporting and t.entidad=tLTE.entidad and t.Aggr_Type=tLTE.Aggr_Type and t.Report_Type=tLTE.Report_Type and t.meas_round=tLTE.meas_round
				, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end,
		t.mnc,t.meas_round,t.Date_Reporting,t.Week_Reporting,t.entidad,t.Report_Type,t.Aggr_Type,
		pfl.ASideDevice, pfl.BSideDevice, pfl.SWVersion--, t.Region_VF, t.Region_OSP

	-------------
	-- 4G - UL-CE/NC
	insert into _RI_Data_e 
	select  
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment,t.mnc,t.meas_round,t.Date_Reporting as meas_date,t.Week_Reporting as meas_week, 
		'4G' as meas_Tech, 'CE_UL' as Test_type, 'Uplink' as Direction, t.entidad as vf_entity,t.Report_Type,t.Aggr_Type,
	
		-- General:
		sum(t.Subidas) as Num_tests,
		sum(t.[fallos de acceso]) as Failed,
		sum(t.[fallos de descarga]) as Dropped,
		sum(t.[SessionTime]*t.Subidas) as Session_time_Num,
		--sum(t.[Tiempo de subida]*t.count_throughput) as Session_time_Num,	-- SESSION_TIME de DL/UL, calculado como TRANSFER_TIME - se haría el cambio al calculo correcto en cambio de metodología para evitar salto de valor en QLIK.
		sum(t.count_throughput) as Throughput_Den,
		sum(t.Subidas) as Session_time_Den,
		--sum(t.count_throughput) as Session_time_Den,
		sum(t.Throughput*t.count_throughput) as Throughput_Num,
		max(t.[Throughput Max]) as Throughput_Max,
		sum(0) as Throughput_3M_Num,
		sum(t.Count_Throughput_1M) as Throughput_1M_Num,
		sum(0) as Throughput_128K_Num,
		sum(0) as Throughput_64K_Num,
		sum(0) as Throughput_384K_Num,
		--CAC 10/08/2017: thput de test sin error y con error
		sum(t.Count_Throughput_ALL) as Throughput_with_Error_Den,
		sum(t.Throughput_ALL*t.Count_Throughput_ALL) as Throughput_with_Error_Num,

		sum(0) as WEB_IP_ACCESS_TIME_NUM,			sum(0) as WEB_IP_ACCESS_TIME_DEN,	
		sum(0) as WEB_HTTP_TRANSFER_TIME_NUM,		sum(0) as WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_NUM,		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_NUM,		sum(0) as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,	sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(te.[% GSM]*te.[Count_%GSM]) as Radio_2G_use_Num,
		sum(te.[% WCDMA]*te.[Count_%WCDMA]) as Radio_3G_use_Num,
		sum(te.[% LTE]*te.[Count_%LTE]) as Radio_4G_use_Num,
		sum(t.subidas*(isnull(te.[% GSM],0)+isnull(te.[% WCDMA],0)+isnull(te.[% LTE],0))) as Radio_use_Den,					-- Se usaria solo en NoCA_Device
		sum(te.[Count_%GSM]) as Radio_2G_use_Den,
		sum(te.[Count_%WCDMA]) as Radio_3G_use_Den,
		sum(te.[Count_%LTE]) as Radio_4G_use_Den,

		sum(te.[% U2100]*te.[Count_%U2100]) as Radio_U2100_use_Num,
		sum(te.[% U900]*te.[Count_%U900]) as Radio_U900_use_Num,
		sum(te.[% LTE2100]*te.[Count_%LTE2100]) as Radio_LTE2100_use_Num,
		sum(te.[% LTE2600]*te.[Count_%LTE2600]) as Radio_LTE2600_use_Num,
		sum(te.[% LTE1800]*te.[Count_%LTE1800]) as Radio_LTE1800_use_Num,
		sum(te.[% LTE800]*te.[Count_%LTE800]) as Radio_LTE800_use_Num,
		sum(t.subidas*(isnull(te.[% U2100],0)+isnull(te.[% U900],0)+isnull(te.[% LTE2100],0)+
						isnull(te.[% LTE2600],0)+isnull(te.[% LTE1800],0)+isnull(te.[% LTE800],0))) as Radio_Band_Use_Den,	-- Se usaria solo en NoCA_Device
		sum(te.[Count_%U2100]) as Radio_U2100_use_Den,
		sum(te.[Count_%U900]) as Radio_U900_use_Den,
		sum(te.[Count_%LTE2100]) as Radio_LTE2100_use_Den,
		sum(te.[Count_%LTE2600]) as Radio_LTE2600_use_Den,
		sum(te.[Count_%LTE1800]) as Radio_LTE1800_use_Den,
		sum(te.[Count_%LTE800]) as Radio_LTE800_use_Den,

		-- Solo en DL:
		sum(0) as [3G_DualCarrier_use_Num],		sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],			sum(0) as [3G_DC_2100_use_Den],
		sum(0) as [3G_DC_900_use_Num],			sum(0) as [3G_DC_900_use_Den],

		sum(0) as [3G_NumCodes_use_Num],	sum(0) as [3G_NumCodes_use_Den],
		sum(0) as [3G_QPSK_use_Num],		sum(0) as [3G_16QAM_use_Num],	sum(0) as [3G_64QAM_use_Num],
		sum(0) as [3G_QPSK_use_Den],		sum(0) as [3G_16QAM_use_Den],	sum(0) as [3G_64QAM_use_Den],

		-- Solo en UL:
		sum((te.[% SF22]/100.0)*te.[Count_%_SF22]) as [3G_%_SF22_Num],
		sum((te.[% SF22andSF42]/100.0)*te.[Count_%_SF22andSF42]) as [3G_%_SF22andSF42_Num],
		sum((te.[% SF4]/100.0)*te.[Count_%SF4]) as [3G_%_SF4_Num],
		sum((te.[% SF42]/100.0)*te.[Count_%_SF42]) as [3G_%_SF42_Num],
		sum(te.[Count_%_SF22]) as [3G_%_SF22_Den],
		sum(te.[Count_%_SF22andSF42]) as [3G_%_SF22andSF42_Den],
		sum(te.[Count_%SF4]) as [3G_%_SF4_Den],
		sum(te.[Count_%_SF42]) as [3G_%_SF42_Den],
		sum(te.[% TTI 2ms_float]*te.[Count_%TTI_2ms]) as [3G_%_TTI2ms_Num],
		sum(te.[Count_%TTI_2ms]) as [3G_%_TTI2ms_Den],

		-- Ambos:
		sum(te.[RSCP_Lin]*te.[Count_RSCP_Lin]) as [RSCP_Lin_Num],
		sum(te.[EcI0_Lin]*te.[Count_EcI0_Lin]) as [EcI0_Lin_Num],	
		sum(te.[Count_RSCP_Lin]) as [RSCP_Lin_Den],	
		sum(te.[Count_EcI0_Lin]) as [EcI0_Lin_Den],	
		
		-- Performance:
		-- Solo en DL:
		sum(0) as [3G_CQI],			sum(0) as [3G_DataStats_Den],
		Sum(0) as CQI_U900_Num,		sum(0) as CQI_U900_Den,
		Sum(0) as CQI_U2100_Num,	sum(0) as CQI_U2100_Den,

		-- Ambos:
		sum(pf.[HSPA_PCT]*pf.[Count_HSPA]) as [HSPA_PCT_Num],
		sum(pf.[HSPA+_PCT]*pf.[Count_HSPA+]) as [HSPA+_PCT_Num],
		sum(pf.[HSPA+_DC_PCT]*pf.[Count_HSPA+_DC]) as [HSPA+_DC_PCT_Num],
		sum(pf.[Count_HSPA]) as [HSPA_PCT_Den],
		sum(pf.[Count_HSPA+]) as [HSPA+_PCT_Den],
		sum(pf.[Count_HSPA+_DC]) as [HSPA+_DC_PCT_Den],

		sum(pf.[UL_Inter_Lin]*pf.[Count_UL_Inter]) as [UL_Inter_Lin_Num],
		sum(pf.[Count_UL_Inter]) as [UL_Inter_Lin_Den],	
	
		-- Performance LTE:
		sum(pfl.[Count_CQI_4G]*pfl.[ CQI]) as CQI_4G_Num,
		sum(pfl.Count_CQI_L800*pfl.CQI_L800) as CQI_L800_Num,
		sum(pfl.Count_CQI_L1800*pfl.CQI_L1800) as CQI_L1800_Num,
		sum(pfl.Count_CQI_L2100*pfl.CQI_L2100) as CQI_L2100_Num,
		sum(pfl.Count_CQI_L2600*pfl.CQI_L2600) as CQI_L2600_Num,
		sum(pfl.[Count_CQI_4G]) as CQI_4G_Den,
		sum(pfl.Count_CQI_L800) as CQI_L800_Den,
		sum(pfl.Count_CQI_L1800) as CQI_L1800_Den,
		sum(pfl.Count_CQI_L2100) as CQI_L2100_Den,
		sum(pfl.Count_CQI_L2600) as CQI_L2600_Den,

		sum(pfl.Count_LTE_5Mhz_SC *pfl.LTE_5Mhz_SC_PCT) as LTE_5Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_10Mhz_SC*pfl.LTE_10Mhz_SC_PCT) as LTE_10Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_15Mhz_SC*pfl.LTE_15Mhz_SC_PCT) as LTE_15Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_20Mhz_SC*pfl.LTE_20Mhz_SC_PCT) as LTE_20Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_CA_Use_Num,
		sum(0) as LTE_20Mhz_CA_Use_Num,
		sum(0) as LTE_25Mhz_CA_Use_Num,
		sum(0) as LTE_30Mhz_CA_Use_Num,
		sum(0) as LTE_35Mhz_CA_Use_Num,
		sum(0) as LTE_40Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_5Mhz_SC) as LTE_5Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_10Mhz_SC) as LTE_10Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_15Mhz_SC) as LTE_15Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_20Mhz_SC) as LTE_20Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_CA_Use_Den,
		sum(0) as LTE_20Mhz_CA_Use_Den,
		sum(0) as LTE_25Mhz_CA_Use_Den,
		sum(0) as LTE_30Mhz_CA_Use_Den,
		sum(0) as LTE_35Mhz_CA_Use_Den,
		sum(0) as LTE_40Mhz_CA_Use_Den,		

		sum((isnull(pfl.Count_LTE_5Mhz_SC,0) 
		 --    +isnull(pfl.Count_LTE_10Mhz_SC,0) +isnull(pfl.Count_LTE_15Mhz_SC,0) +isnull(pfl.Count_LTE_20Mhz_SC,0) +
		 --    isnull(pfl.Count_LTE_15Mhz_CA,0) +isnull(pfl.Count_LTE_20Mhz_CA,0) +isnull(pfl.Count_LTE_25Mhz_CA,0) +isnull(pfl.Count_LTE_30Mhz_CA,0) +
		 --    isnull(pfl.Count_LTE_35Mhz_CA,0) +isnull(pfl.Count_LTE_40Mhz_CA,0)
			)
			*(
			pfl.LTE_5Mhz_SC_PCT+pfl.LTE_10Mhz_SC_PCT+pfl.LTE_15Mhz_SC_PCT+pfl.LTE_20Mhz_SC_PCT)) as LTE_BW_use_den,			-- Se usaria solo en NoCA_Device
		sum(pfl.[ RBs]*pfl.[Count_RBs]) as [4G_RBs_use_Num],
		sum(pfl.[Count_RBs]) as [4G_RBs_use_Den],

		sum(pfl.[ % TM1]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM1_use_Num],
		sum(pfl.[ % TM2]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM2_use_Num],
		sum(pfl.[ % TM3]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM3_use_Num],
		sum(pfl.[ % TM4]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM4_use_Num],
		sum(pfl.[ % MIMO]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM5_use_Num],
		sum(pfl.[ % TM6]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM6_use_Num],
		sum(pfl.[ % TM7]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM7_use_Num],
		sum(pfl.[ % TM8]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM8_N],
		sum(pfl.[ % TM9]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM9_N],
		sum(pfl.[ % TM Invalid]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TMInvalid_use_Num],
		sum(0) as [4G_TMUnknown_use_Num],
		sum([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid]) as [4G_TM_Den],

		-- Technology LTE:
		sum(0) as [4G_%CA_Num],
		sum(0) as [4G_%CA_Den],
		sum((tel.[BPSK])*tel.Count_BPSK) as [4G_BPSK_Use_Num],
		sum((tel.[QPSK])*tel.Count_QPSK) as [4G_QPSK_Use_Num],
		sum((tel.[16QAM])*tel.Count_16QAM) as [4G_16QAM_Use_Num],
		sum(0) as [4G_64QAM_Use_Num],
		sum(tel.Count_BPSK) as [4G_BPSK_Use_Den],
		sum(tel.Count_QPSK) as [4G_QPSK_Use_Den],
		sum(tel.Count_16QAM) as [4G_16QAM_Use_Den],
		sum(0) as [4G_64QAM_Use_Den],

		sum((isnull(pfl.Count_CQI_L800,0)+isnull(pfl.Count_CQI_L1800,0)+isnull(pfl.Count_CQI_L2100,0)+isnull(pfl.Count_CQI_L2600,0))*(isnull(tel.[16QAM],0)+isnull(tel.QPSK,0))) as [4G_stats_Den],

		sum(tel.[RSRP_Lin]*tel.[Count_RSRP_Lin]) as [RSRP_Lin_Num],
		sum(tel.[RSRQ_Lin]*tel.[Count_RSRQ_Lin]) as [RSRQ_Lin_Num],	
		sum(tel.[SINR_Lin]*tel.[Count_SINR_Lin]) as [SINR_Lin_Num],	
		sum(tel.[Count_RSRP_Lin]) as [RSRP_Lin_Den],	
		sum(tel.[Count_RSRQ_Lin]) as [RSRQ_Lin_Den],	
		sum(tel.[Count_SINR_Lin]) as [SINR_Lin_Den],

		-- New KPIs:
		sum(newk.[MIMO_CE_num]) as [MIMO_num],
		sum(newk.[RI1_CE_num]) as [RI1_num],
		sum(newk.[RI2_CE_num]) as [RI2_num],
		sum(newk.[MIMO_CE_den]) as [MIMO_den],
		sum(newk.[RI1_CE_den]) as [RI1_den],
		sum(newk.[RI2_CE_den]) as [RI2_den],
		sum(newk.Count_RBs_CE) as RBs_Allocated_Den,
		sum(newk.Count_RBs_CE*isnull(newk.[RBs CE],0)) as RBs_Allocated_Num,
		max(newk.[Max RBs CE]) as RBs_Allocated_Max,

		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		sum(tLTE.[ 0-0.5Mbps_N ]) as [1_N],	sum(tLTE.[ 0.5-1Mbps_N ]) as [2_N],	sum(tLTE.[ 1-1.5Mbps_N ]) as [3_N],	sum(tLTE.[ 1.5-2Mbps_N ]) as [4_N],	sum(tLTE.[ 2-2.5Mbps_N ]) as [5_N],
		sum(tLTE.[ 2.5-3Mbps_N ]) as [6_N],	sum(tLTE.[ 3-3.5Mbps_N ]) as [7_N],	sum(tLTE.[ 3.5-4Mbps_N ]) as [8_N],	sum(tLTE.[ 4-4.5Mbps_N ]) as [9_N],	sum(tLTE.[ 4.5-5Mbps_N ]) as [10_N],
		sum(tLTE.[ 5-5.5Mbps_N ]) as [11_N],	sum(tLTE.[ 5.5-6Mbps_N ]) as [12_N],	sum(tLTE.[ 6-6.5Mbps_N ]) as [13_N],	sum(tLTE.[ 6.5-7Mbps_N ]) as [14_N],	sum(tLTE.[ 7-7.5Mbps_N ]) as [15_N],	
		sum(tLTE.[ 7.5-8Mbps_N ]) as [16_N],	sum(tLTE.[ 8-8.5Mbps_N ]) as [17_N],	sum(tLTE.[ 8.5-9Mbps_N ]) as [18_N],	sum(tLTE.[ 9-9.5Mbps_N ]) as [19_N],	sum(tLTE.[ 9.5-10Mbps_N ]) as [20_N],
		sum(tLTE.[ 10-10.5Mbps_N ]) as [21_N],	sum(tLTE.[ 10.5-11Mbps_N ]) as [22_N],	sum(tLTE.[ 11-11.5Mbps_N ]) as [23_N],	sum(tLTE.[ 11.5-12Mbps_N ]) as [24_N],	sum(tLTE.[ 12-12.5Mbps_N ]) as [25_N],
		sum(tLTE.[ 12.5-13Mbps_N ]) as [26_N],	sum(tLTE.[ 13-13.5Mbps_N ]) as [27_N],	sum(tLTE.[ 13.5-14Mbps_N ]) as [28_N],	sum(tLTE.[ 14-14.5Mbps_N ]) as [29_N],	sum(tLTE.[ 14.5-15Mbps_N ]) as [30_N],
		sum(tLTE.[ 15-15.5Mbps_N ]) as [31_N],	sum(tLTE.[ 15.5-16Mbps_N ]) as [32_N],	sum(tLTE.[ 16-16.5Mbps_N ]) as [33_N],	sum(tLTE.[ 16.5-17Mbps_N ]) as [34_N],	sum(tLTE.[ 17-17.5Mbps_N ]) as [35_N],
		sum(tLTE.[ 17.5-18Mbps_N ]) as [36_N],	sum(tLTE.[ 18-18.5Mbps_N ]) as [37_N],	sum(tLTE.[ 18.5-19Mbps_N ]) as [38_N],	sum(tLTE.[ 19-19.5Mbps_N ]) as [39_N],	sum(tLTE.[ 19.5-20Mbps_N ]) as [40_N],
		sum(tLTE.[ 20-20.5Mbps_N ]) as [41_N],	sum(tLTE.[ 20.5-21Mbps_N ]) as [42_N],	sum(tLTE.[ 21-21.5Mbps_N ]) as [43_N],	sum(tLTE.[ 21.5-22Mbps_N ]) as [44_N],	sum(tLTE.[ 22-22.5Mbps_N ]) as [45_N],
		sum(tLTE.[ 22.5-23Mbps_N ]) as [46_N],	sum(tLTE.[ 23-23.5Mbps_N ]) as [47_N],	sum(tLTE.[ 23.5-24Mbps_N ]) as [48_N],	sum(tLTE.[ 24-24.5Mbps_N ]) as [49_N],	sum(tLTE.[ 24.5-25Mbps_N ]) as [50_N],
		sum(tLTE.[ >25Mbps_N]) as [51_N],
		null as [52_N],	null as [53_N],	null as [54_N],	null as [55_N],	null as [56_N],	null as [57_N],	null as [58_N],	null as [59_N],	
		null as [60_N],	null as [61_N],	null as [62_N],	null as [63_N],	null as [64_N],	null as [65_N],	null as [66_N]
	
		--null as Region_Road_VF, null as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,sum(tLTE.[ 0-5Mbps]) as [1]		,sum(tLTE.[ 5-10Mbps]) as [2]		,sum(tLTE.[ 10-15Mbps]) as [3]		,sum(tLTE.[ 15-20Mbps]) as [4]		,sum(tLTE.[ 20-25Mbps]) as [5]
		,sum(tLTE.[ 25-30Mbps]) as [6]		,sum(tLTE.[ 30-35Mbps]) as [7]		,sum(tLTE.[ 35-40Mbps]) as [8]		,sum(tLTE.[ 40-45Mbps]) as [9]		,sum(tLTE.[ 45-50Mbps]) as [10]
		,sum(tLTE.[ >50Mbps]) as [11]	
		,null as [12]	,null as [13]	,null as [14]	,null as [15]	,null as [16]	,null as [17]	,null as [18]	,null as [19]	,null as [20]
		,null as [21]	,null as [22]	,null as [23]	,null as [24]	,null as [25]	,null as [26]	,null as [27]	,null as [28]	,null as [29]
		,null as [30]	,null as [31]	,null as [32]	,null as [33]	,null as [34]	,null as [35]	,null as [36]	,null as [37]	,null as [38]
		,null as [39]	,null as [40]	,null as [41],

		-- Parametros de configuracion:
		pfl.ASideDevice as ASideDevice, pfl.BSideDevice as BSideDevice, pfl.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from	[AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_UL_Thput_CE] t
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_UL_Performance_CE] pf
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(pf.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=pf.mnc and t.Date_Reporting=pf.Date_Reporting and t.entidad=pf.entidad and t.Aggr_Type=pf.Aggr_Type and t.Report_Type=pf.Report_Type and t.meas_round=pf.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_UL_Technology_CE] te
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(te.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=te.mnc and t.Date_Reporting=te.Date_Reporting and t.entidad=te.entidad and t.Aggr_Type=te.Aggr_Type and t.Report_Type=te.Report_Type and t.meas_round=te.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_UL_Performance_CE_LTE] pfl
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(pfl.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=pfl.mnc and t.Date_Reporting=pfl.Date_Reporting and t.entidad=pfl.entidad and t.Aggr_Type=pfl.Aggr_Type and t.Report_Type=pfl.Report_Type and t.meas_round=pfl.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_UL_Technology_CE_LTE] tel
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(tel.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=tel.mnc and t.Date_Reporting=tel.Date_Reporting and t.entidad=tel.entidad and t.Aggr_Type=tel.Aggr_Type and t.Report_Type=tel.Report_Type and t.meas_round=tel.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_UL_Thput_CE_4G] O4G
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(O4G.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=O4G.mnc and t.Date_Reporting=O4G.Date_Reporting and t.entidad=O4G.entidad and t.Aggr_Type=O4G.Aggr_Type and t.Report_Type=O4G.Report_Type and t.meas_round=O4G.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_NEW_KPIs_UL_LTE] newk
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(newk.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=newk.mnc and t.Date_Reporting=newk.Date_Reporting and t.entidad=newk.entidad and t.Aggr_Type=newk.Aggr_Type and t.Report_Type=newk.Report_Type and t.meas_round=newk.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_UL_Thput_CE_LTE] tLTE
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(tLTE.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=tLTE.mnc and t.Date_Reporting=tLTE.Date_Reporting and t.entidad=tLTE.entidad and t.Aggr_Type=tLTE.Aggr_Type and t.Report_Type=tLTE.Report_Type and t.meas_round=tLTE.meas_round
				, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end,
		t.mnc,t.meas_round,t.Date_Reporting,t.Week_Reporting,t.entidad,t.Report_Type,t.Aggr_Type,
		pfl.ASideDevice, pfl.BSideDevice, pfl.SWVersion--, t.Region_VF, t.Region_OSP
	
	---------
	union all
	select  
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment,t.mnc,t.meas_round,t.Date_Reporting as meas_date,t.Week_Reporting as meas_week, 
		'4G' as meas_Tech, 'NC_UL' as Test_type, 'Uplink' as Direction, t.entidad as vf_entity,t.Report_Type,t.Aggr_Type,
	
		-- General:
		sum(t.Subidas) as Num_tests,
		sum(t.[fallos de acceso]) as Failed,
		sum(t.[fallos de descarga]) as Dropped,
		sum(0) as Session_time_Num,
		sum(t.count_throughput) as Throughput_Den,
		sum(0) as Session_time_Den,
		sum(t.Throughput*t.count_throughput) as Throughput_Num,
		max(t.[Throughput Max]) as Throughput_Max,
		sum(0) as Throughput_3M_Num,
		sum(t.Count_Throughput_1M) as Throughput_1M_Num,
		sum(0) as Throughput_128K_Num,
		sum(t.Count_Throughput_64k) as Throughput_64K_Num,
		sum(t.Count_Throughput_384k) as Throughput_384K_Num,
		--CAC 10/08/2017: thput de test sin error y con error
		sum(t.Count_Throughput_ALL) as Throughput_with_Error_Den,
		sum(t.Throughput_ALL*t.Count_Throughput_ALL) as Throughput_with_Error_Num,

		sum(0) as WEB_IP_ACCESS_TIME_NUM,			sum(0) as WEB_IP_ACCESS_TIME_DEN,	
		sum(0) as WEB_HTTP_TRANSFER_TIME_NUM,		sum(0) as WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_NUM,		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_NUM,		sum(0) as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,	sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(te.[% GSM]*te.[Count_%GSM]) as Radio_2G_use_Num,
		sum(te.[% WCDMA]*te.[Count_%WCDMA]) as Radio_3G_use_Num,
		sum(te.[% LTE]*te.[Count_%LTE]) as Radio_4G_use_Num,
		sum(t.Subidas*(isnull(te.[% GSM],0)+isnull(te.[% WCDMA],0)+isnull(te.[% LTE],0))) as Radio_use_Den,					-- Se usaria solo en NoCA_Device
		sum(te.[Count_%GSM]) as Radio_2G_use_Den,
		sum(te.[Count_%WCDMA]) as Radio_3G_use_Den,
		sum(te.[Count_%LTE]) as Radio_4G_use_Den,

		sum(te.[% U2100]*te.[Count_%U2100]) as Radio_U2100_use_Num,
		sum(te.[% U900]*te.[Count_%U900]) as Radio_U900_use_Num,
		sum(te.[% LTE2100]*te.[Count_%LTE2100]) as Radio_LTE2100_use_Num,
		sum(te.[% LTE2600]*te.[Count_%LTE2600]) as Radio_LTE2600_use_Num,
		sum(te.[% LTE1800]*te.[Count_%LTE1800]) as Radio_LTE1800_use_Num,
		sum(te.[% LTE800]*te.[Count_%LTE800]) as Radio_LTE800_use_Num,
		sum(t.Subidas*(isnull(te.[% U2100],0)+isnull(te.[% U900],0)+isnull(te.[% LTE2100],0)+
						isnull(te.[% LTE2600],0)+isnull(te.[% LTE1800],0)+isnull(te.[% LTE800],0))) as Radio_Band_Use_Den,	-- Se usaria solo en NoCA_Device
		sum(te.[Count_%U2100]) as Radio_U2100_use_Den,
		sum(te.[Count_%U900]) as Radio_U900_use_Den,
		sum(te.[Count_%LTE2100]) as Radio_LTE2100_use_Den,
		sum(te.[Count_%LTE2600]) as Radio_LTE2600_use_Den,
		sum(te.[Count_%LTE1800]) as Radio_LTE1800_use_Den,
		sum(te.[Count_%LTE800]) as Radio_LTE800_use_Den,

		-- Solo en DL
		sum(0) as [3G_DualCarrier_use_Num],		sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],			sum(0) as [3G_DC_2100_use_Den],
		sum(0) as [3G_DC_900_use_Num],			sum(0) as [3G_DC_900_use_Den],

		sum(0) as [3G_NumCodes_use_Num],		sum(0) as [3G_NumCodes_use_Den],
		sum(0) as [3G_QPSK_use_Num],	sum(0) as [3G_16QAM_use_Num],	sum(0) as [3G_64QAM_use_Num],
		sum(0) as [3G_QPSK_use_Den],	sum(0) as [3G_16QAM_use_Den],	sum(0) as [3G_64QAM_use_Den],

		-- Solo en UL:
		sum((te.[% SF22]/100.0)*te.[Count_%_SF22]) as [3G_%_SF22_Num],
		sum((te.[% SF22andSF42]/100.0)*te.[Count_%_SF22andSF42]) as [3G_%_SF22andSF42_Num],
		sum((te.[% SF4]/100.0)*te.[Count_%SF4]) as [3G_%_SF4_Num],
		sum((te.[% SF42]/100.0)*te.[Count_%_SF42]) as [3G_%_SF42_Num],
		sum(te.[Count_%_SF22]) as [3G_%_SF22_Den],
		sum(te.[Count_%_SF22andSF42]) as [3G_%_SF22andSF42_Den],
		sum(te.[Count_%SF4]) as [3G_%_SF4_Den],
		sum(te.[Count_%_SF42]) as [3G_%_SF42_Den],
		sum(1.0*te.[% TTI 2ms_float]*te.[Count_%TTI_2ms]) as [3G_%_TTI2ms_Num],
		sum(te.[Count_%TTI_2ms]) as [3G_%_TTI2ms_Den],	
	
		sum(te.[RSCP_Lin]*te.[Count_RSCP_Lin]) as [RSCP_Lin_Num],
		sum(te.[EcI0_Lin]*te.[Count_EcI0_Lin]) as [EcI0_Lin_Num],	
		sum(te.[Count_RSCP_Lin]) as [RSCP_Lin_Den],	
		sum(te.[Count_EcI0_Lin]) as [EcI0_Lin_Den],
			
		-- Performance:
		-- Solo en DL:
		sum(0) as [3G_CQI],			sum(0) as [3G_DataStats_Den],
		Sum(0) as CQI_U900_Num,		sum(0) as CQI_U900_Den,
		Sum(0) as CQI_U2100_Num,	sum(0) as CQI_U2100_Den,

		-- Ambos:
		sum(pf.[HSPA_PCT]*pf.[Count_HSPA]) as [HSPA_PCT_Num],
		sum(pf.[HSPA+_PCT]*pf.[Count_HSPA+]) as [HSPA+_PCT_Num],
		sum(pf.[HSPA+_DC_PCT]*pf.[Count_HSPA+_DC]) as [HSPA+_DC_PCT_Num],
		sum(pf.[Count_HSPA]) as [HSPA_PCT_Den],
		sum(pf.[Count_HSPA+]) as [HSPA+_PCT_Den],
		sum(pf.[Count_HSPA+_DC]) as [HSPA+_DC_PCT_Den],

		sum(pf.[UL_Inter_Lin]*pf.[Count_UL_Inter]) as [UL_Inter_Lin_Num],
		sum(pf.[Count_UL_Inter]) as [UL_Inter_Lin_Den],	
	
		-- Performance LTE:
		sum(pfl.[Count_CQI_4G]*pfl.[ CQI]) as CQI_4G_Num,
		sum(pfl.Count_CQI_L800*pfl.CQI_L800) as CQI_L800_Num,
		sum(pfl.Count_CQI_L1800*pfl.CQI_L1800) as CQI_L1800_Num,
		sum(pfl.Count_CQI_L2100*pfl.CQI_L2100) as CQI_L2100_Num,
		sum(pfl.Count_CQI_L2600*pfl.CQI_L2600) as CQI_L2600_Num,
		sum(pfl.[Count_CQI_4G]) as CQI_4G_Den,
		sum(pfl.Count_CQI_L800) as CQI_L800_Den,
		sum(pfl.Count_CQI_L1800) as CQI_L1800_Den,
		sum(pfl.Count_CQI_L2100) as CQI_L2100_Den,
		sum(pfl.Count_CQI_L2600) as CQI_L2600_Den,

		sum(pfl.Count_LTE_5Mhz_SC *pfl.LTE_5Mhz_SC_PCT) as LTE_5Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_10Mhz_SC*pfl.LTE_10Mhz_SC_PCT) as LTE_10Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_15Mhz_SC*pfl.LTE_15Mhz_SC_PCT) as LTE_15Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_20Mhz_SC*pfl.LTE_20Mhz_SC_PCT) as LTE_20Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_CA_Use_Num,
		sum(0) as LTE_20Mhz_CA_Use_Num,
		sum(0) as LTE_25Mhz_CA_Use_Num,
		sum(0) as LTE_30Mhz_CA_Use_Num,
		sum(0) as LTE_35Mhz_CA_Use_Num,
		sum(0) as LTE_40Mhz_CA_Use_Num,	
		sum(pfl.Count_LTE_5Mhz_SC) as LTE_5Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_10Mhz_SC) as LTE_10Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_15Mhz_SC) as LTE_15Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_20Mhz_SC) as LTE_20Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_CA_Use_Den,
		sum(0) as LTE_20Mhz_CA_Use_Den,
		sum(0) as LTE_25Mhz_CA_Use_Den,
		sum(0) as LTE_30Mhz_CA_Use_Den,
		sum(0) as LTE_35Mhz_CA_Use_Den,
		sum(0) as LTE_40Mhz_CA_Use_Den,

		sum((isnull(pfl.Count_LTE_5Mhz_SC,0) 
		 --    +isnull(pfl.Count_LTE_10Mhz_SC,0) +isnull(pfl.Count_LTE_15Mhz_SC,0) +isnull(pfl.Count_LTE_20Mhz_SC,0) +
		 --    isnull(pfl.Count_LTE_15Mhz_CA,0) +isnull(pfl.Count_LTE_20Mhz_CA,0) +isnull(pfl.Count_LTE_25Mhz_CA,0) +isnull(pfl.Count_LTE_30Mhz_CA,0) +
		 --    isnull(pfl.Count_LTE_35Mhz_CA,0) +isnull(pfl.Count_LTE_40Mhz_CA,0)
			)
			*(
			pfl.LTE_5Mhz_SC_PCT+pfl.LTE_10Mhz_SC_PCT+pfl.LTE_15Mhz_SC_PCT+pfl.LTE_20Mhz_SC_PCT)) as LTE_BW_use_den,			-- Se usaria solo en NoCA_Device
		sum(pfl.[ RBs]*pfl.[Count_RBs]) as [4G_RBs_use_Num],
		sum(pfl.[Count_RBs]) as [4G_RBs_use_Den],

		sum(pfl.[ % TM1]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM1_use_Num],
		sum(pfl.[ % TM2]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM2_use_Num],
		sum(pfl.[ % TM3]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM3_use_Num],
		sum(pfl.[ % TM4]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM4_use_Num],
		sum(pfl.[ % MIMO]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM5_use_Num],
		sum(pfl.[ % TM6]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM6_use_Num],
		sum(pfl.[ % TM7]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM7_use_Num],
		sum(pfl.[ % TM8]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM8_N],
		sum(pfl.[ % TM9]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM9_N],
		sum(pfl.[ % TM Invalid]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TMInvalid_use_Num],
		sum(0) as [4G_TMUnknown_use_Num],
		sum([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid]) as [4G_TM_Den],

		-- Technology LTE:
		sum(0) as [4G_%CA_Num],
		sum(0) as [4G_%CA_Den],
		sum((tel.[BPSK])*tel.Count_BPSK) as [4G_BPSK_Use_Num],
		sum((tel.[QPSK])*tel.Count_QPSK) as [4G_QPSK_Use_Num],
		sum((tel.[16QAM])*tel.Count_16QAM) as [4G_16QAM_Use_Num],
		sum(0) as [4G_64QAM_Use_Num],
		sum(tel.Count_BPSK) as [4G_BPSK_Use_Den],
		sum(tel.Count_QPSK) as [4G_QPSK_Use_Den],
		sum(tel.Count_16QAM) as [4G_16QAM_Use_Den],
		sum(0) as [4G_64QAM_Use_Den],
	
		sum((isnull(pfl.Count_CQI_L800,0)+isnull(pfl.Count_CQI_L1800,0)+isnull(pfl.Count_CQI_L2100,0)+isnull(pfl.Count_CQI_L2600,0))*(isnull(tel.[16QAM],0)+isnull(tel.QPSK,0))) as [4G_stats_Den],

		sum(tel.[RSRP_Lin]*tel.[Count_RSRP_Lin]) as [RSRP_Lin_Num],
		sum(tel.[RSRQ_Lin]*tel.[Count_RSRQ_Lin]) as [RSRQ_Lin_Num],	
		sum(tel.[SINR_Lin]*tel.[Count_SINR_Lin]) as [SINR_Lin_Num],	
		sum(tel.[Count_RSRP_Lin]) as [RSRP_Lin_Den],	
		sum(tel.[Count_RSRQ_Lin]) as [RSRQ_Lin_Den],	
		sum(tel.[Count_SINR_Lin]) as [SINR_Lin_Den],

		-- New KPIs:
		sum(newk.[MIMO_NC_num]) as [MIMO_num],
		sum(newk.[RI1_NC_num]) as [RI1_num],
		sum(newk.[RI2_NC_num]) as [RI2_num],
		sum(newk.[MIMO_NC_den]) as [MIMO_den],
		sum(newk.[RI1_NC_den]) as [RI1_den],
		sum(newk.[RI2_NC_den]) as [RI2_den],
		sum(newk.Count_RBs_NC) as RBs_Allocated_Den,
		sum(newk.Count_RBs_NC*isnull(newk.[RBs NC],0)) as RBs_Allocated_Num,
		max(newk.[Max RBs NC]) as RBs_Allocated_Max,

		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		sum(tLTE.[ 0-0.8Mbps_N ]) as [1_N],		sum(tLTE.[ 0.8-1.6Mbps_N ]) as [2_N],		sum(tLTE.[ 1.6-2.4Mbps_N ]) as [3_N],		sum(tLTE.[ 2.4-3.2Mbps_N ]) as [4_N],		sum(tLTE.[ 3.2-4Mbps_N ]) as [5_N],
		sum(tLTE.[ 4-4.8Mbps_N ]) as [6_N],		sum(tLTE.[ 4.8-5.6Mbps_N ]) as [7_N],		sum(tLTE.[ 5.6-6.4Mbps_N ]) as [8_N],		sum(tLTE.[ 6.4-7.2Mbps_N ]) as [9_N],		sum(tLTE.[ 7.2-8Mbps_N ]) as [10_N],
		sum(tLTE.[ 8-8.8Mbps_N ]) as [11_N],		sum(tLTE.[ 8.8-9.6Mbps_N ]) as [12_N],	sum(tLTE.[ 9.6-10.4Mbps_N ]) as [13_N],	sum(tLTE.[ 10.4-11.2Mbps_N ]) as [14_N],	sum(tLTE.[ 11.2-12Mbps_N ]) as [15_N],
		sum(tLTE.[ 12-12.8Mbps_N ]) as [16_N],	sum(tLTE.[ 12.8-13.6Mbps_N ]) as [17_N],	sum(tLTE.[ 13.6-14.4Mbps_N ]) as [18_N],	sum(tLTE.[ 14.4-15.2Mbps_N ]) as [19_N],	sum(tLTE.[ 15.2-16Mbps_N ]) as [20_N],
		sum(tLTE.[ 16-16.8Mbps_N ]) as [21_N],	sum(tLTE.[ 16.8-17.6Mbps_N ]) as [22_N],	sum(tLTE.[ 17.6-18.4Mbps_N ]) as [23_N],	sum(tLTE.[ 18.4-19.2Mbps_N ]) as [24_N],	sum(tLTE.[ 19.2-20Mbps_N ]) as [25_N],
		sum(tLTE.[ 20-20.8Mbps_N ]) as [26_N],	sum(tLTE.[ 20.8-21.6Mbps_N ]) as [27_N],	sum(tLTE.[ 21.6-22.4Mbps_N ]) as [28_N],	sum(tLTE.[ 22.4-23.2Mbps_N ]) as [29_N],	sum(tLTE.[ 23.2-24Mbps_N ]) as [30_N],
		sum(tLTE.[ 24-24.8Mbps_N ]) as [31_N],	sum(tLTE.[ 24.8-25.6Mbps_N ]) as [32_N],	sum(tLTE.[ 25.6-26.4Mbps_N ]) as [33_N],	sum(tLTE.[ 26.4-27.2Mbps_N ]) as [34_N],	sum(tLTE.[ 27.2-28Mbps_N ]) as [35_N],
		sum(tLTE.[ 28-28.8Mbps_N ]) as [36_N],	sum(tLTE.[ 28.8-29.6Mbps_N ]) as [37_N],	sum(tLTE.[ 29.6-30.4Mbps_N ]) as [38_N],	sum(tLTE.[ 30.4-31.2Mbps_N ]) as [39_N],	sum(tLTE.[ 31.2-32Mbps_N ]) as [40_N],
		sum(tLTE.[ 32-32.8Mbps_N ]) as [41_N],	sum(tLTE.[ 32.8-33.6Mbps_N ]) as [42_N],	sum(tLTE.[ 33.6-34.4Mbps_N ]) as [43_N],	sum(tLTE.[ 34.4-35.2Mbps_N ]) as [44_N],	sum(tLTE.[ 35.2-36Mbps_N ]) as [45_N],
		sum(tLTE.[ 36-36.8Mbps_N ]) as [46_N],	sum(tLTE.[ 36.8-37.6Mbps_N ]) as [47_N],	sum(tLTE.[ 37.6-38.4Mbps_N ]) as [48_N],	sum(tLTE.[ 38.4-39.2Mbps_N ]) as [49_N],	sum(tLTE.[ 39.2-40Mbps_N ]) as [50_N],
		sum(tLTE.[ 40-40.8Mbps_N ]) as [51_N],	sum(tLTE.[ 40.8-41.6Mbps_N ]) as [52_N],	sum(tLTE.[ 41.6-42.4Mbps_N ]) as [53_N],	sum(tLTE.[ 42.4-43.2Mbps_N ]) as [54_N],	sum(tLTE.[ 43.2-44Mbps_N ]) as [55_N],
		sum(tLTE.[ 44-44.8Mbps_N ]) as [56_N],	sum(tLTE.[ 44.8-45.6Mbps_N ]) as [57_N],	sum(tLTE.[ 45.6-46.4Mbps_N ]) as [58_N],	sum(tLTE.[ 46.4-47.2Mbps_N ]) as [59_N],	sum(tLTE.[ 47.2-48Mbps_N ]) as [60_N],
		sum(tLTE.[ 48-48.8Mbps_N ]) as [61_N],	sum(tLTE.[ 48.8-49.6Mbps_N ]) as [62_N],	sum(tLTE.[ 49.6-50.4Mbps_N ]) as [63_N],	sum(tLTE.[ 50.4-51.2Mbps_N ]) as [64_N],	sum(tLTE.[ 51.2-52Mbps_N ]) as [65_N],	
		sum(tLTE.[ >52Mbps_N]) as [66_N]
	
		--null as Region_Road_VF, null as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,sum(tLTE.[ 0-5Mbps]) as [1]		,sum(tLTE.[ 5-10Mbps]) as [2]		,sum(tLTE.[ 10-15Mbps]) as [3]		,sum(tLTE.[ 15-20Mbps]) as [4]		,sum(tLTE.[ 20-25Mbps]) as [5]
		,sum(tLTE.[ 25-30Mbps]) as [6]		,sum(tLTE.[ 30-35Mbps]) as [7]		,sum(tLTE.[ 35-40Mbps]) as [8]		,sum(tLTE.[ 40-45Mbps]) as [9]		,sum(tLTE.[ 45-50Mbps]) as [10]
		,sum(tLTE.[ >50Mbps]) as [11]	
		,null as [12]	,null as [13]	,null as [14]	,null as [15]	,null as [16]	,null as [17]	,null as [18]	,null as [19]	,null as [20]
		,null as [21]	,null as [22]	,null as [23]	,null as [24]	,null as [25]	,null as [26]	,null as [27]	,null as [28]	,null as [29]
		,null as [30]	,null as [31]	,null as [32]	,null as [33]	,null as [34]	,null as [35]	,null as [36]	,null as [37]	,null as [38]
		,null as [39]	,null as [40]	,null as [41],

		-- Parametros de configuracion:
		pfl.ASideDevice as ASideDevice, pfl.BSideDevice as BSideDevice, pfl.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from	[AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_UL_Thput_NC] t
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_UL_Performance_NC] pf
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(pf.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=pf.mnc and t.Date_Reporting=pf.Date_Reporting and t.entidad=pf.entidad and t.Aggr_Type=pf.Aggr_Type and t.Report_Type=pf.Report_Type and t.meas_round=pf.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_UL_Technology_NC] te
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(te.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=te.mnc and t.Date_Reporting=te.Date_Reporting and t.entidad=te.entidad and t.Aggr_Type=te.Aggr_Type and t.Report_Type=te.Report_Type and t.meas_round=te.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_UL_Performance_NC_LTE] pfl
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(pfl.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=pfl.mnc and t.Date_Reporting=pfl.Date_Reporting and t.entidad=pfl.entidad and t.Aggr_Type=pfl.Aggr_Type and t.Report_Type=pfl.Report_Type and t.meas_round=pfl.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_UL_Technology_NC_LTE] tel
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(tel.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=tel.mnc and t.Date_Reporting=tel.Date_Reporting and t.entidad=tel.entidad and t.Aggr_Type=tel.Aggr_Type and t.Report_Type=tel.Report_Type and t.meas_round=tel.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_UL_Thput_NC_4G] O4G
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(O4G.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=O4G.mnc and t.Date_Reporting=O4G.Date_Reporting and t.entidad=O4G.entidad and t.Aggr_Type=O4G.Aggr_Type and t.Report_Type=O4G.Report_Type and t.meas_round=O4G.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_NEW_KPIs_UL_LTE] newk
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(newk.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=newk.mnc and t.Date_Reporting=newk.Date_Reporting and t.entidad=newk.entidad and t.Aggr_Type=newk.Aggr_Type and t.Report_Type=newk.Report_Type and t.meas_round=newk.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_UL_Thput_NC_LTE] tLTE
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(tLTE.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=tLTE.mnc and t.Date_Reporting=tLTE.Date_Reporting and t.entidad=tLTE.entidad and t.Aggr_Type=tLTE.Aggr_Type and t.Report_Type=tLTE.Report_Type and t.meas_round=tLTE.meas_round
				, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end,
		t.mnc,t.meas_round,t.Date_Reporting,t.Week_Reporting,t.entidad,t.Report_Type,t.Aggr_Type,
		pfl.ASideDevice, pfl.BSideDevice, pfl.SWVersion--, t.Region_VF, t.Region_OSP

	-------------
	-- 4G ROAD - DL-CE/NC
	insert into _RI_Data_e 
	select  
		p.codigo_ine, 'Roads' vf_environment,t.mnc,t.meas_round,t.Date_Reporting as meas_date,t.Week_Reporting as meas_week, 
		'Road 4G' as meas_Tech, 'CE_DL' as Test_type, 'Downlink' as Direction, t.entidad as vf_entity,t.Report_Type,t.Aggr_Type,
	
		-- General:
		sum(t.navegaciones) as Num_tests,
		sum(t.[fallos de acceso]) as Failed,
		sum(t.[fallos de descarga]) as Dropped,
		sum(t.[SessionTime]*t.navegaciones) as Session_time_Num,
		--sum(t.[tiempo de descarga]*t.count_throughput) as Session_time_Num,	-- SESSION_TIME de DL/UL, calculado como TRANSFER_TIME - se haría el cambio al calculo correcto en cambio de metodología para evitar salto de valor en QLIK.
		sum(t.count_throughput) as Throughput_Den,
		sum(t.navegaciones) as Session_time_Den,
		--sum(t.count_throughput) as Session_time_Den,
		sum(t.Throughput*t.count_throughput) as Throughput_Num,
		max(t.[Throughput Max]) as Throughput_Max,
		sum(t.Count_Throughput_3M) as Throughput_3M_Num,
		sum(t.Count_Throughput_1M) as Throughput_1M_Num,
		sum(0) as Throughput_128K_Num,
		sum(0) as Throughput_64K_Num,
		sum(0) as Throughput_384K_Num,
		--CAC 10/08/2017: thput de test sin error y con error
		sum(t.Count_Throughput_ALL) as Throughput_with_Error_Den,
		sum(t.Throughput_ALL*t.Count_Throughput_ALL) as Throughput_with_Error_Num,

		sum(0) as WEB_IP_ACCESS_TIME_NUM,			sum(0) as WEB_IP_ACCESS_TIME_DEN,	
		sum(0) as WEB_HTTP_TRANSFER_TIME_NUM,		sum(0) as WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_NUM,		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_NUM,		sum(0) as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,	sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(te.[% GSM]*te.[Count_%GSM]) as Radio_2G_use_Num,
		sum(te.[% WCDMA]*te.[Count_%WCDMA]) as Radio_3G_use_Num,
		sum(te.[% LTE]*te.[Count_%LTE]) as Radio_4G_use_Num,
		sum(t.navegaciones*(isnull(te.[% GSM],0)+isnull(te.[% WCDMA],0)+isnull(te.[% LTE],0))) as Radio_use_Den,											-- Se usaria solo en NoCA_Device
		sum(te.[Count_%GSM]) as Radio_2G_use_Den,
		sum(te.[Count_%WCDMA]) as Radio_3G_use_Den,
		sum(te.[Count_%LTE]) as Radio_4G_use_Den,

		sum(te.[% U2100]*te.[Count_%U2100]) as Radio_U2100_use_Num,
		sum(te.[% U900]*te.[Count_%U900]) as Radio_U900_use_Num,
		sum(te.[% LTE2100]*te.[Count_%LTE2100]) as Radio_LTE2100_use_Num,
		sum(te.[% LTE2600]*te.[Count_%LTE2600]) as Radio_LTE2600_use_Num,
		sum(te.[% LTE1800]*te.[Count_%LTE1800]) as Radio_LTE1800_use_Num,
		sum(te.[% LTE800]*te.[Count_%LTE800]) as Radio_LTE800_use_Num,
		sum(t.navegaciones*(isnull(te.[% U2100],0)+isnull(te.[% U900],0)+
							isnull(te.[% LTE2100],0)+isnull(te.[% LTE2600],0)+isnull(te.[% LTE1800],0)+isnull(te.[% LTE800],0))) as Radio_Band_Use_Den,		-- Se usaria solo en NoCA_Device
		sum(te.[Count_%U2100]) as Radio_U2100_use_Den,
		sum(te.[Count_%U900]) as Radio_U900_use_Den,
		sum(te.[Count_%LTE2100]) as Radio_LTE2100_use_Den,
		sum(te.[Count_%LTE2600]) as Radio_LTE2600_use_Den,
		sum(te.[Count_%LTE1800]) as Radio_LTE1800_use_Den,
		sum(te.[Count_%LTE800]) as Radio_LTE800_use_Den,

		-- Solo en DL:
		sum(te.[% Dual Carrier]*te.[Count_Dual_Carrier]) as [3G_DualCarrier_use_Num],
		sum(te.[Count_Dual_Carrier]) as [3G_DualCarrier_use_Den],
		sum(te.[%DC_U2100]*te.[Count_DC_U2100]) as [3G_DC_2100_use_Num],
		sum(te.[Count_DC_U2100]) as [3G_DC_2100_use_Den],
		sum(te.[%DC_U900]*te.[Count_DC_U900]) as [3G_DC_2100_use_Num],
		sum(te.[Count_DC_U900]) as [3G_DC_2100_use_Den],

		sum(te.[Num Codes]*te.[Count_Num_Codes]) as [3G_NumCodes_use_Num],
		sum(te.[Count_Num_Codes]) as [3G_NumCodes_use_Den],

		sum(te.[QPSK]*te.[Count_QPSK]) as [3G_QPSK_use_Num],
		sum(te.[16QAM]*te.[Count_16QAM]) as [3G_16QAM_use_Num],
		sum(te.[64QAM]*te.[Count_64QAM]) as [3G_64QAM_use_Num],
		sum(te.[Count_QPSK]) as [3G_QPSK_use_Den],
		sum(te.[Count_16QAM]) as [3G_16QAM_use_Den],
		sum(te.[Count_64QAM]) as [3G_64QAM_use_Den],

		-- Solo en UL:
		sum(0) as [3G_%_SF22_Num],		sum(0) as [3G_%_SF22andSF42_Num],	sum(0) as [3G_%_SF4_Num],	sum(0) as [3G_%_SF42_Num],
		sum(0) as [3G_%_SF22_Den],		sum(0) as [3G_%_SF22andSF42_Den],	sum(0) as [3G_%_SF4_Den],	sum(0) as [3G_%_SF42_Den],
		sum(0) as [3G_%_TTI2ms_Num],	sum(0) as [3G_%_TTI2ms_Den],

		-- Ambos:
		sum(te.[RSCP_Lin]*te.[Count_RSCP_Lin]) as [RSCP_Lin_Num],
		sum(te.[EcI0_Lin]*te.[Count_EcI0_Lin]) as [EcI0_Lin_Num],	
		sum(te.[Count_RSCP_Lin]) as [RSCP_Lin_Den],	
		sum(te.[Count_EcI0_Lin]) as [EcI0_Lin_Den],	

		-- Performance:
		-- Solo en DL:
		sum(pf.CQI*(isnull(pf.count_cqi_u2100,0)+isnull(pf.count_cqi_u900,0))) [3G_CQI],
		sum((isnull(pf.count_cqi_u2100,0)+isnull(pf.count_cqi_u900,0))) as [3G_DataStats_Den],
		Sum(pfl.CQI_U900*isnull(pfl.count_cqi_u900,0)) as CQI_U900_Num,
		sum(isnull(pfl.count_cqi_u900,0)) as CQI_U900_Den,
		Sum(pfl.CQI_U2100*isnull(pfl.count_cqi_u2100,0)) as CQI_U2100_Num,
		sum(isnull(pfl.count_cqi_u2100,0)) as CQI_U2100_Den,

		-- Ambos:
		sum(pf.[HSPA_PCT]*pf.[Count_HSPA]) as [HSPA_PCT_Num],
		sum(pf.[HSPA+_PCT]*pf.[Count_HSPA+]) as [HSPA+_PCT_Num],
		sum(pf.[HSPA+_DC_PCT]*pf.[Count_HSPA+_DC]) as [HSPA+_DC_PCT_Num],
		sum(pf.[Count_HSPA]) as [HSPA_PCT_Den],
		sum(pf.[Count_HSPA+]) as [HSPA+_PCT_Den],
		sum(pf.[Count_HSPA+_DC]) as [HSPA+_DC_PCT_Den],
	
		sum(pf.[UL_Inter_Lin]*pf.[Count_UL_Inter]) as [UL_Inter_Lin_Num],
		sum(pf.[Count_UL_Inter]) as [UL_Inter_Lin_Den],	
	
		-- Performance LTE:
		sum(pfl.[Count_CQI_4G]*pfl.[CQI_4G]) as CQI_4G_Num,
		sum(pfl.Count_CQI_L800*pfl.CQI_L800) as CQI_L800_Num,
		sum(pfl.Count_CQI_L1800*pfl.CQI_L1800) as CQI_L1800_Num,
		sum(pfl.Count_CQI_L2100*pfl.CQI_L2100) as CQI_L2100_Num,
		sum(pfl.Count_CQI_L2600*pfl.CQI_L2600) as CQI_L2600_Num,
		sum(pfl.[Count_CQI_4G]) as CQI_4G_Den,
		sum(pfl.Count_CQI_L800) as CQI_L800_Den,
		sum(pfl.Count_CQI_L1800) as CQI_L1800_Den,
		sum(pfl.Count_CQI_L2100) as CQI_L2100_Den,
		sum(pfl.Count_CQI_L2600) as CQI_L2600_Den,

		sum(pfl.Count_LTE_5Mhz_SC *pfl.LTE_5Mhz_SC_PCT) as LTE_5Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_10Mhz_SC*pfl.LTE_10Mhz_SC_PCT) as LTE_10Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_15Mhz_SC*pfl.LTE_15Mhz_SC_PCT) as LTE_15Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_20Mhz_SC*pfl.LTE_20Mhz_SC_PCT) as LTE_20Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_15Mhz_CA*pfl.LTE_15Mhz_CA_PCT) as LTE_15Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_20Mhz_CA*pfl.LTE_20Mhz_CA_PCT) as LTE_20Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_25Mhz_CA*pfl.LTE_25Mhz_CA_PCT) as LTE_25Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_30Mhz_CA*pfl.LTE_30Mhz_CA_PCT) as LTE_30Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_35Mhz_CA*pfl.LTE_35Mhz_CA_PCT) as LTE_35Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_40Mhz_CA*pfl.LTE_40Mhz_CA_PCT) as LTE_40Mhz_CA_Use_Num,	
		sum(pfl.Count_LTE_5Mhz_SC) as LTE_5Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_10Mhz_SC) as LTE_10Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_15Mhz_SC) as LTE_15Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_20Mhz_SC) as LTE_20Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_15Mhz_CA) as LTE_15Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_20Mhz_CA) as LTE_20Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_25Mhz_CA) as LTE_25Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_30Mhz_CA) as LTE_30Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_35Mhz_CA) as LTE_35Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_40Mhz_CA) as LTE_40Mhz_CA_Use_Den,	

		sum((isnull(pfl.Count_LTE_5Mhz_SC,0) 
		 --    +isnull(pfl.Count_LTE_10Mhz_SC,0) +isnull(pfl.Count_LTE_15Mhz_SC,0) +isnull(pfl.Count_LTE_20Mhz_SC,0) +
		 --    isnull(pfl.Count_LTE_15Mhz_CA,0) +isnull(pfl.Count_LTE_20Mhz_CA,0) +isnull(pfl.Count_LTE_25Mhz_CA,0) +isnull(pfl.Count_LTE_30Mhz_CA,0) +
		 --    isnull(pfl.Count_LTE_35Mhz_CA,0) +isnull(pfl.Count_LTE_40Mhz_CA,0)
			)
			*(
			pfl.LTE_5Mhz_SC_PCT+pfl.LTE_10Mhz_SC_PCT+pfl.LTE_15Mhz_SC_PCT+pfl.LTE_20Mhz_SC_PCT+pfl.LTE_15Mhz_CA_PCT+
			pfl.LTE_20Mhz_CA_PCT+pfl.LTE_25Mhz_CA_PCT+pfl.LTE_30Mhz_CA_PCT+pfl.LTE_35Mhz_CA_PCT+pfl.LTE_40Mhz_CA_PCT
			)
			) as LTE_BW_use_den,																						-- Se usaria solo en NoCA_Device

		sum(pfl.[ RBs]*pfl.[Count_RBs]) as [4G_RBs_use_Num],
		sum(pfl.[Count_RBs]) as [4G_RBs_use_Den],

		sum(pfl.[ % TM1]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM1_use_Num],
		sum(pfl.[ % TM2]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM2_use_Num],
		sum(pfl.[ % TM3]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM3_use_Num],
		sum(pfl.[ % TM4]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM4_use_Num],
		sum(pfl.[ % MIMO]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM5_use_Num],
		sum(pfl.[ % TM6]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM6_use_Num],
		sum(pfl.[ % TM7]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM7_use_Num],
		sum(0) as [4G_TM8_use_Num],
		sum(0) as [4G_TM9_use_Num],
		sum(pfl.[ % TM Invalid]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TMInvalid_use_Num],
		sum(pfl.[ % TM Unknown]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TMUnknown_use_Num],
		sum([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown]) as [4G_TM_Den],

		-- Technology LTE:
		sum(tel.[Count_%CA]*tel.[% CA]) as [4G_%CA_Num],
		sum(tel.[Count_%CA]) as [4G_%CA_Den],
		sum(0) as [4G_BPSK_Use_Num],
		sum((tel.QPSK/100.0)*tel.Count_QPSK) as [4G_QPSK_Use_Num],
		sum((tel.[16QAM]/100.0)*tel.Count_16QAM) as [4G_16QAM_Use_Num],
		sum((tel.[64QAM]/100.0)*tel.Count_64QAM) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],
		sum(tel.Count_QPSK) as [4G_QPSK_Use_Den],
		sum(tel.Count_16QAM) as [4G_16QAM_Use_Den],
		sum(tel.Count_64QAM) as [4G_64QAM_Use_Den],

		sum((isnull(pfl.Count_CQI_L800,0)+isnull(pfl.Count_CQI_L1800,0)+isnull(pfl.Count_CQI_L2100,0)+
				isnull(pfl.Count_CQI_L2600,0))*(isnull(tel.[64QAM]/100.0,0)+isnull(tel.[16QAM]/100.0,0)+isnull(tel.QPSK/100.0,0))) as [4G_stats_Den],		-- Se usaria solo en NoCA_Device
	
		sum(tel.[RSRP_Lin]*tel.[Count_RSRP_Lin]) as [RSRP_Lin_Num],
		sum(tel.[RSRQ_Lin]*tel.[Count_RSRQ_Lin]) as [RSRQ_Lin_Num],	
		sum(tel.[SINR_Lin]*tel.[Count_SINR_Lin]) as [SINR_Lin_Num],	
		sum(tel.[Count_RSRP_Lin]) as [RSRP_Lin_Den],	
		sum(tel.[Count_RSRQ_Lin]) as [RSRQ_Lin_Den],	
		sum(tel.[Count_SINR_Lin]) as [SINR_Lin_Den],
	
		-- New KPIs:
		sum(newk.[MIMO_CE_num]) as [MIMO_num],
		sum(newk.[RI1_CE_num]) as [RI1_num],
		sum(newk.[RI2_CE_num]) as [RI2_num],
		sum(newk.[MIMO_CE_den]) as [MIMO_den],
		sum(newk.[RI1_CE_den]) as [RI1_den],
		sum(newk.[RI2_CE_den]) as [RI2_den],
		sum(newk.Count_RBs_CE) as RBs_Allocated_Den,
		sum(newk.Count_RBs_CE*isnull(newk.[RBs CE],0)) as RBs_Allocated_Num,
		max(newk.[Max RBs CE]) as RBs_Allocated_Max,

		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:
		sum(tLTE.[ 0-2Mbps_N ]) as [1_N],		sum(tLTE.[ 2-4Mbps_N ]) as [2_N],		sum(tLTE.[ 4-6Mbps_N ]) as [3_N],		sum(tLTE.[ 6-8Mbps_N ]) as [4_N],		sum(tLTE.[ 8-10Mbps_N ]) as [5_N],
		sum(tLTE.[ 10-12Mbps_N ]) as [6_N],		sum(tLTE.[ 12-14Mbps_N ]) as [7_N],		sum(tLTE.[ 14-16Mbps_N ]) as [8_N],		sum(tLTE.[ 16-18Mbps_N ]) as [9_N],		sum(tLTE.[ 18-20Mbps_N ]) as [10_N],
		sum(tLTE.[ 20-22Mbps_N ]) as [11_N],	sum(tLTE.[ 22-24Mbps_N ]) as [12_N],	sum(tLTE.[ 24-26Mbps_N ]) as [13_N],	sum(tLTE.[ 26-28Mbps_N ]) as [14_N],	sum(tLTE.[ 28-30Mbps_N ]) as [15_N],
		sum(tLTE.[ 30-32Mbps_N ]) as [16_N],	sum(tLTE.[ 32-34Mbps_N ]) as [17_N],	sum(tLTE.[ 34-36Mbps_N ]) as [18_N],	sum(tLTE.[ 36-38Mbps_N ]) as [19_N],	sum(tLTE.[ 38-40Mbps_N ]) as [20_N],
		sum(tLTE.[ 40-42Mbps_N ]) as [21_N],	sum(tLTE.[ 42-44Mbps_N ]) as [22_N],	sum(tLTE.[ 44-46Mbps_N ]) as [23_N],	sum(tLTE.[ 46-48Mbps_N ]) as [24_N],	sum(tLTE.[ 48-50Mbps_N ]) as [25_N],
		sum(tLTE.[ 50-52Mbps_N ]) as [26_N],	sum(tLTE.[ 52-54Mbps_N ]) as [27_N],	sum(tLTE.[ 54-56Mbps_N ]) as [28_N],	sum(tLTE.[ 56-58Mbps_N ]) as [29_N],	sum(tLTE.[ 58-60Mbps_N ]) as [30_N],
		sum(tLTE.[ 60-62Mbps_N ]) as [31_N],	sum(tLTE.[ 62-64Mbps_N ]) as [32_N],	sum(tLTE.[ 64-66Mbps_N ]) as [33_N],	sum(tLTE.[ 66-68Mbps_N ]) as [34_N],	sum(tLTE.[ 68-70Mbps_N ]) as [35_N],
		sum(tLTE.[ 70-72Mbps_N ]) as [36_N],	sum(tLTE.[ 72-74Mbps_N ]) as [37_N],	sum(tLTE.[ 74-76Mbps_N ]) as [38_N],	sum(tLTE.[ 76-78Mbps_N ]) as [39_N],	sum(tLTE.[ 78-80Mbps_N ]) as [40_N],
		sum(tLTE.[ 80-82Mbps_N ]) as [41_N],	sum(tLTE.[ 82-84Mbps_N ]) as [42_N],	sum(tLTE.[ 84-86Mbps_N ]) as [43_N],	sum(tLTE.[ 86-88Mbps_N ]) as [44_N],	sum(tLTE.[ 88-90Mbps_N ]) as [45_N],
		sum(tLTE.[ 90-92Mbps_N ]) as [46_N],	sum(tLTE.[ 92-94Mbps_N ]) as [47_N],	sum(tLTE.[ 94-96Mbps_N ]) as [48_N],	sum(tLTE.[ 96-98Mbps_N ]) as [49_N],	sum(tLTE.[ 98-100Mbps_N ]) as [50_N],
		sum(tLTE.[ >100Mbps_N]) as [51_N],
		null as [52_N],	null as [53_N],	null as [54_N],	null as [55_N],	null as [56_N],	null as [57_N],	null as [58_N],	null as [59_N],	
		null as [60_N],	null as [61_N],	null as [62_N],	null as [63_N],	null as [64_N],	null as [65_N],	null as [66_N]
	
		--t.Region_VF as Region_Road_VF, t.Region_OSP as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,sum(tLTE.[ 0-5Mbps]) as [1]		,sum(tLTE.[ 5-10Mbps]) as [2]		,sum(tLTE.[ 10-15Mbps]) as [3]		,sum(tLTE.[ 15-20Mbps]) as [4]		,sum(tLTE.[ 20-25Mbps]) as [5]
		,sum(tLTE.[ 25-30Mbps]) as [6]		,sum(tLTE.[ 30-35Mbps]) as [7]		,sum(tLTE.[ 35-40Mbps]) as [8]		,sum(tLTE.[ 40-45Mbps]) as [9]		,sum(tLTE.[ 45-50Mbps]) as [10]
		,sum(tLTE.[ 50-55Mbps]) as [11]		,sum(tLTE.[ 55-60Mbps]) as [12]		,sum(tLTE.[ 60-65Mbps]) as [13]		,sum(tLTE.[ 65-70Mbps]) as [14]		,sum(tLTE.[ 70-75Mbps]) as [15]
		,sum(tLTE.[ 75-80Mbps]) as [16]		,sum(tLTE.[ 80-85Mbps]) as [17]		,sum(tLTE.[ 85-90Mbps]) as [18]		,sum(tLTE.[ 90-95Mbps]) as [19]		,sum(tLTE.[ 95-100Mbps]) as [20]
		,sum(tLTE.[ 100-105Mbps]) as [21]	,sum(tLTE.[ 105-110Mbps]) as [22]	,sum(tLTE.[ 110-115Mbps]) as [23]	,sum(tLTE.[ 115-120Mbps]) as [24]	,sum(tLTE.[ 120-125Mbps]) as [25]
		,sum(tLTE.[ 125-130Mbps]) as [26]	,sum(tLTE.[ 130-135Mbps]) as [27]	,sum(tLTE.[ 135-140Mbps]) as [28]	,sum(tLTE.[ 140-145Mbps]) as [29]	,sum(tLTE.[ 145-150Mbps]) as [30]
		,sum(tLTE.[ >150Mbps]) as [31]
		,null as [32]	,null as [33]	,null as [34]	,null as [35]	,null as [36]	,null as [37]	,null as [38]	,null as [39]	,null as [40]	,null as [41],

		-- Parametros de configuracion:
		pfl.ASideDevice as ASideDevice, pfl.BSideDevice as BSideDevice, pfl.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from	[aggrData4G_ROAD].dbo.[lcc_aggr_sp_MDD_Data_DL_Thput_CE] t
				left outer join [aggrData4G_ROAD].[dbo].[lcc_aggr_sp_MDD_Data_DL_Performance_CE] pf
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(pf.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=pf.mnc and t.Date_Reporting=pf.Date_Reporting and t.entidad=pf.entidad and t.Aggr_Type=pf.Aggr_Type and t.Report_Type=pf.Report_Type and t.meas_round=pf.meas_round
				left outer join [aggrData4G_ROAD].[dbo].[lcc_aggr_sp_MDD_Data_DL_Technology_CE] te
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(te.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=te.mnc and t.Date_Reporting=te.Date_Reporting and t.entidad=te.entidad and t.Aggr_Type=te.Aggr_Type and t.Report_Type=te.Report_Type and t.meas_round=te.meas_round 
				left outer join [aggrData4G_ROAD].[dbo].[lcc_aggr_sp_MDD_Data_DL_Performance_CE_LTE] pfl
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(pfl.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=pfl.mnc and t.Date_Reporting=pfl.Date_Reporting and t.entidad=pfl.entidad and t.Aggr_Type=pfl.Aggr_Type and t.Report_Type=pfl.Report_Type and t.meas_round=pfl.meas_round
				left outer join [aggrData4G_ROAD].[dbo].[lcc_aggr_sp_MDD_Data_DL_Technology_CE_LTE] tel
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(tel.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=tel.mnc and t.Date_Reporting=tel.Date_Reporting and t.entidad=tel.entidad and t.Aggr_Type=tel.Aggr_Type and t.Report_Type=tel.Report_Type and t.meas_round=tel.meas_round
				left outer join [aggrData4G_ROAD].[dbo].[lcc_aggr_sp_MDD_Data_DL_Thput_CE_4G] O4G
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(O4G.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=O4G.mnc and t.Date_Reporting=O4G.Date_Reporting and t.entidad=O4G.entidad and t.Aggr_Type=O4G.Aggr_Type and t.Report_Type=O4G.Report_Type and t.meas_round=O4G.meas_round
				left outer join [aggrData4G_ROAD].[dbo].[lcc_aggr_sp_MDD_Data_NEW_KPIs_DL_LTE] newk
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(newk.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=newk.mnc and t.Date_Reporting=newk.Date_Reporting and t.entidad=newk.entidad and t.Aggr_Type=newk.Aggr_Type and t.Report_Type=newk.Report_Type and t.meas_round=newk.meas_round
				left outer join [aggrData4G_ROAD].[dbo].[lcc_aggr_sp_MDD_Data_DL_Thput_CE_LTE] tLTE
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(tLTE.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=tLTE.mnc and t.Date_Reporting=tLTE.Date_Reporting and t.entidad=tLTE.entidad and t.Aggr_Type=tLTE.Aggr_Type and t.Report_Type=tLTE.Report_Type and t.meas_round=tLTE.meas_round
				, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine,t.mnc,t.meas_round,t.Date_Reporting,t.Week_Reporting,t.entidad,t.Report_Type,t.Aggr_Type,
		pfl.ASideDevice, pfl.BSideDevice, pfl.SWVersion--, t.Region_VF, t.Region_OSP

	-------------
	union all 
	select  
		p.codigo_ine, 'Roads' vf_environment,t.mnc,t.meas_round,t.Date_Reporting as meas_date,t.Week_Reporting as meas_week, 
		'Road 4G' as meas_Tech, 'NC_DL' as Test_type, 'Downlink' as Direction, t.entidad as vf_entity,t.Report_Type,t.Aggr_Type,
	
		-- General:
		sum(t.navegaciones) as Num_tests,
		sum(t.[fallos de acceso]) as Failed,
		sum(t.[fallos de descarga]) as Dropped,
		sum(0) as Session_time_Num,
		sum(t.count_throughput) as Throughput_Den,
		sum(0) as Session_time_Den,
		sum(t.Throughput*t.count_throughput) as Throughput_Num,
		max(t.[Throughput Max]) as Throughput_Max,
		sum(t.Count_Throughput_3M) as Throughput_3M_Num,
		sum(t.Count_Throughput_1M) as Throughput_1M_Num,
		sum(t.Count_Throughput_128k) as Throughput_128K_Num,
		sum(0) as Throughput_64K_Num,
		sum(t.Count_Throughput_384k) as Throughput_384K_Num,
		--CAC 10/08/2017: thput de test sin error y con error
		sum(t.Count_Throughput_ALL) as Throughput_with_Error_Den,
		sum(t.Throughput_ALL*t.Count_Throughput_ALL) as Throughput_with_Error_Num,

		sum(0) as  WEB_IP_ACCESS_TIME_NUM,
		sum(0) as  WEB_IP_ACCESS_TIME_DEN,
		sum(0) as  WEB_HTTP_TRANSFER_TIME_NUM,
		sum(0) as  WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as  WEB_IP_ACCESS_TIME_HTTPS_NUM,
		sum(0) as  WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as  WEB_TRANSFER_TIME_HTTPS_NUM,
		sum(0) as  WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(te.[% GSM]*te.[Count_%GSM]) as Radio_2G_use_Num,
		sum(te.[% WCDMA]*te.[Count_%WCDMA]) as Radio_3G_use_Num,
		sum(te.[% LTE]*te.[Count_%LTE]) as Radio_4G_use_Num,
		sum(t.navegaciones*(isnull(te.[% GSM],0)+isnull(te.[% WCDMA],0)+isnull(te.[% LTE],0))) as Radio_use_Den,
		sum(te.[Count_%GSM]) as Radio_2G_use_Den,
		sum(te.[Count_%WCDMA]) as Radio_3G_use_Den,
		sum(te.[Count_%LTE]) as Radio_4G_use_Den,

		sum(te.[% U2100]*te.[Count_%U2100]) as Radio_U2100_use_Num,
		sum(te.[% U900]*te.[Count_%U900]) as Radio_U900_use_Num,
		sum(te.[% LTE2100]*te.[Count_%LTE2100]) as Radio_LTE2100_use_Num,
		sum(te.[% LTE2600]*te.[Count_%LTE2600]) as Radio_LTE2600_use_Num,
		sum(te.[% LTE1800]*te.[Count_%LTE1800]) as Radio_LTE1800_use_Num,
		sum(te.[% LTE800]*te.[Count_%LTE800]) as Radio_LTE800_use_Num,
		sum(t.navegaciones*(isnull(te.[% U2100],0)+isnull(te.[% U900],0)+isnull(te.[% LTE2100],0)+isnull(te.[% LTE2600],0)+isnull(te.[% LTE1800],0)+isnull(te.[% LTE800],0))) as Radio_Band_Use_Den,
		sum(te.[Count_%U2100]) as Radio_U2100_use_Den,
		sum(te.[Count_%U900]) as Radio_U900_use_Den,
		sum(te.[Count_%LTE2100]) as Radio_LTE2100_use_Den,
		sum(te.[Count_%LTE2600]) as Radio_LTE2600_use_Den,
		sum(te.[Count_%LTE1800]) as Radio_LTE1800_use_Den,
		sum(te.[Count_%LTE800]) as Radio_LTE800_use_Den,

		sum(te.[% Dual Carrier]*te.[Count_Dual_Carrier]) as [3G_DualCarrier_use_Num],
		sum(te.[Count_Dual_Carrier]) as [3G_DualCarrier_use_Den],
		sum(te.[%DC_U2100]*te.[Count_DC_U2100]) as [3G_DC_2100_use_Num],
		sum(te.[Count_DC_U2100]) as [3G_DC_2100_use_Den],
		sum(te.[%DC_U900]*te.[Count_DC_U900]) as [3G_DC_2100_use_Num],
		sum(te.[Count_DC_U900]) as [3G_DC_2100_use_Den],

		sum(te.[Num Codes]*te.[Count_Num_Codes]) as [3G_NumCodes_use_Num],
		sum(te.[Count_Num_Codes]) as [3G_NumCodes_use_Den],

		sum(te.[QPSK]*te.[Count_QPSK]) as [3G_QPSK_use_Num],
		sum(te.[16QAM]*te.[Count_16QAM]) as [3G_16QAM_use_Num],
		sum(te.[64QAM]*te.[Count_64QAM]) as [3G_64QAM_use_Num],
		sum(te.[Count_QPSK]) as [3G_QPSK_use_Den],
		sum(te.[Count_16QAM]) as [3G_16QAM_use_Den],
		sum(te.[Count_64QAM]) as [3G_64QAM_use_Den],

		sum(0) as [3G_%_SF22_Num],
		sum(0) as [3G_%_SF22andSF42_Num],
		sum(0) as [3G_%_SF4_Num],
		sum(0) as [3G_%_SF42_Num],
		sum(0) as [3G_%_SF22_Den],
		sum(0) as [3G_%_SF22andSF42_Den],
		sum(0) as [3G_%_SF4_Den],
		sum(0) as [3G_%_SF42_Den],
		sum(0) as [3G_%_TTI2ms_Num],
		sum(0) as [3G_%_TTI2ms_Den],	
	
		sum(te.[RSCP_Lin]*te.[Count_RSCP_Lin]) as [RSCP_Lin_Num],
		sum(te.[EcI0_Lin]*te.[Count_EcI0_Lin]) as [EcI0_Lin_Num],	
		sum(te.[Count_RSCP_Lin]) as [RSCP_Lin_Den],	
		sum(te.[Count_EcI0_Lin]) as [EcI0_Lin_Den],

		-- Performance:
		sum(pf.CQI*(isnull(pf.count_cqi_u2100,0)+isnull(pf.count_cqi_u900,0))) [3G_CQI],
		sum((isnull(pf.count_cqi_u2100,0)+isnull(pf.count_cqi_u900,0))) as [3G_DataStats_Den],
		Sum(pfl.CQI_U900*isnull(pfl.count_cqi_u900,0)) as CQI_U900_Num,
		sum(isnull(pfl.count_cqi_u900,0)) as CQI_U900_Den,
		Sum(pfl.CQI_U2100*isnull(pfl.count_cqi_u2100,0)) as CQI_U2100_Num,
		sum(isnull(pfl.count_cqi_u2100,0)) as CQI_U2100_Den,

		sum(pf.[HSPA_PCT]*pf.[Count_HSPA]) as [HSPA_PCT_Num],
		sum(pf.[HSPA+_PCT]*pf.[Count_HSPA+]) as [HSPA+_PCT_Num],
		sum(pf.[HSPA+_DC_PCT]*pf.[Count_HSPA+_DC]) as [HSPA+_DC_PCT_Num],
		sum(pf.[Count_HSPA]) as [HSPA_PCT_Den],
		sum(pf.[Count_HSPA+]) as [HSPA+_PCT_Den],
		sum(pf.[Count_HSPA+_DC]) as [HSPA+_DC_PCT_Den],

		sum(pf.[UL_Inter_Lin]*pf.[Count_UL_Inter]) as [UL_Inter_Lin_Num],
		sum(pf.[Count_UL_Inter]) as [UL_Inter_Lin_Den],	
	
		-- Performance LTE:
		sum(pfl.[Count_CQI_4G]*pfl.[CQI_4G]) as CQI_4G_Num,
		sum(pfl.Count_CQI_L800*pfl.CQI_L800) as CQI_L800_Num,
		sum(pfl.Count_CQI_L1800*pfl.CQI_L1800) as CQI_L1800_Num,
		sum(pfl.Count_CQI_L2100*pfl.CQI_L2100) as CQI_L2100_Num,
		sum(pfl.Count_CQI_L2600*pfl.CQI_L2600) as CQI_L2600_Num,
		sum(pfl.[Count_CQI_4G]) as CQI_4G_Den,
		sum(pfl.Count_CQI_L800) as CQI_L800_Den,
		sum(pfl.Count_CQI_L1800) as CQI_L1800_Den,
		sum(pfl.Count_CQI_L2100) as CQI_L2100_Den,
		sum(pfl.Count_CQI_L2600) as CQI_L2600_Den,

		sum(pfl.Count_LTE_5Mhz_SC *pfl.LTE_5Mhz_SC_PCT) as LTE_5Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_10Mhz_SC*pfl.LTE_10Mhz_SC_PCT) as LTE_10Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_15Mhz_SC*pfl.LTE_15Mhz_SC_PCT) as LTE_15Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_20Mhz_SC*pfl.LTE_20Mhz_SC_PCT) as LTE_20Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_15Mhz_CA*pfl.LTE_15Mhz_CA_PCT) as LTE_15Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_20Mhz_CA*pfl.LTE_20Mhz_CA_PCT) as LTE_20Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_25Mhz_CA*pfl.LTE_25Mhz_CA_PCT) as LTE_25Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_30Mhz_CA*pfl.LTE_30Mhz_CA_PCT) as LTE_30Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_35Mhz_CA*pfl.LTE_35Mhz_CA_PCT) as LTE_35Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_40Mhz_CA*pfl.LTE_40Mhz_CA_PCT) as LTE_40Mhz_CA_Use_Num,	
		sum(pfl.Count_LTE_5Mhz_SC) as LTE_5Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_10Mhz_SC) as LTE_10Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_15Mhz_SC) as LTE_15Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_20Mhz_SC) as LTE_20Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_15Mhz_CA) as LTE_15Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_20Mhz_CA) as LTE_20Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_25Mhz_CA) as LTE_25Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_30Mhz_CA) as LTE_30Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_35Mhz_CA) as LTE_35Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_40Mhz_CA) as LTE_40Mhz_CA_Use_Den,	

		sum((isnull(pfl.Count_LTE_5Mhz_SC,0) 
		 --    +isnull(pfl.Count_LTE_10Mhz_SC,0) +isnull(pfl.Count_LTE_15Mhz_SC,0) +isnull(pfl.Count_LTE_20Mhz_SC,0) +
		 --    isnull(pfl.Count_LTE_15Mhz_CA,0) +isnull(pfl.Count_LTE_20Mhz_CA,0) +isnull(pfl.Count_LTE_25Mhz_CA,0) +isnull(pfl.Count_LTE_30Mhz_CA,0) +
		 --    isnull(pfl.Count_LTE_35Mhz_CA,0) +isnull(pfl.Count_LTE_40Mhz_CA,0)
			)
			*(
			pfl.LTE_5Mhz_SC_PCT+pfl.LTE_10Mhz_SC_PCT+pfl.LTE_15Mhz_SC_PCT+pfl.LTE_20Mhz_SC_PCT+pfl.LTE_15Mhz_CA_PCT+
			pfl.LTE_20Mhz_CA_PCT+pfl.LTE_25Mhz_CA_PCT+pfl.LTE_30Mhz_CA_PCT+pfl.LTE_35Mhz_CA_PCT+pfl.LTE_40Mhz_CA_PCT
			)) as LTE_BW_use_den,
		sum(pfl.[ RBs]*pfl.[Count_RBs]) as [4G_RBs_use_Num],
		sum(pfl.[Count_RBs]) as [4G_RBs_use_Den],

		sum(pfl.[ % TM1]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM1_use_Num],
		sum(pfl.[ % TM2]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM2_use_Num],
		sum(pfl.[ % TM3]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM3_use_Num],
		sum(pfl.[ % TM4]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM4_use_Num],
		sum(pfl.[ % MIMO]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM5_use_Num],
		sum(pfl.[ % TM6]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM6_use_Num],
		sum(pfl.[ % TM7]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM7_use_Num],
		sum(0) as [4G_TM8_use_Num],
		sum(0) as [4G_TM9_use_Num],
		sum(pfl.[ % TM Invalid]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TMInvalid_use_Num],
		sum(pfl.[ % TM Unknown]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TMUnknown_use_Num],
		sum([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown]) as [4G_TM_Den],

		-- Technology LTE:
		sum(tel.[Count_%CA]*tel.[% CA]) as [4G_%CA_Num],
		sum(tel.[Count_%CA]) as [4G_%CA_Den],
		sum(0) as [4G_BPSK_Use_Num],
		sum((tel.QPSK/100.0)*tel.Count_QPSK) as [4G_QPSK_Use_Num],
		sum((tel.[16QAM]/100.0)*tel.Count_16QAM) as [4G_16QAM_Use_Num],
		sum((tel.[64QAM]/100.0)*tel.Count_64QAM) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],
		sum(tel.Count_QPSK) as [4G_QPSK_Use_Den],
		sum(tel.Count_16QAM) as [4G_16QAM_Use_Den],
		sum(tel.Count_64QAM) as [4G_64QAM_Use_Den],

		sum((isnull(pfl.Count_CQI_L800,0)+isnull(pfl.Count_CQI_L1800,0)+isnull(pfl.Count_CQI_L2100,0)+isnull(pfl.Count_CQI_L2600,0))*(isnull(tel.[64QAM]/100.0,0)+isnull(tel.[16QAM]/100.0,0)+isnull(tel.QPSK/100.0,0))) as [4G_stats_Den],

		sum(tel.[RSRP_Lin]*tel.[Count_RSRP_Lin]) as [RSRP_Lin_Num],
		sum(tel.[RSRQ_Lin]*tel.[Count_RSRQ_Lin]) as [RSRQ_Lin_Num],	
		sum(tel.[SINR_Lin]*tel.[Count_SINR_Lin]) as [SINR_Lin_Num],	
		sum(tel.[Count_RSRP_Lin]) as [RSRP_Lin_Den],	
		sum(tel.[Count_RSRQ_Lin]) as [RSRQ_Lin_Den],	
		sum(tel.[Count_SINR_Lin]) as [SINR_Lin_Den],

		-- New KPIs:
		sum(newk.[MIMO_NC_num]) as [MIMO_num],
		sum(newk.[RI1_NC_num]) as [RI1_num],
		sum(newk.[RI2_NC_num]) as [RI2_num],
		sum(newk.[MIMO_NC_den]) as [MIMO_den],
		sum(newk.[RI1_NC_den]) as [RI1_den],
		sum(newk.[RI2_NC_den]) as [RI2_den],
		sum(newk.Count_RBs_NC) as RBs_Allocated_Den,
		sum(newk.Count_RBs_NC*isnull(newk.[RBs NC],0)) as RBs_Allocated_Num,
		max(newk.[Max RBs NC]) as RBs_Allocated_Max,

		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		sum(tLTE.[ 0-3.5Mbps_N ]) as [1_N],		sum(tLTE.[ 3.5-7Mbps_N ]) as [2_N],		sum(tLTE.[ 7-10.5Mbps_N ]) as [3_N],		sum(tLTE.[ 10.5-14Mbps_N ]) as [4_N],		sum(tLTE.[ 14-17.5Mbps_N ]) as [5_N],
		sum(tLTE.[ 17.5-21Mbps_N ]) as [6_N],	sum(tLTE.[ 21-24.5Mbps_N ]) as [7_N],	sum(tLTE.[ 24.5-28Mbps_N ]) as [8_N],		sum(tLTE.[ 28-31.5Mbps_N ]) as [9_N],		sum(tLTE.[ 31.5-35Mbps_N ]) as [10_N],
		sum(tLTE.[ 35-38.5Mbps_N ]) as [11_N],	sum(tLTE.[ 38.5-42Mbps_N ]) as [12_N],	sum(tLTE.[ 42-45.5Mbps_N ]) as [13_N],	sum(tLTE.[ 45.5-49Mbps_N ]) as [14_N],	sum(tLTE.[ 49-52.5Mbps_N ]) as [15_N],
		sum(tLTE.[ 52.5-56Mbps_N ]) as [16_N],	sum(tLTE.[ 56-59.5Mbps_N ]) as [17_N],	sum(tLTE.[ 59.5-63Mbps_N ]) as [18_N],	sum(tLTE.[ 63-66.5Mbps_N ]) as [19_N],	sum(tLTE.[ 66.5-70Mbps_N ]) as [20_N],
		sum(tLTE.[ 70-73.5Mbps_N ]) as [21_N],	sum(tLTE.[ 73.5-77Mbps_N ]) as [22_N],	sum(tLTE.[ 77-80.5Mbps_N ]) as [23_N],	sum(tLTE.[ 80.5-84Mbps_N ]) as [24_N],	sum(tLTE.[ 84-87.5Mbps_N ]) as [25_N],
		sum(tLTE.[ 87.5-91Mbps_N ]) as [26_N],	sum(tLTE.[ 91-94.5Mbps_N ]) as [27_N],	sum(tLTE.[ 94.5-98Mbps_N ]) as [28_N],	sum(tLTE.[ 98-101.5Mbps_N ]) as [29_N],	sum(tLTE.[ 101.5-105Mbps_N ]) as [30_N],
		sum(tLTE.[ 105-108.5Mbps_N ]) as [31_N],	sum(tLTE.[ 108.5-112Mbps_N ]) as [32_N],	sum(tLTE.[ 112-115.5Mbps_N ]) as [33_N],	sum(tLTE.[ 115.5-119Mbps_N ]) as [34_N],	sum(tLTE.[ 119-122.5Mbps_N ]) as [35_N],
		sum(tLTE.[ 122.5-126Mbps_N ]) as [36_N],	sum(tLTE.[ 126-129.5Mbps_N ]) as [37_N],	sum(tLTE.[ 129.5-133Mbps_N ]) as [38_N],	sum(tLTE.[ 133-136.5Mbps_N ]) as [39_N],	sum(tLTE.[ 136.5-140Mbps_N ]) as [40_N],
		sum(tLTE.[ 140-143.5Mbps_N ]) as [41_N],	sum(tLTE.[ 143.5-147Mbps_N ]) as [42_N],	sum(tLTE.[ 147-150.5Mbps_N ]) as [43_N],	sum(tLTE.[ 150.5-154Mbps_N ]) as [44_N],	sum(tLTE.[ 154-157.5Mbps_N ]) as [45_N],
		sum(tLTE.[ 157.5-161Mbps_N ]) as [46_N],	sum(tLTE.[ 161-164.5Mbps_N ]) as [47_N],	sum(tLTE.[ 164.5-168Mbps_N ]) as [48_N],	sum(tLTE.[ 168-171.5Mbps_N ]) as [49_N],	sum(tLTE.[ 171.5-175Mbps_N ]) as [50_N],
		sum(tLTE.[ 175-178.5Mbps_N ]) as [51_N],	sum(tLTE.[ 178.5-182Mbps_N ]) as [52_N],	sum(tLTE.[ 182-185.5Mbps_N ]) as [53_N],	sum(tLTE.[ 185.5-189Mbps_N ]) as [54_N],	sum(tLTE.[ 189-192.5Mbps_N ]) as [55_N],
		sum(tLTE.[ 192.5-196Mbps_N ]) as [56_N],	sum(tLTE.[ >196Mbps_N ]) as [57_N],
		null as [58_N],	null as [59_N],	null as [60_N],	null as [61_N],	null as [62_N],	null as [63_N],	null as [64_N],	null as [65_N],	null as [66_N]
	
		--t.Region_VF as Region_Road_VF, t.Region_OSP as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,sum(tLTE.[ 0-5Mbps]) as [1]		,sum(tLTE.[ 5-10Mbps]) as [2]		,sum(tLTE.[ 10-15Mbps]) as [3]		,sum(tLTE.[ 15-20Mbps]) as [4]		,sum(tLTE.[ 20-25Mbps]) as [5]
		,sum(tLTE.[ 25-30Mbps]) as [6]		,sum(tLTE.[ 30-35Mbps]) as [7]		,sum(tLTE.[ 35-40Mbps]) as [8]		,sum(tLTE.[ 40-45Mbps]) as [9]		,sum(tLTE.[ 45-50Mbps]) as [10]
		,sum(tLTE.[ 50-55Mbps]) as [11]		,sum(tLTE.[ 55-60Mbps]) as [12]		,sum(tLTE.[ 60-65Mbps]) as [13]		,sum(tLTE.[ 65-70Mbps]) as [14]		,sum(tLTE.[ 70-75Mbps]) as [15]
		,sum(tLTE.[ 75-80Mbps]) as [16]		,sum(tLTE.[ 80-85Mbps]) as [17]		,sum(tLTE.[ 85-90Mbps]) as [18]		,sum(tLTE.[ 90-95Mbps]) as [19]		,sum(tLTE.[ 95-100Mbps]) as [20]
		,sum(tLTE.[ 100-105Mbps]) as [21]	,sum(tLTE.[ 105-110Mbps]) as [22]	,sum(tLTE.[ 110-115Mbps]) as [23]	,sum(tLTE.[ 115-120Mbps]) as [24]	,sum(tLTE.[ 120-125Mbps]) as [25]
		,sum(tLTE.[ 125-130Mbps]) as [26]	,sum(tLTE.[ 130-135Mbps]) as [27]	,sum(tLTE.[ 135-140Mbps]) as [28]	,sum(tLTE.[ 140-145Mbps]) as [29]	,sum(tLTE.[ 145-150Mbps]) as [30]
		,sum(tLTE.[ >150Mbps]) as [31]
		,null as [32]	,null as [33]	,null as [34]	,null as [35]	,null as [36]	,null as [37]	,null as [38]	,null as [39]	,null as [40]	,null as [41],

		-- Parametros de configuracion:
		pfl.ASideDevice as ASideDevice, pfl.BSideDevice as BSideDevice, pfl.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from	[aggrData4G_ROAD].dbo.[lcc_aggr_sp_MDD_Data_DL_Thput_NC] t
				left outer join [aggrData4G_ROAD].[dbo].[lcc_aggr_sp_MDD_Data_DL_Performance_NC] pf
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(pf.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=pf.mnc and t.Date_Reporting=pf.Date_Reporting and t.entidad=pf.entidad and t.Aggr_Type=pf.Aggr_Type and t.Report_Type=pf.Report_Type and t.meas_round=pf.meas_round
				left outer join [aggrData4G_ROAD].[dbo].[lcc_aggr_sp_MDD_Data_DL_Technology_NC] te
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(te.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=te.mnc and t.Date_Reporting=te.Date_Reporting and t.entidad=te.entidad and t.Aggr_Type=te.Aggr_Type and t.Report_Type=te.Report_Type and t.meas_round=te.meas_round
				left outer join [aggrData4G_ROAD].[dbo].[lcc_aggr_sp_MDD_Data_DL_Performance_NC_LTE] pfl
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(pfl.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=pfl.mnc and t.Date_Reporting=pfl.Date_Reporting and t.entidad=pfl.entidad and t.Aggr_Type=pfl.Aggr_Type and t.Report_Type=pfl.Report_Type and t.meas_round=pfl.meas_round
				left outer join [aggrData4G_ROAD].[dbo].[lcc_aggr_sp_MDD_Data_DL_Technology_NC_LTE] tel
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(tel.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=tel.mnc and t.Date_Reporting=tel.Date_Reporting and t.entidad=tel.entidad and t.Aggr_Type=tel.Aggr_Type and t.Report_Type=tel.Report_Type and t.meas_round=tel.meas_round
				left outer join [aggrData4G_ROAD].[dbo].[lcc_aggr_sp_MDD_Data_DL_Thput_NC_4G] O4G
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(O4G.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=O4G.mnc and t.Date_Reporting=O4G.Date_Reporting and t.entidad=O4G.entidad and t.Aggr_Type=O4G.Aggr_Type and t.Report_Type=O4G.Report_Type and t.meas_round=O4G.meas_round
				left outer join [aggrData4G_ROAD].[dbo].[lcc_aggr_sp_MDD_Data_NEW_KPIs_DL_LTE] newk
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(newk.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=newk.mnc and t.Date_Reporting=newk.Date_Reporting and t.entidad=newk.entidad and t.Aggr_Type=newk.Aggr_Type and t.Report_Type=newk.Report_Type and t.meas_round=newk.meas_round
				left outer join [AGGRData4G_ROAD].[dbo].[lcc_aggr_sp_MDD_Data_DL_Thput_NC_LTE] tLTE
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(tLTE.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=tLTE.mnc and t.Date_Reporting=tLTE.Date_Reporting and t.entidad=tLTE.entidad and t.Aggr_Type=tLTE.Aggr_Type and t.Report_Type=tLTE.Report_Type and t.meas_round=tLTE.meas_round
				, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine,t.mnc,t.meas_round,t.Date_Reporting,t.Week_Reporting,t.entidad,t.Report_Type,t.Aggr_Type,
		pfl.ASideDevice, pfl.BSideDevice, pfl.SWVersion--, t.Region_VF, t.Region_OSP

	-------------
	-- 4G ROAD - UL-CE/NC
	insert into _RI_Data_e 
	select  
		p.codigo_ine, 'Roads' vf_environment,t.mnc,t.meas_round,t.Date_Reporting as meas_date,t.Week_Reporting as meas_week, 
		'Road 4G' as meas_Tech, 'CE_UL' as Test_type, 'Uplink' as Direction, t.entidad as vf_entity,t.Report_Type,t.Aggr_Type,
	
		-- General:
		sum(t.Subidas) as Num_tests,
		sum(t.[fallos de acceso]) as Failed,
		sum(t.[fallos de descarga]) as Dropped,
		sum(t.[SessionTime]*t.Subidas) as Session_time_Num,
		--sum(t.[Tiempo de subida]*t.count_throughput) as Session_time_Num,	-- SESSION_TIME de DL/UL, calculado como TRANSFER_TIME - se haría el cambio al calculo correcto en cambio de metodología para evitar salto de valor en QLIK.
		sum(t.count_throughput) as Throughput_Den,
		sum(t.Subidas) as Session_time_Den,
		--sum(t.count_throughput) as Session_time_Den,
		sum(t.Throughput*t.count_throughput) as Throughput_Num,
		max(t.[Throughput Max]) as Throughput_Max,
		sum(0) as Throughput_3M_Num,
		sum(t.Count_Throughput_1M) as Throughput_1M_Num,
		sum(0) as Throughput_128K_Num,
		sum(0) as Throughput_64K_Num,
		sum(0) as Throughput_384K_Num,
		--CAC 10/08/2017: thput de test sin error y con error
		sum(t.Count_Throughput_ALL) as Throughput_with_Error_Den,
		sum(t.Throughput_ALL*t.Count_Throughput_ALL) as Throughput_with_Error_Num,
		
		sum(0) as WEB_IP_ACCESS_TIME_NUM,			sum(0) as WEB_IP_ACCESS_TIME_DEN,	
		sum(0) as WEB_HTTP_TRANSFER_TIME_NUM,		sum(0) as WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_NUM,		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_NUM,		sum(0) as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,	sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(te.[% GSM]*te.[Count_%GSM]) as Radio_2G_use_Num,
		sum(te.[% WCDMA]*te.[Count_%WCDMA]) as Radio_3G_use_Num,
		sum(te.[% LTE]*te.[Count_%LTE]) as Radio_4G_use_Num,
		sum(t.subidas*(isnull(te.[% GSM],0)+isnull(te.[% WCDMA],0)+isnull(te.[% LTE],0))) as Radio_use_Den,					-- Se usaria solo en NoCA_Device
		sum(te.[Count_%GSM]) as Radio_2G_use_Den,
		sum(te.[Count_%WCDMA]) as Radio_3G_use_Den,
		sum(te.[Count_%LTE]) as Radio_4G_use_Den,

		sum(te.[% U2100]*te.[Count_%U2100]) as Radio_U2100_use_Num,
		sum(te.[% U900]*te.[Count_%U900]) as Radio_U900_use_Num,
		sum(te.[% LTE2100]*te.[Count_%LTE2100]) as Radio_LTE2100_use_Num,
		sum(te.[% LTE2600]*te.[Count_%LTE2600]) as Radio_LTE2600_use_Num,
		sum(te.[% LTE1800]*te.[Count_%LTE1800]) as Radio_LTE1800_use_Num,
		sum(te.[% LTE800]*te.[Count_%LTE800]) as Radio_LTE800_use_Num,
		sum(t.subidas*(isnull(te.[% U2100],0)+isnull(te.[% U900],0)+isnull(te.[% LTE2100],0)+
						isnull(te.[% LTE2600],0)+isnull(te.[% LTE1800],0)+isnull(te.[% LTE800],0))) as Radio_Band_Use_Den,	-- Se usaria solo en NoCA_Device
		sum(te.[Count_%U2100]) as Radio_U2100_use_Den,
		sum(te.[Count_%U900]) as Radio_U900_use_Den,
		sum(te.[Count_%LTE2100]) as Radio_LTE2100_use_Den,
		sum(te.[Count_%LTE2600]) as Radio_LTE2600_use_Den,
		sum(te.[Count_%LTE1800]) as Radio_LTE1800_use_Den,
		sum(te.[Count_%LTE800]) as Radio_LTE800_use_Den,

		-- Solo en DL:
		sum(0) as [3G_DualCarrier_use_Num],		sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],			sum(0) as [3G_DC_2100_use_Den],
		sum(0) as [3G_DC_900_use_Num],			sum(0) as [3G_DC_900_use_Den],

		sum(0) as [3G_NumCodes_use_Num],	sum(0) as [3G_NumCodes_use_Den],
		sum(0) as [3G_QPSK_use_Num],		sum(0) as [3G_16QAM_use_Num],	sum(0) as [3G_64QAM_use_Num],
		sum(0) as [3G_QPSK_use_Den],		sum(0) as [3G_16QAM_use_Den],	sum(0) as [3G_64QAM_use_Den],

		-- Solo en UL:
		sum((te.[% SF22]/100.0)*te.[Count_%_SF22]) as [3G_%_SF22_Num],
		sum((te.[% SF22andSF42]/100.0)*te.[Count_%_SF22andSF42]) as [3G_%_SF22andSF42_Num],
		sum((te.[% SF4]/100.0)*te.[Count_%SF4]) as [3G_%_SF4_Num],
		sum((te.[% SF42]/100.0)*te.[Count_%_SF42]) as [3G_%_SF42_Num],
		sum(te.[Count_%_SF22]) as [3G_%_SF22_Den],
		sum(te.[Count_%_SF22andSF42]) as [3G_%_SF22andSF42_Den],
		sum(te.[Count_%SF4]) as [3G_%_SF4_Den],
		sum(te.[Count_%_SF42]) as [3G_%_SF42_Den],
		sum(1.0*te.[% TTI 2ms_float]*te.[Count_%TTI_2ms]) as [3G_%_TTI2ms_Num],
		sum(te.[Count_%TTI_2ms]) as [3G_%_TTI2ms_Den],
	
		-- Ambos:
		sum(te.[RSCP_Lin]*te.[Count_RSCP_Lin]) as [RSCP_Lin_Num],
		sum(te.[EcI0_Lin]*te.[Count_EcI0_Lin]) as [EcI0_Lin_Num],	
		sum(te.[Count_RSCP_Lin]) as [RSCP_Lin_Den],	
		sum(te.[Count_EcI0_Lin]) as [EcI0_Lin_Den],	
			
		-- Performance:
		-- Solo en DL:
		sum(0) as [3G_CQI],			sum(0) as [3G_DataStats_Den],
		Sum(0) as CQI_U900_Num,		sum(0) as CQI_U900_Den,
		Sum(0) as CQI_U2100_Num,	sum(0) as CQI_U2100_Den,

		-- Ambos:
		sum(pf.[HSPA_PCT]*pf.[Count_HSPA]) as [HSPA_PCT_Num],
		sum(pf.[HSPA+_PCT]*pf.[Count_HSPA+]) as [HSPA+_PCT_Num],
		sum(pf.[HSPA+_DC_PCT]*pf.[Count_HSPA+_DC]) as [HSPA+_DC_PCT_Num],
		sum(pf.[Count_HSPA]) as [HSPA_PCT_Den],
		sum(pf.[Count_HSPA+]) as [HSPA+_PCT_Den],
		sum(pf.[Count_HSPA+_DC]) as [HSPA+_DC_PCT_Den],

		sum(pf.[UL_Inter_Lin]*pf.[Count_UL_Inter]) as [UL_Inter_Lin_Num],
		sum(pf.[Count_UL_Inter]) as [UL_Inter_Lin_Den],	
	
		-- Performance LTE:
		sum(pfl.[Count_CQI_4G]*pfl.[ CQI]) as CQI_4G_Num,
		sum(pfl.Count_CQI_L800*pfl.CQI_L800) as CQI_L800_Num,
		sum(pfl.Count_CQI_L1800*pfl.CQI_L1800) as CQI_L1800_Num,
		sum(pfl.Count_CQI_L2100*pfl.CQI_L2100) as CQI_L2100_Num,
		sum(pfl.Count_CQI_L2600*pfl.CQI_L2600) as CQI_L2600_Num,
		sum(pfl.[Count_CQI_4G]) as CQI_4G_Den,
		sum(pfl.Count_CQI_L800) as CQI_L800_Den,
		sum(pfl.Count_CQI_L1800) as CQI_L1800_Den,
		sum(pfl.Count_CQI_L2100) as CQI_L2100_Den,
		sum(pfl.Count_CQI_L2600) as CQI_L2600_Den,

		sum(pfl.Count_LTE_5Mhz_SC *pfl.LTE_5Mhz_SC_PCT) as LTE_5Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_10Mhz_SC*pfl.LTE_10Mhz_SC_PCT) as LTE_10Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_15Mhz_SC*pfl.LTE_15Mhz_SC_PCT) as LTE_15Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_20Mhz_SC*pfl.LTE_20Mhz_SC_PCT) as LTE_20Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_CA_Use_Num,
		sum(0) as LTE_20Mhz_CA_Use_Num,
		sum(0) as LTE_25Mhz_CA_Use_Num,
		sum(0) as LTE_30Mhz_CA_Use_Num,
		sum(0) as LTE_35Mhz_CA_Use_Num,
		sum(0) as LTE_40Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_5Mhz_SC) as LTE_5Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_10Mhz_SC) as LTE_10Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_15Mhz_SC) as LTE_15Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_20Mhz_SC) as LTE_20Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_CA_Use_Den,
		sum(0) as LTE_20Mhz_CA_Use_Den,
		sum(0) as LTE_25Mhz_CA_Use_Den,
		sum(0) as LTE_30Mhz_CA_Use_Den,
		sum(0) as LTE_35Mhz_CA_Use_Den,
		sum(0) as LTE_40Mhz_CA_Use_Den,		

		sum((isnull(pfl.Count_LTE_5Mhz_SC,0) 
		 --    +isnull(pfl.Count_LTE_10Mhz_SC,0) +isnull(pfl.Count_LTE_15Mhz_SC,0) +isnull(pfl.Count_LTE_20Mhz_SC,0) +
		 --    isnull(pfl.Count_LTE_15Mhz_CA,0) +isnull(pfl.Count_LTE_20Mhz_CA,0) +isnull(pfl.Count_LTE_25Mhz_CA,0) +isnull(pfl.Count_LTE_30Mhz_CA,0) +
		 --    isnull(pfl.Count_LTE_35Mhz_CA,0) +isnull(pfl.Count_LTE_40Mhz_CA,0)
			)
			*(
			pfl.LTE_5Mhz_SC_PCT+pfl.LTE_10Mhz_SC_PCT+pfl.LTE_15Mhz_SC_PCT+pfl.LTE_20Mhz_SC_PCT)) as LTE_BW_use_den,				-- Se usaria solo en NoCA_Device
		sum(pfl.[ RBs]*pfl.[Count_RBs]) as [4G_RBs_use_Num],
		sum(pfl.[Count_RBs]) as [4G_RBs_use_Den],

		sum(pfl.[ % TM1]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM1_use_Num],
		sum(pfl.[ % TM2]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM2_use_Num],
		sum(pfl.[ % TM3]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM3_use_Num],
		sum(pfl.[ % TM4]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM4_use_Num],
		sum(pfl.[ % MIMO]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM5_use_Num],
		sum(pfl.[ % TM6]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM6_use_Num],
		sum(pfl.[ % TM7]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM7_use_Num],
		sum(pfl.[ % TM8]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM8_N],
		sum(pfl.[ % TM9]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM9_N],
		sum(pfl.[ % TM Invalid]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TMInvalid_use_Num],
		sum(0) as [4G_TMUnknown_use_Num],
		sum([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid]) as [4G_TM_Den],

		-- Technology LTE:
		sum(0) as [4G_%CA_Num],
		sum(0) as [4G_%CA_Den],
		sum((tel.[BPSK])*tel.Count_BPSK) as [4G_BPSK_Use_Num],
		sum((tel.[QPSK])*tel.Count_QPSK) as [4G_QPSK_Use_Num],
		sum((tel.[16QAM])*tel.Count_16QAM) as [4G_16QAM_Use_Num],
		sum(0) as [4G_64QAM_Use_Num],
		sum(tel.Count_BPSK) as [4G_BPSK_Use_Den],
		sum(tel.Count_QPSK) as [4G_QPSK_Use_Den],
		sum(tel.Count_16QAM) as [4G_16QAM_Use_Den],
		sum(0) as [4G_64QAM_Use_Den],

		sum((isnull(pfl.Count_CQI_L800,0)+isnull(pfl.Count_CQI_L1800,0)+isnull(pfl.Count_CQI_L2100,0)+isnull(pfl.Count_CQI_L2600,0))*(isnull(tel.[16QAM],0)+isnull(tel.QPSK,0))) as [4G_stats_Den],

		sum(tel.[RSRP_Lin]*tel.[Count_RSRP_Lin]) as [RSRP_Lin_Num],
		sum(tel.[RSRQ_Lin]*tel.[Count_RSRQ_Lin]) as [RSRQ_Lin_Num],	
		sum(tel.[SINR_Lin]*tel.[Count_SINR_Lin]) as [SINR_Lin_Num],	
		sum(tel.[Count_RSRP_Lin]) as [RSRP_Lin_Den],	
		sum(tel.[Count_RSRQ_Lin]) as [RSRQ_Lin_Den],	
		sum(tel.[Count_SINR_Lin]) as [SINR_Lin_Den],

		-- New KPIs:
		sum(newk.[MIMO_CE_num]) as [MIMO_num],
		sum(newk.[RI1_CE_num]) as [RI1_num],
		sum(newk.[RI2_CE_num]) as [RI2_num],
		sum(newk.[MIMO_CE_den]) as [MIMO_den],
		sum(newk.[RI1_CE_den]) as [RI1_den],
		sum(newk.[RI2_CE_den]) as [RI2_den],
		sum(newk.Count_RBs_CE) as RBs_Allocated_Den,
		sum(newk.Count_RBs_CE*isnull(newk.[RBs CE],0)) as RBs_Allocated_Num,
		max(newk.[Max RBs CE]) as RBs_Allocated_Max,

		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		sum(tLTE.[ 0-0.5Mbps_N ]) as [1_N],	sum(tLTE.[ 0.5-1Mbps_N ]) as [2_N],	sum(tLTE.[ 1-1.5Mbps_N ]) as [3_N],	sum(tLTE.[ 1.5-2Mbps_N ]) as [4_N],	sum(tLTE.[ 2-2.5Mbps_N ]) as [5_N],
		sum(tLTE.[ 2.5-3Mbps_N ]) as [6_N],	sum(tLTE.[ 3-3.5Mbps_N ]) as [7_N],	sum(tLTE.[ 3.5-4Mbps_N ]) as [8_N],	sum(tLTE.[ 4-4.5Mbps_N ]) as [9_N],	sum(tLTE.[ 4.5-5Mbps_N ]) as [10_N],
		sum(tLTE.[ 5-5.5Mbps_N ]) as [11_N],	sum(tLTE.[ 5.5-6Mbps_N ]) as [12_N],	sum(tLTE.[ 6-6.5Mbps_N ]) as [13_N],	sum(tLTE.[ 6.5-7Mbps_N ]) as [14_N],	sum(tLTE.[ 7-7.5Mbps_N ]) as [15_N],	
		sum(tLTE.[ 7.5-8Mbps_N ]) as [16_N],	sum(tLTE.[ 8-8.5Mbps_N ]) as [17_N],	sum(tLTE.[ 8.5-9Mbps_N ]) as [18_N],	sum(tLTE.[ 9-9.5Mbps_N ]) as [19_N],	sum(tLTE.[ 9.5-10Mbps_N ]) as [20_N],
		sum(tLTE.[ 10-10.5Mbps_N ]) as [21_N],	sum(tLTE.[ 10.5-11Mbps_N ]) as [22_N],	sum(tLTE.[ 11-11.5Mbps_N ]) as [23_N],	sum(tLTE.[ 11.5-12Mbps_N ]) as [24_N],	sum(tLTE.[ 12-12.5Mbps_N ]) as [25_N],
		sum(tLTE.[ 12.5-13Mbps_N ]) as [26_N],	sum(tLTE.[ 13-13.5Mbps_N ]) as [27_N],	sum(tLTE.[ 13.5-14Mbps_N ]) as [28_N],	sum(tLTE.[ 14-14.5Mbps_N ]) as [29_N],	sum(tLTE.[ 14.5-15Mbps_N ]) as [30_N],
		sum(tLTE.[ 15-15.5Mbps_N ]) as [31_N],	sum(tLTE.[ 15.5-16Mbps_N ]) as [32_N],	sum(tLTE.[ 16-16.5Mbps_N ]) as [33_N],	sum(tLTE.[ 16.5-17Mbps_N ]) as [34_N],	sum(tLTE.[ 17-17.5Mbps_N ]) as [35_N],
		sum(tLTE.[ 17.5-18Mbps_N ]) as [36_N],	sum(tLTE.[ 18-18.5Mbps_N ]) as [37_N],	sum(tLTE.[ 18.5-19Mbps_N ]) as [38_N],	sum(tLTE.[ 19-19.5Mbps_N ]) as [39_N],	sum(tLTE.[ 19.5-20Mbps_N ]) as [40_N],
		sum(tLTE.[ 20-20.5Mbps_N ]) as [41_N],	sum(tLTE.[ 20.5-21Mbps_N ]) as [42_N],	sum(tLTE.[ 21-21.5Mbps_N ]) as [43_N],	sum(tLTE.[ 21.5-22Mbps_N ]) as [44_N],	sum(tLTE.[ 22-22.5Mbps_N ]) as [45_N],
		sum(tLTE.[ 22.5-23Mbps_N ]) as [46_N],	sum(tLTE.[ 23-23.5Mbps_N ]) as [47_N],	sum(tLTE.[ 23.5-24Mbps_N ]) as [48_N],	sum(tLTE.[ 24-24.5Mbps_N ]) as [49_N],	sum(tLTE.[ 24.5-25Mbps_N ]) as [50_N],
		sum(tLTE.[ >25Mbps_N]) as [51_N],
		null as [52_N],	null as [53_N],	null as [54_N],	null as [55_N],	null as [56_N],	null as [57_N],	null as [58_N],	null as [59_N],	null as [60_N],	null as [61_N],	null as [62_N],	null as [63_N],	null as [64_N],	null as [65_N],	null as [66_N]
	
		--t.Region_VF as Region_Road_VF, t.Region_OSP as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,sum(tLTE.[ 0-5Mbps]) as [1]		,sum(tLTE.[ 5-10Mbps]) as [2]		,sum(tLTE.[ 10-15Mbps]) as [3]		,sum(tLTE.[ 15-20Mbps]) as [4]		,sum(tLTE.[ 20-25Mbps]) as [5]
		,sum(tLTE.[ 25-30Mbps]) as [6]		,sum(tLTE.[ 30-35Mbps]) as [7]		,sum(tLTE.[ 35-40Mbps]) as [8]		,sum(tLTE.[ 40-45Mbps]) as [9]		,sum(tLTE.[ 45-50Mbps]) as [10]
		,sum(tLTE.[ >50Mbps]) as [11]	
		,null as [12]	,null as [13]	,null as [14]	,null as [15]	,null as [16]	,null as [17]	,null as [18]	,null as [19]	,null as [20]
		,null as [21]	,null as [22]	,null as [23]	,null as [24]	,null as [25]	,null as [26]	,null as [27]	,null as [28]	,null as [29]
		,null as [30]	,null as [31]	,null as [32]	,null as [33]	,null as [34]	,null as [35]	,null as [36]	,null as [37]	,null as [38]
		,null as [39]	,null as [40]	,null as [41],

		-- Parametros de configuracion:
		pfl.ASideDevice as ASideDevice, pfl.BSideDevice as BSideDevice, pfl.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from	[aggrData4G_ROAD].dbo.[lcc_aggr_sp_MDD_Data_UL_Thput_CE] t
				left outer join [aggrData4G_ROAD].[dbo].[lcc_aggr_sp_MDD_Data_UL_Performance_CE] pf
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(pf.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=pf.mnc and t.Date_Reporting=pf.Date_Reporting and t.entidad=pf.entidad and t.Aggr_Type=pf.Aggr_Type and t.Report_Type=pf.Report_Type and t.meas_round=pf.meas_round
				left outer join [aggrData4G_ROAD].[dbo].[lcc_aggr_sp_MDD_Data_UL_Technology_CE] te
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(te.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=te.mnc and t.Date_Reporting=te.Date_Reporting and t.entidad=te.entidad and t.Aggr_Type=te.Aggr_Type and t.Report_Type=te.Report_Type and t.meas_round=te.meas_round
				left outer join [aggrData4G_ROAD].[dbo].[lcc_aggr_sp_MDD_Data_UL_Performance_CE_LTE] pfl
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(pfl.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=pfl.mnc and t.Date_Reporting=pfl.Date_Reporting and t.entidad=pfl.entidad and t.Aggr_Type=pfl.Aggr_Type and t.Report_Type=pfl.Report_Type and t.meas_round=pfl.meas_round
				left outer join [aggrData4G_ROAD].[dbo].[lcc_aggr_sp_MDD_Data_UL_Technology_CE_LTE] tel
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(tel.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=tel.mnc and t.Date_Reporting=tel.Date_Reporting and t.entidad=tel.entidad and t.Aggr_Type=tel.Aggr_Type and t.Report_Type=tel.Report_Type and t.meas_round=tel.meas_round
				left outer join [aggrData4G_ROAD].[dbo].[lcc_aggr_sp_MDD_Data_UL_Thput_CE_4G] O4G
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(O4G.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=O4G.mnc and t.Date_Reporting=O4G.Date_Reporting and t.entidad=O4G.entidad and t.Aggr_Type=O4G.Aggr_Type and t.Report_Type=O4G.Report_Type and t.meas_round=O4G.meas_round
				left outer join [aggrData4G_ROAD].[dbo].[lcc_aggr_sp_MDD_Data_NEW_KPIs_UL_LTE] newk
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(newk.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=newk.mnc and t.Date_Reporting=newk.Date_Reporting and t.entidad=newk.entidad and t.Aggr_Type=newk.Aggr_Type and t.Report_Type=newk.Report_Type and t.meas_round=newk.meas_round
				left outer join [AGGRData4G_ROAD].[dbo].[lcc_aggr_sp_MDD_Data_UL_Thput_CE_LTE] tLTE
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(tLTE.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=tLTE.mnc and t.Date_Reporting=tLTE.Date_Reporting and t.entidad=tLTE.entidad and t.Aggr_Type=tLTE.Aggr_Type and t.Report_Type=tLTE.Report_Type and t.meas_round=tLTE.meas_round
				, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine,t.mnc,t.meas_round,t.Date_Reporting,t.Week_Reporting,t.entidad,t.Report_Type,t.Aggr_Type,
		pfl.ASideDevice, pfl.BSideDevice, pfl.SWVersion-- , t.Region_VF, t.Region_OSP
	
	
	-------------
	union all
	select  
		p.codigo_ine, 'Roads' vf_environment,t.mnc,t.meas_round,t.Date_Reporting as meas_date,t.Week_Reporting as meas_week, 
		'Road 4G' as meas_Tech, 'NC_UL' as Test_type, 'Uplink' as Direction, t.entidad as vf_entity,t.Report_Type,t.Aggr_Type,
	
		-- General:
		sum(t.Subidas) as Num_tests,
		sum(t.[fallos de acceso]) as Failed,
		sum(t.[fallos de descarga]) as Dropped,
		sum(0) as Session_time_Num,
		sum(t.count_throughput) as Throughput_Den,
		sum(0) as Session_time_Den,
		sum(t.Throughput*t.count_throughput) as Throughput_Num,
		max(t.[Throughput Max]) as Throughput_Max,
		sum(0) as Throughput_3M_Num,
		sum(t.Count_Throughput_1M) as Throughput_1M_Num,
		sum(0) as Throughput_128K_Num,
		sum(t.Count_Throughput_64k) as Throughput_64K_Num,
		sum(t.Count_Throughput_384k) as Throughput_384K_Num,
		--CAC 10/08/2017: thput de test sin error y con error
		sum(t.Count_Throughput_ALL) as Throughput_with_Error_Den,
		sum(t.Throughput_ALL*t.Count_Throughput_ALL) as Throughput_with_Error_Num,

		sum(0) as WEB_IP_ACCESS_TIME_NUM,			sum(0) as WEB_IP_ACCESS_TIME_DEN,	
		sum(0) as WEB_HTTP_TRANSFER_TIME_NUM,		sum(0) as WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_NUM,		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_NUM,		sum(0) as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,	sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(te.[% GSM]*te.[Count_%GSM]) as Radio_2G_use_Num,
		sum(te.[% WCDMA]*te.[Count_%WCDMA]) as Radio_3G_use_Num,
		sum(te.[% LTE]*te.[Count_%LTE]) as Radio_4G_use_Num,
		sum(t.subidas*(isnull(te.[% GSM],0)+isnull(te.[% WCDMA],0)+isnull(te.[% LTE],0))) as Radio_use_Den,					-- Se usaria solo en NoCA_Device
		sum(te.[Count_%GSM]) as Radio_2G_use_Den,
		sum(te.[Count_%WCDMA]) as Radio_3G_use_Den,
		sum(te.[Count_%LTE]) as Radio_4G_use_Den,

		sum(te.[% U2100]*te.[Count_%U2100]) as Radio_U2100_use_Num,
		sum(te.[% U900]*te.[Count_%U900]) as Radio_U900_use_Num,
		sum(te.[% LTE2100]*te.[Count_%LTE2100]) as Radio_LTE2100_use_Num,
		sum(te.[% LTE2600]*te.[Count_%LTE2600]) as Radio_LTE2600_use_Num,
		sum(te.[% LTE1800]*te.[Count_%LTE1800]) as Radio_LTE1800_use_Num,
		sum(te.[% LTE800]*te.[Count_%LTE800]) as Radio_LTE800_use_Num,
		sum(t.subidas*(isnull(te.[% U2100],0)+isnull(te.[% U900],0)+isnull(te.[% LTE2100],0)+
						isnull(te.[% LTE2600],0)+isnull(te.[% LTE1800],0)+isnull(te.[% LTE800],0))) as Radio_Band_Use_Den,	-- Se usaria solo en NoCA_Device
		sum(te.[Count_%U2100]) as Radio_U2100_use_Den,
		sum(te.[Count_%U900]) as Radio_U900_use_Den,
		sum(te.[Count_%LTE2100]) as Radio_LTE2100_use_Den,
		sum(te.[Count_%LTE2600]) as Radio_LTE2600_use_Den,
		sum(te.[Count_%LTE1800]) as Radio_LTE1800_use_Den,
		sum(te.[Count_%LTE800]) as Radio_LTE800_use_Den,

		-- Solo en DL:
		sum(0) as [3G_DualCarrier_use_Num],		sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],			sum(0) as [3G_DC_2100_use_Den],
		sum(0) as [3G_DC_900_use_Num],			sum(0) as [3G_DC_900_use_Den],

		sum(0) as [3G_NumCodes_use_Num],	sum(0) as [3G_NumCodes_use_Den],
		sum(0) as [3G_QPSK_use_Num],		sum(0) as [3G_16QAM_use_Num],	sum(0) as [3G_64QAM_use_Num],
		sum(0) as [3G_QPSK_use_Den],		sum(0) as [3G_16QAM_use_Den],	sum(0) as [3G_64QAM_use_Den],

		-- Solo en UL:
		sum((te.[% SF22]/100.0)*te.[Count_%_SF22]) as [3G_%_SF22_Num],
		sum((te.[% SF22andSF42]/100.0)*te.[Count_%_SF22andSF42]) as [3G_%_SF22andSF42_Num],
		sum((te.[% SF4]/100.0)*te.[Count_%SF4]) as [3G_%_SF4_Num],
		sum((te.[% SF42]/100.0)*te.[Count_%_SF42]) as [3G_%_SF42_Num],
		sum(te.[Count_%_SF22]) as [3G_%_SF22_Den],
		sum(te.[Count_%_SF22andSF42]) as [3G_%_SF22andSF42_Den],
		sum(te.[Count_%SF4]) as [3G_%_SF4_Den],
		sum(te.[Count_%_SF42]) as [3G_%_SF42_Den],
		sum(1.0*te.[% TTI 2ms_float]*te.[Count_%TTI_2ms]) as [3G_%_TTI2ms_Num],
		sum(te.[Count_%TTI_2ms]) as [3G_%_TTI2ms_Den],
	
		-- Ambos:
		sum(te.[RSCP_Lin]*te.[Count_RSCP_Lin]) as [RSCP_Lin_Num],
		sum(te.[EcI0_Lin]*te.[Count_EcI0_Lin]) as [EcI0_Lin_Num],	
		sum(te.[Count_RSCP_Lin]) as [RSCP_Lin_Den],	
		sum(te.[Count_EcI0_Lin]) as [EcI0_Lin_Den],	
			
		-- Performance:
		-- Solo en DL:
		sum(0) as [3G_CQI],			sum(0) as [3G_DataStats_Den],
		Sum(0) as CQI_U900_Num,		sum(0) as CQI_U900_Den,
		Sum(0) as CQI_U2100_Num,	sum(0) as CQI_U2100_Den,

		-- Ambos:
		sum(pf.[HSPA_PCT]*pf.[Count_HSPA]) as [HSPA_PCT_Num],
		sum(pf.[HSPA+_PCT]*pf.[Count_HSPA+]) as [HSPA+_PCT_Num],
		sum(pf.[HSPA+_DC_PCT]*pf.[Count_HSPA+_DC]) as [HSPA+_DC_PCT_Num],
		sum(pf.[Count_HSPA]) as [HSPA_PCT_Den],
		sum(pf.[Count_HSPA+]) as [HSPA+_PCT_Den],
		sum(pf.[Count_HSPA+_DC]) as [HSPA+_DC_PCT_Den],

		sum(pf.[UL_Inter_Lin]*pf.[Count_UL_Inter]) as [UL_Inter_Lin_Num],
		sum(pf.[Count_UL_Inter]) as [UL_Inter_Lin_Den],	
	
		-- Performance LTE:
		sum(pfl.[Count_CQI_4G]*pfl.[ CQI]) as CQI_4G_Num,
		sum(pfl.Count_CQI_L800*pfl.CQI_L800) as CQI_L800_Num,
		sum(pfl.Count_CQI_L1800*pfl.CQI_L1800) as CQI_L1800_Num,
		sum(pfl.Count_CQI_L2100*pfl.CQI_L2100) as CQI_L2100_Num,
		sum(pfl.Count_CQI_L2600*pfl.CQI_L2600) as CQI_L2600_Num,
		sum(pfl.[Count_CQI_4G]) as CQI_4G_Den,
		sum(pfl.Count_CQI_L800) as CQI_L800_Den,
		sum(pfl.Count_CQI_L1800) as CQI_L1800_Den,
		sum(pfl.Count_CQI_L2100) as CQI_L2100_Den,
		sum(pfl.Count_CQI_L2600) as CQI_L2600_Den,

		sum(pfl.Count_LTE_5Mhz_SC *pfl.LTE_5Mhz_SC_PCT) as LTE_5Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_10Mhz_SC*pfl.LTE_10Mhz_SC_PCT) as LTE_10Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_15Mhz_SC*pfl.LTE_15Mhz_SC_PCT) as LTE_15Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_20Mhz_SC*pfl.LTE_20Mhz_SC_PCT) as LTE_20Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_CA_Use_Num,
		sum(0) as LTE_20Mhz_CA_Use_Num,
		sum(0) as LTE_25Mhz_CA_Use_Num,
		sum(0) as LTE_30Mhz_CA_Use_Num,
		sum(0) as LTE_35Mhz_CA_Use_Num,
		sum(0) as LTE_40Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_5Mhz_SC) as LTE_5Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_10Mhz_SC) as LTE_10Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_15Mhz_SC) as LTE_15Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_20Mhz_SC) as LTE_20Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_CA_Use_Den,
		sum(0) as LTE_20Mhz_CA_Use_Den,
		sum(0) as LTE_25Mhz_CA_Use_Den,
		sum(0) as LTE_30Mhz_CA_Use_Den,
		sum(0) as LTE_35Mhz_CA_Use_Den,
		sum(0) as LTE_40Mhz_CA_Use_Den,

		sum((isnull(pfl.Count_LTE_5Mhz_SC,0) 
		 --    +isnull(pfl.Count_LTE_10Mhz_SC,0) +isnull(pfl.Count_LTE_15Mhz_SC,0) +isnull(pfl.Count_LTE_20Mhz_SC,0) +
		 --    isnull(pfl.Count_LTE_15Mhz_CA,0) +isnull(pfl.Count_LTE_20Mhz_CA,0) +isnull(pfl.Count_LTE_25Mhz_CA,0) +isnull(pfl.Count_LTE_30Mhz_CA,0) +
		 --    isnull(pfl.Count_LTE_35Mhz_CA,0) +isnull(pfl.Count_LTE_40Mhz_CA,0)
			)
			*(
			pfl.LTE_5Mhz_SC_PCT+pfl.LTE_10Mhz_SC_PCT+pfl.LTE_15Mhz_SC_PCT+pfl.LTE_20Mhz_SC_PCT)) as LTE_BW_use_den,				-- Se usaria solo en NoCA_Device
		sum(pfl.[ RBs]*pfl.[Count_RBs]) as [4G_RBs_use_Num],
		sum(pfl.[Count_RBs]) as [4G_RBs_use_Den],

		sum(pfl.[ % TM1]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM1_use_Num],
		sum(pfl.[ % TM2]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM2_use_Num],
		sum(pfl.[ % TM3]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM3_use_Num],
		sum(pfl.[ % TM4]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM4_use_Num],
		sum(pfl.[ % MIMO]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM5_use_Num],
		sum(pfl.[ % TM6]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM6_use_Num],
		sum(pfl.[ % TM7]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM7_use_Num],
		sum(pfl.[ % TM8]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM8_N],
		sum(pfl.[ % TM9]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM9_N],
		sum(pfl.[ % TM Invalid]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TMInvalid_use_Num],
		sum(0) as [4G_TMUnknown_use_Num],
		sum([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid]) as [4G_TM_Den],

		-- Technology LTE:
		sum(0) as [4G_%CA_Num],
		sum(0) as [4G_%CA_Den],
		sum((tel.[BPSK])*tel.Count_BPSK) as [4G_BPSK_Use_Num],
		sum((tel.[QPSK])*tel.Count_QPSK) as [4G_QPSK_Use_Num],
		sum((tel.[16QAM])*tel.Count_16QAM) as [4G_16QAM_Use_Num],
		sum(0) as [4G_64QAM_Use_Num],
		sum(tel.Count_BPSK) as [4G_BPSK_Use_Den],
		sum(tel.Count_QPSK) as [4G_QPSK_Use_Den],
		sum(tel.Count_16QAM) as [4G_16QAM_Use_Den],
		sum(0) as [4G_64QAM_Use_Den],

		sum((isnull(pfl.Count_CQI_L800,0)+isnull(pfl.Count_CQI_L1800,0)+isnull(pfl.Count_CQI_L2100,0)+isnull(pfl.Count_CQI_L2600,0))*(isnull(tel.[16QAM],0)+isnull(tel.QPSK,0))) as [4G_stats_Den],
	
		sum(tel.[RSRP_Lin]*tel.[Count_RSRP_Lin]) as [RSRP_Lin_Num],
		sum(tel.[RSRQ_Lin]*tel.[Count_RSRQ_Lin]) as [RSRQ_Lin_Num],	
		sum(tel.[SINR_Lin]*tel.[Count_SINR_Lin]) as [SINR_Lin_Num],	
		sum(tel.[Count_RSRP_Lin]) as [RSRP_Lin_Den],	
		sum(tel.[Count_RSRQ_Lin]) as [RSRQ_Lin_Den],	
		sum(tel.[Count_SINR_Lin]) as [SINR_Lin_Den],

		-- New KPIs:
		sum(newk.[MIMO_NC_num]) as [MIMO_num],
		sum(newk.[RI1_NC_num]) as [RI1_num],
		sum(newk.[RI2_NC_num]) as [RI2_num],
		sum(newk.[MIMO_NC_den]) as [MIMO_den],
		sum(newk.[RI1_NC_den]) as [RI1_den],
		sum(newk.[RI2_NC_den]) as [RI2_den],
		sum(newk.Count_RBs_NC) as RBs_Allocated_Den,
		sum(newk.Count_RBs_NC*isnull(newk.[RBs NC],0)) as RBs_Allocated_Num,
		max(newk.[Max RBs NC]) as RBs_Allocated_Max,

		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		sum(tLTE.[ 0-0.8Mbps_N ]) as [1_N],		sum(tLTE.[ 0.8-1.6Mbps_N ]) as [2_N],		sum(tLTE.[ 1.6-2.4Mbps_N ]) as [3_N],		sum(tLTE.[ 2.4-3.2Mbps_N ]) as [4_N],		sum(tLTE.[ 3.2-4Mbps_N ]) as [5_N],
		sum(tLTE.[ 4-4.8Mbps_N ]) as [6_N],		sum(tLTE.[ 4.8-5.6Mbps_N ]) as [7_N],		sum(tLTE.[ 5.6-6.4Mbps_N ]) as [8_N],		sum(tLTE.[ 6.4-7.2Mbps_N ]) as [9_N],		sum(tLTE.[ 7.2-8Mbps_N ]) as [10_N],
		sum(tLTE.[ 8-8.8Mbps_N ]) as [11_N],		sum(tLTE.[ 8.8-9.6Mbps_N ]) as [12_N],	sum(tLTE.[ 9.6-10.4Mbps_N ]) as [13_N],	sum(tLTE.[ 10.4-11.2Mbps_N ]) as [14_N],	sum(tLTE.[ 11.2-12Mbps_N ]) as [15_N],
		sum(tLTE.[ 12-12.8Mbps_N ]) as [16_N],	sum(tLTE.[ 12.8-13.6Mbps_N ]) as [17_N],	sum(tLTE.[ 13.6-14.4Mbps_N ]) as [18_N],	sum(tLTE.[ 14.4-15.2Mbps_N ]) as [19_N],	sum(tLTE.[ 15.2-16Mbps_N ]) as [20_N],
		sum(tLTE.[ 16-16.8Mbps_N ]) as [21_N],	sum(tLTE.[ 16.8-17.6Mbps_N ]) as [22_N],	sum(tLTE.[ 17.6-18.4Mbps_N ]) as [23_N],	sum(tLTE.[ 18.4-19.2Mbps_N ]) as [24_N],	sum(tLTE.[ 19.2-20Mbps_N ]) as [25_N],
		sum(tLTE.[ 20-20.8Mbps_N ]) as [26_N],	sum(tLTE.[ 20.8-21.6Mbps_N ]) as [27_N],	sum(tLTE.[ 21.6-22.4Mbps_N ]) as [28_N],	sum(tLTE.[ 22.4-23.2Mbps_N ]) as [29_N],	sum(tLTE.[ 23.2-24Mbps_N ]) as [30_N],
		sum(tLTE.[ 24-24.8Mbps_N ]) as [31_N],	sum(tLTE.[ 24.8-25.6Mbps_N ]) as [32_N],	sum(tLTE.[ 25.6-26.4Mbps_N ]) as [33_N],	sum(tLTE.[ 26.4-27.2Mbps_N ]) as [34_N],	sum(tLTE.[ 27.2-28Mbps_N ]) as [35_N],
		sum(tLTE.[ 28-28.8Mbps_N ]) as [36_N],	sum(tLTE.[ 28.8-29.6Mbps_N ]) as [37_N],	sum(tLTE.[ 29.6-30.4Mbps_N ]) as [38_N],	sum(tLTE.[ 30.4-31.2Mbps_N ]) as [39_N],	sum(tLTE.[ 31.2-32Mbps_N ]) as [40_N],
		sum(tLTE.[ 32-32.8Mbps_N ]) as [41_N],	sum(tLTE.[ 32.8-33.6Mbps_N ]) as [42_N],	sum(tLTE.[ 33.6-34.4Mbps_N ]) as [43_N],	sum(tLTE.[ 34.4-35.2Mbps_N ]) as [44_N],	sum(tLTE.[ 35.2-36Mbps_N ]) as [45_N],
		sum(tLTE.[ 36-36.8Mbps_N ]) as [46_N],	sum(tLTE.[ 36.8-37.6Mbps_N ]) as [47_N],	sum(tLTE.[ 37.6-38.4Mbps_N ]) as [48_N],	sum(tLTE.[ 38.4-39.2Mbps_N ]) as [49_N],	sum(tLTE.[ 39.2-40Mbps_N ]) as [50_N],
		sum(tLTE.[ 40-40.8Mbps_N ]) as [51_N],	sum(tLTE.[ 40.8-41.6Mbps_N ]) as [52_N],	sum(tLTE.[ 41.6-42.4Mbps_N ]) as [53_N],	sum(tLTE.[ 42.4-43.2Mbps_N ]) as [54_N],	sum(tLTE.[ 43.2-44Mbps_N ]) as [55_N],
		sum(tLTE.[ 44-44.8Mbps_N ]) as [56_N],	sum(tLTE.[ 44.8-45.6Mbps_N ]) as [57_N],	sum(tLTE.[ 45.6-46.4Mbps_N ]) as [58_N],	sum(tLTE.[ 46.4-47.2Mbps_N ]) as [59_N],	sum(tLTE.[ 47.2-48Mbps_N ]) as [60_N],
		sum(tLTE.[ 48-48.8Mbps_N ]) as [61_N],	sum(tLTE.[ 48.8-49.6Mbps_N ]) as [62_N],	sum(tLTE.[ 49.6-50.4Mbps_N ]) as [63_N],	sum(tLTE.[ 50.4-51.2Mbps_N ]) as [64_N],	sum(tLTE.[ 51.2-52Mbps_N ]) as [65_N],	
		sum(tLTE.[ >52Mbps_N]) as [66_N]
	
		--t.Region_VF as Region_Road_VF, t.Region_OSP as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,sum(tLTE.[ 0-5Mbps]) as [1]		,sum(tLTE.[ 5-10Mbps]) as [2]		,sum(tLTE.[ 10-15Mbps]) as [3]		,sum(tLTE.[ 15-20Mbps]) as [4]		,sum(tLTE.[ 20-25Mbps]) as [5]
		,sum(tLTE.[ 25-30Mbps]) as [6]		,sum(tLTE.[ 30-35Mbps]) as [7]		,sum(tLTE.[ 35-40Mbps]) as [8]		,sum(tLTE.[ 40-45Mbps]) as [9]		,sum(tLTE.[ 45-50Mbps]) as [10]
		,sum(tLTE.[ >50Mbps]) as [11]	
		,null as [12]	,null as [13]	,null as [14]	,null as [15]	,null as [16]	,null as [17]	,null as [18]	,null as [19]	,null as [20]
		,null as [21]	,null as [22]	,null as [23]	,null as [24]	,null as [25]	,null as [26]	,null as [27]	,null as [28]	,null as [29]
		,null as [30]	,null as [31]	,null as [32]	,null as [33]	,null as [34]	,null as [35]	,null as [36]	,null as [37]	,null as [38]
		,null as [39]	,null as [40]	,null as [41],

		-- Parametros de configuracion:
		pfl.ASideDevice as ASideDevice, pfl.BSideDevice as BSideDevice, pfl.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from	[aggrData4G_ROAD].dbo.[lcc_aggr_sp_MDD_Data_UL_Thput_NC] t
				left outer join [aggrData4G_ROAD].[dbo].[lcc_aggr_sp_MDD_Data_UL_Performance_NC] pf
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(pf.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=pf.mnc and t.Date_Reporting=pf.Date_Reporting and t.entidad=pf.entidad and t.Aggr_Type=pf.Aggr_Type and t.Report_Type=pf.Report_Type and t.meas_round=pf.meas_round
				left outer join [aggrData4G_ROAD].[dbo].[lcc_aggr_sp_MDD_Data_UL_Technology_NC] te
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(te.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=te.mnc and t.Date_Reporting=te.Date_Reporting and t.entidad=te.entidad and t.Aggr_Type=te.Aggr_Type and t.Report_Type=te.Report_Type and t.meas_round=te.meas_round
				left outer join [aggrData4G_ROAD].[dbo].[lcc_aggr_sp_MDD_Data_UL_Performance_NC_LTE] pfl
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(pfl.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=pfl.mnc and t.Date_Reporting=pfl.Date_Reporting and t.entidad=pfl.entidad and t.Aggr_Type=pfl.Aggr_Type and t.Report_Type=pfl.Report_Type and t.meas_round=pfl.meas_round
				left outer join [aggrData4G_ROAD].[dbo].[lcc_aggr_sp_MDD_Data_UL_Technology_NC_LTE] tel
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(tel.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=tel.mnc and t.Date_Reporting=tel.Date_Reporting and t.entidad=tel.entidad and t.Aggr_Type=tel.Aggr_Type and t.Report_Type=tel.Report_Type and t.meas_round=tel.meas_round
				left outer join [aggrData4G_ROAD].[dbo].[lcc_aggr_sp_MDD_Data_UL_Thput_NC_4G] O4G
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(O4G.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=O4G.mnc and t.Date_Reporting=O4G.Date_Reporting and t.entidad=O4G.entidad and t.Aggr_Type=O4G.Aggr_Type and t.Report_Type=O4G.Report_Type and t.meas_round=O4G.meas_round
				left outer join [aggrData4G_ROAD].[dbo].[lcc_aggr_sp_MDD_Data_NEW_KPIs_UL_LTE] newk
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(newk.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=newk.mnc and t.Date_Reporting=newk.Date_Reporting and t.entidad=newk.entidad and t.Aggr_Type=newk.Aggr_Type and t.Report_Type=newk.Report_Type and t.meas_round=newk.meas_round
				left outer join [AGGRData4G_ROAD].[dbo].[lcc_aggr_sp_MDD_Data_UL_Thput_NC_LTE] tLTE
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(tLTE.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=tLTE.mnc and t.Date_Reporting=tLTE.Date_Reporting and t.entidad=tLTE.entidad and t.Aggr_Type=tLTE.Aggr_Type and t.Report_Type=tLTE.Report_Type and t.meas_round=tLTE.meas_round
				, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine,t.mnc,t.meas_round,t.Date_Reporting,t.Week_Reporting,t.entidad,t.Report_Type,t.Aggr_Type,
		pfl.ASideDevice, pfl.BSideDevice, pfl.SWVersion--, t.Region_VF, t.Region_OSP
	
	-------------
	insert into [dbo].[_RI_Data_Ejecucion]
	select 'Fin 1.2. Insert Estadisticos DL/UL 3G, 4G, 4G_Road', getdate()


	-------------------------------------
	-- 1.3) Estadisticos WEB HTTP/HTTPs/Publicas
	-------------------------------------	
	print '1.3. Insert Estadisticos WEB HTTP/HTTPs/Publicas 3G, 4G, 4G_Roads' 	
	-------------
	-- 3G/4G HTTP:
	insert into _RI_Data_e 
	select  
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment,mnc,meas_round,Date_Reporting as meas_date,Week_Reporting as meas_week, 
		'3G' as meas_Tech, 'WEB HTTP' as Test_type, 'Downlink' as Direction, entidad as vf_entity,t.Report_Type,t.Aggr_Type,
		
		-- General:
		sum(t.Navegaciones) as Num_tests,
		sum(t.[Fallos de acceso]) as Failed,
		sum(t.[Navegaciones fallidas]) as Dropped,
		sum(cast(t.[Session Time] as float)*t.[Count_SessionTime]) as Session_time_Num,
		sum(0) as Throughput_Den,
		sum(t.[Count_SessionTime]) as Session_time_Den,
		sum(0) as Throughput_Num,		max(0) as Throughput_Max,	sum(0) as Throughput_3M_Num,	sum(0) as Throughput_1M_Num,	sum(0) as Throughput_128K_Num,	sum(0) as Throughput_64K_Num, sum(0) as Throughput_384K_Num,

		--CAC 10/08/2017: thput de test sin error y con error
		sum(0) as Throughput_with_Error_Den,
		sum(0) as Throughput_with_Error_Num,

		sum(cast([IP Service Setup Time] as float)*[Count_IPServiceSetupTime]) as WEB_IP_ACCESS_TIME_NUM,
		sum([Count_IPServiceSetupTime]) as WEB_IP_ACCESS_TIME_DEN,
		sum(cast([Transfer Time] as float)*[Count_TransferTime]) as WEB_HTTP_TRANSFER_TIME_NUM,
		sum([Count_TransferTime]) as WEB_HTTP_TRANSFER_TIME_DEN,

		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_NUM,		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_NUM,		sum(0) as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,	sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,	

		-- Technology:
		sum(0) as Radio_2G_use_Num,	sum(0) as Radio_3G_use_Num,		sum(0) as Radio_4G_use_Num,	sum(0) as Radio_use_Den,	sum(0) as Radio_2G_use_Den,		sum(0) as Radio_3G_use_Den,	sum(0) as Radio_4G_use_Den,			
		sum(0) as Radio_U2100_use_Num,	sum(0) as Radio_U900_use_Num,    sum(0) as Radio_LTE2100_use_Num,    sum(0) as Radio_LTE2600_use_Num,    sum(0) as Radio_LTE1800_use_Num,    sum(0) as Radio_LTE800_use_Num,
		sum(0) as Radio_Band_Use_Den,	
		sum(0) as Radio_U2100_use_Den,	sum(0) as Radio_U900_use_Den,    sum(0) as Radio_LTE2100_use_Den,    sum(0) as Radio_LTE2600_use_Den,    sum(0) as Radio_LTE1800_use_Den,    sum(0) as Radio_LTE800_use_Den,

		sum(0) as [3G_DualCarrier_use_Num],	sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],		sum(0) as [3G_DC_2100_use_Den],	sum(0) as [3G_DC_900_use_Num],		sum(0) as [3G_DC_900_use_Den],

		sum(0) as [3G_NumCodes_use_Num],	sum(0) as [3G_NumCodes_use_Den],
		sum(0) as [3G_QPSK_use_Num],		sum(0) as [3G_16QAM_use_Num],    sum(0) as [3G_64QAM_use_Num],	
		sum(0) as [3G_QPSK_use_Den],		sum(0) as [3G_16QAM_use_Den],    sum(0) as [3G_64QAM_use_Den],

		sum(0) as [3G_%_SF22_Num],		sum(0) as [3G_%_SF22andSF42_Num],	sum(0) as [3G_%_SF4_Num],	sum(0) as [3G_%_SF42_Num],	
		sum(0) as [3G_%_SF22_Den],		sum(0) as [3G_%_SF22andSF42_Den],	sum(0) as [3G_%_SF4_Den],	sum(0) as [3G_%_SF42_Den],	
		sum(0) as [3G_%_TTI2ms_Num],	sum(0) as [3G_%_TTI2ms_Den],		
		sum(0) as [RSCP_Lin_Num],		sum(0) as [EcI0_Lin_Num],	
		sum(0) as [RSCP_Lin_Den],		sum(0) as [EcI0_Lin_Den],
	
		-- Performance:
		sum(0) as [3G_CQI],			sum(0) as [3G_DataStats_Den],
		Sum(0) as CQI_U900_Num,		sum(0) as CQI_U900_Den,	Sum(0) as CQI_U2100_Num,	sum(0) as CQI_U2100_Den,
		sum(0) as [HSPA_PCT_Num],	sum(0) as [HSPA+_PCT_Num],	sum(0) as [HSPA+_DC_PCT_Num],	sum(0) as [HSPA_PCT_Den],	sum(0) as [HSPA+_PCT_Den],	sum(0) as [HSPA+_DC_PCT_Den],
		sum(0) as [UL_Inter_Lin_Num],	sum(0) as [UL_Inter_Lin_Den],	
	
		-- Performance LTE:
		sum(0) as CQI_4G_Num,	sum(0) as CQI_L800_Num,	sum(0) as CQI_L1800_Num,	sum(0) as CQI_L2100_Num,	sum(0) as CQI_L2600_Num,
		sum(0) as CQI_4G_Den,	sum(0) as CQI_L800_Den,	sum(0) as CQI_L1800_Den,	sum(0) as CQI_L2100_Den,	sum(0) as CQI_L2600_Den,

		sum(0) as LTE_5Mhz_SC_Use_Num,	sum(0) as LTE_10Mhz_SC_Use_Num,	sum(0) as LTE_15Mhz_SC_Use_Num,	sum(0) as LTE_20Mhz_SC_Use_Num,	sum(0) as LTE_15Mhz_CA_Use_Num,	sum(0) as LTE_20Mhz_CA_Use_Num,	sum(0) as LTE_25Mhz_CA_Use_Num,	sum(0) as LTE_30Mhz_CA_Use_Num,	sum(0) as LTE_35Mhz_CA_Use_Num,	sum(0) as LTE_40Mhz_CA_Use_Num,	
		sum(0) as LTE_5Mhz_SC_Use_Den,	sum(0) as LTE_10Mhz_SC_Use_Den,	sum(0) as LTE_15Mhz_SC_Use_Den,	sum(0) as LTE_20Mhz_SC_Use_Den,sum(0) as LTE_15Mhz_CA_Use_Den,	sum(0) as LTE_20Mhz_CA_Use_Den,	sum(0) as LTE_25Mhz_CA_Use_Den,	sum(0) as LTE_30Mhz_CA_Use_Den,	sum(0) as LTE_35Mhz_CA_Use_Den,	sum(0) as LTE_40Mhz_CA_Use_Den,	
		sum(0) as LTE_BW_use_den,	
		sum(0) as [4G_RBs_use_Num],	sum(0) as [4G_RBs_use_Den],

		sum(0) as [4G_TM1_use_Num],	sum(0) as [4G_TM2_use_Num],	sum(0) as [4G_TM3_use_Num],	sum(0) as [4G_TM4_use_Num],	sum(0) as [4G_TM5_use_Num],	sum(0) as [4G_TM6_use_Num],	sum(0) as [4G_TM7_use_Num],	sum(0) as [4G_TM8_use_Num],	sum(0) as [4G_TM9_use_Num],
		sum(0) as [4G_TMInvalid_use_Num],	sum(0) as [4G_TMUnknown_use_Num],
		sum(0) as [4G_TM_Den],

		-- Technology LTE:
		sum(0) as [4G_%CA_Num],			sum(0) as [4G_%CA_Den],
		sum(0) as [4G_BPSK_Use_Num],	sum(0) as [4G_QPSK_Use_Num],	sum(0) as [4G_16QAM_Use_Num],   sum(0) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],	sum(0) as [4G_QPSK_Use_Den],	sum(0) as [4G_16QAM_Use_Den],   sum(0) as [4G_64QAM_Use_Den],		sum(0) as [4G_stats_Den],	
		sum(0) as [RSRP_Lin_Num],		sum(0) as [RSRQ_Lin_Num],		sum(0) as [SINR_Lin_Num],		sum(0) as [RSRP_Lin_Den],			sum(0) as [RSRQ_Lin_Den],	sum(0) as [SINR_Lin_Den],		

		--New KPIs:
		sum(0) as [MIMO_num],			sum(0) as [RI1_num],			sum(0) as [RI2_num],	sum(0) as [MIMO_den],	sum(0) as [RI1_den],	sum(0) as [RI2_den],
		sum(0) as RBs_Allocated_Den,	sum(0) as RBs_Allocated_Num,	max(0) as RBs_Allocated_Max,

		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		null as [1_N],	null as [2_N],	null as [3_N],	null as [4_N],	null as [5_N],	null as [6_N],	null as [7_N],	null as [8_N],	null as [9_N],	null as [10_N],
		null as [11_N],	null as [12_N],	null as [13_N],	null as [14_N],	null as [15_N],	null as [16_N],	null as [17_N],	null as [18_N],	null as [19_N],	null as [20_N],
		null as [21_N],	null as [22_N],	null as [23_N],	null as [24_N],	null as [25_N],	null as [26_N],	null as [27_N],	null as [28_N],	null as [29_N],	null as [30_N],
		null as [31_N],	null as [32_N],	null as [33_N],	null as [34_N],	null as [35_N],	null as [36_N],	null as [37_N],	null as [38_N],	null as [39_N],	null as [40_N],
		null as [41_N],	null as [42_N],	null as [43_N],	null as [44_N],	null as [45_N],	null as [46_N],	null as [47_N],	null as [48_N],	null as [49_N],	null as [50_N],
		null as [51_N],	null as [52_N],	null as [53_N],	null as [54_N],	null as [55_N],	null as [56_N],	null as [57_N],	null as [58_N],	null as [59_N],	null as [60_N],
		null as [61_N],	null as [62_N],	null as [63_N],	null as [64_N],	null as [65_N],	null as [66_N]
	
		--null as Region_Road_VF, null as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,null as [1]	,null as [2]	,null as [3]	,null as [4]	,null as [5]	,null as [6]	,null as [7]	,null as [8]	,null as [9]	,null as [10]
		,null as [11]	,null as [12]	,null as [13]	,null as [14]	,null as [15]	,null as [16]	,null as [17]	,null as [18]	,null as [19]	,null as [20]
		,null as [21]	,null as [22]	,null as [23]	,null as [24]	,null as [25]	,null as [26]	,null as [27]	,null as [28]	,null as [29]	,null as [30]
		,null as [31]	,null as [32]	,null as [33]	,null as [34]	,null as [35]	,null as [36]	,null as [37]	,null as [38]	,null as [39]	,null as [40]
		,null as [41],

		-- Parametros de configuracion:
		t.ASideDevice as ASideDevice, t.BSideDevice as BSideDevice, t.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from [AGGRData3G].dbo.[lcc_aggr_sp_MDD_Data_Web] t, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end,mnc,meas_round,Date_Reporting,Week_Reporting,t.entidad,t.Report_Type,t.Aggr_Type,
		t.ASideDevice, t.BSideDevice, t.SWVersion--, t.Region_VF, t.Region_OSP
	
	-------------
	union all
	select  
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment,mnc,meas_round,Date_Reporting as meas_date,Week_Reporting as meas_week, 
		'4G' as meas_Tech, 'WEB HTTP' as Test_type, 'Downlink' as Direction, entidad as vf_entity,t.Report_Type,t.Aggr_Type,
		
		-- General:
		sum(t.Navegaciones) as Num_tests,
		sum(t.[Fallos de acceso]) as Failed,
		sum(t.[Navegaciones fallidas]) as Dropped,
		sum(cast(t.[Session Time] as float)*t.[Count_SessionTime]) as Session_time_Num,
		sum(0) as Throughput_Den,
		sum(t.[Count_SessionTime]) as Session_time_Den,
		sum(0) as Throughput_Num,	max(0) as Throughput_Max,	sum(0) as Throughput_3M_Num,	sum(0) as Throughput_1M_Num,	sum(0) as Throughput_128K_Num,		sum(0) as Throughput_64K_Num, sum(0) as Throughput_384K_Num,
		
		--CAC 10/08/2017: thput de test sin error y con error
		sum(0) as Throughput_with_Error_Den,
		sum(0) as Throughput_with_Error_Num,

		sum(cast([IP Service Setup Time] as float)*[Count_IPServiceSetupTime]) as WEB_IP_ACCESS_TIME_NUM,
		sum([Count_IPServiceSetupTime]) as WEB_IP_ACCESS_TIME_DEN,
		sum(cast([Transfer Time] as float)*[Count_TransferTime]) as WEB_HTTP_TRANSFER_TIME_NUM,
		sum([Count_TransferTime]) as WEB_HTTP_TRANSFER_TIME_DEN,

		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_NUM,		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_NUM,		sum(0) as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,	sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(0) as Radio_2G_use_Num,	sum(0) as Radio_3G_use_Num,		sum(0) as Radio_4G_use_Num,	sum(0) as Radio_use_Den,	sum(0) as Radio_2G_use_Den,		sum(0) as Radio_3G_use_Den,	sum(0) as Radio_4G_use_Den,			
		sum(0) as Radio_U2100_use_Num,	sum(0) as Radio_U900_use_Num,    sum(0) as Radio_LTE2100_use_Num,    sum(0) as Radio_LTE2600_use_Num,    sum(0) as Radio_LTE1800_use_Num,    sum(0) as Radio_LTE800_use_Num,
		sum(0) as Radio_Band_Use_Den,	
		sum(0) as Radio_U2100_use_Den,	sum(0) as Radio_U900_use_Den,    sum(0) as Radio_LTE2100_use_Den,    sum(0) as Radio_LTE2600_use_Den,    sum(0) as Radio_LTE1800_use_Den,    sum(0) as Radio_LTE800_use_Den,

		sum(0) as [3G_DualCarrier_use_Num],	sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],		sum(0) as [3G_DC_2100_use_Den],	sum(0) as [3G_DC_900_use_Num],		sum(0) as [3G_DC_900_use_Den],

		sum(0) as [3G_NumCodes_use_Num],	sum(0) as [3G_NumCodes_use_Den],
		sum(0) as [3G_QPSK_use_Num],		sum(0) as [3G_16QAM_use_Num],    sum(0) as [3G_64QAM_use_Num],	
		sum(0) as [3G_QPSK_use_Den],		sum(0) as [3G_16QAM_use_Den],    sum(0) as [3G_64QAM_use_Den],

		sum(0) as [3G_%_SF22_Num],		sum(0) as [3G_%_SF22andSF42_Num],	sum(0) as [3G_%_SF4_Num],	sum(0) as [3G_%_SF42_Num],	
		sum(0) as [3G_%_SF22_Den],		sum(0) as [3G_%_SF22andSF42_Den],	sum(0) as [3G_%_SF4_Den],	sum(0) as [3G_%_SF42_Den],	
		sum(0) as [3G_%_TTI2ms_Num],	sum(0) as [3G_%_TTI2ms_Den],		
		sum(0) as [RSCP_Lin_Num],		sum(0) as [EcI0_Lin_Num],	
		sum(0) as [RSCP_Lin_Den],		sum(0) as [EcI0_Lin_Den],
	
		-- Performance:
		sum(0) as [3G_CQI],			sum(0) as [3G_DataStats_Den],
		Sum(0) as CQI_U900_Num,		sum(0) as CQI_U900_Den,	Sum(0) as CQI_U2100_Num,	sum(0) as CQI_U2100_Den,
		sum(0) as [HSPA_PCT_Num],	sum(0) as [HSPA+_PCT_Num],	sum(0) as [HSPA+_DC_PCT_Num],	sum(0) as [HSPA_PCT_Den],	sum(0) as [HSPA+_PCT_Den],	sum(0) as [HSPA+_DC_PCT_Den],
		sum(0) as [UL_Inter_Lin_Num],	sum(0) as [UL_Inter_Lin_Den],	
	
		-- Performance LTE:
		sum(0) as CQI_4G_Num,	sum(0) as CQI_L800_Num,	sum(0) as CQI_L1800_Num,	sum(0) as CQI_L2100_Num,	sum(0) as CQI_L2600_Num,
		sum(0) as CQI_4G_Den,	sum(0) as CQI_L800_Den,	sum(0) as CQI_L1800_Den,	sum(0) as CQI_L2100_Den,	sum(0) as CQI_L2600_Den,

		sum(0) as LTE_5Mhz_SC_Use_Num,	sum(0) as LTE_10Mhz_SC_Use_Num,	sum(0) as LTE_15Mhz_SC_Use_Num,	sum(0) as LTE_20Mhz_SC_Use_Num,	sum(0) as LTE_15Mhz_CA_Use_Num,	sum(0) as LTE_20Mhz_CA_Use_Num,	sum(0) as LTE_25Mhz_CA_Use_Num,	sum(0) as LTE_30Mhz_CA_Use_Num,	sum(0) as LTE_35Mhz_CA_Use_Num,	sum(0) as LTE_40Mhz_CA_Use_Num,	
		sum(0) as LTE_5Mhz_SC_Use_Den,	sum(0) as LTE_10Mhz_SC_Use_Den,	sum(0) as LTE_15Mhz_SC_Use_Den,	sum(0) as LTE_20Mhz_SC_Use_Den,sum(0) as LTE_15Mhz_CA_Use_Den,	sum(0) as LTE_20Mhz_CA_Use_Den,	sum(0) as LTE_25Mhz_CA_Use_Den,	sum(0) as LTE_30Mhz_CA_Use_Den,	sum(0) as LTE_35Mhz_CA_Use_Den,	sum(0) as LTE_40Mhz_CA_Use_Den,	
		sum(0) as LTE_BW_use_den,	
		sum(0) as [4G_RBs_use_Num],	sum(0) as [4G_RBs_use_Den],

		sum(0) as [4G_TM1_use_Num],	sum(0) as [4G_TM2_use_Num],	sum(0) as [4G_TM3_use_Num],	sum(0) as [4G_TM4_use_Num],	sum(0) as [4G_TM5_use_Num],	sum(0) as [4G_TM6_use_Num],	sum(0) as [4G_TM7_use_Num],	sum(0) as [4G_TM8_use_Num],	sum(0) as [4G_TM9_use_Num],
		sum(0) as [4G_TMInvalid_use_Num],	sum(0) as [4G_TMUnknown_use_Num],
		sum(0) as [4G_TM_Den],

		-- Technology LTE:
		sum(0) as [4G_%CA_Num],			sum(0) as [4G_%CA_Den],
		sum(0) as [4G_BPSK_Use_Num],	sum(0) as [4G_QPSK_Use_Num],	sum(0) as [4G_16QAM_Use_Num],   sum(0) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],	sum(0) as [4G_QPSK_Use_Den],	sum(0) as [4G_16QAM_Use_Den],   sum(0) as [4G_64QAM_Use_Den],		sum(0) as [4G_stats_Den],	
		sum(0) as [RSRP_Lin_Num],		sum(0) as [RSRQ_Lin_Num],		sum(0) as [SINR_Lin_Num],		sum(0) as [RSRP_Lin_Den],			sum(0) as [RSRQ_Lin_Den],	sum(0) as [SINR_Lin_Den],		

		--New KPIs:
		sum(0) as [MIMO_num],			sum(0) as [RI1_num],			sum(0) as [RI2_num],	sum(0) as [MIMO_den],	sum(0) as [RI1_den],	sum(0) as [RI2_den],
		sum(0) as RBs_Allocated_Den,	sum(0) as RBs_Allocated_Num,	max(0) as RBs_Allocated_Max,

		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		null as [1_N],	null as [2_N],	null as [3_N],	null as [4_N],	null as [5_N],	null as [6_N],	null as [7_N],	null as [8_N],	null as [9_N],	null as [10_N],
		null as [11_N],	null as [12_N],	null as [13_N],	null as [14_N],	null as [15_N],	null as [16_N],	null as [17_N],	null as [18_N],	null as [19_N],	null as [20_N],
		null as [21_N],	null as [22_N],	null as [23_N],	null as [24_N],	null as [25_N],	null as [26_N],	null as [27_N],	null as [28_N],	null as [29_N],	null as [30_N],
		null as [31_N],	null as [32_N],	null as [33_N],	null as [34_N],	null as [35_N],	null as [36_N],	null as [37_N],	null as [38_N],	null as [39_N],	null as [40_N],
		null as [41_N],	null as [42_N],	null as [43_N],	null as [44_N],	null as [45_N],	null as [46_N],	null as [47_N],	null as [48_N],	null as [49_N],	null as [50_N],
		null as [51_N],	null as [52_N],	null as [53_N],	null as [54_N],	null as [55_N],	null as [56_N],	null as [57_N],	null as [58_N],	null as [59_N],	null as [60_N],
		null as [61_N],	null as [62_N],	null as [63_N],	null as [64_N],	null as [65_N],	null as [66_N]
	
		--null as Region_Road_VF, null as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,null as [1]	,null as [2]	,null as [3]	,null as [4]	,null as [5]	,null as [6]	,null as [7]	,null as [8]	,null as [9]	,null as [10]
		,null as [11]	,null as [12]	,null as [13]	,null as [14]	,null as [15]	,null as [16]	,null as [17]	,null as [18]	,null as [19]	,null as [20]
		,null as [21]	,null as [22]	,null as [23]	,null as [24]	,null as [25]	,null as [26]	,null as [27]	,null as [28]	,null as [29]	,null as [30]
		,null as [31]	,null as [32]	,null as [33]	,null as [34]	,null as [35]	,null as [36]	,null as [37]	,null as [38]	,null as [39]	,null as [40]
		,null as [41],

		-- Parametros de configuracion:
		t.ASideDevice as ASideDevice, t.BSideDevice as BSideDevice, t.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_Web] t, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end,mnc,meas_round,Date_Reporting,Week_Reporting,t.entidad,t.Report_Type,t.Aggr_Type,
		t.ASideDevice, t.BSideDevice, t.SWVersion--, t.Region_VF, t.Region_OSP
	
	-------------
	-- 3G/4G HTTPs:
	insert into _RI_Data_e 
	select  
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment,mnc,meas_round,Date_Reporting as meas_date,Week_Reporting as meas_week, 
		'3G' as meas_Tech, 'WEB HTTPS' as Test_type, 'Downlink' as Direction, entidad as vf_entity,t.Report_Type,t.Aggr_Type,
		
		-- General:
		sum(t.[Navegaciones HTTPS]) as Num_tests,
		sum(t.[Fallos de acceso HTTPS]) as Failed,
		sum(t.[Navegaciones fallidas HTTPS]) as Dropped,
		sum(cast(t.[Session Time HTTPS] as float)*t.[Count_SessionTime HTTPS]) as Session_time_Num,
		sum(0) as Throughput_Den,
		sum(t.[Count_SessionTime HTTPS]) as Session_time_Den,
		sum(0) as Throughput_Num,	max(0) as Throughput_Max,	sum(0) as Throughput_3M_Num,	sum(0) as Throughput_1M_Num,	sum(0) as Throughput_128K_Num,	sum(0) as Throughput_64K_Num, sum(0) as Throughput_384K_Num,

		--CAC 10/08/2017: thput de test sin error y con error
		sum(0) as Throughput_with_Error_Den,
		sum(0) as Throughput_with_Error_Num,

		sum(0) as WEB_IP_ACCESS_TIME_NUM,		sum(0) as WEB_IP_ACCESS_TIME_DEN,
		sum(0) as WEB_HTTP_TRANSFER_TIME_NUM,	sum(0) as WEB_HTTP_TRANSFER_TIME_DEN,

		sum(cast([IP Service Setup Time HTTPS] as float)*[Count_IPServiceSetupTime HTTPS])	as WEB_IP_ACCESS_TIME_HTTPS_NUM,
		sum([Count_IPServiceSetupTime HTTPS])												as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(cast([Transfer Time HTTPS] as float)*[Count_TransferTime HTTPS])				as WEB_TRANSFER_TIME_HTTPS_NUM,
		sum([Count_TransferTime HTTPS])														as WEB_TRANSFER_TIME_HTTPS_DEN,
	
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,	sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(0) as Radio_2G_use_Num,	sum(0) as Radio_3G_use_Num,		sum(0) as Radio_4G_use_Num,	sum(0) as Radio_use_Den,	sum(0) as Radio_2G_use_Den,		sum(0) as Radio_3G_use_Den,	sum(0) as Radio_4G_use_Den,			
		sum(0) as Radio_U2100_use_Num,	sum(0) as Radio_U900_use_Num,    sum(0) as Radio_LTE2100_use_Num,    sum(0) as Radio_LTE2600_use_Num,    sum(0) as Radio_LTE1800_use_Num,    sum(0) as Radio_LTE800_use_Num,
		sum(0) as Radio_Band_Use_Den,	
		sum(0) as Radio_U2100_use_Den,	sum(0) as Radio_U900_use_Den,    sum(0) as Radio_LTE2100_use_Den,    sum(0) as Radio_LTE2600_use_Den,    sum(0) as Radio_LTE1800_use_Den,    sum(0) as Radio_LTE800_use_Den,

		sum(0) as [3G_DualCarrier_use_Num],	sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],		sum(0) as [3G_DC_2100_use_Den],	sum(0) as [3G_DC_900_use_Num],		sum(0) as [3G_DC_900_use_Den],

		sum(0) as [3G_NumCodes_use_Num],	sum(0) as [3G_NumCodes_use_Den],
		sum(0) as [3G_QPSK_use_Num],		sum(0) as [3G_16QAM_use_Num],    sum(0) as [3G_64QAM_use_Num],	
		sum(0) as [3G_QPSK_use_Den],		sum(0) as [3G_16QAM_use_Den],    sum(0) as [3G_64QAM_use_Den],

		sum(0) as [3G_%_SF22_Num],		sum(0) as [3G_%_SF22andSF42_Num],	sum(0) as [3G_%_SF4_Num],	sum(0) as [3G_%_SF42_Num],	
		sum(0) as [3G_%_SF22_Den],		sum(0) as [3G_%_SF22andSF42_Den],	sum(0) as [3G_%_SF4_Den],	sum(0) as [3G_%_SF42_Den],	
		sum(0) as [3G_%_TTI2ms_Num],	sum(0) as [3G_%_TTI2ms_Den],		
		sum(0) as [RSCP_Lin_Num],		sum(0) as [EcI0_Lin_Num],	
		sum(0) as [RSCP_Lin_Den],		sum(0) as [EcI0_Lin_Den],
	
		-- Performance:
		sum(0) as [3G_CQI],			sum(0) as [3G_DataStats_Den],
		Sum(0) as CQI_U900_Num,		sum(0) as CQI_U900_Den,	Sum(0) as CQI_U2100_Num,	sum(0) as CQI_U2100_Den,
		sum(0) as [HSPA_PCT_Num],	sum(0) as [HSPA+_PCT_Num],	sum(0) as [HSPA+_DC_PCT_Num],	sum(0) as [HSPA_PCT_Den],	sum(0) as [HSPA+_PCT_Den],	sum(0) as [HSPA+_DC_PCT_Den],
		sum(0) as [UL_Inter_Lin_Num],	sum(0) as [UL_Inter_Lin_Den],	
	
		-- Performance LTE:
		sum(0) as CQI_4G_Num,	sum(0) as CQI_L800_Num,	sum(0) as CQI_L1800_Num,	sum(0) as CQI_L2100_Num,	sum(0) as CQI_L2600_Num,
		sum(0) as CQI_4G_Den,	sum(0) as CQI_L800_Den,	sum(0) as CQI_L1800_Den,	sum(0) as CQI_L2100_Den,	sum(0) as CQI_L2600_Den,

		sum(0) as LTE_5Mhz_SC_Use_Num,	sum(0) as LTE_10Mhz_SC_Use_Num,	sum(0) as LTE_15Mhz_SC_Use_Num,	sum(0) as LTE_20Mhz_SC_Use_Num,	sum(0) as LTE_15Mhz_CA_Use_Num,	sum(0) as LTE_20Mhz_CA_Use_Num,	sum(0) as LTE_25Mhz_CA_Use_Num,	sum(0) as LTE_30Mhz_CA_Use_Num,	sum(0) as LTE_35Mhz_CA_Use_Num,	sum(0) as LTE_40Mhz_CA_Use_Num,	
		sum(0) as LTE_5Mhz_SC_Use_Den,	sum(0) as LTE_10Mhz_SC_Use_Den,	sum(0) as LTE_15Mhz_SC_Use_Den,	sum(0) as LTE_20Mhz_SC_Use_Den,sum(0) as LTE_15Mhz_CA_Use_Den,	sum(0) as LTE_20Mhz_CA_Use_Den,	sum(0) as LTE_25Mhz_CA_Use_Den,	sum(0) as LTE_30Mhz_CA_Use_Den,	sum(0) as LTE_35Mhz_CA_Use_Den,	sum(0) as LTE_40Mhz_CA_Use_Den,	
		sum(0) as LTE_BW_use_den,	
		sum(0) as [4G_RBs_use_Num],	sum(0) as [4G_RBs_use_Den],

		sum(0) as [4G_TM1_use_Num],	sum(0) as [4G_TM2_use_Num],	sum(0) as [4G_TM3_use_Num],	sum(0) as [4G_TM4_use_Num],	sum(0) as [4G_TM5_use_Num],	sum(0) as [4G_TM6_use_Num],	sum(0) as [4G_TM7_use_Num],	sum(0) as [4G_TM8_use_Num],	sum(0) as [4G_TM9_use_Num],
		sum(0) as [4G_TMInvalid_use_Num],	sum(0) as [4G_TMUnknown_use_Num],
		sum(0) as [4G_TM_Den],

		-- Technology LTE:
		sum(0) as [4G_%CA_Num],			sum(0) as [4G_%CA_Den],
		sum(0) as [4G_BPSK_Use_Num],	sum(0) as [4G_QPSK_Use_Num],	sum(0) as [4G_16QAM_Use_Num],   sum(0) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],	sum(0) as [4G_QPSK_Use_Den],	sum(0) as [4G_16QAM_Use_Den],   sum(0) as [4G_64QAM_Use_Den],		sum(0) as [4G_stats_Den],	
		sum(0) as [RSRP_Lin_Num],		sum(0) as [RSRQ_Lin_Num],		sum(0) as [SINR_Lin_Num],		sum(0) as [RSRP_Lin_Den],			sum(0) as [RSRQ_Lin_Den],	sum(0) as [SINR_Lin_Den],		

		--New KPIs:
		sum(0) as [MIMO_num],			sum(0) as [RI1_num],			sum(0) as [RI2_num],	sum(0) as [MIMO_den],	sum(0) as [RI1_den],	sum(0) as [RI2_den],
		sum(0) as RBs_Allocated_Den,	sum(0) as RBs_Allocated_Num,	max(0) as RBs_Allocated_Max,
	
		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		null as [1_N],	null as [2_N],	null as [3_N],	null as [4_N],	null as [5_N],	null as [6_N],	null as [7_N],	null as [8_N],	null as [9_N],	null as [10_N],
		null as [11_N],	null as [12_N],	null as [13_N],	null as [14_N],	null as [15_N],	null as [16_N],	null as [17_N],	null as [18_N],	null as [19_N],	null as [20_N],
		null as [21_N],	null as [22_N],	null as [23_N],	null as [24_N],	null as [25_N],	null as [26_N],	null as [27_N],	null as [28_N],	null as [29_N],	null as [30_N],
		null as [31_N],	null as [32_N],	null as [33_N],	null as [34_N],	null as [35_N],	null as [36_N],	null as [37_N],	null as [38_N],	null as [39_N],	null as [40_N],
		null as [41_N],	null as [42_N],	null as [43_N],	null as [44_N],	null as [45_N],	null as [46_N],	null as [47_N],	null as [48_N],	null as [49_N],	null as [50_N],
		null as [51_N],	null as [52_N],	null as [53_N],	null as [54_N],	null as [55_N],	null as [56_N],	null as [57_N],	null as [58_N],	null as [59_N],	null as [60_N],
		null as [61_N],	null as [62_N],	null as [63_N],	null as [64_N],	null as [65_N],	null as [66_N]
	
		--null as Region_Road_VF, null as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,null as [1]	,null as [2]	,null as [3]	,null as [4]	,null as [5]	,null as [6]	,null as [7]	,null as [8]	,null as [9]	,null as [10]
		,null as [11]	,null as [12]	,null as [13]	,null as [14]	,null as [15]	,null as [16]	,null as [17]	,null as [18]	,null as [19]	,null as [20]
		,null as [21]	,null as [22]	,null as [23]	,null as [24]	,null as [25]	,null as [26]	,null as [27]	,null as [28]	,null as [29]	,null as [30]
		,null as [31]	,null as [32]	,null as [33]	,null as [34]	,null as [35]	,null as [36]	,null as [37]	,null as [38]	,null as [39]	,null as [40]
		,null as [41],

		-- Parametros de configuracion:
		t.ASideDevice as ASideDevice, t.BSideDevice as BSideDevice, t.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from [AGGRData3G].dbo.[lcc_aggr_sp_MDD_Data_Web] t, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end,mnc,meas_round,Date_Reporting,Week_Reporting,t.entidad,t.Report_Type,t.Aggr_Type,
		t.ASideDevice, t.BSideDevice, t.SWVersion--, t.Region_VF, t.Region_OSP
	
	-------------
	union all
	select  
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment,mnc,meas_round,Date_Reporting as meas_date,Week_Reporting as meas_week, 
		'4G' as meas_Tech, 'WEB HTTPS' as Test_type, 'Downlink' as Direction, entidad as vf_entity,t.Report_Type,t.Aggr_Type,
		
		-- General:
		sum(t.[Navegaciones HTTPS]) as Num_tests,
		sum(t.[Fallos de acceso HTTPS]) as Failed,
		sum(t.[Navegaciones fallidas HTTPS]) as Dropped,
		sum(cast(t.[Session Time HTTPS] as float)*t.[Count_SessionTime HTTPS]) as Session_time_Num,
		sum(0) as Throughput_Den,
		sum(t.[Count_SessionTime HTTPS]) as Session_time_Den,
		sum(0) as Throughput_Num,	max(0) as Throughput_Max,	sum(0) as Throughput_3M_Num,	sum(0) as Throughput_1M_Num,sum(0) as Throughput_128K_Num,	sum(0) as Throughput_64K_Num, sum(0) as Throughput_384K_Num,

		--CAC 10/08/2017: thput de test sin error y con error
		sum(0) as Throughput_with_Error_Den,
		sum(0) as Throughput_with_Error_Num,

		sum(0) as WEB_IP_ACCESS_TIME_NUM,		sum(0) as WEB_IP_ACCESS_TIME_DEN,
		sum(0) as WEB_HTTP_TRANSFER_TIME_NUM,	sum(0) as WEB_HTTP_TRANSFER_TIME_DEN,

		sum(cast([IP Service Setup Time HTTPS] as float)*[Count_IPServiceSetupTime HTTPS])	as WEB_IP_ACCESS_TIME_HTTPS_NUM,
		sum([Count_IPServiceSetupTime HTTPS])												as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(cast([Transfer Time HTTPS] as float)*[Count_TransferTime HTTPS])				as WEB_TRANSFER_TIME_HTTPS_NUM,
		sum([Count_TransferTime HTTPS])														as WEB_TRANSFER_TIME_HTTPS_DEN,

		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,	sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(0) as Radio_2G_use_Num,	sum(0) as Radio_3G_use_Num,		sum(0) as Radio_4G_use_Num,	sum(0) as Radio_use_Den,	sum(0) as Radio_2G_use_Den,		sum(0) as Radio_3G_use_Den,	sum(0) as Radio_4G_use_Den,			
		sum(0) as Radio_U2100_use_Num,	sum(0) as Radio_U900_use_Num,    sum(0) as Radio_LTE2100_use_Num,    sum(0) as Radio_LTE2600_use_Num,    sum(0) as Radio_LTE1800_use_Num,    sum(0) as Radio_LTE800_use_Num,
		sum(0) as Radio_Band_Use_Den,	
		sum(0) as Radio_U2100_use_Den,	sum(0) as Radio_U900_use_Den,    sum(0) as Radio_LTE2100_use_Den,    sum(0) as Radio_LTE2600_use_Den,    sum(0) as Radio_LTE1800_use_Den,    sum(0) as Radio_LTE800_use_Den,

		sum(0) as [3G_DualCarrier_use_Num],	sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],		sum(0) as [3G_DC_2100_use_Den],	sum(0) as [3G_DC_900_use_Num],		sum(0) as [3G_DC_900_use_Den],

		sum(0) as [3G_NumCodes_use_Num],	sum(0) as [3G_NumCodes_use_Den],
		sum(0) as [3G_QPSK_use_Num],		sum(0) as [3G_16QAM_use_Num],    sum(0) as [3G_64QAM_use_Num],	
		sum(0) as [3G_QPSK_use_Den],		sum(0) as [3G_16QAM_use_Den],    sum(0) as [3G_64QAM_use_Den],

		sum(0) as [3G_%_SF22_Num],		sum(0) as [3G_%_SF22andSF42_Num],	sum(0) as [3G_%_SF4_Num],	sum(0) as [3G_%_SF42_Num],	
		sum(0) as [3G_%_SF22_Den],		sum(0) as [3G_%_SF22andSF42_Den],	sum(0) as [3G_%_SF4_Den],	sum(0) as [3G_%_SF42_Den],	
		sum(0) as [3G_%_TTI2ms_Num],	sum(0) as [3G_%_TTI2ms_Den],		
		sum(0) as [RSCP_Lin_Num],		sum(0) as [EcI0_Lin_Num],	
		sum(0) as [RSCP_Lin_Den],		sum(0) as [EcI0_Lin_Den],
	
		-- Performance:
		sum(0) as [3G_CQI],			sum(0) as [3G_DataStats_Den],
		Sum(0) as CQI_U900_Num,		sum(0) as CQI_U900_Den,	Sum(0) as CQI_U2100_Num,	sum(0) as CQI_U2100_Den,
		sum(0) as [HSPA_PCT_Num],	sum(0) as [HSPA+_PCT_Num],	sum(0) as [HSPA+_DC_PCT_Num],	sum(0) as [HSPA_PCT_Den],	sum(0) as [HSPA+_PCT_Den],	sum(0) as [HSPA+_DC_PCT_Den],
		sum(0) as [UL_Inter_Lin_Num],	sum(0) as [UL_Inter_Lin_Den],	
	
		-- Performance LTE:
		sum(0) as CQI_4G_Num,	sum(0) as CQI_L800_Num,	sum(0) as CQI_L1800_Num,	sum(0) as CQI_L2100_Num,	sum(0) as CQI_L2600_Num,
		sum(0) as CQI_4G_Den,	sum(0) as CQI_L800_Den,	sum(0) as CQI_L1800_Den,	sum(0) as CQI_L2100_Den,	sum(0) as CQI_L2600_Den,

		sum(0) as LTE_5Mhz_SC_Use_Num,	sum(0) as LTE_10Mhz_SC_Use_Num,	sum(0) as LTE_15Mhz_SC_Use_Num,	sum(0) as LTE_20Mhz_SC_Use_Num,	sum(0) as LTE_15Mhz_CA_Use_Num,	sum(0) as LTE_20Mhz_CA_Use_Num,	sum(0) as LTE_25Mhz_CA_Use_Num,	sum(0) as LTE_30Mhz_CA_Use_Num,	sum(0) as LTE_35Mhz_CA_Use_Num,	sum(0) as LTE_40Mhz_CA_Use_Num,	
		sum(0) as LTE_5Mhz_SC_Use_Den,	sum(0) as LTE_10Mhz_SC_Use_Den,	sum(0) as LTE_15Mhz_SC_Use_Den,	sum(0) as LTE_20Mhz_SC_Use_Den,sum(0) as LTE_15Mhz_CA_Use_Den,	sum(0) as LTE_20Mhz_CA_Use_Den,	sum(0) as LTE_25Mhz_CA_Use_Den,	sum(0) as LTE_30Mhz_CA_Use_Den,	sum(0) as LTE_35Mhz_CA_Use_Den,	sum(0) as LTE_40Mhz_CA_Use_Den,	
		sum(0) as LTE_BW_use_den,	
		sum(0) as [4G_RBs_use_Num],	sum(0) as [4G_RBs_use_Den],

		sum(0) as [4G_TM1_use_Num],	sum(0) as [4G_TM2_use_Num],	sum(0) as [4G_TM3_use_Num],	sum(0) as [4G_TM4_use_Num],	sum(0) as [4G_TM5_use_Num],	sum(0) as [4G_TM6_use_Num],	sum(0) as [4G_TM7_use_Num],	sum(0) as [4G_TM8_use_Num],	sum(0) as [4G_TM9_use_Num],
		sum(0) as [4G_TMInvalid_use_Num],	sum(0) as [4G_TMUnknown_use_Num],
		sum(0) as [4G_TM_Den],

		-- Technology LTE:
		sum(0) as [4G_%CA_Num],			sum(0) as [4G_%CA_Den],
		sum(0) as [4G_BPSK_Use_Num],	sum(0) as [4G_QPSK_Use_Num],	sum(0) as [4G_16QAM_Use_Num],   sum(0) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],	sum(0) as [4G_QPSK_Use_Den],	sum(0) as [4G_16QAM_Use_Den],   sum(0) as [4G_64QAM_Use_Den],		sum(0) as [4G_stats_Den],	
		sum(0) as [RSRP_Lin_Num],		sum(0) as [RSRQ_Lin_Num],		sum(0) as [SINR_Lin_Num],		sum(0) as [RSRP_Lin_Den],			sum(0) as [RSRQ_Lin_Den],	sum(0) as [SINR_Lin_Den],		

		--New KPIs:
		sum(0) as [MIMO_num],			sum(0) as [RI1_num],			sum(0) as [RI2_num],	sum(0) as [MIMO_den],	sum(0) as [RI1_den],	sum(0) as [RI2_den],
		sum(0) as RBs_Allocated_Den,	sum(0) as RBs_Allocated_Num,	max(0) as RBs_Allocated_Max,	
	
		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		null as [1_N],	null as [2_N],	null as [3_N],	null as [4_N],	null as [5_N],	null as [6_N],	null as [7_N],	null as [8_N],	null as [9_N],	null as [10_N],
		null as [11_N],	null as [12_N],	null as [13_N],	null as [14_N],	null as [15_N],	null as [16_N],	null as [17_N],	null as [18_N],	null as [19_N],	null as [20_N],
		null as [21_N],	null as [22_N],	null as [23_N],	null as [24_N],	null as [25_N],	null as [26_N],	null as [27_N],	null as [28_N],	null as [29_N],	null as [30_N],
		null as [31_N],	null as [32_N],	null as [33_N],	null as [34_N],	null as [35_N],	null as [36_N],	null as [37_N],	null as [38_N],	null as [39_N],	null as [40_N],
		null as [41_N],	null as [42_N],	null as [43_N],	null as [44_N],	null as [45_N],	null as [46_N],	null as [47_N],	null as [48_N],	null as [49_N],	null as [50_N],
		null as [51_N],	null as [52_N],	null as [53_N],	null as [54_N],	null as [55_N],	null as [56_N],	null as [57_N],	null as [58_N],	null as [59_N],	null as [60_N],
		null as [61_N],	null as [62_N],	null as [63_N],	null as [64_N],	null as [65_N],	null as [66_N]
	
		--null as Region_Road_VF, null as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,null as [1]	,null as [2]	,null as [3]	,null as [4]	,null as [5]	,null as [6]	,null as [7]	,null as [8]	,null as [9]	,null as [10]
		,null as [11]	,null as [12]	,null as [13]	,null as [14]	,null as [15]	,null as [16]	,null as [17]	,null as [18]	,null as [19]	,null as [20]
		,null as [21]	,null as [22]	,null as [23]	,null as [24]	,null as [25]	,null as [26]	,null as [27]	,null as [28]	,null as [29]	,null as [30]
		,null as [31]	,null as [32]	,null as [33]	,null as [34]	,null as [35]	,null as [36]	,null as [37]	,null as [38]	,null as [39]	,null as [40]
		,null as [41],

		-- Parametros de configuracion:
		t.ASideDevice as ASideDevice, t.BSideDevice as BSideDevice, t.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_Web] t, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end,mnc,meas_round,Date_Reporting,Week_Reporting,t.entidad,t.Report_Type,t.Aggr_Type,
		t.ASideDevice, t.BSideDevice, t.SWVersion--, t.Region_VF, t.Region_OSP
	
	-------------
	-- 3G/4G Public:
	insert into _RI_Data_e 
	select  
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment,mnc,meas_round,Date_Reporting as meas_date,Week_Reporting as meas_week, 
		'3G' as meas_Tech, 'WEB Public' as Test_type, 'Downlink' as Direction, entidad as vf_entity,t.Report_Type,t.Aggr_Type,
		
		-- General:
		sum(t.[Navegaciones Public]) as Num_tests,
		sum(t.[Fallos de acceso public]) as Failed,
		sum(t.[Navegaciones fallidas public]) as Dropped,
		sum(cast(t.[Session Time public] as float)*t.[Count_SessionTime public]) as Session_time_Num,
		sum(0) as Throughput_Den,
		sum(t.[Count_SessionTime public]) as Session_time_Den,
		sum(0) as Throughput_Num,	max(0) as Throughput_Max,	sum(0) as Throughput_3M_Num,	sum(0) as Throughput_1M_Num,	sum(0) as Throughput_128K_Num,	sum(0) as Throughput_64K_Num, sum(0) as Throughput_384K_Num,

		--CAC 10/08/2017: thput de test sin error y con error
		sum(0) as Throughput_with_Error_Den,
		sum(0) as Throughput_with_Error_Num,

		sum(0) as WEB_IP_ACCESS_TIME_NUM,			sum(0) as WEB_IP_ACCESS_TIME_DEN,
		sum(0) as WEB_HTTP_TRANSFER_TIME_NUM,		sum(0) as WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_NUM,		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_NUM,		sum(0) as WEB_TRANSFER_TIME_HTTPS_DEN,

		sum(cast([IP Service Setup Time Public] as float)*[Count_IPServiceSetupTime Public])	as WEB_IP_ACCESS_TIME_PUBLIC_NUM,
		sum([Count_IPServiceSetupTime Public])													as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(cast([Transfer Time Public] as float)*[Count_TransferTime Public])					as WEB_TRANSFER_TIME_PUBLIC_NUM,
		sum([Count_TransferTime Public])														as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(0) as Radio_2G_use_Num,	sum(0) as Radio_3G_use_Num,		sum(0) as Radio_4G_use_Num,	sum(0) as Radio_use_Den,	sum(0) as Radio_2G_use_Den,		sum(0) as Radio_3G_use_Den,	sum(0) as Radio_4G_use_Den,			
		sum(0) as Radio_U2100_use_Num,	sum(0) as Radio_U900_use_Num,    sum(0) as Radio_LTE2100_use_Num,    sum(0) as Radio_LTE2600_use_Num,    sum(0) as Radio_LTE1800_use_Num,    sum(0) as Radio_LTE800_use_Num,
		sum(0) as Radio_Band_Use_Den,	
		sum(0) as Radio_U2100_use_Den,	sum(0) as Radio_U900_use_Den,    sum(0) as Radio_LTE2100_use_Den,    sum(0) as Radio_LTE2600_use_Den,    sum(0) as Radio_LTE1800_use_Den,    sum(0) as Radio_LTE800_use_Den,

		sum(0) as [3G_DualCarrier_use_Num],	sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],		sum(0) as [3G_DC_2100_use_Den],	sum(0) as [3G_DC_900_use_Num],		sum(0) as [3G_DC_900_use_Den],

		sum(0) as [3G_NumCodes_use_Num],	sum(0) as [3G_NumCodes_use_Den],
		sum(0) as [3G_QPSK_use_Num],		sum(0) as [3G_16QAM_use_Num],    sum(0) as [3G_64QAM_use_Num],	
		sum(0) as [3G_QPSK_use_Den],		sum(0) as [3G_16QAM_use_Den],    sum(0) as [3G_64QAM_use_Den],

		sum(0) as [3G_%_SF22_Num],		sum(0) as [3G_%_SF22andSF42_Num],	sum(0) as [3G_%_SF4_Num],	sum(0) as [3G_%_SF42_Num],	
		sum(0) as [3G_%_SF22_Den],		sum(0) as [3G_%_SF22andSF42_Den],	sum(0) as [3G_%_SF4_Den],	sum(0) as [3G_%_SF42_Den],	
		sum(0) as [3G_%_TTI2ms_Num],	sum(0) as [3G_%_TTI2ms_Den],		
		sum(0) as [RSCP_Lin_Num],		sum(0) as [EcI0_Lin_Num],	
		sum(0) as [RSCP_Lin_Den],		sum(0) as [EcI0_Lin_Den],
	
		-- Performance:
		sum(0) as [3G_CQI],			sum(0) as [3G_DataStats_Den],
		Sum(0) as CQI_U900_Num,		sum(0) as CQI_U900_Den,	Sum(0) as CQI_U2100_Num,	sum(0) as CQI_U2100_Den,
		sum(0) as [HSPA_PCT_Num],	sum(0) as [HSPA+_PCT_Num],	sum(0) as [HSPA+_DC_PCT_Num],	sum(0) as [HSPA_PCT_Den],	sum(0) as [HSPA+_PCT_Den],	sum(0) as [HSPA+_DC_PCT_Den],
		sum(0) as [UL_Inter_Lin_Num],	sum(0) as [UL_Inter_Lin_Den],	
	
		-- Performance LTE:
		sum(0) as CQI_4G_Num,	sum(0) as CQI_L800_Num,	sum(0) as CQI_L1800_Num,	sum(0) as CQI_L2100_Num,	sum(0) as CQI_L2600_Num,
		sum(0) as CQI_4G_Den,	sum(0) as CQI_L800_Den,	sum(0) as CQI_L1800_Den,	sum(0) as CQI_L2100_Den,	sum(0) as CQI_L2600_Den,

		sum(0) as LTE_5Mhz_SC_Use_Num,	sum(0) as LTE_10Mhz_SC_Use_Num,	sum(0) as LTE_15Mhz_SC_Use_Num,	sum(0) as LTE_20Mhz_SC_Use_Num,	sum(0) as LTE_15Mhz_CA_Use_Num,	sum(0) as LTE_20Mhz_CA_Use_Num,	sum(0) as LTE_25Mhz_CA_Use_Num,	sum(0) as LTE_30Mhz_CA_Use_Num,	sum(0) as LTE_35Mhz_CA_Use_Num,	sum(0) as LTE_40Mhz_CA_Use_Num,	
		sum(0) as LTE_5Mhz_SC_Use_Den,	sum(0) as LTE_10Mhz_SC_Use_Den,	sum(0) as LTE_15Mhz_SC_Use_Den,	sum(0) as LTE_20Mhz_SC_Use_Den,sum(0) as LTE_15Mhz_CA_Use_Den,	sum(0) as LTE_20Mhz_CA_Use_Den,	sum(0) as LTE_25Mhz_CA_Use_Den,	sum(0) as LTE_30Mhz_CA_Use_Den,	sum(0) as LTE_35Mhz_CA_Use_Den,	sum(0) as LTE_40Mhz_CA_Use_Den,	
		sum(0) as LTE_BW_use_den,	
		sum(0) as [4G_RBs_use_Num],	sum(0) as [4G_RBs_use_Den],

		sum(0) as [4G_TM1_use_Num],	sum(0) as [4G_TM2_use_Num],	sum(0) as [4G_TM3_use_Num],	sum(0) as [4G_TM4_use_Num],	sum(0) as [4G_TM5_use_Num],	sum(0) as [4G_TM6_use_Num],	sum(0) as [4G_TM7_use_Num],	sum(0) as [4G_TM8_use_Num],	sum(0) as [4G_TM9_use_Num],
		sum(0) as [4G_TMInvalid_use_Num],	sum(0) as [4G_TMUnknown_use_Num],
		sum(0) as [4G_TM_Den],

		-- Technology LTE:
		sum(0) as [4G_%CA_Num],			sum(0) as [4G_%CA_Den],
		sum(0) as [4G_BPSK_Use_Num],	sum(0) as [4G_QPSK_Use_Num],	sum(0) as [4G_16QAM_Use_Num],   sum(0) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],	sum(0) as [4G_QPSK_Use_Den],	sum(0) as [4G_16QAM_Use_Den],   sum(0) as [4G_64QAM_Use_Den],		sum(0) as [4G_stats_Den],	
		sum(0) as [RSRP_Lin_Num],		sum(0) as [RSRQ_Lin_Num],		sum(0) as [SINR_Lin_Num],		sum(0) as [RSRP_Lin_Den],			sum(0) as [RSRQ_Lin_Den],	sum(0) as [SINR_Lin_Den],		

		--New KPIs:
		sum(0) as [MIMO_num],			sum(0) as [RI1_num],			sum(0) as [RI2_num],	sum(0) as [MIMO_den],	sum(0) as [RI1_den],	sum(0) as [RI2_den],
		sum(0) as RBs_Allocated_Den,	sum(0) as RBs_Allocated_Num,	max(0) as RBs_Allocated_Max,	
	
		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		null as [1_N],	null as [2_N],	null as [3_N],	null as [4_N],	null as [5_N],	null as [6_N],	null as [7_N],	null as [8_N],	null as [9_N],	null as [10_N],
		null as [11_N],	null as [12_N],	null as [13_N],	null as [14_N],	null as [15_N],	null as [16_N],	null as [17_N],	null as [18_N],	null as [19_N],	null as [20_N],
		null as [21_N],	null as [22_N],	null as [23_N],	null as [24_N],	null as [25_N],	null as [26_N],	null as [27_N],	null as [28_N],	null as [29_N],	null as [30_N],
		null as [31_N],	null as [32_N],	null as [33_N],	null as [34_N],	null as [35_N],	null as [36_N],	null as [37_N],	null as [38_N],	null as [39_N],	null as [40_N],
		null as [41_N],	null as [42_N],	null as [43_N],	null as [44_N],	null as [45_N],	null as [46_N],	null as [47_N],	null as [48_N],	null as [49_N],	null as [50_N],
		null as [51_N],	null as [52_N],	null as [53_N],	null as [54_N],	null as [55_N],	null as [56_N],	null as [57_N],	null as [58_N],	null as [59_N],	null as [60_N],
		null as [61_N],	null as [62_N],	null as [63_N],	null as [64_N],	null as [65_N],	null as [66_N]
	
		--null as Region_Road_VF, null as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,null as [1]	,null as [2]	,null as [3]	,null as [4]	,null as [5]	,null as [6]	,null as [7]	,null as [8]	,null as [9]	,null as [10]
		,null as [11]	,null as [12]	,null as [13]	,null as [14]	,null as [15]	,null as [16]	,null as [17]	,null as [18]	,null as [19]	,null as [20]
		,null as [21]	,null as [22]	,null as [23]	,null as [24]	,null as [25]	,null as [26]	,null as [27]	,null as [28]	,null as [29]	,null as [30]
		,null as [31]	,null as [32]	,null as [33]	,null as [34]	,null as [35]	,null as [36]	,null as [37]	,null as [38]	,null as [39]	,null as [40]
		,null as [41],

		-- Parametros de configuracion:
		t.ASideDevice as ASideDevice, t.BSideDevice as BSideDevice, t.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from [AGGRData3G].dbo.[lcc_aggr_sp_MDD_Data_Web] t, agrids.dbo.vlcc_parcelas_osp p
		   where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
		group by 
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end,
		mnc,meas_round,Date_Reporting,Week_Reporting,t.entidad,t.Report_Type,t.Aggr_Type,
		t.ASideDevice, t.BSideDevice, t.SWVersion--, t.Region_VF, t.Region_OSP
	
	-------------
	union all
	select  
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment,mnc,meas_round,Date_Reporting as meas_date,Week_Reporting as meas_week, 
		'4G' as meas_Tech, 'WEB Public' as Test_type, 'Downlink' as Direction, entidad as vf_entity,t.Report_Type,t.Aggr_Type,
		
		-- General:
		sum(t.[Navegaciones Public]) as Num_tests,
		sum(t.[Fallos de acceso public]) as Failed,
		sum(t.[Navegaciones fallidas public]) as Dropped,
		sum(cast(t.[Session Time public] as float)*t.[Count_SessionTime public]) as Session_time_Num,
		sum(0) as Throughput_Den,
		sum(t.[Count_SessionTime public]) as Session_time_Den,
		sum(0) as Throughput_Num,	max(0) as Throughput_Max,	sum(0) as Throughput_3M_Num,	sum(0) as Throughput_1M_Num,	sum(0) as Throughput_128K_Num,	sum(0) as Throughput_64K_Num, sum(0) as Throughput_384K_Num,
	
		--CAC 10/08/2017: thput de test sin error y con error
		sum(0) as Throughput_with_Error_Den,
		sum(0) as Throughput_with_Error_Num,

		sum(0) as WEB_IP_ACCESS_TIME_NUM,			sum(0) as WEB_IP_ACCESS_TIME_DEN,
		sum(0) as WEB_HTTP_TRANSFER_TIME_NUM,		sum(0) as WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_NUM,		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_NUM,		sum(0) as WEB_TRANSFER_TIME_HTTPS_DEN,

		sum(cast([IP Service Setup Time Public] as float)*[Count_IPServiceSetupTime Public]) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,
		sum([Count_IPServiceSetupTime Public]) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(cast([Transfer Time Public] as float)*[Count_TransferTime Public]) as WEB_TRANSFER_TIME_PUBLIC_NUM,
		sum([Count_TransferTime Public]) as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(0) as Radio_2G_use_Num,	sum(0) as Radio_3G_use_Num,		sum(0) as Radio_4G_use_Num,	sum(0) as Radio_use_Den,	sum(0) as Radio_2G_use_Den,		sum(0) as Radio_3G_use_Den,	sum(0) as Radio_4G_use_Den,			
		sum(0) as Radio_U2100_use_Num,	sum(0) as Radio_U900_use_Num,    sum(0) as Radio_LTE2100_use_Num,    sum(0) as Radio_LTE2600_use_Num,    sum(0) as Radio_LTE1800_use_Num,    sum(0) as Radio_LTE800_use_Num,
		sum(0) as Radio_Band_Use_Den,	
		sum(0) as Radio_U2100_use_Den,	sum(0) as Radio_U900_use_Den,    sum(0) as Radio_LTE2100_use_Den,    sum(0) as Radio_LTE2600_use_Den,    sum(0) as Radio_LTE1800_use_Den,    sum(0) as Radio_LTE800_use_Den,

		sum(0) as [3G_DualCarrier_use_Num],	sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],		sum(0) as [3G_DC_2100_use_Den],	sum(0) as [3G_DC_900_use_Num],		sum(0) as [3G_DC_900_use_Den],

		sum(0) as [3G_NumCodes_use_Num],	sum(0) as [3G_NumCodes_use_Den],
		sum(0) as [3G_QPSK_use_Num],		sum(0) as [3G_16QAM_use_Num],    sum(0) as [3G_64QAM_use_Num],	
		sum(0) as [3G_QPSK_use_Den],		sum(0) as [3G_16QAM_use_Den],    sum(0) as [3G_64QAM_use_Den],

		sum(0) as [3G_%_SF22_Num],		sum(0) as [3G_%_SF22andSF42_Num],	sum(0) as [3G_%_SF4_Num],	sum(0) as [3G_%_SF42_Num],	
		sum(0) as [3G_%_SF22_Den],		sum(0) as [3G_%_SF22andSF42_Den],	sum(0) as [3G_%_SF4_Den],	sum(0) as [3G_%_SF42_Den],	
		sum(0) as [3G_%_TTI2ms_Num],	sum(0) as [3G_%_TTI2ms_Den],		
		sum(0) as [RSCP_Lin_Num],		sum(0) as [EcI0_Lin_Num],	
		sum(0) as [RSCP_Lin_Den],		sum(0) as [EcI0_Lin_Den],
	
		-- Performance:
		sum(0) as [3G_CQI],			sum(0) as [3G_DataStats_Den],
		Sum(0) as CQI_U900_Num,		sum(0) as CQI_U900_Den,	Sum(0) as CQI_U2100_Num,	sum(0) as CQI_U2100_Den,
		sum(0) as [HSPA_PCT_Num],	sum(0) as [HSPA+_PCT_Num],	sum(0) as [HSPA+_DC_PCT_Num],	sum(0) as [HSPA_PCT_Den],	sum(0) as [HSPA+_PCT_Den],	sum(0) as [HSPA+_DC_PCT_Den],
		sum(0) as [UL_Inter_Lin_Num],	sum(0) as [UL_Inter_Lin_Den],	
	
		-- Performance LTE:
		sum(0) as CQI_4G_Num,	sum(0) as CQI_L800_Num,	sum(0) as CQI_L1800_Num,	sum(0) as CQI_L2100_Num,	sum(0) as CQI_L2600_Num,
		sum(0) as CQI_4G_Den,	sum(0) as CQI_L800_Den,	sum(0) as CQI_L1800_Den,	sum(0) as CQI_L2100_Den,	sum(0) as CQI_L2600_Den,

		sum(0) as LTE_5Mhz_SC_Use_Num,	sum(0) as LTE_10Mhz_SC_Use_Num,	sum(0) as LTE_15Mhz_SC_Use_Num,	sum(0) as LTE_20Mhz_SC_Use_Num,	sum(0) as LTE_15Mhz_CA_Use_Num,	sum(0) as LTE_20Mhz_CA_Use_Num,	sum(0) as LTE_25Mhz_CA_Use_Num,	sum(0) as LTE_30Mhz_CA_Use_Num,	sum(0) as LTE_35Mhz_CA_Use_Num,	sum(0) as LTE_40Mhz_CA_Use_Num,	
		sum(0) as LTE_5Mhz_SC_Use_Den,	sum(0) as LTE_10Mhz_SC_Use_Den,	sum(0) as LTE_15Mhz_SC_Use_Den,	sum(0) as LTE_20Mhz_SC_Use_Den,sum(0) as LTE_15Mhz_CA_Use_Den,	sum(0) as LTE_20Mhz_CA_Use_Den,	sum(0) as LTE_25Mhz_CA_Use_Den,	sum(0) as LTE_30Mhz_CA_Use_Den,	sum(0) as LTE_35Mhz_CA_Use_Den,	sum(0) as LTE_40Mhz_CA_Use_Den,	
		sum(0) as LTE_BW_use_den,	
		sum(0) as [4G_RBs_use_Num],	sum(0) as [4G_RBs_use_Den],

		sum(0) as [4G_TM1_use_Num],	sum(0) as [4G_TM2_use_Num],	sum(0) as [4G_TM3_use_Num],	sum(0) as [4G_TM4_use_Num],	sum(0) as [4G_TM5_use_Num],	sum(0) as [4G_TM6_use_Num],	sum(0) as [4G_TM7_use_Num],	sum(0) as [4G_TM8_use_Num],	sum(0) as [4G_TM9_use_Num],
		sum(0) as [4G_TMInvalid_use_Num],	sum(0) as [4G_TMUnknown_use_Num],
		sum(0) as [4G_TM_Den],

		-- Technology LTE:
		sum(0) as [4G_%CA_Num],			sum(0) as [4G_%CA_Den],
		sum(0) as [4G_BPSK_Use_Num],	sum(0) as [4G_QPSK_Use_Num],	sum(0) as [4G_16QAM_Use_Num],   sum(0) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],	sum(0) as [4G_QPSK_Use_Den],	sum(0) as [4G_16QAM_Use_Den],   sum(0) as [4G_64QAM_Use_Den],		sum(0) as [4G_stats_Den],	
		sum(0) as [RSRP_Lin_Num],		sum(0) as [RSRQ_Lin_Num],		sum(0) as [SINR_Lin_Num],		sum(0) as [RSRP_Lin_Den],			sum(0) as [RSRQ_Lin_Den],	sum(0) as [SINR_Lin_Den],		

		--New KPIs:
		sum(0) as [MIMO_num],			sum(0) as [RI1_num],			sum(0) as [RI2_num],	sum(0) as [MIMO_den],	sum(0) as [RI1_den],	sum(0) as [RI2_den],
		sum(0) as RBs_Allocated_Den,	sum(0) as RBs_Allocated_Num,	max(0) as RBs_Allocated_Max,
	
		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		null as [1_N],	null as [2_N],	null as [3_N],	null as [4_N],	null as [5_N],	null as [6_N],	null as [7_N],	null as [8_N],	null as [9_N],	null as [10_N],
		null as [11_N],	null as [12_N],	null as [13_N],	null as [14_N],	null as [15_N],	null as [16_N],	null as [17_N],	null as [18_N],	null as [19_N],	null as [20_N],
		null as [21_N],	null as [22_N],	null as [23_N],	null as [24_N],	null as [25_N],	null as [26_N],	null as [27_N],	null as [28_N],	null as [29_N],	null as [30_N],
		null as [31_N],	null as [32_N],	null as [33_N],	null as [34_N],	null as [35_N],	null as [36_N],	null as [37_N],	null as [38_N],	null as [39_N],	null as [40_N],
		null as [41_N],	null as [42_N],	null as [43_N],	null as [44_N],	null as [45_N],	null as [46_N],	null as [47_N],	null as [48_N],	null as [49_N],	null as [50_N],
		null as [51_N],	null as [52_N],	null as [53_N],	null as [54_N],	null as [55_N],	null as [56_N],	null as [57_N],	null as [58_N],	null as [59_N],	null as [60_N],
		null as [61_N],	null as [62_N],	null as [63_N],	null as [64_N],	null as [65_N],	null as [66_N]
	
		--null as Region_Road_VF, null as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,null as [1]	,null as [2]	,null as [3]	,null as [4]	,null as [5]	,null as [6]	,null as [7]	,null as [8]	,null as [9]	,null as [10]
		,null as [11]	,null as [12]	,null as [13]	,null as [14]	,null as [15]	,null as [16]	,null as [17]	,null as [18]	,null as [19]	,null as [20]
		,null as [21]	,null as [22]	,null as [23]	,null as [24]	,null as [25]	,null as [26]	,null as [27]	,null as [28]	,null as [29]	,null as [30]
		,null as [31]	,null as [32]	,null as [33]	,null as [34]	,null as [35]	,null as [36]	,null as [37]	,null as [38]	,null as [39]	,null as [40]
		,null as [41],

		-- Parametros de configuracion:
		t.ASideDevice as ASideDevice, t.BSideDevice as BSideDevice, t.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_Web] t, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end,
		mnc,meas_round,Date_Reporting,Week_Reporting,t.entidad,t.Report_Type,t.Aggr_Type,
		t.ASideDevice, t.BSideDevice, t.SWVersion--, t.Region_VF, t.Region_OSP
	
	-------------
	-- 3G/4G ROADs All:
	insert into _RI_Data_e 
	select  
		p.codigo_ine, 'Roads' vf_environment,mnc,meas_round,Date_Reporting as meas_date,Week_Reporting as meas_week, 
		'Road 4G' as meas_Tech, 'WEB HTTP' as Test_type, 'Downlink' as Direction, entidad as vf_entity,t.Report_Type,t.Aggr_Type,
		
		-- General:
		sum(t.Navegaciones) as Num_tests,
		sum(t.[Fallos de acceso]) as Failed,
		sum(t.[Navegaciones fallidas]) as Dropped,
		sum(cast(t.[Session Time] as float)*t.[Count_SessionTime]) as Session_time_Num,
		sum(0) as Throughput_Den,
		sum(t.[Count_SessionTime]) as Session_time_Den,
		sum(0) as Throughput_Num,	max(0) as Throughput_Max,	sum(0) as Throughput_3M_Num,	sum(0) as Throughput_1M_Num,	sum(0) as Throughput_128K_Num,	sum(0) as Throughput_64K_Num, sum(0) as Throughput_384K_Num,

		--CAC 10/08/2017: thput de test sin error y con error
		sum(0) as Throughput_with_Error_Den,
		sum(0) as Throughput_with_Error_Num,

		sum(cast([IP Service Setup Time] as float)*[Count_IPServiceSetupTime]) as WEB_IP_ACCESS_TIME_NUM,
		sum([Count_IPServiceSetupTime]) as WEB_IP_ACCESS_TIME_DEN,
		sum(cast([Transfer Time] as float)*[Count_TransferTime]) as WEB_HTTP_TRANSFER_TIME_NUM,
		sum([Count_TransferTime]) as WEB_HTTP_TRANSFER_TIME_DEN,
	
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_NUM,		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_NUM,		sum(0) as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,	sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(0) as Radio_2G_use_Num,	sum(0) as Radio_3G_use_Num,		sum(0) as Radio_4G_use_Num,	sum(0) as Radio_use_Den,	sum(0) as Radio_2G_use_Den,		sum(0) as Radio_3G_use_Den,	sum(0) as Radio_4G_use_Den,			
		sum(0) as Radio_U2100_use_Num,	sum(0) as Radio_U900_use_Num,    sum(0) as Radio_LTE2100_use_Num,    sum(0) as Radio_LTE2600_use_Num,    sum(0) as Radio_LTE1800_use_Num,    sum(0) as Radio_LTE800_use_Num,
		sum(0) as Radio_Band_Use_Den,	
		sum(0) as Radio_U2100_use_Den,	sum(0) as Radio_U900_use_Den,    sum(0) as Radio_LTE2100_use_Den,    sum(0) as Radio_LTE2600_use_Den,    sum(0) as Radio_LTE1800_use_Den,    sum(0) as Radio_LTE800_use_Den,

		sum(0) as [3G_DualCarrier_use_Num],	sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],		sum(0) as [3G_DC_2100_use_Den],	sum(0) as [3G_DC_900_use_Num],		sum(0) as [3G_DC_900_use_Den],

		sum(0) as [3G_NumCodes_use_Num],	sum(0) as [3G_NumCodes_use_Den],
		sum(0) as [3G_QPSK_use_Num],		sum(0) as [3G_16QAM_use_Num],    sum(0) as [3G_64QAM_use_Num],	
		sum(0) as [3G_QPSK_use_Den],		sum(0) as [3G_16QAM_use_Den],    sum(0) as [3G_64QAM_use_Den],

		sum(0) as [3G_%_SF22_Num],		sum(0) as [3G_%_SF22andSF42_Num],	sum(0) as [3G_%_SF4_Num],	sum(0) as [3G_%_SF42_Num],	
		sum(0) as [3G_%_SF22_Den],		sum(0) as [3G_%_SF22andSF42_Den],	sum(0) as [3G_%_SF4_Den],	sum(0) as [3G_%_SF42_Den],	
		sum(0) as [3G_%_TTI2ms_Num],	sum(0) as [3G_%_TTI2ms_Den],		
		sum(0) as [RSCP_Lin_Num],		sum(0) as [EcI0_Lin_Num],	
		sum(0) as [RSCP_Lin_Den],		sum(0) as [EcI0_Lin_Den],
	
		-- Performance:
		sum(0) as [3G_CQI],			sum(0) as [3G_DataStats_Den],
		Sum(0) as CQI_U900_Num,		sum(0) as CQI_U900_Den,		Sum(0) as CQI_U2100_Num,		sum(0) as CQI_U2100_Den,
		sum(0) as [HSPA_PCT_Num],	sum(0) as [HSPA+_PCT_Num],	sum(0) as [HSPA+_DC_PCT_Num],	sum(0) as [HSPA_PCT_Den],	sum(0) as [HSPA+_PCT_Den],	sum(0) as [HSPA+_DC_PCT_Den],
		sum(0) as [UL_Inter_Lin_Num],	sum(0) as [UL_Inter_Lin_Den],	
	
		-- Performance LTE:
		sum(0) as CQI_4G_Num,	sum(0) as CQI_L800_Num,	sum(0) as CQI_L1800_Num,	sum(0) as CQI_L2100_Num,	sum(0) as CQI_L2600_Num,
		sum(0) as CQI_4G_Den,	sum(0) as CQI_L800_Den,	sum(0) as CQI_L1800_Den,	sum(0) as CQI_L2100_Den,	sum(0) as CQI_L2600_Den,

		sum(0) as LTE_5Mhz_SC_Use_Num,	sum(0) as LTE_10Mhz_SC_Use_Num,	sum(0) as LTE_15Mhz_SC_Use_Num,	sum(0) as LTE_20Mhz_SC_Use_Num,	sum(0) as LTE_15Mhz_CA_Use_Num,	sum(0) as LTE_20Mhz_CA_Use_Num,	sum(0) as LTE_25Mhz_CA_Use_Num,	sum(0) as LTE_30Mhz_CA_Use_Num,	sum(0) as LTE_35Mhz_CA_Use_Num,	sum(0) as LTE_40Mhz_CA_Use_Num,	
		sum(0) as LTE_5Mhz_SC_Use_Den,	sum(0) as LTE_10Mhz_SC_Use_Den,	sum(0) as LTE_15Mhz_SC_Use_Den,	sum(0) as LTE_20Mhz_SC_Use_Den,sum(0) as LTE_15Mhz_CA_Use_Den,	sum(0) as LTE_20Mhz_CA_Use_Den,	sum(0) as LTE_25Mhz_CA_Use_Den,	sum(0) as LTE_30Mhz_CA_Use_Den,	sum(0) as LTE_35Mhz_CA_Use_Den,	sum(0) as LTE_40Mhz_CA_Use_Den,	
		sum(0) as LTE_BW_use_den,	
		sum(0) as [4G_RBs_use_Num],	sum(0) as [4G_RBs_use_Den],

		sum(0) as [4G_TM1_use_Num],	sum(0) as [4G_TM2_use_Num],	sum(0) as [4G_TM3_use_Num],	sum(0) as [4G_TM4_use_Num],	sum(0) as [4G_TM5_use_Num],	sum(0) as [4G_TM6_use_Num],	sum(0) as [4G_TM7_use_Num],	sum(0) as [4G_TM8_use_Num],	sum(0) as [4G_TM9_use_Num],
		sum(0) as [4G_TMInvalid_use_Num],	sum(0) as [4G_TMUnknown_use_Num],
		sum(0) as [4G_TM_Den],

		-- Technology LTE:
		sum(0) as [4G_%CA_Num],			sum(0) as [4G_%CA_Den],
		sum(0) as [4G_BPSK_Use_Num],	sum(0) as [4G_QPSK_Use_Num],	sum(0) as [4G_16QAM_Use_Num],   sum(0) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],	sum(0) as [4G_QPSK_Use_Den],	sum(0) as [4G_16QAM_Use_Den],   sum(0) as [4G_64QAM_Use_Den],		sum(0) as [4G_stats_Den],	
		sum(0) as [RSRP_Lin_Num],		sum(0) as [RSRQ_Lin_Num],		sum(0) as [SINR_Lin_Num],		sum(0) as [RSRP_Lin_Den],			sum(0) as [RSRQ_Lin_Den],	sum(0) as [SINR_Lin_Den],		

		--New KPIs:
		sum(0) as [MIMO_num],			sum(0) as [RI1_num],			sum(0) as [RI2_num],	sum(0) as [MIMO_den],	sum(0) as [RI1_den],	sum(0) as [RI2_den],
		sum(0) as RBs_Allocated_Den,	sum(0) as RBs_Allocated_Num,	max(0) as RBs_Allocated_Max,
	
		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		null as [1_N],	null as [2_N],	null as [3_N],	null as [4_N],	null as [5_N],	null as [6_N],	null as [7_N],	null as [8_N],	null as [9_N],	null as [10_N],
		null as [11_N],	null as [12_N],	null as [13_N],	null as [14_N],	null as [15_N],	null as [16_N],	null as [17_N],	null as [18_N],	null as [19_N],	null as [20_N],
		null as [21_N],	null as [22_N],	null as [23_N],	null as [24_N],	null as [25_N],	null as [26_N],	null as [27_N],	null as [28_N],	null as [29_N],	null as [30_N],
		null as [31_N],	null as [32_N],	null as [33_N],	null as [34_N],	null as [35_N],	null as [36_N],	null as [37_N],	null as [38_N],	null as [39_N],	null as [40_N],
		null as [41_N],	null as [42_N],	null as [43_N],	null as [44_N],	null as [45_N],	null as [46_N],	null as [47_N],	null as [48_N],	null as [49_N],	null as [50_N],
		null as [51_N],	null as [52_N],	null as [53_N],	null as [54_N],	null as [55_N],	null as [56_N],	null as [57_N],	null as [58_N],	null as [59_N],	null as [60_N],
		null as [61_N],	null as [62_N],	null as [63_N],	null as [64_N],	null as [65_N],	null as [66_N]
	
		--t.Region_VF as Region_Road_VF, t.Region_OSP as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,null as [1]	,null as [2]	,null as [3]	,null as [4]	,null as [5]	,null as [6]	,null as [7]	,null as [8]	,null as [9]	,null as [10]
		,null as [11]	,null as [12]	,null as [13]	,null as [14]	,null as [15]	,null as [16]	,null as [17]	,null as [18]	,null as [19]	,null as [20]
		,null as [21]	,null as [22]	,null as [23]	,null as [24]	,null as [25]	,null as [26]	,null as [27]	,null as [28]	,null as [29]	,null as [30]
		,null as [31]	,null as [32]	,null as [33]	,null as [34]	,null as [35]	,null as [36]	,null as [37]	,null as [38]	,null as [39]	,null as [40]
		,null as [41],

		-- Parametros de configuracion:
		t.ASideDevice as ASideDevice, t.BSideDevice as BSideDevice, t.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from [aggrData4G_ROAD].dbo.[lcc_aggr_sp_MDD_Data_Web] t, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine,mnc,meas_round,Date_Reporting,Week_Reporting,t.entidad,t.Report_Type,t.Aggr_Type,
		t.ASideDevice, t.BSideDevice, t.SWVersion--, t.Region_VF, t.Region_OSP

	-------------
	union all
	select  
		p.codigo_ine, 'Roads' vf_environment,mnc,meas_round,Date_Reporting as meas_date,Week_Reporting as meas_week, 
		'Road 4G' as meas_Tech, 'WEB HTTPS' as Test_type, 'Downlink' as Direction, entidad as vf_entity,t.Report_Type,t.Aggr_Type,
		
		-- General:
		sum(t.[Navegaciones HTTPS]) as Num_tests,
		sum(t.[Fallos de acceso HTTPS]) as Failed,
		sum(t.[Navegaciones fallidas HTTPS]) as Dropped,
		sum(cast(t.[Session Time HTTPS] as float)*t.[Count_SessionTime HTTPS]) as Session_time_Num,
		sum(0) as Throughput_Den,
		sum(t.[Count_SessionTime HTTPS]) as Session_time_Den,
		sum(0) as Throughput_Num,	max(0) as Throughput_Max,	sum(0) as Throughput_3M_Num,	sum(0) as Throughput_1M_Num,	sum(0) as Throughput_128K_Num,	sum(0) as Throughput_64K_Num, sum(0) as Throughput_384K_Num,
		
		--CAC 10/08/2017: thput de test sin error y con error
		sum(0) as Throughput_with_Error_Den,
		sum(0) as Throughput_with_Error_Num,

		sum(0) as WEB_IP_ACCESS_TIME_NUM,		sum(0) as WEB_IP_ACCESS_TIME_DEN,
		sum(0) as WEB_HTTP_TRANSFER_TIME_NUM,	sum(0) as WEB_HTTP_TRANSFER_TIME_DEN,

		sum(cast([IP Service Setup Time HTTPS] as float)*[Count_IPServiceSetupTime HTTPS])	as WEB_IP_ACCESS_TIME_HTTPS_NUM,
		sum([Count_IPServiceSetupTime HTTPS])												as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(cast([Transfer Time HTTPS] as float)*[Count_TransferTime HTTPS])				as WEB_TRANSFER_TIME_HTTPS_NUM,
		sum([Count_TransferTime HTTPS])														as WEB_TRANSFER_TIME_HTTPS_DEN,
	
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,	sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(0) as Radio_2G_use_Num,	sum(0) as Radio_3G_use_Num,		sum(0) as Radio_4G_use_Num,	sum(0) as Radio_use_Den,	sum(0) as Radio_2G_use_Den,		sum(0) as Radio_3G_use_Den,	sum(0) as Radio_4G_use_Den,			
		sum(0) as Radio_U2100_use_Num,	sum(0) as Radio_U900_use_Num,    sum(0) as Radio_LTE2100_use_Num,    sum(0) as Radio_LTE2600_use_Num,    sum(0) as Radio_LTE1800_use_Num,    sum(0) as Radio_LTE800_use_Num,
		sum(0) as Radio_Band_Use_Den,	
		sum(0) as Radio_U2100_use_Den,	sum(0) as Radio_U900_use_Den,    sum(0) as Radio_LTE2100_use_Den,    sum(0) as Radio_LTE2600_use_Den,    sum(0) as Radio_LTE1800_use_Den,    sum(0) as Radio_LTE800_use_Den,

		sum(0) as [3G_DualCarrier_use_Num],	sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],		sum(0) as [3G_DC_2100_use_Den],	sum(0) as [3G_DC_900_use_Num],		sum(0) as [3G_DC_900_use_Den],

		sum(0) as [3G_NumCodes_use_Num],	sum(0) as [3G_NumCodes_use_Den],
		sum(0) as [3G_QPSK_use_Num],		sum(0) as [3G_16QAM_use_Num],    sum(0) as [3G_64QAM_use_Num],	
		sum(0) as [3G_QPSK_use_Den],		sum(0) as [3G_16QAM_use_Den],    sum(0) as [3G_64QAM_use_Den],

		sum(0) as [3G_%_SF22_Num],		sum(0) as [3G_%_SF22andSF42_Num],	sum(0) as [3G_%_SF4_Num],	sum(0) as [3G_%_SF42_Num],	
		sum(0) as [3G_%_SF22_Den],		sum(0) as [3G_%_SF22andSF42_Den],	sum(0) as [3G_%_SF4_Den],	sum(0) as [3G_%_SF42_Den],	
		sum(0) as [3G_%_TTI2ms_Num],	sum(0) as [3G_%_TTI2ms_Den],		
		sum(0) as [RSCP_Lin_Num],		sum(0) as [EcI0_Lin_Num],	
		sum(0) as [RSCP_Lin_Den],		sum(0) as [EcI0_Lin_Den],
	
		-- Performance:
		sum(0) as [3G_CQI],			sum(0) as [3G_DataStats_Den],
		Sum(0) as CQI_U900_Num,		sum(0) as CQI_U900_Den,		Sum(0) as CQI_U2100_Num,		sum(0) as CQI_U2100_Den,
		sum(0) as [HSPA_PCT_Num],	sum(0) as [HSPA+_PCT_Num],	sum(0) as [HSPA+_DC_PCT_Num],	sum(0) as [HSPA_PCT_Den],	sum(0) as [HSPA+_PCT_Den],	sum(0) as [HSPA+_DC_PCT_Den],
		sum(0) as [UL_Inter_Lin_Num],	sum(0) as [UL_Inter_Lin_Den],	
	
		-- Performance LTE:
		sum(0) as CQI_4G_Num,	sum(0) as CQI_L800_Num,	sum(0) as CQI_L1800_Num,	sum(0) as CQI_L2100_Num,	sum(0) as CQI_L2600_Num,
		sum(0) as CQI_4G_Den,	sum(0) as CQI_L800_Den,	sum(0) as CQI_L1800_Den,	sum(0) as CQI_L2100_Den,	sum(0) as CQI_L2600_Den,

		sum(0) as LTE_5Mhz_SC_Use_Num,	sum(0) as LTE_10Mhz_SC_Use_Num,	sum(0) as LTE_15Mhz_SC_Use_Num,	sum(0) as LTE_20Mhz_SC_Use_Num,	sum(0) as LTE_15Mhz_CA_Use_Num,	sum(0) as LTE_20Mhz_CA_Use_Num,	sum(0) as LTE_25Mhz_CA_Use_Num,	sum(0) as LTE_30Mhz_CA_Use_Num,	sum(0) as LTE_35Mhz_CA_Use_Num,	sum(0) as LTE_40Mhz_CA_Use_Num,	
		sum(0) as LTE_5Mhz_SC_Use_Den,	sum(0) as LTE_10Mhz_SC_Use_Den,	sum(0) as LTE_15Mhz_SC_Use_Den,	sum(0) as LTE_20Mhz_SC_Use_Den,sum(0) as LTE_15Mhz_CA_Use_Den,	sum(0) as LTE_20Mhz_CA_Use_Den,	sum(0) as LTE_25Mhz_CA_Use_Den,	sum(0) as LTE_30Mhz_CA_Use_Den,	sum(0) as LTE_35Mhz_CA_Use_Den,	sum(0) as LTE_40Mhz_CA_Use_Den,	
		sum(0) as LTE_BW_use_den,	
		sum(0) as [4G_RBs_use_Num],	sum(0) as [4G_RBs_use_Den],

		sum(0) as [4G_TM1_use_Num],	sum(0) as [4G_TM2_use_Num],	sum(0) as [4G_TM3_use_Num],	sum(0) as [4G_TM4_use_Num],	sum(0) as [4G_TM5_use_Num],	sum(0) as [4G_TM6_use_Num],	sum(0) as [4G_TM7_use_Num],	sum(0) as [4G_TM8_use_Num],	sum(0) as [4G_TM9_use_Num],
		sum(0) as [4G_TMInvalid_use_Num],	sum(0) as [4G_TMUnknown_use_Num],
		sum(0) as [4G_TM_Den],

		-- Technology LTE:
		sum(0) as [4G_%CA_Num],			sum(0) as [4G_%CA_Den],
		sum(0) as [4G_BPSK_Use_Num],	sum(0) as [4G_QPSK_Use_Num],	sum(0) as [4G_16QAM_Use_Num],   sum(0) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],	sum(0) as [4G_QPSK_Use_Den],	sum(0) as [4G_16QAM_Use_Den],   sum(0) as [4G_64QAM_Use_Den],		sum(0) as [4G_stats_Den],	
		sum(0) as [RSRP_Lin_Num],		sum(0) as [RSRQ_Lin_Num],		sum(0) as [SINR_Lin_Num],		sum(0) as [RSRP_Lin_Den],			sum(0) as [RSRQ_Lin_Den],	sum(0) as [SINR_Lin_Den],		

		--New KPIs:
		sum(0) as [MIMO_num],			sum(0) as [RI1_num],			sum(0) as [RI2_num],	sum(0) as [MIMO_den],	sum(0) as [RI1_den],	sum(0) as [RI2_den],
		sum(0) as RBs_Allocated_Den,	sum(0) as RBs_Allocated_Num,	max(0) as RBs_Allocated_Max,
	
		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		null as [1_N],	null as [2_N],	null as [3_N],	null as [4_N],	null as [5_N],	null as [6_N],	null as [7_N],	null as [8_N],	null as [9_N],	null as [10_N],
		null as [11_N],	null as [12_N],	null as [13_N],	null as [14_N],	null as [15_N],	null as [16_N],	null as [17_N],	null as [18_N],	null as [19_N],	null as [20_N],
		null as [21_N],	null as [22_N],	null as [23_N],	null as [24_N],	null as [25_N],	null as [26_N],	null as [27_N],	null as [28_N],	null as [29_N],	null as [30_N],
		null as [31_N],	null as [32_N],	null as [33_N],	null as [34_N],	null as [35_N],	null as [36_N],	null as [37_N],	null as [38_N],	null as [39_N],	null as [40_N],
		null as [41_N],	null as [42_N],	null as [43_N],	null as [44_N],	null as [45_N],	null as [46_N],	null as [47_N],	null as [48_N],	null as [49_N],	null as [50_N],
		null as [51_N],	null as [52_N],	null as [53_N],	null as [54_N],	null as [55_N],	null as [56_N],	null as [57_N],	null as [58_N],	null as [59_N],	null as [60_N],
		null as [61_N],	null as [62_N],	null as [63_N],	null as [64_N],	null as [65_N],	null as [66_N]
	
		--t.Region_VF as Region_Road_VF, t.Region_OSP as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,null as [1]	,null as [2]	,null as [3]	,null as [4]	,null as [5]	,null as [6]	,null as [7]	,null as [8]	,null as [9]	,null as [10]
		,null as [11]	,null as [12]	,null as [13]	,null as [14]	,null as [15]	,null as [16]	,null as [17]	,null as [18]	,null as [19]	,null as [20]
		,null as [21]	,null as [22]	,null as [23]	,null as [24]	,null as [25]	,null as [26]	,null as [27]	,null as [28]	,null as [29]	,null as [30]
		,null as [31]	,null as [32]	,null as [33]	,null as [34]	,null as [35]	,null as [36]	,null as [37]	,null as [38]	,null as [39]	,null as [40]
		,null as [41],

		-- Parametros de configuracion:
		t.ASideDevice as ASideDevice, t.BSideDevice as BSideDevice, t.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from [aggrData4G_ROAD].dbo.[lcc_aggr_sp_MDD_Data_Web] t, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine,mnc,meas_round,Date_Reporting,Week_Reporting,t.entidad,t.Report_Type,t.Aggr_Type,
		t.ASideDevice, t.BSideDevice, t.SWVersion--, t.Region_VF, t.Region_OSP

	-------------
	union all
	select  
		p.codigo_ine, 'Roads' vf_environment,mnc,meas_round,Date_Reporting as meas_date,Week_Reporting as meas_week, 
		'Road 4G' as meas_Tech, 'WEB Public' as Test_type, 'Downlink' as Direction, entidad as vf_entity,t.Report_Type,t.Aggr_Type,
		
		-- General:
		sum(t.[Navegaciones Public]) as Num_tests,
		sum(t.[Fallos de acceso public]) as Failed,
		sum(t.[Navegaciones fallidas public]) as Dropped,
		sum(cast(t.[Session Time public] as float)*t.[Count_SessionTime public]) as Session_time_Num,
		sum(0) as Throughput_Den,
		sum(t.[Count_SessionTime public]) as Session_time_Den,
		sum(0) as Throughput_Num,	max(0) as Throughput_Max,	sum(0) as Throughput_3M_Num,sum(0) as Throughput_1M_Num,	sum(0) as Throughput_128K_Num,	sum(0) as Throughput_64K_Num, sum(0) as Throughput_384K_Num,

		--CAC 10/08/2017: thput de test sin error y con error
		sum(0) as Throughput_with_Error_Den,
		sum(0) as Throughput_with_Error_Num,

		sum(0) as WEB_IP_ACCESS_TIME_NUM,			sum(0) as WEB_IP_ACCESS_TIME_DEN,
		sum(0) as WEB_HTTP_TRANSFER_TIME_NUM,		sum(0) as WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_NUM,		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_NUM,		sum(0) as WEB_TRANSFER_TIME_HTTPS_DEN,

		sum(cast([IP Service Setup Time Public] as float)*[Count_IPServiceSetupTime Public])	as WEB_IP_ACCESS_TIME_PUBLIC_NUM,
		sum([Count_IPServiceSetupTime Public])													as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(cast([Transfer Time Public] as float)*[Count_TransferTime Public])					as WEB_TRANSFER_TIME_PUBLIC_NUM,
		sum([Count_TransferTime Public])														as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(0) as Radio_2G_use_Num,	sum(0) as Radio_3G_use_Num,		sum(0) as Radio_4G_use_Num,	sum(0) as Radio_use_Den,	sum(0) as Radio_2G_use_Den,		sum(0) as Radio_3G_use_Den,	sum(0) as Radio_4G_use_Den,			
		sum(0) as Radio_U2100_use_Num,	sum(0) as Radio_U900_use_Num,    sum(0) as Radio_LTE2100_use_Num,    sum(0) as Radio_LTE2600_use_Num,    sum(0) as Radio_LTE1800_use_Num,    sum(0) as Radio_LTE800_use_Num,
		sum(0) as Radio_Band_Use_Den,	
		sum(0) as Radio_U2100_use_Den,	sum(0) as Radio_U900_use_Den,    sum(0) as Radio_LTE2100_use_Den,    sum(0) as Radio_LTE2600_use_Den,    sum(0) as Radio_LTE1800_use_Den,    sum(0) as Radio_LTE800_use_Den,

		sum(0) as [3G_DualCarrier_use_Num],	sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],		sum(0) as [3G_DC_2100_use_Den],	sum(0) as [3G_DC_900_use_Num],		sum(0) as [3G_DC_900_use_Den],

		sum(0) as [3G_NumCodes_use_Num],	sum(0) as [3G_NumCodes_use_Den],
		sum(0) as [3G_QPSK_use_Num],		sum(0) as [3G_16QAM_use_Num],    sum(0) as [3G_64QAM_use_Num],	
		sum(0) as [3G_QPSK_use_Den],		sum(0) as [3G_16QAM_use_Den],    sum(0) as [3G_64QAM_use_Den],

		sum(0) as [3G_%_SF22_Num],		sum(0) as [3G_%_SF22andSF42_Num],	sum(0) as [3G_%_SF4_Num],	sum(0) as [3G_%_SF42_Num],	
		sum(0) as [3G_%_SF22_Den],		sum(0) as [3G_%_SF22andSF42_Den],	sum(0) as [3G_%_SF4_Den],	sum(0) as [3G_%_SF42_Den],	
		sum(0) as [3G_%_TTI2ms_Num],	sum(0) as [3G_%_TTI2ms_Den],		
		sum(0) as [RSCP_Lin_Num],		sum(0) as [EcI0_Lin_Num],	
		sum(0) as [RSCP_Lin_Den],		sum(0) as [EcI0_Lin_Den],
	
		-- Performance:
		sum(0) as [3G_CQI],			sum(0) as [3G_DataStats_Den],
		Sum(0) as CQI_U900_Num,		sum(0) as CQI_U900_Den,		Sum(0) as CQI_U2100_Num,		sum(0) as CQI_U2100_Den,
		sum(0) as [HSPA_PCT_Num],	sum(0) as [HSPA+_PCT_Num],	sum(0) as [HSPA+_DC_PCT_Num],	sum(0) as [HSPA_PCT_Den],	sum(0) as [HSPA+_PCT_Den],	sum(0) as [HSPA+_DC_PCT_Den],
		sum(0) as [UL_Inter_Lin_Num],	sum(0) as [UL_Inter_Lin_Den],	
	
		-- Performance LTE:
		sum(0) as CQI_4G_Num,	sum(0) as CQI_L800_Num,	sum(0) as CQI_L1800_Num,	sum(0) as CQI_L2100_Num,	sum(0) as CQI_L2600_Num,
		sum(0) as CQI_4G_Den,	sum(0) as CQI_L800_Den,	sum(0) as CQI_L1800_Den,	sum(0) as CQI_L2100_Den,	sum(0) as CQI_L2600_Den,

		sum(0) as LTE_5Mhz_SC_Use_Num,	sum(0) as LTE_10Mhz_SC_Use_Num,	sum(0) as LTE_15Mhz_SC_Use_Num,	sum(0) as LTE_20Mhz_SC_Use_Num,	sum(0) as LTE_15Mhz_CA_Use_Num,	sum(0) as LTE_20Mhz_CA_Use_Num,	sum(0) as LTE_25Mhz_CA_Use_Num,	sum(0) as LTE_30Mhz_CA_Use_Num,	sum(0) as LTE_35Mhz_CA_Use_Num,	sum(0) as LTE_40Mhz_CA_Use_Num,	
		sum(0) as LTE_5Mhz_SC_Use_Den,	sum(0) as LTE_10Mhz_SC_Use_Den,	sum(0) as LTE_15Mhz_SC_Use_Den,	sum(0) as LTE_20Mhz_SC_Use_Den,sum(0) as LTE_15Mhz_CA_Use_Den,	sum(0) as LTE_20Mhz_CA_Use_Den,	sum(0) as LTE_25Mhz_CA_Use_Den,	sum(0) as LTE_30Mhz_CA_Use_Den,	sum(0) as LTE_35Mhz_CA_Use_Den,	sum(0) as LTE_40Mhz_CA_Use_Den,	
		sum(0) as LTE_BW_use_den,	
		sum(0) as [4G_RBs_use_Num],	sum(0) as [4G_RBs_use_Den],

		sum(0) as [4G_TM1_use_Num],	sum(0) as [4G_TM2_use_Num],	sum(0) as [4G_TM3_use_Num],	sum(0) as [4G_TM4_use_Num],	sum(0) as [4G_TM5_use_Num],	sum(0) as [4G_TM6_use_Num],	sum(0) as [4G_TM7_use_Num],	sum(0) as [4G_TM8_use_Num],	sum(0) as [4G_TM9_use_Num],
		sum(0) as [4G_TMInvalid_use_Num],	sum(0) as [4G_TMUnknown_use_Num],
		sum(0) as [4G_TM_Den],

		-- Technology LTE:
		sum(0) as [4G_%CA_Num],			sum(0) as [4G_%CA_Den],
		sum(0) as [4G_BPSK_Use_Num],	sum(0) as [4G_QPSK_Use_Num],	sum(0) as [4G_16QAM_Use_Num],   sum(0) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],	sum(0) as [4G_QPSK_Use_Den],	sum(0) as [4G_16QAM_Use_Den],   sum(0) as [4G_64QAM_Use_Den],		sum(0) as [4G_stats_Den],	
		sum(0) as [RSRP_Lin_Num],		sum(0) as [RSRQ_Lin_Num],		sum(0) as [SINR_Lin_Num],		sum(0) as [RSRP_Lin_Den],			sum(0) as [RSRQ_Lin_Den],	sum(0) as [SINR_Lin_Den],		

		--New KPIs:
		sum(0) as [MIMO_num],			sum(0) as [RI1_num],			sum(0) as [RI2_num],	sum(0) as [MIMO_den],	sum(0) as [RI1_den],	sum(0) as [RI2_den],
		sum(0) as RBs_Allocated_Den,	sum(0) as RBs_Allocated_Num,	max(0) as RBs_Allocated_Max,	
	
		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		null as [1_N],	null as [2_N],	null as [3_N],	null as [4_N],	null as [5_N],	null as [6_N],	null as [7_N],	null as [8_N],	null as [9_N],	null as [10_N],
		null as [11_N],	null as [12_N],	null as [13_N],	null as [14_N],	null as [15_N],	null as [16_N],	null as [17_N],	null as [18_N],	null as [19_N],	null as [20_N],
		null as [21_N],	null as [22_N],	null as [23_N],	null as [24_N],	null as [25_N],	null as [26_N],	null as [27_N],	null as [28_N],	null as [29_N],	null as [30_N],
		null as [31_N],	null as [32_N],	null as [33_N],	null as [34_N],	null as [35_N],	null as [36_N],	null as [37_N],	null as [38_N],	null as [39_N],	null as [40_N],
		null as [41_N],	null as [42_N],	null as [43_N],	null as [44_N],	null as [45_N],	null as [46_N],	null as [47_N],	null as [48_N],	null as [49_N],	null as [50_N],
		null as [51_N],	null as [52_N],	null as [53_N],	null as [54_N],	null as [55_N],	null as [56_N],	null as [57_N],	null as [58_N],	null as [59_N],	null as [60_N],
		null as [61_N],	null as [62_N],	null as [63_N],	null as [64_N],	null as [65_N],	null as [66_N]
	
		--t.Region_VF as Region_Road_VF, t.Region_OSP as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,null as [1]	,null as [2]	,null as [3]	,null as [4]	,null as [5]	,null as [6]	,null as [7]	,null as [8]	,null as [9]	,null as [10]
		,null as [11]	,null as [12]	,null as [13]	,null as [14]	,null as [15]	,null as [16]	,null as [17]	,null as [18]	,null as [19]	,null as [20]
		,null as [21]	,null as [22]	,null as [23]	,null as [24]	,null as [25]	,null as [26]	,null as [27]	,null as [28]	,null as [29]	,null as [30]
		,null as [31]	,null as [32]	,null as [33]	,null as [34]	,null as [35]	,null as [36]	,null as [37]	,null as [38]	,null as [39]	,null as [40]
		,null as [41],

		-- Parametros de configuracion:
		t.ASideDevice as ASideDevice, t.BSideDevice as BSideDevice, t.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from [aggrData4G_ROAD].dbo.[lcc_aggr_sp_MDD_Data_Web] t, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine,mnc,meas_round,Date_Reporting,Week_Reporting,t.entidad,t.Report_Type,t.Aggr_Type,
		t.ASideDevice, t.BSideDevice, t.SWVersion	--, t.Region_VF, t.Region_OSP

	-------------
	insert into [dbo].[_RI_Data_Ejecucion]
	select 'Fin 1.3. Insert Estadisticos WEB HTTP/HTTPs/Publicas 3G, 4G, 4G_Roads', getdate()


	-------------------------------------
	-- 1.4) Estadisticos YTB 
	-------------------------------------		
	print '1.4. Insert Estadisticos YTB 3G, 4G, 4G_Roads - SD y HD' 	

	-- 3G/4G - SD:
	insert into _RI_Data_e 
	select  
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment,mnc,meas_round,Date_Reporting as meas_date,Week_Reporting as meas_week, 
		'3G' as meas_Tech, 'Youtube SD' as Test_type, 'Downlink' as Direction, entidad as vf_entity,t.Report_Type,t.Aggr_Type,
		
		-- General:
		sum(t.Reproducciones) as Num_tests,
		sum(t.Fails) as Failed,
		sum(t.reproducciones-t.fails-t.[Successful video download]) as Dropped,

		sum(0) as Session_time_Num,	sum(0) as Throughput_Den,	sum(0) as Session_time_Den,
		sum(0) as Throughput_Num,	max(0) as Throughput_Max,	sum(0) as Throughput_3M_Num,	sum(0) as Throughput_1M_Num,	sum(0) as Throughput_128K_Num,	sum(0) as Throughput_64K_Num, sum(0) as Throughput_384K_Num,
		--CAC 10/08/2017: thput de test sin error y con error
		sum(0) as Throughput_with_Error_Den,
		sum(0) as Throughput_with_Error_Num,
		sum(0) as  WEB_IP_ACCESS_TIME_NUM,			sum(0) as  WEB_IP_ACCESS_TIME_DEN,
		sum(0) as  WEB_HTTP_TRANSFER_TIME_NUM,		sum(0) as  WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as  WEB_IP_ACCESS_TIME_HTTPS_NUM,	sum(0) as  WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as  WEB_TRANSFER_TIME_HTTPS_NUM,		sum(0) as  WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,	sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,
	 
		-- Technology:
		sum(0) as Radio_2G_use_Num,	sum(0) as Radio_3G_use_Num,		sum(0) as Radio_4G_use_Num,	sum(0) as Radio_use_Den,	sum(0) as Radio_2G_use_Den,		sum(0) as Radio_3G_use_Den,	sum(0) as Radio_4G_use_Den,			
		sum(0) as Radio_U2100_use_Num,	sum(0) as Radio_U900_use_Num,    sum(0) as Radio_LTE2100_use_Num,    sum(0) as Radio_LTE2600_use_Num,    sum(0) as Radio_LTE1800_use_Num,    sum(0) as Radio_LTE800_use_Num,
		sum(0) as Radio_Band_Use_Den,	
		sum(0) as Radio_U2100_use_Den,	sum(0) as Radio_U900_use_Den,    sum(0) as Radio_LTE2100_use_Den,    sum(0) as Radio_LTE2600_use_Den,    sum(0) as Radio_LTE1800_use_Den,    sum(0) as Radio_LTE800_use_Den,

		sum(0) as [3G_DualCarrier_use_Num],	sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],		sum(0) as [3G_DC_2100_use_Den],	sum(0) as [3G_DC_900_use_Num],		sum(0) as [3G_DC_900_use_Den],

		sum(0) as [3G_NumCodes_use_Num],	sum(0) as [3G_NumCodes_use_Den],
		sum(0) as [3G_QPSK_use_Num],		sum(0) as [3G_16QAM_use_Num],    sum(0) as [3G_64QAM_use_Num],	
		sum(0) as [3G_QPSK_use_Den],		sum(0) as [3G_16QAM_use_Den],    sum(0) as [3G_64QAM_use_Den],

		sum(0) as [3G_%_SF22_Num],		sum(0) as [3G_%_SF22andSF42_Num],	sum(0) as [3G_%_SF4_Num],	sum(0) as [3G_%_SF42_Num],	
		sum(0) as [3G_%_SF22_Den],		sum(0) as [3G_%_SF22andSF42_Den],	sum(0) as [3G_%_SF4_Den],	sum(0) as [3G_%_SF42_Den],	
		sum(0) as [3G_%_TTI2ms_Num],	sum(0) as [3G_%_TTI2ms_Den],		
		sum(0) as [RSCP_Lin_Num],		sum(0) as [EcI0_Lin_Num],	
		sum(0) as [RSCP_Lin_Den],		sum(0) as [EcI0_Lin_Den],
	
		-- Performance:
		sum(0) as [3G_CQI],			sum(0) as [3G_DataStats_Den],
		Sum(0) as CQI_U900_Num,		sum(0) as CQI_U900_Den,	Sum(0) as CQI_U2100_Num,	sum(0) as CQI_U2100_Den,
		sum(0) as [HSPA_PCT_Num],	sum(0) as [HSPA+_PCT_Num],	sum(0) as [HSPA+_DC_PCT_Num],	sum(0) as [HSPA_PCT_Den],	sum(0) as [HSPA+_PCT_Den],	sum(0) as [HSPA+_DC_PCT_Den],
		sum(0) as [UL_Inter_Lin_Num],	sum(0) as [UL_Inter_Lin_Den],	
	
		-- Performance LTE:
		sum(0) as CQI_4G_Num,	sum(0) as CQI_L800_Num,	sum(0) as CQI_L1800_Num,	sum(0) as CQI_L2100_Num,	sum(0) as CQI_L2600_Num,
		sum(0) as CQI_4G_Den,	sum(0) as CQI_L800_Den,	sum(0) as CQI_L1800_Den,	sum(0) as CQI_L2100_Den,	sum(0) as CQI_L2600_Den,

		sum(0) as LTE_5Mhz_SC_Use_Num,	sum(0) as LTE_10Mhz_SC_Use_Num,	sum(0) as LTE_15Mhz_SC_Use_Num,	sum(0) as LTE_20Mhz_SC_Use_Num,	sum(0) as LTE_15Mhz_CA_Use_Num,	sum(0) as LTE_20Mhz_CA_Use_Num,	sum(0) as LTE_25Mhz_CA_Use_Num,	sum(0) as LTE_30Mhz_CA_Use_Num,	sum(0) as LTE_35Mhz_CA_Use_Num,	sum(0) as LTE_40Mhz_CA_Use_Num,	
		sum(0) as LTE_5Mhz_SC_Use_Den,	sum(0) as LTE_10Mhz_SC_Use_Den,	sum(0) as LTE_15Mhz_SC_Use_Den,	sum(0) as LTE_20Mhz_SC_Use_Den,sum(0) as LTE_15Mhz_CA_Use_Den,	sum(0) as LTE_20Mhz_CA_Use_Den,	sum(0) as LTE_25Mhz_CA_Use_Den,	sum(0) as LTE_30Mhz_CA_Use_Den,	sum(0) as LTE_35Mhz_CA_Use_Den,	sum(0) as LTE_40Mhz_CA_Use_Den,	
		sum(0) as LTE_BW_use_den,	
		sum(0) as [4G_RBs_use_Num],	sum(0) as [4G_RBs_use_Den],

		sum(0) as [4G_TM1_use_Num],	sum(0) as [4G_TM2_use_Num],	sum(0) as [4G_TM3_use_Num],	sum(0) as [4G_TM4_use_Num],	sum(0) as [4G_TM5_use_Num],	sum(0) as [4G_TM6_use_Num],	sum(0) as [4G_TM7_use_Num],	sum(0) as [4G_TM8_use_Num],	sum(0) as [4G_TM9_use_Num],
		sum(0) as [4G_TMInvalid_use_Num],	sum(0) as [4G_TMUnknown_use_Num],
		sum(0) as [4G_TM_Den],

		-- Technology LTE:
		sum(0) as [4G_%CA_Num],			sum(0) as [4G_%CA_Den],
		sum(0) as [4G_BPSK_Use_Num],	sum(0) as [4G_QPSK_Use_Num],	sum(0) as [4G_16QAM_Use_Num],   sum(0) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],	sum(0) as [4G_QPSK_Use_Den],	sum(0) as [4G_16QAM_Use_Den],   sum(0) as [4G_64QAM_Use_Den],		sum(0) as [4G_stats_Den],	
		sum(0) as [RSRP_Lin_Num],		sum(0) as [RSRQ_Lin_Num],		sum(0) as [SINR_Lin_Num],		sum(0) as [RSRP_Lin_Den],			sum(0) as [RSRQ_Lin_Den],	sum(0) as [SINR_Lin_Den],		

		--New KPIs:
		sum(0) as [MIMO_num],			sum(0) as [RI1_num],			sum(0) as [RI2_num],	sum(0) as [MIMO_den],	sum(0) as [RI1_den],	sum(0) as [RI2_den],
		sum(0) as RBs_Allocated_Den,	sum(0) as RBs_Allocated_Num,	max(0) as RBs_Allocated_Max,
	
		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		null as [1_N],	null as [2_N],	null as [3_N],	null as [4_N],	null as [5_N],	null as [6_N],	null as [7_N],	null as [8_N],	null as [9_N],	null as [10_N],
		null as [11_N],	null as [12_N],	null as [13_N],	null as [14_N],	null as [15_N],	null as [16_N],	null as [17_N],	null as [18_N],	null as [19_N],	null as [20_N],
		null as [21_N],	null as [22_N],	null as [23_N],	null as [24_N],	null as [25_N],	null as [26_N],	null as [27_N],	null as [28_N],	null as [29_N],	null as [30_N],
		null as [31_N],	null as [32_N],	null as [33_N],	null as [34_N],	null as [35_N],	null as [36_N],	null as [37_N],	null as [38_N],	null as [39_N],	null as [40_N],
		null as [41_N],	null as [42_N],	null as [43_N],	null as [44_N],	null as [45_N],	null as [46_N],	null as [47_N],	null as [48_N],	null as [49_N],	null as [50_N],
		null as [51_N],	null as [52_N],	null as [53_N],	null as [54_N],	null as [55_N],	null as [56_N],	null as [57_N],	null as [58_N],	null as [59_N],	null as [60_N],
		null as [61_N],	null as [62_N],	null as [63_N],	null as [64_N],	null as [65_N],	null as [66_N]
	
		--null as Region_Road_VF, null as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,null as [1]	,null as [2]	,null as [3]	,null as [4]	,null as [5]	,null as [6]	,null as [7]	,null as [8]	,null as [9]	,null as [10]
		,null as [11]	,null as [12]	,null as [13]	,null as [14]	,null as [15]	,null as [16]	,null as [17]	,null as [18]	,null as [19]	,null as [20]
		,null as [21]	,null as [22]	,null as [23]	,null as [24]	,null as [25]	,null as [26]	,null as [27]	,null as [28]	,null as [29]	,null as [30]
		,null as [31]	,null as [32]	,null as [33]	,null as [34]	,null as [35]	,null as [36]	,null as [37]	,null as [38]	,null as [39]	,null as [40]
		,null as [41],

		-- Parametros de configuracion:
		t.ASideDevice as ASideDevice, t.BSideDevice as BSideDevice, t.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from [AGGRData3G].dbo.[lcc_aggr_sp_MDD_Data_Youtube] t, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end,
		mnc,meas_round,Date_Reporting,Week_Reporting,t.entidad,t.Report_Type,t.Aggr_Type,
		t.ASideDevice, t.BSideDevice, t.SWVersion--, t.Region_VF, t.Region_OSP
	
	-------------
	union all
	select  
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment,mnc,meas_round,Date_Reporting as meas_date,Week_Reporting as meas_week, 
		'4G' as meas_Tech, 'Youtube SD' as Test_type, 'Downlink' as Direction, entidad as vf_entity,t.Report_Type,t.Aggr_Type,
		
		-- General:
		sum(t.Reproducciones) as Num_tests,
		sum(t.Fails) as Failed,
		sum(t.reproducciones-t.fails-t.[Successful video download]) as Dropped,

		sum(0) as Session_time_Num,	sum(0) as Throughput_Den,	sum(0) as Session_time_Den,
		sum(0) as Throughput_Num,	max(0) as Throughput_Max,	sum(0) as Throughput_3M_Num,	sum(0) as Throughput_1M_Num,	sum(0) as Throughput_128K_Num,	sum(0) as Throughput_64K_Num, sum(0) as Throughput_384K_Num,
		--CAC 10/08/2017: thput de test sin error y con error
		sum(0) as Throughput_with_Error_Den,
		sum(0) as Throughput_with_Error_Num,
		sum(0) as  WEB_IP_ACCESS_TIME_NUM,			sum(0) as  WEB_IP_ACCESS_TIME_DEN,
		sum(0) as  WEB_HTTP_TRANSFER_TIME_NUM,		sum(0) as  WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as  WEB_IP_ACCESS_TIME_HTTPS_NUM,	sum(0) as  WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as  WEB_TRANSFER_TIME_HTTPS_NUM,		sum(0) as  WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,	sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(0) as Radio_2G_use_Num,	sum(0) as Radio_3G_use_Num,		sum(0) as Radio_4G_use_Num,	sum(0) as Radio_use_Den,	sum(0) as Radio_2G_use_Den,		sum(0) as Radio_3G_use_Den,	sum(0) as Radio_4G_use_Den,			
		sum(0) as Radio_U2100_use_Num,	sum(0) as Radio_U900_use_Num,    sum(0) as Radio_LTE2100_use_Num,    sum(0) as Radio_LTE2600_use_Num,    sum(0) as Radio_LTE1800_use_Num,    sum(0) as Radio_LTE800_use_Num,
		sum(0) as Radio_Band_Use_Den,	
		sum(0) as Radio_U2100_use_Den,	sum(0) as Radio_U900_use_Den,    sum(0) as Radio_LTE2100_use_Den,    sum(0) as Radio_LTE2600_use_Den,    sum(0) as Radio_LTE1800_use_Den,    sum(0) as Radio_LTE800_use_Den,

		sum(0) as [3G_DualCarrier_use_Num],	sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],		sum(0) as [3G_DC_2100_use_Den],	sum(0) as [3G_DC_900_use_Num],		sum(0) as [3G_DC_900_use_Den],

		sum(0) as [3G_NumCodes_use_Num],	sum(0) as [3G_NumCodes_use_Den],
		sum(0) as [3G_QPSK_use_Num],		sum(0) as [3G_16QAM_use_Num],    sum(0) as [3G_64QAM_use_Num],	
		sum(0) as [3G_QPSK_use_Den],		sum(0) as [3G_16QAM_use_Den],    sum(0) as [3G_64QAM_use_Den],

		sum(0) as [3G_%_SF22_Num],		sum(0) as [3G_%_SF22andSF42_Num],	sum(0) as [3G_%_SF4_Num],	sum(0) as [3G_%_SF42_Num],	
		sum(0) as [3G_%_SF22_Den],		sum(0) as [3G_%_SF22andSF42_Den],	sum(0) as [3G_%_SF4_Den],	sum(0) as [3G_%_SF42_Den],	
		sum(0) as [3G_%_TTI2ms_Num],	sum(0) as [3G_%_TTI2ms_Den],		
		sum(0) as [RSCP_Lin_Num],		sum(0) as [EcI0_Lin_Num],	
		sum(0) as [RSCP_Lin_Den],		sum(0) as [EcI0_Lin_Den],
	
		-- Performance:
		sum(0) as [3G_CQI],			sum(0) as [3G_DataStats_Den],
		Sum(0) as CQI_U900_Num,		sum(0) as CQI_U900_Den,	Sum(0) as CQI_U2100_Num,	sum(0) as CQI_U2100_Den,
		sum(0) as [HSPA_PCT_Num],	sum(0) as [HSPA+_PCT_Num],	sum(0) as [HSPA+_DC_PCT_Num],	sum(0) as [HSPA_PCT_Den],	sum(0) as [HSPA+_PCT_Den],	sum(0) as [HSPA+_DC_PCT_Den],
		sum(0) as [UL_Inter_Lin_Num],	sum(0) as [UL_Inter_Lin_Den],	
	
		-- Performance LTE:
		sum(0) as CQI_4G_Num,	sum(0) as CQI_L800_Num,	sum(0) as CQI_L1800_Num,	sum(0) as CQI_L2100_Num,	sum(0) as CQI_L2600_Num,
		sum(0) as CQI_4G_Den,	sum(0) as CQI_L800_Den,	sum(0) as CQI_L1800_Den,	sum(0) as CQI_L2100_Den,	sum(0) as CQI_L2600_Den,

		sum(0) as LTE_5Mhz_SC_Use_Num,	sum(0) as LTE_10Mhz_SC_Use_Num,	sum(0) as LTE_15Mhz_SC_Use_Num,	sum(0) as LTE_20Mhz_SC_Use_Num,	sum(0) as LTE_15Mhz_CA_Use_Num,	sum(0) as LTE_20Mhz_CA_Use_Num,	sum(0) as LTE_25Mhz_CA_Use_Num,	sum(0) as LTE_30Mhz_CA_Use_Num,	sum(0) as LTE_35Mhz_CA_Use_Num,	sum(0) as LTE_40Mhz_CA_Use_Num,	
		sum(0) as LTE_5Mhz_SC_Use_Den,	sum(0) as LTE_10Mhz_SC_Use_Den,	sum(0) as LTE_15Mhz_SC_Use_Den,	sum(0) as LTE_20Mhz_SC_Use_Den,sum(0) as LTE_15Mhz_CA_Use_Den,	sum(0) as LTE_20Mhz_CA_Use_Den,	sum(0) as LTE_25Mhz_CA_Use_Den,	sum(0) as LTE_30Mhz_CA_Use_Den,	sum(0) as LTE_35Mhz_CA_Use_Den,	sum(0) as LTE_40Mhz_CA_Use_Den,	
		sum(0) as LTE_BW_use_den,	
		sum(0) as [4G_RBs_use_Num],	sum(0) as [4G_RBs_use_Den],

		sum(0) as [4G_TM1_use_Num],	sum(0) as [4G_TM2_use_Num],	sum(0) as [4G_TM3_use_Num],	sum(0) as [4G_TM4_use_Num],	sum(0) as [4G_TM5_use_Num],	sum(0) as [4G_TM6_use_Num],	sum(0) as [4G_TM7_use_Num],	sum(0) as [4G_TM8_use_Num],	sum(0) as [4G_TM9_use_Num],
		sum(0) as [4G_TMInvalid_use_Num],	sum(0) as [4G_TMUnknown_use_Num],
		sum(0) as [4G_TM_Den],

		-- Technology LTE:
		sum(0) as [4G_%CA_Num],			sum(0) as [4G_%CA_Den],
		sum(0) as [4G_BPSK_Use_Num],	sum(0) as [4G_QPSK_Use_Num],	sum(0) as [4G_16QAM_Use_Num],   sum(0) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],	sum(0) as [4G_QPSK_Use_Den],	sum(0) as [4G_16QAM_Use_Den],   sum(0) as [4G_64QAM_Use_Den],		sum(0) as [4G_stats_Den],	
		sum(0) as [RSRP_Lin_Num],		sum(0) as [RSRQ_Lin_Num],		sum(0) as [SINR_Lin_Num],		sum(0) as [RSRP_Lin_Den],			sum(0) as [RSRQ_Lin_Den],	sum(0) as [SINR_Lin_Den],		

		--New KPIs:
		sum(0) as [MIMO_num],			sum(0) as [RI1_num],			sum(0) as [RI2_num],	sum(0) as [MIMO_den],	sum(0) as [RI1_den],	sum(0) as [RI2_den],
		sum(0) as RBs_Allocated_Den,	sum(0) as RBs_Allocated_Num,	max(0) as RBs_Allocated_Max,
	
		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		null as [1_N],	null as [2_N],	null as [3_N],	null as [4_N],	null as [5_N],	null as [6_N],	null as [7_N],	null as [8_N],	null as [9_N],	null as [10_N],
		null as [11_N],	null as [12_N],	null as [13_N],	null as [14_N],	null as [15_N],	null as [16_N],	null as [17_N],	null as [18_N],	null as [19_N],	null as [20_N],
		null as [21_N],	null as [22_N],	null as [23_N],	null as [24_N],	null as [25_N],	null as [26_N],	null as [27_N],	null as [28_N],	null as [29_N],	null as [30_N],
		null as [31_N],	null as [32_N],	null as [33_N],	null as [34_N],	null as [35_N],	null as [36_N],	null as [37_N],	null as [38_N],	null as [39_N],	null as [40_N],
		null as [41_N],	null as [42_N],	null as [43_N],	null as [44_N],	null as [45_N],	null as [46_N],	null as [47_N],	null as [48_N],	null as [49_N],	null as [50_N],
		null as [51_N],	null as [52_N],	null as [53_N],	null as [54_N],	null as [55_N],	null as [56_N],	null as [57_N],	null as [58_N],	null as [59_N],	null as [60_N],
		null as [61_N],	null as [62_N],	null as [63_N],	null as [64_N],	null as [65_N],	null as [66_N]
	
		--null as Region_Road_VF, null as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,null as [1]	,null as [2]	,null as [3]	,null as [4]	,null as [5]	,null as [6]	,null as [7]	,null as [8]	,null as [9]	,null as [10]
		,null as [11]	,null as [12]	,null as [13]	,null as [14]	,null as [15]	,null as [16]	,null as [17]	,null as [18]	,null as [19]	,null as [20]
		,null as [21]	,null as [22]	,null as [23]	,null as [24]	,null as [25]	,null as [26]	,null as [27]	,null as [28]	,null as [29]	,null as [30]
		,null as [31]	,null as [32]	,null as [33]	,null as [34]	,null as [35]	,null as [36]	,null as [37]	,null as [38]	,null as [39]	,null as [40]
		,null as [41],

		-- Parametros de configuracion:
		t.ASideDevice as ASideDevice, t.BSideDevice as BSideDevice, t.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_Youtube] t, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end,
		mnc,meas_round,Date_Reporting,Week_Reporting,t.entidad,t.Report_Type,t.Aggr_Type,
		t.ASideDevice, t.BSideDevice, t.SWVersion--, t.Region_VF, t.Region_OSP
	

	-------------
	-- 3G/4G - HD:
	insert into _RI_Data_e 
	select  
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment,mnc,meas_round,Date_Reporting as meas_date,Week_Reporting as meas_week, 
		'3G' as meas_Tech, 'Youtube HD' as Test_type, 'Downlink' as Direction, entidad as vf_entity,t.Report_Type,t.Aggr_Type,
		
		-- General:
		sum(t.Reproducciones) as Num_tests,
		sum(t.Fails) as Failed,
		sum(t.reproducciones-t.fails-t.[Successful video download]) as Dropped,

		sum(0) as Session_time_Num,	sum(0) as Throughput_Den,	sum(0) as Session_time_Den,
		sum(0) as Throughput_Num,	max(0) as Throughput_Max,	sum(0) as Throughput_3M_Num,	sum(0) as Throughput_1M_Num,	sum(0) as Throughput_128K_Num,	sum(0) as Throughput_64K_Num, sum(0) as Throughput_384K_Num,
		--CAC 10/08/2017: thput de test sin error y con error
		sum(0) as Throughput_with_Error_Den,
		sum(0) as Throughput_with_Error_Num,
		sum(0) as  WEB_IP_ACCESS_TIME_NUM,			sum(0) as  WEB_IP_ACCESS_TIME_DEN,
		sum(0) as  WEB_HTTP_TRANSFER_TIME_NUM,		sum(0) as  WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as  WEB_IP_ACCESS_TIME_HTTPS_NUM,	sum(0) as  WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as  WEB_TRANSFER_TIME_HTTPS_NUM,		sum(0) as  WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,	sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(0) as Radio_2G_use_Num,	sum(0) as Radio_3G_use_Num,		sum(0) as Radio_4G_use_Num,	sum(0) as Radio_use_Den,	sum(0) as Radio_2G_use_Den,		sum(0) as Radio_3G_use_Den,	sum(0) as Radio_4G_use_Den,			
		sum(0) as Radio_U2100_use_Num,	sum(0) as Radio_U900_use_Num,    sum(0) as Radio_LTE2100_use_Num,    sum(0) as Radio_LTE2600_use_Num,    sum(0) as Radio_LTE1800_use_Num,    sum(0) as Radio_LTE800_use_Num,
		sum(0) as Radio_Band_Use_Den,	
		sum(0) as Radio_U2100_use_Den,	sum(0) as Radio_U900_use_Den,    sum(0) as Radio_LTE2100_use_Den,    sum(0) as Radio_LTE2600_use_Den,    sum(0) as Radio_LTE1800_use_Den,    sum(0) as Radio_LTE800_use_Den,

		sum(0) as [3G_DualCarrier_use_Num],	sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],		sum(0) as [3G_DC_2100_use_Den],	sum(0) as [3G_DC_900_use_Num],		sum(0) as [3G_DC_900_use_Den],

		sum(0) as [3G_NumCodes_use_Num],	sum(0) as [3G_NumCodes_use_Den],
		sum(0) as [3G_QPSK_use_Num],		sum(0) as [3G_16QAM_use_Num],    sum(0) as [3G_64QAM_use_Num],	
		sum(0) as [3G_QPSK_use_Den],		sum(0) as [3G_16QAM_use_Den],    sum(0) as [3G_64QAM_use_Den],

		sum(0) as [3G_%_SF22_Num],		sum(0) as [3G_%_SF22andSF42_Num],	sum(0) as [3G_%_SF4_Num],	sum(0) as [3G_%_SF42_Num],	
		sum(0) as [3G_%_SF22_Den],		sum(0) as [3G_%_SF22andSF42_Den],	sum(0) as [3G_%_SF4_Den],	sum(0) as [3G_%_SF42_Den],	
		sum(0) as [3G_%_TTI2ms_Num],	sum(0) as [3G_%_TTI2ms_Den],		
		sum(0) as [RSCP_Lin_Num],		sum(0) as [EcI0_Lin_Num],	
		sum(0) as [RSCP_Lin_Den],		sum(0) as [EcI0_Lin_Den],
	
		-- Performance:
		sum(0) as [3G_CQI],			sum(0) as [3G_DataStats_Den],
		Sum(0) as CQI_U900_Num,		sum(0) as CQI_U900_Den,	Sum(0) as CQI_U2100_Num,	sum(0) as CQI_U2100_Den,
		sum(0) as [HSPA_PCT_Num],	sum(0) as [HSPA+_PCT_Num],	sum(0) as [HSPA+_DC_PCT_Num],	sum(0) as [HSPA_PCT_Den],	sum(0) as [HSPA+_PCT_Den],	sum(0) as [HSPA+_DC_PCT_Den],
		sum(0) as [UL_Inter_Lin_Num],	sum(0) as [UL_Inter_Lin_Den],	
	
		-- Performance LTE:
		sum(0) as CQI_4G_Num,	sum(0) as CQI_L800_Num,	sum(0) as CQI_L1800_Num,	sum(0) as CQI_L2100_Num,	sum(0) as CQI_L2600_Num,
		sum(0) as CQI_4G_Den,	sum(0) as CQI_L800_Den,	sum(0) as CQI_L1800_Den,	sum(0) as CQI_L2100_Den,	sum(0) as CQI_L2600_Den,

		sum(0) as LTE_5Mhz_SC_Use_Num,	sum(0) as LTE_10Mhz_SC_Use_Num,	sum(0) as LTE_15Mhz_SC_Use_Num,	sum(0) as LTE_20Mhz_SC_Use_Num,	sum(0) as LTE_15Mhz_CA_Use_Num,	sum(0) as LTE_20Mhz_CA_Use_Num,	sum(0) as LTE_25Mhz_CA_Use_Num,	sum(0) as LTE_30Mhz_CA_Use_Num,	sum(0) as LTE_35Mhz_CA_Use_Num,	sum(0) as LTE_40Mhz_CA_Use_Num,	
		sum(0) as LTE_5Mhz_SC_Use_Den,	sum(0) as LTE_10Mhz_SC_Use_Den,	sum(0) as LTE_15Mhz_SC_Use_Den,	sum(0) as LTE_20Mhz_SC_Use_Den,sum(0) as LTE_15Mhz_CA_Use_Den,	sum(0) as LTE_20Mhz_CA_Use_Den,	sum(0) as LTE_25Mhz_CA_Use_Den,	sum(0) as LTE_30Mhz_CA_Use_Den,	sum(0) as LTE_35Mhz_CA_Use_Den,	sum(0) as LTE_40Mhz_CA_Use_Den,	
		sum(0) as LTE_BW_use_den,	
		sum(0) as [4G_RBs_use_Num],	sum(0) as [4G_RBs_use_Den],

		sum(0) as [4G_TM1_use_Num],	sum(0) as [4G_TM2_use_Num],	sum(0) as [4G_TM3_use_Num],	sum(0) as [4G_TM4_use_Num],	sum(0) as [4G_TM5_use_Num],	sum(0) as [4G_TM6_use_Num],	sum(0) as [4G_TM7_use_Num],	sum(0) as [4G_TM8_use_Num],	sum(0) as [4G_TM9_use_Num],
		sum(0) as [4G_TMInvalid_use_Num],	sum(0) as [4G_TMUnknown_use_Num],
		sum(0) as [4G_TM_Den],

		-- Technology LTE:
		sum(0) as [4G_%CA_Num],			sum(0) as [4G_%CA_Den],
		sum(0) as [4G_BPSK_Use_Num],	sum(0) as [4G_QPSK_Use_Num],	sum(0) as [4G_16QAM_Use_Num],   sum(0) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],	sum(0) as [4G_QPSK_Use_Den],	sum(0) as [4G_16QAM_Use_Den],   sum(0) as [4G_64QAM_Use_Den],		sum(0) as [4G_stats_Den],	
		sum(0) as [RSRP_Lin_Num],		sum(0) as [RSRQ_Lin_Num],		sum(0) as [SINR_Lin_Num],		sum(0) as [RSRP_Lin_Den],			sum(0) as [RSRQ_Lin_Den],	sum(0) as [SINR_Lin_Den],		

		--New KPIs:
		sum(0) as [MIMO_num],			sum(0) as [RI1_num],			sum(0) as [RI2_num],	sum(0) as [MIMO_den],	sum(0) as [RI1_den],	sum(0) as [RI2_den],
		sum(0) as RBs_Allocated_Den,	sum(0) as RBs_Allocated_Num,	max(0) as RBs_Allocated_Max,
	
		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		null as [1_N],	null as [2_N],	null as [3_N],	null as [4_N],	null as [5_N],	null as [6_N],	null as [7_N],	null as [8_N],	null as [9_N],	null as [10_N],
		null as [11_N],	null as [12_N],	null as [13_N],	null as [14_N],	null as [15_N],	null as [16_N],	null as [17_N],	null as [18_N],	null as [19_N],	null as [20_N],
		null as [21_N],	null as [22_N],	null as [23_N],	null as [24_N],	null as [25_N],	null as [26_N],	null as [27_N],	null as [28_N],	null as [29_N],	null as [30_N],
		null as [31_N],	null as [32_N],	null as [33_N],	null as [34_N],	null as [35_N],	null as [36_N],	null as [37_N],	null as [38_N],	null as [39_N],	null as [40_N],
		null as [41_N],	null as [42_N],	null as [43_N],	null as [44_N],	null as [45_N],	null as [46_N],	null as [47_N],	null as [48_N],	null as [49_N],	null as [50_N],
		null as [51_N],	null as [52_N],	null as [53_N],	null as [54_N],	null as [55_N],	null as [56_N],	null as [57_N],	null as [58_N],	null as [59_N],	null as [60_N],
		null as [61_N],	null as [62_N],	null as [63_N],	null as [64_N],	null as [65_N],	null as [66_N]
	
		--null as Region_Road_VF, null as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,null as [1]	,null as [2]	,null as [3]	,null as [4]	,null as [5]	,null as [6]	,null as [7]	,null as [8]	,null as [9]	,null as [10]
		,null as [11]	,null as [12]	,null as [13]	,null as [14]	,null as [15]	,null as [16]	,null as [17]	,null as [18]	,null as [19]	,null as [20]
		,null as [21]	,null as [22]	,null as [23]	,null as [24]	,null as [25]	,null as [26]	,null as [27]	,null as [28]	,null as [29]	,null as [30]
		,null as [31]	,null as [32]	,null as [33]	,null as [34]	,null as [35]	,null as [36]	,null as [37]	,null as [38]	,null as [39]	,null as [40]
		,null as [41],

		-- Parametros de configuracion:
		t.ASideDevice as ASideDevice, t.BSideDevice as BSideDevice, t.SWVersion as SWVersion, 
		max(t.Youtube_Version) as YTB_Version, max(t.url) as YTB_URL	

	from [AGGRData3G].dbo.[lcc_aggr_sp_MDD_Data_Youtube_HD] t, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end,
		mnc,meas_round,Date_Reporting,Week_Reporting,t.entidad,t.Report_Type,t.Aggr_Type,
		t.ASideDevice, t.BSideDevice, t.SWVersion--, t.Youtube_Version, t.url --, t.Region_VF, t.Region_OSP, 
	
	-------------
	union all
	select  
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment,
		mnc,meas_round,Date_Reporting as meas_date,Week_Reporting as meas_week, 
		'4G' as meas_Tech, 'Youtube HD' as Test_type, 'Downlink' as Direction, entidad as vf_entity,t.Report_Type,t.Aggr_Type,
		
		-- General:
		sum(t.Reproducciones) as Num_tests,
		sum(t.Fails) as Failed,
		sum(t.reproducciones-t.fails-t.[Successful video download]) as Dropped,

		sum(0) as Session_time_Num,	sum(0) as Throughput_Den,	sum(0) as Session_time_Den,
		sum(0) as Throughput_Num,	max(0) as Throughput_Max,	sum(0) as Throughput_3M_Num,	sum(0) as Throughput_1M_Num,	sum(0) as Throughput_128K_Num,	sum(0) as Throughput_64K_Num, sum(0) as Throughput_384K_Num,
		--CAC 10/08/2017: thput de test sin error y con error
		sum(0) as Throughput_with_Error_Den,
		sum(0) as Throughput_with_Error_Num,
		sum(0) as  WEB_IP_ACCESS_TIME_NUM,			sum(0) as  WEB_IP_ACCESS_TIME_DEN,
		sum(0) as  WEB_HTTP_TRANSFER_TIME_NUM,		sum(0) as  WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as  WEB_IP_ACCESS_TIME_HTTPS_NUM,	sum(0) as  WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as  WEB_TRANSFER_TIME_HTTPS_NUM,		sum(0) as  WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,	sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(0) as Radio_2G_use_Num,	sum(0) as Radio_3G_use_Num,		sum(0) as Radio_4G_use_Num,	sum(0) as Radio_use_Den,	sum(0) as Radio_2G_use_Den,		sum(0) as Radio_3G_use_Den,	sum(0) as Radio_4G_use_Den,			
		sum(0) as Radio_U2100_use_Num,	sum(0) as Radio_U900_use_Num,    sum(0) as Radio_LTE2100_use_Num,    sum(0) as Radio_LTE2600_use_Num,    sum(0) as Radio_LTE1800_use_Num,    sum(0) as Radio_LTE800_use_Num,
		sum(0) as Radio_Band_Use_Den,	
		sum(0) as Radio_U2100_use_Den,	sum(0) as Radio_U900_use_Den,    sum(0) as Radio_LTE2100_use_Den,    sum(0) as Radio_LTE2600_use_Den,    sum(0) as Radio_LTE1800_use_Den,    sum(0) as Radio_LTE800_use_Den,

		sum(0) as [3G_DualCarrier_use_Num],	sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],		sum(0) as [3G_DC_2100_use_Den],	sum(0) as [3G_DC_900_use_Num],		sum(0) as [3G_DC_900_use_Den],

		sum(0) as [3G_NumCodes_use_Num],	sum(0) as [3G_NumCodes_use_Den],
		sum(0) as [3G_QPSK_use_Num],		sum(0) as [3G_16QAM_use_Num],    sum(0) as [3G_64QAM_use_Num],	
		sum(0) as [3G_QPSK_use_Den],		sum(0) as [3G_16QAM_use_Den],    sum(0) as [3G_64QAM_use_Den],

		sum(0) as [3G_%_SF22_Num],		sum(0) as [3G_%_SF22andSF42_Num],	sum(0) as [3G_%_SF4_Num],	sum(0) as [3G_%_SF42_Num],	
		sum(0) as [3G_%_SF22_Den],		sum(0) as [3G_%_SF22andSF42_Den],	sum(0) as [3G_%_SF4_Den],	sum(0) as [3G_%_SF42_Den],	
		sum(0) as [3G_%_TTI2ms_Num],	sum(0) as [3G_%_TTI2ms_Den],		
		sum(0) as [RSCP_Lin_Num],		sum(0) as [EcI0_Lin_Num],	
		sum(0) as [RSCP_Lin_Den],		sum(0) as [EcI0_Lin_Den],
	
		-- Performance:
		sum(0) as [3G_CQI],			sum(0) as [3G_DataStats_Den],
		Sum(0) as CQI_U900_Num,		sum(0) as CQI_U900_Den,	Sum(0) as CQI_U2100_Num,	sum(0) as CQI_U2100_Den,
		sum(0) as [HSPA_PCT_Num],	sum(0) as [HSPA+_PCT_Num],	sum(0) as [HSPA+_DC_PCT_Num],	sum(0) as [HSPA_PCT_Den],	sum(0) as [HSPA+_PCT_Den],	sum(0) as [HSPA+_DC_PCT_Den],
		sum(0) as [UL_Inter_Lin_Num],	sum(0) as [UL_Inter_Lin_Den],	
	
		-- Performance LTE:
		sum(0) as CQI_4G_Num,	sum(0) as CQI_L800_Num,	sum(0) as CQI_L1800_Num,	sum(0) as CQI_L2100_Num,	sum(0) as CQI_L2600_Num,
		sum(0) as CQI_4G_Den,	sum(0) as CQI_L800_Den,	sum(0) as CQI_L1800_Den,	sum(0) as CQI_L2100_Den,	sum(0) as CQI_L2600_Den,

		sum(0) as LTE_5Mhz_SC_Use_Num,	sum(0) as LTE_10Mhz_SC_Use_Num,	sum(0) as LTE_15Mhz_SC_Use_Num,	sum(0) as LTE_20Mhz_SC_Use_Num,	sum(0) as LTE_15Mhz_CA_Use_Num,	sum(0) as LTE_20Mhz_CA_Use_Num,	sum(0) as LTE_25Mhz_CA_Use_Num,	sum(0) as LTE_30Mhz_CA_Use_Num,	sum(0) as LTE_35Mhz_CA_Use_Num,	sum(0) as LTE_40Mhz_CA_Use_Num,	
		sum(0) as LTE_5Mhz_SC_Use_Den,	sum(0) as LTE_10Mhz_SC_Use_Den,	sum(0) as LTE_15Mhz_SC_Use_Den,	sum(0) as LTE_20Mhz_SC_Use_Den,sum(0) as LTE_15Mhz_CA_Use_Den,	sum(0) as LTE_20Mhz_CA_Use_Den,	sum(0) as LTE_25Mhz_CA_Use_Den,	sum(0) as LTE_30Mhz_CA_Use_Den,	sum(0) as LTE_35Mhz_CA_Use_Den,	sum(0) as LTE_40Mhz_CA_Use_Den,	
		sum(0) as LTE_BW_use_den,	
		sum(0) as [4G_RBs_use_Num],	sum(0) as [4G_RBs_use_Den],

		sum(0) as [4G_TM1_use_Num],	sum(0) as [4G_TM2_use_Num],	sum(0) as [4G_TM3_use_Num],	sum(0) as [4G_TM4_use_Num],	sum(0) as [4G_TM5_use_Num],	sum(0) as [4G_TM6_use_Num],	sum(0) as [4G_TM7_use_Num],	sum(0) as [4G_TM8_use_Num],	sum(0) as [4G_TM9_use_Num],
		sum(0) as [4G_TMInvalid_use_Num],	sum(0) as [4G_TMUnknown_use_Num],
		sum(0) as [4G_TM_Den],

		-- Technology LTE:
		sum(0) as [4G_%CA_Num],			sum(0) as [4G_%CA_Den],
		sum(0) as [4G_BPSK_Use_Num],	sum(0) as [4G_QPSK_Use_Num],	sum(0) as [4G_16QAM_Use_Num],   sum(0) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],	sum(0) as [4G_QPSK_Use_Den],	sum(0) as [4G_16QAM_Use_Den],   sum(0) as [4G_64QAM_Use_Den],		sum(0) as [4G_stats_Den],	
		sum(0) as [RSRP_Lin_Num],		sum(0) as [RSRQ_Lin_Num],		sum(0) as [SINR_Lin_Num],		sum(0) as [RSRP_Lin_Den],			sum(0) as [RSRQ_Lin_Den],	sum(0) as [SINR_Lin_Den],		

		--New KPIs:
		sum(0) as [MIMO_num],			sum(0) as [RI1_num],			sum(0) as [RI2_num],	sum(0) as [MIMO_den],	sum(0) as [RI1_den],	sum(0) as [RI2_den],
		sum(0) as RBs_Allocated_Den,	sum(0) as RBs_Allocated_Num,	max(0) as RBs_Allocated_Max,
	
		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		null as [1_N],	null as [2_N],	null as [3_N],	null as [4_N],	null as [5_N],	null as [6_N],	null as [7_N],	null as [8_N],	null as [9_N],	null as [10_N],
		null as [11_N],	null as [12_N],	null as [13_N],	null as [14_N],	null as [15_N],	null as [16_N],	null as [17_N],	null as [18_N],	null as [19_N],	null as [20_N],
		null as [21_N],	null as [22_N],	null as [23_N],	null as [24_N],	null as [25_N],	null as [26_N],	null as [27_N],	null as [28_N],	null as [29_N],	null as [30_N],
		null as [31_N],	null as [32_N],	null as [33_N],	null as [34_N],	null as [35_N],	null as [36_N],	null as [37_N],	null as [38_N],	null as [39_N],	null as [40_N],
		null as [41_N],	null as [42_N],	null as [43_N],	null as [44_N],	null as [45_N],	null as [46_N],	null as [47_N],	null as [48_N],	null as [49_N],	null as [50_N],
		null as [51_N],	null as [52_N],	null as [53_N],	null as [54_N],	null as [55_N],	null as [56_N],	null as [57_N],	null as [58_N],	null as [59_N],	null as [60_N],
		null as [61_N],	null as [62_N],	null as [63_N],	null as [64_N],	null as [65_N],	null as [66_N]
	
		--null as Region_Road_VF, null as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,null as [1]	,null as [2]	,null as [3]	,null as [4]	,null as [5]	,null as [6]	,null as [7]	,null as [8]	,null as [9]	,null as [10]
		,null as [11]	,null as [12]	,null as [13]	,null as [14]	,null as [15]	,null as [16]	,null as [17]	,null as [18]	,null as [19]	,null as [20]
		,null as [21]	,null as [22]	,null as [23]	,null as [24]	,null as [25]	,null as [26]	,null as [27]	,null as [28]	,null as [29]	,null as [30]
		,null as [31]	,null as [32]	,null as [33]	,null as [34]	,null as [35]	,null as [36]	,null as [37]	,null as [38]	,null as [39]	,null as [40]
		,null as [41],

		-- Parametros de configuracion:
		t.ASideDevice as ASideDevice, t.BSideDevice as BSideDevice, t.SWVersion as SWVersion, 
		max(t.Youtube_Version) as YTB_Version, max(t.url) as YTB_URL	

	from [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_Youtube_HD] t, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end,
		mnc,meas_round,Date_Reporting,Week_Reporting,t.entidad,t.Report_Type,t.Aggr_Type,
		t.ASideDevice, t.BSideDevice, t.SWVersion--,t.Youtube_Version, t.url --, t.Region_VF, t.Region_OSP
	

	-------------
	-- 4G ROADs - SD:
	insert into _RI_Data_e
	select  
		p.codigo_ine, 'Roads' vf_environment,mnc,meas_round,Date_Reporting as meas_date,Week_Reporting as meas_week, 
		'Road 4G' as meas_Tech, 'Youtube SD' as Test_type, 'Downlink' as Direction, entidad as vf_entity,t.Report_Type,t.Aggr_Type,
		
		-- General:
		sum(t.Reproducciones) as Num_tests,
		sum(t.Fails) as Failed,
		sum(t.reproducciones-t.fails-t.[Successful video download]) as Dropped,

		sum(0) as Session_time_Num,	sum(0) as Throughput_Den,	sum(0) as Session_time_Den,
		sum(0) as Throughput_Num,	max(0) as Throughput_Max,	sum(0) as Throughput_3M_Num,	sum(0) as Throughput_1M_Num,	sum(0) as Throughput_128K_Num,	sum(0) as Throughput_64K_Num, sum(0) as Throughput_384K_Num,
		--CAC 10/08/2017: thput de test sin error y con error
		sum(0) as Throughput_with_Error_Den,
		sum(0) as Throughput_with_Error_Num,
		sum(0) as  WEB_IP_ACCESS_TIME_NUM,			sum(0) as  WEB_IP_ACCESS_TIME_DEN,
		sum(0) as  WEB_HTTP_TRANSFER_TIME_NUM,		sum(0) as  WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as  WEB_IP_ACCESS_TIME_HTTPS_NUM,	sum(0) as  WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as  WEB_TRANSFER_TIME_HTTPS_NUM,		sum(0) as  WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,	sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(0) as Radio_2G_use_Num,	sum(0) as Radio_3G_use_Num,		sum(0) as Radio_4G_use_Num,	sum(0) as Radio_use_Den,	sum(0) as Radio_2G_use_Den,		sum(0) as Radio_3G_use_Den,	sum(0) as Radio_4G_use_Den,			
		sum(0) as Radio_U2100_use_Num,	sum(0) as Radio_U900_use_Num,    sum(0) as Radio_LTE2100_use_Num,    sum(0) as Radio_LTE2600_use_Num,    sum(0) as Radio_LTE1800_use_Num,    sum(0) as Radio_LTE800_use_Num,
		sum(0) as Radio_Band_Use_Den,	
		sum(0) as Radio_U2100_use_Den,	sum(0) as Radio_U900_use_Den,    sum(0) as Radio_LTE2100_use_Den,    sum(0) as Radio_LTE2600_use_Den,    sum(0) as Radio_LTE1800_use_Den,    sum(0) as Radio_LTE800_use_Den,

		sum(0) as [3G_DualCarrier_use_Num],	sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],		sum(0) as [3G_DC_2100_use_Den],	sum(0) as [3G_DC_900_use_Num],		sum(0) as [3G_DC_900_use_Den],

		sum(0) as [3G_NumCodes_use_Num],	sum(0) as [3G_NumCodes_use_Den],
		sum(0) as [3G_QPSK_use_Num],		sum(0) as [3G_16QAM_use_Num],    sum(0) as [3G_64QAM_use_Num],	
		sum(0) as [3G_QPSK_use_Den],		sum(0) as [3G_16QAM_use_Den],    sum(0) as [3G_64QAM_use_Den],

		sum(0) as [3G_%_SF22_Num],		sum(0) as [3G_%_SF22andSF42_Num],	sum(0) as [3G_%_SF4_Num],	sum(0) as [3G_%_SF42_Num],	
		sum(0) as [3G_%_SF22_Den],		sum(0) as [3G_%_SF22andSF42_Den],	sum(0) as [3G_%_SF4_Den],	sum(0) as [3G_%_SF42_Den],	
		sum(0) as [3G_%_TTI2ms_Num],	sum(0) as [3G_%_TTI2ms_Den],		
		sum(0) as [RSCP_Lin_Num],		sum(0) as [EcI0_Lin_Num],	
		sum(0) as [RSCP_Lin_Den],		sum(0) as [EcI0_Lin_Den],
	
		-- Performance:
		sum(0) as [3G_CQI],			sum(0) as [3G_DataStats_Den],
		Sum(0) as CQI_U900_Num,		sum(0) as CQI_U900_Den,	Sum(0) as CQI_U2100_Num,	sum(0) as CQI_U2100_Den,
		sum(0) as [HSPA_PCT_Num],	sum(0) as [HSPA+_PCT_Num],	sum(0) as [HSPA+_DC_PCT_Num],	sum(0) as [HSPA_PCT_Den],	sum(0) as [HSPA+_PCT_Den],	sum(0) as [HSPA+_DC_PCT_Den],
		sum(0) as [UL_Inter_Lin_Num],	sum(0) as [UL_Inter_Lin_Den],	
	
		-- Performance LTE:
		sum(0) as CQI_4G_Num,	sum(0) as CQI_L800_Num,	sum(0) as CQI_L1800_Num,	sum(0) as CQI_L2100_Num,	sum(0) as CQI_L2600_Num,
		sum(0) as CQI_4G_Den,	sum(0) as CQI_L800_Den,	sum(0) as CQI_L1800_Den,	sum(0) as CQI_L2100_Den,	sum(0) as CQI_L2600_Den,

		sum(0) as LTE_5Mhz_SC_Use_Num,	sum(0) as LTE_10Mhz_SC_Use_Num,	sum(0) as LTE_15Mhz_SC_Use_Num,	sum(0) as LTE_20Mhz_SC_Use_Num,	sum(0) as LTE_15Mhz_CA_Use_Num,	sum(0) as LTE_20Mhz_CA_Use_Num,	sum(0) as LTE_25Mhz_CA_Use_Num,	sum(0) as LTE_30Mhz_CA_Use_Num,	sum(0) as LTE_35Mhz_CA_Use_Num,	sum(0) as LTE_40Mhz_CA_Use_Num,	
		sum(0) as LTE_5Mhz_SC_Use_Den,	sum(0) as LTE_10Mhz_SC_Use_Den,	sum(0) as LTE_15Mhz_SC_Use_Den,	sum(0) as LTE_20Mhz_SC_Use_Den,sum(0) as LTE_15Mhz_CA_Use_Den,	sum(0) as LTE_20Mhz_CA_Use_Den,	sum(0) as LTE_25Mhz_CA_Use_Den,	sum(0) as LTE_30Mhz_CA_Use_Den,	sum(0) as LTE_35Mhz_CA_Use_Den,	sum(0) as LTE_40Mhz_CA_Use_Den,	
		sum(0) as LTE_BW_use_den,	
		sum(0) as [4G_RBs_use_Num],	sum(0) as [4G_RBs_use_Den],

		sum(0) as [4G_TM1_use_Num],	sum(0) as [4G_TM2_use_Num],	sum(0) as [4G_TM3_use_Num],	sum(0) as [4G_TM4_use_Num],	sum(0) as [4G_TM5_use_Num],	sum(0) as [4G_TM6_use_Num],	sum(0) as [4G_TM7_use_Num],	sum(0) as [4G_TM8_use_Num],	sum(0) as [4G_TM9_use_Num],
		sum(0) as [4G_TMInvalid_use_Num],	sum(0) as [4G_TMUnknown_use_Num],
		sum(0) as [4G_TM_Den],

		-- Technology LTE:
		sum(0) as [4G_%CA_Num],			sum(0) as [4G_%CA_Den],
		sum(0) as [4G_BPSK_Use_Num],	sum(0) as [4G_QPSK_Use_Num],	sum(0) as [4G_16QAM_Use_Num],   sum(0) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],	sum(0) as [4G_QPSK_Use_Den],	sum(0) as [4G_16QAM_Use_Den],   sum(0) as [4G_64QAM_Use_Den],		sum(0) as [4G_stats_Den],	
		sum(0) as [RSRP_Lin_Num],		sum(0) as [RSRQ_Lin_Num],		sum(0) as [SINR_Lin_Num],		sum(0) as [RSRP_Lin_Den],			sum(0) as [RSRQ_Lin_Den],	sum(0) as [SINR_Lin_Den],		

		--New KPIs:
		sum(0) as [MIMO_num],			sum(0) as [RI1_num],			sum(0) as [RI2_num],	sum(0) as [MIMO_den],	sum(0) as [RI1_den],	sum(0) as [RI2_den],
		sum(0) as RBs_Allocated_Den,	sum(0) as RBs_Allocated_Num,	max(0) as RBs_Allocated_Max,
	
		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		null as [1_N],	null as [2_N],	null as [3_N],	null as [4_N],	null as [5_N],	null as [6_N],	null as [7_N],	null as [8_N],	null as [9_N],	null as [10_N],
		null as [11_N],	null as [12_N],	null as [13_N],	null as [14_N],	null as [15_N],	null as [16_N],	null as [17_N],	null as [18_N],	null as [19_N],	null as [20_N],
		null as [21_N],	null as [22_N],	null as [23_N],	null as [24_N],	null as [25_N],	null as [26_N],	null as [27_N],	null as [28_N],	null as [29_N],	null as [30_N],
		null as [31_N],	null as [32_N],	null as [33_N],	null as [34_N],	null as [35_N],	null as [36_N],	null as [37_N],	null as [38_N],	null as [39_N],	null as [40_N],
		null as [41_N],	null as [42_N],	null as [43_N],	null as [44_N],	null as [45_N],	null as [46_N],	null as [47_N],	null as [48_N],	null as [49_N],	null as [50_N],
		null as [51_N],	null as [52_N],	null as [53_N],	null as [54_N],	null as [55_N],	null as [56_N],	null as [57_N],	null as [58_N],	null as [59_N],	null as [60_N],
		null as [61_N],	null as [62_N],	null as [63_N],	null as [64_N],	null as [65_N],	null as [66_N]
	
		--t.Region_VF as Region_Road_VF, t.Region_OSP as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,null as [1]	,null as [2]	,null as [3]	,null as [4]	,null as [5]	,null as [6]	,null as [7]	,null as [8]	,null as [9]	,null as [10]
		,null as [11]	,null as [12]	,null as [13]	,null as [14]	,null as [15]	,null as [16]	,null as [17]	,null as [18]	,null as [19]	,null as [20]
		,null as [21]	,null as [22]	,null as [23]	,null as [24]	,null as [25]	,null as [26]	,null as [27]	,null as [28]	,null as [29]	,null as [30]
		,null as [31]	,null as [32]	,null as [33]	,null as [34]	,null as [35]	,null as [36]	,null as [37]	,null as [38]	,null as [39]	,null as [40]
		,null as [41],

		-- Parametros de configuracion:
		t.ASideDevice as ASideDevice, t.BSideDevice as BSideDevice, t.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from [aggrData4G_ROAD].dbo.[lcc_aggr_sp_MDD_Data_Youtube] t, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine,mnc,meas_round,Date_Reporting,Week_Reporting,t.entidad,t.Report_Type,t.Aggr_Type,
		t.ASideDevice, t.BSideDevice, t.SWVersion--, t.Region_VF, t.Region_OSP

	-------------
	-- 4G ROADs - HD:
	insert into _RI_Data_e
	select  
		p.codigo_ine, 'Roads' vf_environment,mnc,meas_round,Date_Reporting as meas_date,Week_Reporting as meas_week, 
		'Road 4G' as meas_Tech, 'Youtube HD' as Test_type, 'Downlink' as Direction, entidad as vf_entity,t.Report_Type,t.Aggr_Type,
		
		-- General:
		sum(t.Reproducciones) as Num_tests,
		sum(t.Fails) as Failed,
		sum(t.reproducciones-t.fails-t.[Successful video download]) as Dropped,

		sum(0) as Session_time_Num,	sum(0) as Throughput_Den,	sum(0) as Session_time_Den,
		sum(0) as Throughput_Num,	max(0) as Throughput_Max,	sum(0) as Throughput_3M_Num,	sum(0) as Throughput_1M_Num,	sum(0) as Throughput_128K_Num,	sum(0) as Throughput_64K_Num, sum(0) as Throughput_384K_Num,
		--CAC 10/08/2017: thput de test sin error y con error
		sum(0) as Throughput_with_Error_Den,
		sum(0) as Throughput_with_Error_Num,
		sum(0) as  WEB_IP_ACCESS_TIME_NUM,			sum(0) as  WEB_IP_ACCESS_TIME_DEN,
		sum(0) as  WEB_HTTP_TRANSFER_TIME_NUM,		sum(0) as  WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as  WEB_IP_ACCESS_TIME_HTTPS_NUM,	sum(0) as  WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as  WEB_TRANSFER_TIME_HTTPS_NUM,		sum(0) as  WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,	sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(0) as Radio_2G_use_Num,	sum(0) as Radio_3G_use_Num,		sum(0) as Radio_4G_use_Num,	sum(0) as Radio_use_Den,	sum(0) as Radio_2G_use_Den,		sum(0) as Radio_3G_use_Den,	sum(0) as Radio_4G_use_Den,			
		sum(0) as Radio_U2100_use_Num,	sum(0) as Radio_U900_use_Num,    sum(0) as Radio_LTE2100_use_Num,    sum(0) as Radio_LTE2600_use_Num,    sum(0) as Radio_LTE1800_use_Num,    sum(0) as Radio_LTE800_use_Num,
		sum(0) as Radio_Band_Use_Den,	
		sum(0) as Radio_U2100_use_Den,	sum(0) as Radio_U900_use_Den,    sum(0) as Radio_LTE2100_use_Den,    sum(0) as Radio_LTE2600_use_Den,    sum(0) as Radio_LTE1800_use_Den,    sum(0) as Radio_LTE800_use_Den,

		sum(0) as [3G_DualCarrier_use_Num],	sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],		sum(0) as [3G_DC_2100_use_Den],	sum(0) as [3G_DC_900_use_Num],		sum(0) as [3G_DC_900_use_Den],

		sum(0) as [3G_NumCodes_use_Num],	sum(0) as [3G_NumCodes_use_Den],
		sum(0) as [3G_QPSK_use_Num],		sum(0) as [3G_16QAM_use_Num],    sum(0) as [3G_64QAM_use_Num],	
		sum(0) as [3G_QPSK_use_Den],		sum(0) as [3G_16QAM_use_Den],    sum(0) as [3G_64QAM_use_Den],

		sum(0) as [3G_%_SF22_Num],		sum(0) as [3G_%_SF22andSF42_Num],	sum(0) as [3G_%_SF4_Num],	sum(0) as [3G_%_SF42_Num],	
		sum(0) as [3G_%_SF22_Den],		sum(0) as [3G_%_SF22andSF42_Den],	sum(0) as [3G_%_SF4_Den],	sum(0) as [3G_%_SF42_Den],	
		sum(0) as [3G_%_TTI2ms_Num],	sum(0) as [3G_%_TTI2ms_Den],		
		sum(0) as [RSCP_Lin_Num],		sum(0) as [EcI0_Lin_Num],	
		sum(0) as [RSCP_Lin_Den],		sum(0) as [EcI0_Lin_Den],
	
		-- Performance:
		sum(0) as [3G_CQI],			sum(0) as [3G_DataStats_Den],
		Sum(0) as CQI_U900_Num,		sum(0) as CQI_U900_Den,	Sum(0) as CQI_U2100_Num,	sum(0) as CQI_U2100_Den,
		sum(0) as [HSPA_PCT_Num],	sum(0) as [HSPA+_PCT_Num],	sum(0) as [HSPA+_DC_PCT_Num],	sum(0) as [HSPA_PCT_Den],	sum(0) as [HSPA+_PCT_Den],	sum(0) as [HSPA+_DC_PCT_Den],
		sum(0) as [UL_Inter_Lin_Num],	sum(0) as [UL_Inter_Lin_Den],	
	
		-- Performance LTE:
		sum(0) as CQI_4G_Num,	sum(0) as CQI_L800_Num,	sum(0) as CQI_L1800_Num,	sum(0) as CQI_L2100_Num,	sum(0) as CQI_L2600_Num,
		sum(0) as CQI_4G_Den,	sum(0) as CQI_L800_Den,	sum(0) as CQI_L1800_Den,	sum(0) as CQI_L2100_Den,	sum(0) as CQI_L2600_Den,

		sum(0) as LTE_5Mhz_SC_Use_Num,	sum(0) as LTE_10Mhz_SC_Use_Num,	sum(0) as LTE_15Mhz_SC_Use_Num,	sum(0) as LTE_20Mhz_SC_Use_Num,	sum(0) as LTE_15Mhz_CA_Use_Num,	sum(0) as LTE_20Mhz_CA_Use_Num,	sum(0) as LTE_25Mhz_CA_Use_Num,	sum(0) as LTE_30Mhz_CA_Use_Num,	sum(0) as LTE_35Mhz_CA_Use_Num,	sum(0) as LTE_40Mhz_CA_Use_Num,	
		sum(0) as LTE_5Mhz_SC_Use_Den,	sum(0) as LTE_10Mhz_SC_Use_Den,	sum(0) as LTE_15Mhz_SC_Use_Den,	sum(0) as LTE_20Mhz_SC_Use_Den,sum(0) as LTE_15Mhz_CA_Use_Den,	sum(0) as LTE_20Mhz_CA_Use_Den,	sum(0) as LTE_25Mhz_CA_Use_Den,	sum(0) as LTE_30Mhz_CA_Use_Den,	sum(0) as LTE_35Mhz_CA_Use_Den,	sum(0) as LTE_40Mhz_CA_Use_Den,	
		sum(0) as LTE_BW_use_den,	
		sum(0) as [4G_RBs_use_Num],	sum(0) as [4G_RBs_use_Den],

		sum(0) as [4G_TM1_use_Num],	sum(0) as [4G_TM2_use_Num],	sum(0) as [4G_TM3_use_Num],	sum(0) as [4G_TM4_use_Num],	sum(0) as [4G_TM5_use_Num],	sum(0) as [4G_TM6_use_Num],	sum(0) as [4G_TM7_use_Num],	sum(0) as [4G_TM8_use_Num],	sum(0) as [4G_TM9_use_Num],
		sum(0) as [4G_TMInvalid_use_Num],	sum(0) as [4G_TMUnknown_use_Num],
		sum(0) as [4G_TM_Den],

		-- Technology LTE:
		sum(0) as [4G_%CA_Num],			sum(0) as [4G_%CA_Den],
		sum(0) as [4G_BPSK_Use_Num],	sum(0) as [4G_QPSK_Use_Num],	sum(0) as [4G_16QAM_Use_Num],   sum(0) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],	sum(0) as [4G_QPSK_Use_Den],	sum(0) as [4G_16QAM_Use_Den],   sum(0) as [4G_64QAM_Use_Den],		sum(0) as [4G_stats_Den],	
		sum(0) as [RSRP_Lin_Num],		sum(0) as [RSRQ_Lin_Num],		sum(0) as [SINR_Lin_Num],		sum(0) as [RSRP_Lin_Den],			sum(0) as [RSRQ_Lin_Den],	sum(0) as [SINR_Lin_Den],		

		--New KPIs:
		sum(0) as [MIMO_num],			sum(0) as [RI1_num],			sum(0) as [RI2_num],	sum(0) as [MIMO_den],	sum(0) as [RI1_den],	sum(0) as [RI2_den],
		sum(0) as RBs_Allocated_Den,	sum(0) as RBs_Allocated_Num,	max(0) as RBs_Allocated_Max,
	
		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		null as [1_N],	null as [2_N],	null as [3_N],	null as [4_N],	null as [5_N],	null as [6_N],	null as [7_N],	null as [8_N],	null as [9_N],	null as [10_N],
		null as [11_N],	null as [12_N],	null as [13_N],	null as [14_N],	null as [15_N],	null as [16_N],	null as [17_N],	null as [18_N],	null as [19_N],	null as [20_N],
		null as [21_N],	null as [22_N],	null as [23_N],	null as [24_N],	null as [25_N],	null as [26_N],	null as [27_N],	null as [28_N],	null as [29_N],	null as [30_N],
		null as [31_N],	null as [32_N],	null as [33_N],	null as [34_N],	null as [35_N],	null as [36_N],	null as [37_N],	null as [38_N],	null as [39_N],	null as [40_N],
		null as [41_N],	null as [42_N],	null as [43_N],	null as [44_N],	null as [45_N],	null as [46_N],	null as [47_N],	null as [48_N],	null as [49_N],	null as [50_N],
		null as [51_N],	null as [52_N],	null as [53_N],	null as [54_N],	null as [55_N],	null as [56_N],	null as [57_N],	null as [58_N],	null as [59_N],	null as [60_N],
		null as [61_N],	null as [62_N],	null as [63_N],	null as [64_N],	null as [65_N],	null as [66_N]
	
		--t.Region_VF as Region_Road_VF, t.Region_OSP as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,null as [1]	,null as [2]	,null as [3]	,null as [4]	,null as [5]	,null as [6]	,null as [7]	,null as [8]	,null as [9]	,null as [10]
		,null as [11]	,null as [12]	,null as [13]	,null as [14]	,null as [15]	,null as [16]	,null as [17]	,null as [18]	,null as [19]	,null as [20]
		,null as [21]	,null as [22]	,null as [23]	,null as [24]	,null as [25]	,null as [26]	,null as [27]	,null as [28]	,null as [29]	,null as [30]
		,null as [31]	,null as [32]	,null as [33]	,null as [34]	,null as [35]	,null as [36]	,null as [37]	,null as [38]	,null as [39]	,null as [40]
		,null as [41],

		-- Parametros de configuracion:
		t.ASideDevice as ASideDevice, t.BSideDevice as BSideDevice, t.SWVersion as SWVersion, 
		max(t.Youtube_Version) as YTB_Version, max(t.url) as YTB_URL	


	from [aggrData4G_ROAD].dbo.[lcc_aggr_sp_MDD_Data_Youtube_HD] t, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine,mnc,meas_round,Date_Reporting,Week_Reporting,t.entidad,t.Report_Type,t.Aggr_Type,
		t.ASideDevice, t.BSideDevice, t.SWVersion--, t.Youtube_Version, t.url --t.Region_VF, t.Region_OSP 
		

	-------------
	insert into [dbo].[_RI_Data_Ejecucion]
	select 'Fin 1.4. Insert Estadisticos YTB 3G, 4G, 4G_Roads - SD y HD', getdate()


	-------------------------------------		
	-- 1.5) Estadisticos	4GOnly 
	-------------------------------------		
	print '1.5. Insert Estadisticos 4GOnly y 4GOnly_Roads - DL/UL/WEB/YTB' 	
	-----------
	-- 4GOnly y ROAD - CE_DL
	insert into _RI_Data_e 
	select		
		p.codigo_ine, case when  t.entidad like 'AVE-%' or  t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment, t.mnc, t.meas_round, t.Date_Reporting as meas_date, t.Week_Reporting as meas_week, 
		'4GOnly' as meas_Tech, 'CE_DL' as Test_type, 'Downlink' as Direction,  t.entidad as vf_entity, t.Report_Type, t.Aggr_Type,
	
		-- General:
		sum(O4G.navegaciones) as Num_tests,
		sum(O4G.[fallos de acceso]) as Failed,
		sum(O4G.[fallos de descarga]) as Dropped,
		sum(O4G.[SessionTime]*O4G.navegaciones) as Session_time_Num,
		--sum(O4G.[tiempo de descarga]*O4G.count_throughput) as Session_time_Num,	-- SESSION_TIME de DL/UL, calculado como TRANSFER_TIME - se haría el cambio al calculo correcto en cambio de metodología para evitar salto de valor en QLIK.
		sum(O4G.count_throughput) as Throughput_Den,
		sum(O4G.navegaciones) as Session_time_Den,
		--sum(O4G.count_throughput) as Session_time_Den,
		sum(O4G.Throughput*O4G.count_throughput) as Throughput_Num,
		max(O4G.[Throughput Max]) as Throughput_Max,
		sum(O4G.Count_Throughput_3M) as Throughput_3M_Num,
		sum(O4G.Count_Throughput_1M) as Throughput_1M_Num,
		sum(0) as Throughput_128K_Num,
		sum(0) as Throughput_64K_Num,
		sum(0) as Throughput_384K_Num,
		--CAC 10/08/2017: thput de test sin error y con error
		sum(O4G.Count_Throughput_ALL) as Throughput_with_Error_Den,
		sum(O4G.Throughput_ALL*O4G.Count_Throughput_ALL) as Throughput_with_Error_Num,
		sum(0) as WEB_IP_ACCESS_TIME_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_DEN,
		sum(0) as WEB_HTTP_TRANSFER_TIME_NUM,
		sum(0) as WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_NUM,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,
		
		-- Technology:
		sum(tel.[% GSM]*tel.[Count_%GSM]) as Radio_2G_use_Num,
		sum(tel.[% WCDMA]*tel.[Count_%WCDMA]) as Radio_3G_use_Num,
		sum(tel.[% LTE]*tel.[Count_%LTE]) as Radio_4G_use_Num,
		sum(O4G.navegaciones*(isnull(tel.[% GSM],0)+isnull(tel.[% WCDMA],0)+isnull(tel.[% LTE],0))) as Radio_use_Den,
		sum(tel.[Count_%GSM]) as Radio_2G_use_Den,
		sum(tel.[Count_%WCDMA]) as Radio_3G_use_Den,
		sum(tel.[Count_%LTE]) as Radio_4G_use_Den,

		sum(tel.[% U2100]*tel.[Count_%U2100]) as Radio_U2100_use_Num,
		sum(tel.[% U900]*tel.[Count_%U900]) as Radio_U900_use_Num,
		sum(tel.[% LTE2100]*tel.[Count_%LTE2100]) as Radio_LTE2100_use_Num,
		sum(tel.[% LTE2600]*tel.[Count_%LTE2600]) as Radio_LTE2600_use_Num,
		sum(tel.[% LTE1800]*tel.[Count_%LTE1800]) as Radio_LTE1800_use_Num,
		sum(tel.[% LTE800]*tel.[Count_%LTE800]) as Radio_LTE800_use_Num,
		sum(O4G.navegaciones*(isnull(tel.[% U2100],0)+isnull(tel.[% U900],0)+isnull(tel.[% LTE2100],0)+isnull(tel.[% LTE2600],0)+isnull(tel.[% LTE1800],0)+isnull(tel.[% LTE800],0))) as Radio_Band_Use_Den,
		sum(tel.[Count_%U2100]) as Radio_U2100_use_Den,
		sum(tel.[Count_%U900]) as Radio_U900_use_Den,
		sum(tel.[Count_%LTE2100]) as Radio_LTE2100_use_Den,
		sum(tel.[Count_%LTE2600]) as Radio_LTE2600_use_Den,
		sum(tel.[Count_%LTE1800]) as Radio_LTE1800_use_Den,
		sum(tel.[Count_%LTE800]) as Radio_LTE800_use_Den,

		-- Esta info en 3G, no tienen sentido en 4GOnly:
		sum(0) as [3G_DualCarrier_use_Num],	sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],		sum(0) as [3G_DC_2100_use_Den],
		sum(0) as [3G_DC_900_use_Num],		sum(0) as [3G_DC_900_use_Den],

		sum(0) as [3G_NumCodes_use_Num],	sum(0) as [3G_NumCodes_use_Den],

		sum(0) as [3G_QPSK_use_Num],	sum(0) as [3G_16QAM_use_Num],
		sum(0) as [3G_64QAM_use_Num],	sum(0) as [3G_QPSK_use_Den],
		sum(0) as [3G_16QAM_use_Den],   sum(0) as [3G_64QAM_use_Den],

		sum(0) as [3G_%_SF22_Num],		sum(0) as [3G_%_SF22andSF42_Num],	sum(0) as [3G_%_SF4_Num],	sum(0) as [3G_%_SF42_Num],
		sum(0) as [3G_%_SF22_Den],		sum(0) as [3G_%_SF22andSF42_Den],	sum(0) as [3G_%_SF4_Den],	sum(0) as [3G_%_SF42_Den],
		sum(0) as [3G_%_TTI2ms_Num],	sum(0) as [3G_%_TTI2ms_Den],

		sum(0) as [RSCP_Lin_Num],	sum(0) as [EcI0_Lin_Num],		sum(0) as [RSCP_Lin_Den],		sum(0) as [EcI0_Lin_Den],	

		-- Performance -- Esta info en 3G, no tienen sentido en 4GOnly:
		sum(0) as [3G_CQI],		sum(0) as [3G_DataStats_Den],
		sum(0) as CQI_U900_Num,	sum(0) as CQI_U900_Den,	sum(0) as CQI_U2100_Num,	sum(0) as CQI_U2100_Den,

		sum(0) as [HSPA_PCT_Num],	sum(0) as [HSPA+_PCT_Num],	sum(0) as [HSPA+_DC_PCT_Num],
		sum(0) as [HSPA_PCT_Den],	sum(0) as [HSPA+_PCT_Den],	sum(0) as [HSPA+_DC_PCT_Den],

		sum(0) as [UL_Inter_Lin_Num],	sum(0) as [UL_Inter_Lin_Den],	
	
		-- Performance LTE:
		sum(pfl.[Count_CQI_4G]*pfl.[CQI_4G]) as CQI_4G_Num,
		sum(pfl.Count_CQI_L800*pfl.CQI_L800) as CQI_L800_Num,
		sum(pfl.Count_CQI_L1800*pfl.CQI_L1800) as CQI_L1800_Num,
		sum(pfl.Count_CQI_L2100*pfl.CQI_L2100) as CQI_L2100_Num,
		sum(pfl.Count_CQI_L2600*pfl.CQI_L2600) as CQI_L2600_Num,
		sum(pfl.[Count_CQI_4G]) as CQI_4G_Den,
		sum(pfl.Count_CQI_L800) as CQI_L800_Den,
		sum(pfl.Count_CQI_L1800) as CQI_L1800_Den,
		sum(pfl.Count_CQI_L2100) as CQI_L2100_Den,
		sum(pfl.Count_CQI_L2600) as CQI_L2600_Den,

		sum(pfl.Count_LTE_5Mhz_SC *pfl.LTE_5Mhz_SC_PCT) as LTE_5Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_10Mhz_SC*pfl.LTE_10Mhz_SC_PCT) as LTE_10Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_15Mhz_SC*pfl.LTE_15Mhz_SC_PCT) as LTE_15Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_20Mhz_SC*pfl.LTE_20Mhz_SC_PCT) as LTE_20Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_15Mhz_CA*pfl.LTE_15Mhz_CA_PCT) as LTE_15Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_20Mhz_CA*pfl.LTE_20Mhz_CA_PCT) as LTE_20Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_25Mhz_CA*pfl.LTE_25Mhz_CA_PCT) as LTE_25Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_30Mhz_CA*pfl.LTE_30Mhz_CA_PCT) as LTE_30Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_35Mhz_CA*pfl.LTE_35Mhz_CA_PCT) as LTE_35Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_40Mhz_CA*pfl.LTE_40Mhz_CA_PCT) as LTE_40Mhz_CA_Use_Num,	
		sum(pfl.Count_LTE_5Mhz_SC) as LTE_5Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_10Mhz_SC) as LTE_10Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_15Mhz_SC) as LTE_15Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_20Mhz_SC) as LTE_20Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_15Mhz_CA) as LTE_15Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_20Mhz_CA) as LTE_20Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_25Mhz_CA) as LTE_25Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_30Mhz_CA) as LTE_30Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_35Mhz_CA) as LTE_35Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_40Mhz_CA) as LTE_40Mhz_CA_Use_Den,	
	
		sum((isnull(pfl.Count_LTE_5Mhz_SC,0) 
		 --    +isnull(pfl.Count_LTE_10Mhz_SC,0) +isnull(pfl.Count_LTE_15Mhz_SC,0) +isnull(pfl.Count_LTE_20Mhz_SC,0) +
		 --    isnull(pfl.Count_LTE_15Mhz_CA,0) +isnull(pfl.Count_LTE_20Mhz_CA,0) +isnull(pfl.Count_LTE_25Mhz_CA,0) +isnull(pfl.Count_LTE_30Mhz_CA,0) +
		 --    isnull(pfl.Count_LTE_35Mhz_CA,0) +isnull(pfl.Count_LTE_40Mhz_CA,0)
			)
			*(
			pfl.LTE_5Mhz_SC_PCT+pfl.LTE_10Mhz_SC_PCT+pfl.LTE_15Mhz_SC_PCT+pfl.LTE_20Mhz_SC_PCT+pfl.LTE_15Mhz_CA_PCT+
			pfl.LTE_20Mhz_CA_PCT+pfl.LTE_25Mhz_CA_PCT+pfl.LTE_30Mhz_CA_PCT+pfl.LTE_35Mhz_CA_PCT+pfl.LTE_40Mhz_CA_PCT
			)) as LTE_BW_use_den,	

		sum(pfl.[ RBs]*pfl.[Count_RBs]) as [4G_RBs_use_Num],
		sum(pfl.[Count_RBs]) as [4G_RBs_use_Den],

		sum(pfl.[ % TM1]* ([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM1_use_Num],
		sum(pfl.[ % TM2]* ([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM2_use_Num],
		sum(pfl.[ % TM3]* ([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM3_use_Num],
		sum(pfl.[ % TM4]* ([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM4_use_Num],
		sum(pfl.[ % MIMO]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM5_use_Num],
		sum(pfl.[ % TM6]* ([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM6_use_Num],
		sum(pfl.[ % TM7]* ([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM7_use_Num],
		sum(0) as [4G_TM8_use_Num],
		sum(0) as [4G_TM9_use_Num],
		sum(pfl.[ % TM Invalid]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TMInvalid_use_Num],
		sum(pfl.[ % TM Unknown]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TMUnknown_use_Num],
		sum([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown]) as [4G_TM_Den],

		-- Technology LTE:
		sum(tel.[Count_%CA]*tel.[% CA]) as [4G_%CA_Num],
		sum(tel.[Count_%CA]) as [4G_%CA_Den],
		sum(0) as [4G_BPSK_Use_Num],
		sum((tel.QPSK/100.0)*tel.Count_QPSK) as [4G_QPSK_Use_Num],
		sum((tel.[16QAM]/100.0)*tel.Count_16QAM) as [4G_16QAM_Use_Num],
		sum((tel.[64QAM]/100.0)*tel.Count_64QAM) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],
		sum(tel.Count_QPSK) as [4G_QPSK_Use_Den],
		sum(tel.Count_16QAM) as [4G_16QAM_Use_Den],
		sum(tel.Count_64QAM) as [4G_64QAM_Use_Den],

		sum((isnull(pfl.Count_CQI_L800,0)+isnull(pfl.Count_CQI_L1800,0)+isnull(pfl.Count_CQI_L2100,0)+isnull(pfl.Count_CQI_L2600,0))*(isnull(tel.[64QAM]/100.0,0)+isnull(tel.[16QAM]/100.0,0)+isnull(tel.QPSK/100.0,0)))  as [4G_stats_Den],

		sum(tel.[RSRP_Lin]*tel.[Count_RSRP_Lin]) as [RSRP_Lin_Num],
		sum(tel.[RSRQ_Lin]*tel.[Count_RSRQ_Lin]) as [RSRQ_Lin_Num],	
		sum(tel.[SINR_Lin]*tel.[Count_SINR_Lin]) as [SINR_Lin_Num],	
		sum(tel.[Count_RSRP_Lin]) as [RSRP_Lin_Den],	
		sum(tel.[Count_RSRQ_Lin]) as [RSRQ_Lin_Den],	
		sum(tel.[Count_SINR_Lin]) as [SINR_Lin_Den],	

		-- New KPIs:
		sum(newk.[MIMO_CE_num]) as [MIMO_num],
		sum(newk.[RI1_CE_num]) as [RI1_num],
		sum(newk.[RI2_CE_num]) as [RI2_num],
		sum(newk.[MIMO_CE_den]) as [MIMO_den],
		sum(newk.[RI1_CE_den]) as [RI1_den],
		sum(newk.[RI2_CE_den]) as [RI2_den],
		sum(newk.Count_RBs_CE) as RBs_Allocated_Den,
		sum(newk.Count_RBs_CE*isnull(newk.[RBs CE],0)) as RBs_Allocated_Num,
		max(newk.[Max RBs CE]) as RBs_Allocated_Max,

		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:
		sum(isnull(O4G.[ 0-2Mbps_N ],0)) as [1_N],		sum(isnull(O4G.[ 2-4Mbps_N ],0)) as [2_N],		sum(isnull(O4G.[ 4-6Mbps_N ],0)) as [3_N],		sum(isnull(O4G.[ 6-8Mbps_N ],0)) as [4_N],		sum(isnull(O4G.[ 8-10Mbps_N ],0)) as [5_N],
		sum(isnull(O4G.[ 10-12Mbps_N ],0)) as [6_N],		sum(isnull(O4G.[ 12-14Mbps_N ],0)) as [7_N],		sum(isnull(O4G.[ 14-16Mbps_N ],0)) as [8_N],		sum(isnull(O4G.[ 16-18Mbps_N ],0)) as [9_N],		sum(isnull(O4G.[ 18-20Mbps_N ],0)) as [10_N],
		sum(isnull(O4G.[ 20-22Mbps_N ],0)) as [11_N],		sum(isnull(O4G.[ 22-24Mbps_N ],0)) as [12_N],		sum(isnull(O4G.[ 24-26Mbps_N ],0)) as [13_N],		sum(isnull(O4G.[ 26-28Mbps_N ],0)) as [14_N],		sum(isnull(O4G.[ 28-30Mbps_N ],0)) as [15_N],
		sum(isnull(O4G.[ 30-32Mbps_N ],0)) as [16_N],		sum(isnull(O4G.[ 32-34Mbps_N ],0)) as [17_N],		sum(isnull(O4G.[ 34-36Mbps_N ],0)) as [18_N],		sum(isnull(O4G.[ 36-38Mbps_N ],0)) as [19_N],		sum(isnull(O4G.[ 38-40Mbps_N ],0)) as [20_N],
		sum(isnull(O4G.[ 40-42Mbps_N ],0)) as [21_N],		sum(isnull(O4G.[ 42-44Mbps_N ],0)) as [22_N],		sum(isnull(O4G.[ 44-46Mbps_N ],0)) as [23_N],		sum(isnull(O4G.[ 46-48Mbps_N ],0)) as [24_N],		sum(isnull(O4G.[ 48-50Mbps_N ],0)) as [25_N],
		sum(isnull(O4G.[ 50-52Mbps_N ],0)) as [26_N],		sum(isnull(O4G.[ 52-54Mbps_N ],0)) as [27_N],		sum(isnull(O4G.[ 54-56Mbps_N ],0)) as [28_N],		sum(isnull(O4G.[ 56-58Mbps_N ],0)) as [29_N],		sum(isnull(O4G.[ 58-60Mbps_N ],0)) as [30_N],
		sum(isnull(O4G.[ 60-62Mbps_N ],0)) as [31_N],		sum(isnull(O4G.[ 62-64Mbps_N ],0)) as [32_N],		sum(isnull(O4G.[ 64-66Mbps_N ],0)) as [33_N],		sum(isnull(O4G.[ 66-68Mbps_N ],0)) as [34_N],		sum(isnull(O4G.[ 68-70Mbps_N ],0)) as [35_N],
		sum(isnull(O4G.[ 70-72Mbps_N ],0)) as [36_N],		sum(isnull(O4G.[ 72-74Mbps_N ],0)) as [37_N],		sum(isnull(O4G.[ 74-76Mbps_N ],0)) as [38_N],		sum(isnull(O4G.[ 76-78Mbps_N ],0)) as [39_N],		sum(isnull(O4G.[ 78-80Mbps_N ],0)) as [40_N],
		sum(isnull(O4G.[ 80-82Mbps_N ],0)) as [41_N],		sum(isnull(O4G.[ 82-84Mbps_N ],0)) as [42_N],		sum(isnull(O4G.[ 84-86Mbps_N ],0)) as [43_N],		sum(isnull(O4G.[ 86-88Mbps_N ],0)) as [44_N],		sum(isnull(O4G.[ 88-90Mbps_N ],0)) as [45_N],
		sum(isnull(O4G.[ 90-92Mbps_N ],0)) as [46_N],		sum(isnull(O4G.[ 92-94Mbps_N ],0)) as [47_N],		sum(isnull(O4G.[ 94-96Mbps_N ],0)) as [48_N],		sum(isnull(O4G.[ 96-98Mbps_N ],0)) as [49_N],		sum(isnull(O4G.[ 98-100Mbps_N ],0)) as [50_N],
		sum(isnull(O4G.[ >100Mbps_N],0)) as [51_N],	
		sum(0) as [52_N],	sum(0) as [53_N],	sum(0) as [54_N],	sum(0) as [55_N],	sum(0) as [56_N],	sum(0) as [57_N],	sum(0) as [58_N],	sum(0) as [59_N],	sum(0) as [60_N],
		sum(0) as [61_N],	sum(0) as [62_N],	sum(0) as [63_N],	sum(0) as [64_N],	sum(0) as [65_N],	sum(0) as [66_N]
	
		--null as Region_Road_VF, null as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,sum(isnull(O4G.[ 0-5Mbps],0)) as [1]			,sum(isnull(O4G.[ 5-10Mbps],0)) as [2]		,sum(isnull(O4G.[ 10-15Mbps],0)) as [3]		,sum(isnull(O4G.[ 15-20Mbps],0)) as [4]		,sum(isnull(O4G.[ 20-25Mbps],0)) as [5]
		,sum(isnull(O4G.[ 25-30Mbps],0)) as [6]		,sum(isnull(O4G.[ 30-35Mbps],0)) as [7]		,sum(isnull(O4G.[ 35-40Mbps],0)) as [8]		,sum(isnull(O4G.[ 40-45Mbps],0)) as [9]		,sum(isnull(O4G.[ 45-50Mbps],0)) as [10]
		,sum(isnull(O4G.[ 50-55Mbps],0)) as [11]		,sum(isnull(O4G.[ 55-60Mbps],0)) as [12]		,sum(isnull(O4G.[ 60-65Mbps],0)) as [13]		,sum(isnull(O4G.[ 65-70Mbps],0)) as [14]		,sum(isnull(O4G.[ 70-75Mbps],0)) as [15]
		,sum(isnull(O4G.[ 75-80Mbps],0)) as [16]		,sum(isnull(O4G.[ 80-85Mbps],0)) as [17]		,sum(isnull(O4G.[ 85-90Mbps],0)) as [18]		,sum(isnull(O4G.[ 90-95Mbps],0)) as [19]		,sum(isnull(O4G.[ 95-100Mbps],0)) as [20]
		,sum(isnull(O4G.[ 100-105Mbps],0)) as [21]	,sum(isnull(O4G.[ 105-110Mbps],0)) as [22]	,sum(isnull(O4G.[ 110-115Mbps],0)) as [23]	,sum(isnull(O4G.[ 115-120Mbps],0)) as [24]	,sum(isnull(O4G.[ 120-125Mbps],0)) as [25]
		,sum(isnull(O4G.[ 125-130Mbps],0)) as [26]	,sum(isnull(O4G.[ 130-135Mbps],0)) as [27]	,sum(isnull(O4G.[ 135-140Mbps],0)) as [28]	,sum(isnull(O4G.[ 140-145Mbps],0)) as [29]	,sum(isnull(O4G.[ 145-150Mbps],0)) as [30]
		,sum(isnull(O4G.[ >150Mbps],0)) as [31]
		,sum(0) as [32]	,sum(0) as [33]	,sum(0) as [34]	,sum(0) as [35]	,sum(0) as [36]	,sum(0) as [37]	,sum(0) as [38]	,sum(0) as [39]	,sum(0) as [40]	,sum(0) as [41],

		-- Parametros de configuracion:
		pfl.ASideDevice as ASideDevice, pfl.BSideDevice as BSideDevice, pfl.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_DL_Thput_CE] t
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_DL_Performance_CE_LTE_4G] pfl
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(pfl.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=pfl.mnc and t.Date_Reporting=pfl.Date_Reporting and t.entidad=pfl.entidad and t.Aggr_Type=pfl.Aggr_Type and t.Report_Type=pfl.Report_Type and t.meas_round=pfl.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_DL_Technology_CE_LTE_4G] tel
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(tel.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=tel.mnc and t.Date_Reporting=tel.Date_Reporting and t.entidad=tel.entidad and t.Aggr_Type=tel.Aggr_Type and t.Report_Type=tel.Report_Type and t.meas_round=tel.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_NEW_KPIs_DL_LTE_4G] newk
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(newk.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=newk.mnc and t.Date_Reporting=newk.Date_Reporting and t.entidad=newk.entidad and t.Aggr_Type=newk.Aggr_Type and t.Report_Type=newk.Report_Type and t.meas_round=newk.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_DL_Thput_CE_LTE_4G] O4G
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(O4G.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=O4G.mnc and t.Date_Reporting=O4G.Date_Reporting and t.entidad=O4G.entidad and t.Aggr_Type=O4G.Aggr_Type and t.Report_Type=O4G.Report_Type and t.meas_round=O4G.meas_round
				, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, case when  t.entidad like 'AVE-%' or  t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end, t.mnc, t.meas_round, t.Date_Reporting, t.Week_Reporting, t.entidad, t.Report_Type, t.Aggr_Type,
		pfl.ASideDevice, pfl.BSideDevice, pfl.SWVersion--, t.Region_VF, t.Region_OSP

	-----------
	union all	-- Road 4GOnly - CE_DL	
	select  
		p.codigo_ine, 'Roads' vf_environment, t.mnc, t.meas_round, t.Date_Reporting as meas_date, t.Week_Reporting as meas_week, 
		'Road 4GOnly' as meas_Tech, 'CE_DL' as Test_type, 'Downlink' as Direction,  t.entidad as vf_entity, t.Report_Type, t.Aggr_Type,
	
		-- General:
		sum(O4G.navegaciones) as Num_tests,
		sum(O4G.[fallos de acceso]) as Failed,
		sum(O4G.[fallos de descarga]) as Dropped,
		sum(O4G.[SessionTime]*O4G.navegaciones) as Session_time_Num,
		--sum(O4G.[tiempo de descarga]*O4G.count_throughput) as Session_time_Num,	-- SESSION_TIME de DL/UL, calculado como TRANSFER_TIME - se haría el cambio al calculo correcto en cambio de metodología para evitar salto de valor en QLIK.
		sum(O4G.count_throughput) as Throughput_Den,
		sum(O4G.navegaciones) as Session_time_Den,
		--sum(O4G.count_throughput) as Session_time_Den,
		sum(O4G.Throughput*O4G.count_throughput) as Throughput_Num,
		max(O4G.[Throughput Max]) as Throughput_Max,
		sum(O4G.Count_Throughput_3M) as Throughput_3M_Num,
		sum(O4G.Count_Throughput_1M) as Throughput_1M_Num,
		sum(0) as Throughput_128K_Num,
		sum(0) as Throughput_64K_Num,
		sum(0) as Throughput_384K_Num,
		--CAC 10/08/2017: thput de test sin error y con error
		sum(O4G.Count_Throughput_ALL) as Throughput_with_Error_Den,
		sum(O4G.Throughput_ALL*O4G.Count_Throughput_ALL) as Throughput_with_Error_Num,
		sum(0) as WEB_IP_ACCESS_TIME_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_DEN,
		sum(0) as WEB_HTTP_TRANSFER_TIME_NUM,
		sum(0) as WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_NUM,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(tel.[% GSM]*tel.[Count_%GSM]) as Radio_2G_use_Num,
		sum(tel.[% WCDMA]*tel.[Count_%WCDMA]) as Radio_3G_use_Num,
		sum(tel.[% LTE]*tel.[Count_%LTE]) as Radio_4G_use_Num,
		sum(O4G.navegaciones*(isnull(tel.[% GSM],0)+isnull(tel.[% WCDMA],0)+isnull(tel.[% LTE],0))) as Radio_use_Den,
		sum(tel.[Count_%GSM]) as Radio_2G_use_Den,
		sum(tel.[Count_%WCDMA]) as Radio_3G_use_Den,
		sum(tel.[Count_%LTE]) as Radio_4G_use_Den,

		sum(tel.[% U2100]*tel.[Count_%U2100]) as Radio_U2100_use_Num,
		sum(tel.[% U900]*tel.[Count_%U900]) as Radio_U900_use_Num,
		sum(tel.[% LTE2100]*tel.[Count_%LTE2100]) as Radio_LTE2100_use_Num,
		sum(tel.[% LTE2600]*tel.[Count_%LTE2600]) as Radio_LTE2600_use_Num,
		sum(tel.[% LTE1800]*tel.[Count_%LTE1800]) as Radio_LTE1800_use_Num,
		sum(tel.[% LTE800]*tel.[Count_%LTE800]) as Radio_LTE800_use_Num,
		sum(O4G.navegaciones*(isnull(tel.[% U2100],0)+isnull(tel.[% U900],0)+isnull(tel.[% LTE2100],0)+isnull(tel.[% LTE2600],0)+isnull(tel.[% LTE1800],0)+isnull(tel.[% LTE800],0))) as Radio_Band_Use_Den,
		sum(tel.[Count_%U2100]) as Radio_U2100_use_Den,
		sum(tel.[Count_%U900]) as Radio_U900_use_Den,
		sum(tel.[Count_%LTE2100]) as Radio_LTE2100_use_Den,
		sum(tel.[Count_%LTE2600]) as Radio_LTE2600_use_Den,
		sum(tel.[Count_%LTE1800]) as Radio_LTE1800_use_Den,
		sum(tel.[Count_%LTE800]) as Radio_LTE800_use_Den,

		-- Esta info en 3G, no tienen sentido en 4GOnly:
		sum(0) as [3G_DualCarrier_use_Num],	sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],		sum(0) as [3G_DC_2100_use_Den],
		sum(0) as [3G_DC_900_use_Num],		sum(0) as [3G_DC_900_use_Den],

		sum(0) as [3G_NumCodes_use_Num],	sum(0) as [3G_NumCodes_use_Den],

		sum(0) as [3G_QPSK_use_Num],	sum(0) as [3G_16QAM_use_Num],
		sum(0) as [3G_64QAM_use_Num],	sum(0) as [3G_QPSK_use_Den],
		sum(0) as [3G_16QAM_use_Den],   sum(0) as [3G_64QAM_use_Den],

		sum(0) as [3G_%_SF22_Num],		sum(0) as [3G_%_SF22andSF42_Num],	sum(0) as [3G_%_SF4_Num],	sum(0) as [3G_%_SF42_Num],
		sum(0) as [3G_%_SF22_Den],		sum(0) as [3G_%_SF22andSF42_Den],	sum(0) as [3G_%_SF4_Den],	sum(0) as [3G_%_SF42_Den],
		sum(0) as [3G_%_TTI2ms_Num],	sum(0) as [3G_%_TTI2ms_Den],

		sum(0) as [RSCP_Lin_Num],	sum(0) as [EcI0_Lin_Num],		sum(0) as [RSCP_Lin_Den],		sum(0) as [EcI0_Lin_Den],	

		-- Performance -- Esta info en 3G, no tienen sentido en 4GOnly:
		sum(0) as [3G_CQI],		sum(0) as [3G_DataStats_Den],
		sum(0) as CQI_U900_Num,	sum(0) as CQI_U900_Den,	sum(0) as CQI_U2100_Num,	sum(0) as CQI_U2100_Den,

		sum(0) as [HSPA_PCT_Num],	sum(0) as [HSPA+_PCT_Num],	sum(0) as [HSPA+_DC_PCT_Num],
		sum(0) as [HSPA_PCT_Den],	sum(0) as [HSPA+_PCT_Den],	sum(0) as [HSPA+_DC_PCT_Den],

		sum(0) as [UL_Inter_Lin_Num],	sum(0) as [UL_Inter_Lin_Den],	
	
		-- Performance LTE:
		sum(pfl.[Count_CQI_4G]*pfl.[CQI_4G]) as CQI_4G_Num,
		sum(pfl.Count_CQI_L800*pfl.CQI_L800) as CQI_L800_Num,
		sum(pfl.Count_CQI_L1800*pfl.CQI_L1800) as CQI_L1800_Num,
		sum(pfl.Count_CQI_L2100*pfl.CQI_L2100) as CQI_L2100_Num,
		sum(pfl.Count_CQI_L2600*pfl.CQI_L2600) as CQI_L2600_Num,
		sum(pfl.[Count_CQI_4G]) as CQI_4G_Den,
		sum(pfl.Count_CQI_L800) as CQI_L800_Den,
		sum(pfl.Count_CQI_L1800) as CQI_L1800_Den,
		sum(pfl.Count_CQI_L2100) as CQI_L2100_Den,
		sum(pfl.Count_CQI_L2600) as CQI_L2600_Den,

		sum(pfl.Count_LTE_5Mhz_SC *pfl.LTE_5Mhz_SC_PCT) as LTE_5Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_10Mhz_SC*pfl.LTE_10Mhz_SC_PCT) as LTE_10Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_15Mhz_SC*pfl.LTE_15Mhz_SC_PCT) as LTE_15Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_20Mhz_SC*pfl.LTE_20Mhz_SC_PCT) as LTE_20Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_15Mhz_CA*pfl.LTE_15Mhz_CA_PCT) as LTE_15Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_20Mhz_CA*pfl.LTE_20Mhz_CA_PCT) as LTE_20Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_25Mhz_CA*pfl.LTE_25Mhz_CA_PCT) as LTE_25Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_30Mhz_CA*pfl.LTE_30Mhz_CA_PCT) as LTE_30Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_35Mhz_CA*pfl.LTE_35Mhz_CA_PCT) as LTE_35Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_40Mhz_CA*pfl.LTE_40Mhz_CA_PCT) as LTE_40Mhz_CA_Use_Num,	
		sum(pfl.Count_LTE_5Mhz_SC) as LTE_5Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_10Mhz_SC) as LTE_10Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_15Mhz_SC) as LTE_15Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_20Mhz_SC) as LTE_20Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_15Mhz_CA) as LTE_15Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_20Mhz_CA) as LTE_20Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_25Mhz_CA) as LTE_25Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_30Mhz_CA) as LTE_30Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_35Mhz_CA) as LTE_35Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_40Mhz_CA) as LTE_40Mhz_CA_Use_Den,	

		sum((isnull(pfl.Count_LTE_5Mhz_SC,0) 
		 --    +isnull(pfl.Count_LTE_10Mhz_SC,0) +isnull(pfl.Count_LTE_15Mhz_SC,0) +isnull(pfl.Count_LTE_20Mhz_SC,0) +
		 --    isnull(pfl.Count_LTE_15Mhz_CA,0) +isnull(pfl.Count_LTE_20Mhz_CA,0) +isnull(pfl.Count_LTE_25Mhz_CA,0) +isnull(pfl.Count_LTE_30Mhz_CA,0) +
		 --    isnull(pfl.Count_LTE_35Mhz_CA,0) +isnull(pfl.Count_LTE_40Mhz_CA,0)
			)
			*(
			pfl.LTE_5Mhz_SC_PCT+pfl.LTE_10Mhz_SC_PCT+pfl.LTE_15Mhz_SC_PCT+pfl.LTE_20Mhz_SC_PCT+pfl.LTE_15Mhz_CA_PCT+
			pfl.LTE_20Mhz_CA_PCT+pfl.LTE_25Mhz_CA_PCT+pfl.LTE_30Mhz_CA_PCT+pfl.LTE_35Mhz_CA_PCT+pfl.LTE_40Mhz_CA_PCT
			)
			) as LTE_BW_use_den,

		sum(pfl.[ RBs]*pfl.[Count_RBs]) as [4G_RBs_use_Num],
		sum(pfl.[Count_RBs]) as [4G_RBs_use_Den],

		sum(pfl.[ % TM1]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM1_use_Num],
		sum(pfl.[ % TM2]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM2_use_Num],
		sum(pfl.[ % TM3]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM3_use_Num],
		sum(pfl.[ % TM4]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM4_use_Num],
		sum(pfl.[ % MIMO]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM5_use_Num],
		sum(pfl.[ % TM6]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM6_use_Num],
		sum(pfl.[ % TM7]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM7_use_Num],
		sum(0) as [4G_TM8_use_Num],
		sum(0) as [4G_TM9_use_Num],
		sum(pfl.[ % TM Invalid]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TMInvalid_use_Num],
		sum(pfl.[ % TM Unknown]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TMUnknown_use_Num],
		sum([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown]) as [4G_TM_Den],

		-- Technology LTE:
		sum(tel.[Count_%CA]*tel.[% CA]) as [4G_%CA_Num],
		sum(tel.[Count_%CA]) as [4G_%CA_Den],
		sum(0) as [4G_BPSK_Use_Num],
		sum((tel.QPSK/100.0)*tel.Count_QPSK) as [4G_QPSK_Use_Num],
		sum((tel.[16QAM]/100.0)*tel.Count_16QAM) as [4G_16QAM_Use_Num],
		sum((tel.[64QAM]/100.0)*tel.Count_64QAM) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],
		sum(tel.Count_QPSK) as [4G_QPSK_Use_Den],
		sum(tel.Count_16QAM) as [4G_16QAM_Use_Den],
		sum(tel.Count_64QAM) as [4G_64QAM_Use_Den],

		sum((isnull(pfl.Count_CQI_L800,0)+isnull(pfl.Count_CQI_L1800,0)+isnull(pfl.Count_CQI_L2100,0)+isnull(pfl.Count_CQI_L2600,0))*(isnull(tel.[64QAM]/100.0,0)+isnull(tel.[16QAM]/100.0,0)+isnull(tel.QPSK/100.0,0))) as [4G_stats_Den],
	
		sum(tel.[RSRP_Lin]*tel.[Count_RSRP_Lin]) as [RSRP_Lin_Num],
		sum(tel.[RSRQ_Lin]*tel.[Count_RSRQ_Lin]) as [RSRQ_Lin_Num],	
		sum(tel.[SINR_Lin]*tel.[Count_SINR_Lin]) as [SINR_Lin_Num],	
		sum(tel.[Count_RSRP_Lin]) as [RSRP_Lin_Den],	
		sum(tel.[Count_RSRQ_Lin]) as [RSRQ_Lin_Den],	
		sum(tel.[Count_SINR_Lin]) as [SINR_Lin_Den],
	
		-- New KPIs:
		sum(newk.[MIMO_CE_num]) as [MIMO_num],
		sum(newk.[RI1_CE_num]) as [RI1_num],
		sum(newk.[RI2_CE_num]) as [RI2_num],
		sum(newk.[MIMO_CE_den]) as [MIMO_den],
		sum(newk.[RI1_CE_den]) as [RI1_den],
		sum(newk.[RI2_CE_den]) as [RI2_den],
		sum(newk.Count_RBs_CE) as RBs_Allocated_Den,
		sum(newk.Count_RBs_CE*isnull(newk.[RBs CE],0)) as RBs_Allocated_Num,
		max(newk.[Max RBs CE]) as RBs_Allocated_Max,

		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:
		sum(isnull(O4G.[ 0-2Mbps_N ],0)) as [1_N],		sum(isnull(O4G.[ 2-4Mbps_N ],0)) as [2_N],		sum(isnull(O4G.[ 4-6Mbps_N ],0)) as [3_N],		sum(isnull(O4G.[ 6-8Mbps_N ],0)) as [4_N],		sum(isnull(O4G.[ 8-10Mbps_N ],0)) as [5_N],
		sum(isnull(O4G.[ 10-12Mbps_N ],0)) as [6_N],	sum(isnull(O4G.[ 12-14Mbps_N ],0)) as [7_N],	sum(isnull(O4G.[ 14-16Mbps_N ],0)) as [8_N],	sum(isnull(O4G.[ 16-18Mbps_N ],0)) as [9_N],	sum(isnull(O4G.[ 18-20Mbps_N ],0)) as [10_N],
		sum(isnull(O4G.[ 20-22Mbps_N ],0)) as [11_N],	sum(isnull(O4G.[ 22-24Mbps_N ],0)) as [12_N],	sum(isnull(O4G.[ 24-26Mbps_N ],0)) as [13_N],	sum(isnull(O4G.[ 26-28Mbps_N ],0)) as [14_N],	sum(isnull(O4G.[ 28-30Mbps_N ],0)) as [15_N],
		sum(isnull(O4G.[ 30-32Mbps_N ],0)) as [16_N],	sum(isnull(O4G.[ 32-34Mbps_N ],0)) as [17_N],	sum(isnull(O4G.[ 34-36Mbps_N ],0)) as [18_N],	sum(isnull(O4G.[ 36-38Mbps_N ],0)) as [19_N],	sum(isnull(O4G.[ 38-40Mbps_N ],0)) as [20_N],
		sum(isnull(O4G.[ 40-42Mbps_N ],0)) as [21_N],	sum(isnull(O4G.[ 42-44Mbps_N ],0)) as [22_N],	sum(isnull(O4G.[ 44-46Mbps_N ],0)) as [23_N],	sum(isnull(O4G.[ 46-48Mbps_N ],0)) as [24_N],	sum(isnull(O4G.[ 48-50Mbps_N ],0)) as [25_N],
		sum(isnull(O4G.[ 50-52Mbps_N ],0)) as [26_N],	sum(isnull(O4G.[ 52-54Mbps_N ],0)) as [27_N],	sum(isnull(O4G.[ 54-56Mbps_N ],0)) as [28_N],	sum(isnull(O4G.[ 56-58Mbps_N ],0)) as [29_N],	sum(isnull(O4G.[ 58-60Mbps_N ],0)) as [30_N],
		sum(isnull(O4G.[ 60-62Mbps_N ],0)) as [31_N],	sum(isnull(O4G.[ 62-64Mbps_N ],0)) as [32_N],	sum(isnull(O4G.[ 64-66Mbps_N ],0)) as [33_N],	sum(isnull(O4G.[ 66-68Mbps_N ],0)) as [34_N],	sum(isnull(O4G.[ 68-70Mbps_N ],0)) as [35_N],
		sum(isnull(O4G.[ 70-72Mbps_N ],0)) as [36_N],	sum(isnull(O4G.[ 72-74Mbps_N ],0)) as [37_N],	sum(isnull(O4G.[ 74-76Mbps_N ],0)) as [38_N],	sum(isnull(O4G.[ 76-78Mbps_N ],0)) as [39_N],	sum(isnull(O4G.[ 78-80Mbps_N ],0)) as [40_N],
		sum(isnull(O4G.[ 80-82Mbps_N ],0)) as [41_N],	sum(isnull(O4G.[ 82-84Mbps_N ],0)) as [42_N],	sum(isnull(O4G.[ 84-86Mbps_N ],0)) as [43_N],	sum(isnull(O4G.[ 86-88Mbps_N ],0)) as [44_N],	sum(isnull(O4G.[ 88-90Mbps_N ],0)) as [45_N],
		sum(isnull(O4G.[ 90-92Mbps_N ],0)) as [46_N],	sum(isnull(O4G.[ 92-94Mbps_N ],0)) as [47_N],	sum(isnull(O4G.[ 94-96Mbps_N ],0)) as [48_N],	sum(isnull(O4G.[ 96-98Mbps_N ],0)) as [49_N],	sum(isnull(O4G.[ 98-100Mbps_N ],0)) as [50_N],
		sum(isnull(O4G.[ >100Mbps_N],0)) as [51_N],	
		sum(0) as [52_N],	sum(0) as [53_N],	sum(0) as [54_N],	sum(0) as [55_N],	sum(0) as [56_N],	sum(0) as [57_N],	sum(0) as [58_N],	sum(0) as [59_N],	
		sum(0) as [60_N],	sum(0) as [61_N],	sum(0) as [62_N],	sum(0) as [63_N],	sum(0) as [64_N],	sum(0) as [65_N],	sum(0) as [66_N]
	
		--t.Region_VF as Region_Road_VF, t.Region_OSP as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,sum(isnull(O4G.[ 0-5Mbps],0)) as [1]			,sum(isnull(O4G.[ 5-10Mbps],0)) as [2]		,sum(isnull(O4G.[ 10-15Mbps],0)) as [3]		,sum(isnull(O4G.[ 15-20Mbps],0)) as [4]		,sum(isnull(O4G.[ 20-25Mbps],0)) as [5]
		,sum(isnull(O4G.[ 25-30Mbps],0)) as [6]		,sum(isnull(O4G.[ 30-35Mbps],0)) as [7]		,sum(isnull(O4G.[ 35-40Mbps],0)) as [8]		,sum(isnull(O4G.[ 40-45Mbps],0)) as [9]		,sum(isnull(O4G.[ 45-50Mbps],0)) as [10]
		,sum(isnull(O4G.[ 50-55Mbps],0)) as [11]		,sum(isnull(O4G.[ 55-60Mbps],0)) as [12]		,sum(isnull(O4G.[ 60-65Mbps],0)) as [13]		,sum(isnull(O4G.[ 65-70Mbps],0)) as [14]		,sum(isnull(O4G.[ 70-75Mbps],0)) as [15]
		,sum(isnull(O4G.[ 75-80Mbps],0)) as [16]		,sum(isnull(O4G.[ 80-85Mbps],0)) as [17]		,sum(isnull(O4G.[ 85-90Mbps],0)) as [18]		,sum(isnull(O4G.[ 90-95Mbps],0)) as [19]		,sum(isnull(O4G.[ 95-100Mbps],0)) as [20]
		,sum(isnull(O4G.[ 100-105Mbps],0)) as [21]	,sum(isnull(O4G.[ 105-110Mbps],0)) as [22]	,sum(isnull(O4G.[ 110-115Mbps],0)) as [23]	,sum(isnull(O4G.[ 115-120Mbps],0)) as [24]	,sum(isnull(O4G.[ 120-125Mbps],0)) as [25]
		,sum(isnull(O4G.[ 125-130Mbps],0)) as [26]	,sum(isnull(O4G.[ 130-135Mbps],0)) as [27]	,sum(isnull(O4G.[ 135-140Mbps],0)) as [28]	,sum(isnull(O4G.[ 140-145Mbps],0)) as [29]	,sum(isnull(O4G.[ 145-150Mbps],0)) as [30]
		,sum(isnull(O4G.[ >150Mbps],0)) as [31]
		,sum(0) as [32]	,sum(0) as [33]	,sum(0) as [34]	,sum(0) as [35]	,sum(0) as [36]	,sum(0) as [37]	,sum(0) as [38]	,sum(0) as [39]	,sum(0) as [40]	,sum(0) as [41],

		-- Parametros de configuracion:
		pfl.ASideDevice as ASideDevice, pfl.BSideDevice as BSideDevice, pfl.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from	[aggrData4G_ROAD].dbo.[lcc_aggr_sp_MDD_Data_DL_Thput_CE] t
				left outer join [aggrData4G_ROAD].[dbo].[lcc_aggr_sp_MDD_Data_DL_Performance_CE_LTE_4G] pfl
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(pfl.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=pfl.mnc and t.Date_Reporting=pfl.Date_Reporting and t.entidad=pfl.entidad and t.Aggr_Type=pfl.Aggr_Type and t.Report_Type=pfl.Report_Type and t.meas_round=pfl.meas_round
				left outer join [aggrData4G_ROAD].[dbo].[lcc_aggr_sp_MDD_Data_DL_Technology_CE_LTE_4G] tel
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(tel.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=tel.mnc and t.Date_Reporting=tel.Date_Reporting and t.entidad=tel.entidad and t.Aggr_Type=tel.Aggr_Type and t.Report_Type=tel.Report_Type and t.meas_round=tel.meas_round
				left outer join [aggrData4G_ROAD].[dbo].[lcc_aggr_sp_MDD_Data_NEW_KPIs_DL_LTE_4G] newk
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(newk.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=newk.mnc and t.Date_Reporting=newk.Date_Reporting and t.entidad=newk.entidad and t.Aggr_Type=newk.Aggr_Type and t.Report_Type=newk.Report_Type and t.meas_round=newk.meas_round
				left outer join [aggrData4G_ROAD].[dbo].[lcc_aggr_sp_MDD_Data_DL_Thput_CE_LTE_4G] O4G
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(O4G.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=O4G.mnc and t.Date_Reporting=O4G.Date_Reporting and t.entidad=O4G.entidad and t.Aggr_Type=O4G.Aggr_Type and t.Report_Type=O4G.Report_Type and t.meas_round=O4G.meas_round
				, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, t.mnc, t.meas_round, t.Date_Reporting, t.Week_Reporting, t.entidad, t.Report_Type, t.Aggr_Type,
		pfl.ASideDevice, pfl.BSideDevice, pfl.SWVersion--, t.Region_VF, t.Region_OSP

	-----------
	-- 4GOnly y ROAD - CE_UL
	insert into _RI_Data_e 
	select  
		p.codigo_ine, case when  t.entidad like 'AVE-%' or  t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment, t.mnc, t.meas_round, t.Date_Reporting as meas_date, t.Week_Reporting as meas_week, 
		'4GOnly' as meas_Tech, 'CE_UL' as Test_type, 'Uplink' as Direction,  t.entidad as vf_entity, t.Report_Type, t.Aggr_Type,
	
		-- General:
		sum(O4G.Subidas) as Num_tests,
		sum(O4G.[fallos de acceso]) as Failed,
		sum(O4G.[fallos de descarga]) as Dropped,
		sum(O4G.[SessionTime]*O4G.Subidas) as Session_time_Num,
		--sum(O4G.[Tiempo de subida]*O4G.count_throughput) as Session_time_Num,	-- SESSION_TIME de DL/UL, calculado como TRANSFER_TIME - se haría el cambio al calculo correcto en cambio de metodología para evitar salto de valor en QLIK.
		sum(O4G.count_throughput) as Throughput_Den,
		sum(O4G.Subidas) as Session_time_Den,
		--sum(O4G.count_throughput) as Session_time_Den,
		sum(O4G.Throughput*O4G.count_throughput) as Throughput_Num,
		max(O4G.[Throughput Max]) as Throughput_Max,
		sum(0) as Throughput_3M_Num,
		sum(O4G.Count_Throughput_1M) as Throughput_1M_Num,
		sum(0) as Throughput_128K_Num,
		sum(0) as Throughput_64K_Num,
		sum(0) as Throughput_384K_Num,
		--CAC 10/08/2017: thput de test sin error y con error
		sum(O4G.Count_Throughput_ALL) as Throughput_with_Error_Den,
		sum(O4G.Throughput_ALL*O4G.Count_Throughput_ALL) as Throughput_with_Error_Num,
		sum(0) as WEB_IP_ACCESS_TIME_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_DEN,
		sum(0) as WEB_HTTP_TRANSFER_TIME_NUM,
		sum(0) as WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_NUM,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(tel.[% GSM]*tel.[Count_%GSM]) as Radio_2G_use_Num,
		sum(tel.[% WCDMA]*tel.[Count_%WCDMA]) as Radio_3G_use_Num,
		sum(tel.[% LTE]*tel.[Count_%LTE]) as Radio_4G_use_Num,
		sum(O4G.subidas*(isnull(tel.[% GSM],0)+isnull(tel.[% WCDMA],0)+isnull(tel.[% LTE],0))) as Radio_use_Den,
		sum(tel.[Count_%GSM]) as Radio_2G_use_Den,
		sum(tel.[Count_%WCDMA]) as Radio_3G_use_Den,
		sum(tel.[Count_%LTE]) as Radio_4G_use_Den,

		sum(tel.[% U2100]*tel.[Count_%U2100]) as Radio_U2100_use_Num,
		sum(tel.[% U900]*tel.[Count_%U900]) as Radio_U900_use_Num,
		sum(tel.[% LTE2100]*tel.[Count_%LTE2100]) as Radio_LTE2100_use_Num,
		sum(tel.[% LTE2600]*tel.[Count_%LTE2600]) as Radio_LTE2600_use_Num,
		sum(tel.[% LTE1800]*tel.[Count_%LTE1800]) as Radio_LTE1800_use_Num,
		sum(tel.[% LTE800]*tel.[Count_%LTE800]) as Radio_LTE800_use_Num,
		sum(O4G.subidas*(isnull(tel.[% U2100],0)+isnull(tel.[% U900],0)+isnull(tel.[% LTE2100],0)+isnull(tel.[% LTE2600],0)+isnull(tel.[% LTE1800],0)+isnull(tel.[% LTE800],0))) as Radio_Band_Use_Den,
		sum(tel.[Count_%U2100]) as Radio_U2100_use_Den,
		sum(tel.[Count_%U900]) as Radio_U900_use_Den,
		sum(tel.[Count_%LTE2100]) as Radio_LTE2100_use_Den,
		sum(tel.[Count_%LTE2600]) as Radio_LTE2600_use_Den,
		sum(tel.[Count_%LTE1800]) as Radio_LTE1800_use_Den,
		sum(tel.[Count_%LTE800]) as Radio_LTE800_use_Den,

		-- Esta info en 3G, no tienen sentido en 4GOnly:
		sum(0) as [3G_DualCarrier_use_Num],	sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],		sum(0) as [3G_DC_2100_use_Den],
		sum(0) as [3G_DC_900_use_Num],		sum(0) as [3G_DC_900_use_Den],

		sum(0) as [3G_NumCodes_use_Num],	sum(0) as [3G_NumCodes_use_Den],

		sum(0) as [3G_QPSK_use_Num],	sum(0) as [3G_16QAM_use_Num],
		sum(0) as [3G_64QAM_use_Num],	sum(0) as [3G_QPSK_use_Den],
		sum(0) as [3G_16QAM_use_Den],   sum(0) as [3G_64QAM_use_Den],

		sum(0) as [3G_%_SF22_Num],		sum(0) as [3G_%_SF22andSF42_Num],	sum(0) as [3G_%_SF4_Num],	sum(0) as [3G_%_SF42_Num],
		sum(0) as [3G_%_SF22_Den],		sum(0) as [3G_%_SF22andSF42_Den],	sum(0) as [3G_%_SF4_Den],	sum(0) as [3G_%_SF42_Den],
		sum(0) as [3G_%_TTI2ms_Num],	sum(0) as [3G_%_TTI2ms_Den],

		sum(0) as [RSCP_Lin_Num],	sum(0) as [EcI0_Lin_Num],		sum(0) as [RSCP_Lin_Den],		sum(0) as [EcI0_Lin_Den],	

		-- Performance -- Esta info en 3G, no tienen sentido en 4GOnly:
		sum(0) as [3G_CQI],		sum(0) as [3G_DataStats_Den],
		sum(0) as CQI_U900_Num,	sum(0) as CQI_U900_Den,	sum(0) as CQI_U2100_Num,	sum(0) as CQI_U2100_Den,

		sum(0) as [HSPA_PCT_Num],	sum(0) as [HSPA+_PCT_Num],	sum(0) as [HSPA+_DC_PCT_Num],
		sum(0) as [HSPA_PCT_Den],	sum(0) as [HSPA+_PCT_Den],	sum(0) as [HSPA+_DC_PCT_Den],

		sum(0) as [UL_Inter_Lin_Num],	sum(0) as [UL_Inter_Lin_Den],	
	
		-- Performance LTE:
		sum(pfl.[Count_CQI_4G]*pfl.[ CQI]) as CQI_4G_Num,
		sum(pfl.Count_CQI_L800*pfl.CQI_L800) as CQI_L800_Num,
		sum(pfl.Count_CQI_L1800*pfl.CQI_L1800) as CQI_L1800_Num,
		sum(pfl.Count_CQI_L2100*pfl.CQI_L2100) as CQI_L2100_Num,
		sum(pfl.Count_CQI_L2600*pfl.CQI_L2600) as CQI_L2600_Num,
		sum(pfl.[Count_CQI_4G]) as CQI_4G_Den,
		sum(pfl.Count_CQI_L800) as CQI_L800_Den,
		sum(pfl.Count_CQI_L1800) as CQI_L1800_Den,
		sum(pfl.Count_CQI_L2100) as CQI_L2100_Den,
		sum(pfl.Count_CQI_L2600) as CQI_L2600_Den,

		sum(pfl.Count_LTE_5Mhz_SC *pfl.LTE_5Mhz_SC_PCT) as LTE_5Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_10Mhz_SC*pfl.LTE_10Mhz_SC_PCT) as LTE_10Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_15Mhz_SC*pfl.LTE_15Mhz_SC_PCT) as LTE_15Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_20Mhz_SC*pfl.LTE_20Mhz_SC_PCT) as LTE_20Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_CA_Use_Num,
		sum(0) as LTE_20Mhz_CA_Use_Num,
		sum(0) as LTE_25Mhz_CA_Use_Num,
		sum(0) as LTE_30Mhz_CA_Use_Num,
		sum(0) as LTE_35Mhz_CA_Use_Num,
		sum(0) as LTE_40Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_5Mhz_SC) as LTE_5Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_10Mhz_SC) as LTE_10Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_15Mhz_SC) as LTE_15Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_20Mhz_SC) as LTE_20Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_CA_Use_Den,
		sum(0) as LTE_20Mhz_CA_Use_Den,
		sum(0) as LTE_25Mhz_CA_Use_Den,
		sum(0) as LTE_30Mhz_CA_Use_Den,
		sum(0) as LTE_35Mhz_CA_Use_Den,
		sum(0) as LTE_40Mhz_CA_Use_Den,		

		sum((isnull(pfl.Count_LTE_5Mhz_SC,0) 
		 --    +isnull(pfl.Count_LTE_10Mhz_SC,0) +isnull(pfl.Count_LTE_15Mhz_SC,0) +isnull(pfl.Count_LTE_20Mhz_SC,0) +
		 --    isnull(pfl.Count_LTE_15Mhz_CA,0) +isnull(pfl.Count_LTE_20Mhz_CA,0) +isnull(pfl.Count_LTE_25Mhz_CA,0) +isnull(pfl.Count_LTE_30Mhz_CA,0) +
		 --    isnull(pfl.Count_LTE_35Mhz_CA,0) +isnull(pfl.Count_LTE_40Mhz_CA,0)
			)
			*(
			pfl.LTE_5Mhz_SC_PCT+pfl.LTE_10Mhz_SC_PCT+pfl.LTE_15Mhz_SC_PCT+pfl.LTE_20Mhz_SC_PCT)
			) as LTE_BW_use_den,
		sum(pfl.[ RBs]*pfl.[Count_RBs]) as [4G_RBs_use_Num],
		sum(pfl.[Count_RBs]) as [4G_RBs_use_Den],

		sum(pfl.[ % TM1]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM1_use_Num],
		sum(pfl.[ % TM2]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM2_use_Num],
		sum(pfl.[ % TM3]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM3_use_Num],
		sum(pfl.[ % TM4]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM4_use_Num],
		sum(pfl.[ % MIMO]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM5_use_Num],
		sum(pfl.[ % TM6]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM6_use_Num],
		sum(pfl.[ % TM7]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM7_use_Num],
		sum(pfl.[ % TM8]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM8_N],
		sum(pfl.[ % TM9]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM9_N],
		sum(pfl.[ % TM Invalid]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TMInvalid_use_Num],
		sum(0) as [4G_TMUnknown_use_Num],
		sum([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid]) as [4G_TM_Den],

		-- Technology LTE:
		sum(0) as [4G_%CA_Num],
		sum(0) as [4G_%CA_Den],
		sum((tel.[BPSK])*tel.Count_BPSK) as [4G_BPSK_Use_Num],
		sum((tel.[QPSK])*tel.Count_QPSK) as [4G_QPSK_Use_Num],
		sum((tel.[16QAM])*tel.Count_16QAM) as [4G_16QAM_Use_Num],
		sum(0) as [4G_64QAM_Use_Num],
		sum(tel.Count_BPSK) as [4G_BPSK_Use_Den],
		sum(tel.Count_QPSK) as [4G_QPSK_Use_Den],
		sum(tel.Count_16QAM) as [4G_16QAM_Use_Den],
		sum(0) as [4G_64QAM_Use_Den],

		sum((isnull(pfl.Count_CQI_L800,0)+isnull(pfl.Count_CQI_L1800,0)+isnull(pfl.Count_CQI_L2100,0)+isnull(pfl.Count_CQI_L2600,0))*(isnull(tel.[16QAM],0)+isnull(tel.QPSK,0))) as [4G_stats_Den],

		sum(tel.[RSRP_Lin]*tel.[Count_RSRP_Lin]) as [RSRP_Lin_Num],
		sum(tel.[RSRQ_Lin]*tel.[Count_RSRQ_Lin]) as [RSRQ_Lin_Num],	
		sum(tel.[SINR_Lin]*tel.[Count_SINR_Lin]) as [SINR_Lin_Num],	
		sum(tel.[Count_RSRP_Lin]) as [RSRP_Lin_Den],	
		sum(tel.[Count_RSRQ_Lin]) as [RSRQ_Lin_Den],	
		sum(tel.[Count_SINR_Lin]) as [SINR_Lin_Den],

		-- New KPIs:
		sum(newk.[MIMO_CE_num]) as [MIMO_num],
		sum(newk.[RI1_CE_num]) as [RI1_num],
		sum(newk.[RI2_CE_num]) as [RI2_num],
		sum(newk.[MIMO_CE_den]) as [MIMO_den],
		sum(newk.[RI1_CE_den]) as [RI1_den],
		sum(newk.[RI2_CE_den]) as [RI2_den],
		sum(newk.Count_RBs_CE) as RBs_Allocated_Den,
		sum(newk.Count_RBs_CE*isnull(newk.[RBs CE],0)) as RBs_Allocated_Num,
		max(newk.[Max RBs CE]) as RBs_Allocated_Max,

		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		sum(isnull(O4G.[ 0-0.5Mbps_N ],0)) as [1_N],	sum(isnull(O4G.[ 0.5-1Mbps_N ],0)) as [2_N],	sum(isnull(O4G.[ 1-1.5Mbps_N ],0)) as [3_N],	sum(isnull(O4G.[ 1.5-2Mbps_N ],0)) as [4_N],	sum(isnull(O4G.[ 2-2.5Mbps_N ],0)) as [5_N],
		sum(isnull(O4G.[ 2.5-3Mbps_N ],0)) as [6_N],	sum(isnull(O4G.[ 3-3.5Mbps_N ],0)) as [7_N],	sum(isnull(O4G.[ 3.5-4Mbps_N ],0)) as [8_N],	sum(isnull(O4G.[ 4-4.5Mbps_N ],0)) as [9_N],	sum(isnull(O4G.[ 4.5-5Mbps_N ],0)) as [10_N],
		sum(isnull(O4G.[ 5-5.5Mbps_N ],0)) as [11_N],	sum(isnull(O4G.[ 5.5-6Mbps_N ],0)) as [12_N],	sum(isnull(O4G.[ 6-6.5Mbps_N ],0)) as [13_N],	sum(isnull(O4G.[ 6.5-7Mbps_N ],0)) as [14_N],	sum(isnull(O4G.[ 7-7.5Mbps_N ],0)) as [15_N],	
		sum(isnull(O4G.[ 7.5-8Mbps_N ],0)) as [16_N],	sum(isnull(O4G.[ 8-8.5Mbps_N ],0)) as [17_N],	sum(isnull(O4G.[ 8.5-9Mbps_N ],0)) as [18_N],	sum(isnull(O4G.[ 9-9.5Mbps_N ],0)) as [19_N],	sum(isnull(O4G.[ 9.5-10Mbps_N ],0)) as [20_N],
		sum(isnull(O4G.[ 10-10.5Mbps_N ],0)) as [21_N],	sum(isnull(O4G.[ 10.5-11Mbps_N ],0)) as [22_N],	sum(isnull(O4G.[ 11-11.5Mbps_N ],0)) as [23_N],	sum(isnull(O4G.[ 11.5-12Mbps_N ],0)) as [24_N],	sum(isnull(O4G.[ 12-12.5Mbps_N ],0)) as [25_N],
		sum(isnull(O4G.[ 12.5-13Mbps_N ],0)) as [26_N],	sum(isnull(O4G.[ 13-13.5Mbps_N ],0)) as [27_N],	sum(isnull(O4G.[ 13.5-14Mbps_N ],0)) as [28_N],	sum(isnull(O4G.[ 14-14.5Mbps_N ],0)) as [29_N],	sum(isnull(O4G.[ 14.5-15Mbps_N ],0)) as [30_N],
		sum(isnull(O4G.[ 15-15.5Mbps_N ],0)) as [31_N],	sum(isnull(O4G.[ 15.5-16Mbps_N ],0)) as [32_N],	sum(isnull(O4G.[ 16-16.5Mbps_N ],0)) as [33_N],	sum(isnull(O4G.[ 16.5-17Mbps_N ],0)) as [34_N],	sum(isnull(O4G.[ 17-17.5Mbps_N ],0)) as [35_N],
		sum(isnull(O4G.[ 17.5-18Mbps_N ],0)) as [36_N],	sum(isnull(O4G.[ 18-18.5Mbps_N ],0)) as [37_N],	sum(isnull(O4G.[ 18.5-19Mbps_N ],0)) as [38_N],	sum(isnull(O4G.[ 19-19.5Mbps_N ],0)) as [39_N],	sum(isnull(O4G.[ 19.5-20Mbps_N ],0)) as [40_N],
		sum(isnull(O4G.[ 20-20.5Mbps_N ],0)) as [41_N],	sum(isnull(O4G.[ 20.5-21Mbps_N ],0)) as [42_N],	sum(isnull(O4G.[ 21-21.5Mbps_N ],0)) as [43_N],	sum(isnull(O4G.[ 21.5-22Mbps_N ],0)) as [44_N],	sum(isnull(O4G.[ 22-22.5Mbps_N ],0)) as [45_N],
		sum(isnull(O4G.[ 22.5-23Mbps_N ],0)) as [46_N],	sum(isnull(O4G.[ 23-23.5Mbps_N ],0)) as [47_N],	sum(isnull(O4G.[ 23.5-24Mbps_N ],0)) as [48_N],	sum(isnull(O4G.[ 24-24.5Mbps_N ],0)) as [49_N],	sum(isnull(O4G.[ 24.5-25Mbps_N ],0)) as [50_N],
		sum(isnull(O4G.[ >25Mbps_N],0)) as [51_N],
		sum(0) as [52_N],	sum(0) as [53_N],	sum(0) as [54_N],	sum(0) as [55_N],	sum(0) as [56_N],	sum(0) as [57_N],	sum(0) as [58_N],	sum(0) as [59_N],	
		sum(0) as [60_N],	sum(0) as [61_N],	sum(0) as [62_N],	sum(0) as [63_N],	sum(0) as [64_N],	sum(0) as [65_N],	sum(0) as [66_N]
	
		--null as Region_Road_VF, null as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,sum(isnull(O4G.[ 0-5Mbps],0)) as [1]		,sum(isnull(O4G.[ 5-10Mbps],0)) as [2]		,sum(isnull(O4G.[ 10-15Mbps],0)) as [3]		,sum(isnull(O4G.[ 15-20Mbps],0)) as [4]		,sum(isnull(O4G.[ 20-25Mbps],0)) as [5]
		,sum(isnull(O4G.[ 25-30Mbps],0)) as [6]		,sum(isnull(O4G.[ 30-35Mbps],0)) as [7]		,sum(isnull(O4G.[ 35-40Mbps],0)) as [8]		,sum(isnull(O4G.[ 40-45Mbps],0)) as [9]		,sum(isnull(O4G.[ 45-50Mbps],0)) as [10]
		,sum(isnull(O4G.[ >50Mbps],0)) as [11]	
		,sum(0) as [12]	,sum(0) as [13]	,sum(0) as [14]	,sum(0) as [15]	,sum(0) as [16]	,sum(0) as [17]	,sum(0) as [18]	,sum(0) as [19]	,sum(0) as [20]
		,sum(0) as [21]	,sum(0) as [22]	,sum(0) as [23]	,sum(0) as [24]	,sum(0) as [25]	,sum(0) as [26]	,sum(0) as [27]	,sum(0) as [28]	,sum(0) as [29]
		,sum(0) as [30]	,sum(0) as [31]	,sum(0) as [32]	,sum(0) as [33]	,sum(0) as [34]	,sum(0) as [35]	,sum(0) as [36]	,sum(0) as [37]	,sum(0) as [38]
		,sum(0) as [39]	,sum(0) as [40]	,sum(0) as [41],

		-- Parametros de configuracion:
		pfl.ASideDevice as ASideDevice, pfl.BSideDevice as BSideDevice, pfl.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from	[AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_UL_Thput_CE] t
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_UL_Performance_CE_LTE_4G] pfl
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(pfl.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=pfl.mnc and t.Date_Reporting=pfl.Date_Reporting and t.entidad=pfl.entidad and t.Aggr_Type=pfl.Aggr_Type and t.Report_Type=pfl.Report_Type and t.meas_round=pfl.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_UL_Technology_CE_LTE_4G] tel
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(tel.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=tel.mnc and t.Date_Reporting=tel.Date_Reporting and t.entidad=tel.entidad and t.Aggr_Type=tel.Aggr_Type and t.Report_Type=tel.Report_Type and t.meas_round=tel.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_NEW_KPIs_UL_LTE_4G] newk
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(newk.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=newk.mnc and t.Date_Reporting=newk.Date_Reporting and t.entidad=newk.entidad and t.Aggr_Type=newk.Aggr_Type and t.Report_Type=newk.Report_Type and t.meas_round=newk.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_UL_Thput_CE_LTE_4G] O4G
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(O4G.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=O4G.mnc and t.Date_Reporting=O4G.Date_Reporting and t.entidad=O4G.entidad and t.Aggr_Type=O4G.Aggr_Type and t.Report_Type=O4G.Report_Type and t.meas_round=O4G.meas_round
				, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, case when  t.entidad like 'AVE-%' or  t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end, t.mnc, t.meas_round, t.Date_Reporting, t.Week_Reporting, t.entidad, t.Report_Type, t.Aggr_Type,
		pfl.ASideDevice, pfl.BSideDevice, pfl.SWVersion--, t.Region_VF, t.Region_OSP
	
	-----------
	union all	-- Road 4GOnly - CE_UL
	select  
		p.codigo_ine, 'Roads' vf_environment, t.mnc, t.meas_round, t.Date_Reporting as meas_date, t.Week_Reporting as meas_week, 
		'Road 4GOnly' as meas_Tech, 'CE_UL' as Test_type, 'Uplink' as Direction,  t.entidad as vf_entity, t.Report_Type, t.Aggr_Type,
	
		-- General:
		sum(O4G.Subidas) as Num_tests,
		sum(O4G.[fallos de acceso]) as Failed,
		sum(O4G.[fallos de descarga]) as Dropped,
		sum(O4G.[SessionTime]*O4G.Subidas) as Session_time_Num,
		--sum(O4G.[Tiempo de subida]*O4G.count_throughput) as Session_time_Num,	-- SESSION_TIME de DL/UL, calculado como TRANSFER_TIME - se haría el cambio al calculo correcto en cambio de metodología para evitar salto de valor en QLIK.
		sum(O4G.count_throughput) as Throughput_Den,
		sum(O4G.Subidas) as Session_time_Den,
		--sum(O4G.count_throughput) as Session_time_Den,
		sum(O4G.Throughput*O4G.count_throughput) as Throughput_Num,
		max(O4G.[Throughput Max]) as Throughput_Max,
		sum(0) as Throughput_3M_Num,
		sum(O4G.Count_Throughput_1M) as Throughput_1M_Num,
		sum(0) as Throughput_128K_Num,
		sum(0) as Throughput_64K_Num,
		sum(0) as Throughput_384K_Num,
		--CAC 10/08/2017: thput de test sin error y con error
		sum(O4G.Count_Throughput_ALL) as Throughput_with_Error_Den,
		sum(O4G.Throughput_ALL*O4G.Count_Throughput_ALL) as Throughput_with_Error_Num,
		sum(0) as WEB_IP_ACCESS_TIME_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_DEN,
		sum(0) as WEB_HTTP_TRANSFER_TIME_NUM,
		sum(0) as WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_NUM,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(tel.[% GSM]*tel.[Count_%GSM]) as Radio_2G_use_Num,
		sum(tel.[% WCDMA]*tel.[Count_%WCDMA]) as Radio_3G_use_Num,
		sum(tel.[% LTE]*tel.[Count_%LTE]) as Radio_4G_use_Num,
		sum(O4G.subidas*(isnull(tel.[% GSM],0)+isnull(tel.[% WCDMA],0)+isnull(tel.[% LTE],0))) as Radio_use_Den,
		sum(tel.[Count_%GSM]) as Radio_2G_use_Den,
		sum(tel.[Count_%WCDMA]) as Radio_3G_use_Den,
		sum(tel.[Count_%LTE]) as Radio_4G_use_Den,

		sum(tel.[% U2100]*tel.[Count_%U2100]) as Radio_U2100_use_Num,
		sum(tel.[% U900]*tel.[Count_%U900]) as Radio_U900_use_Num,
		sum(tel.[% LTE2100]*tel.[Count_%LTE2100]) as Radio_LTE2100_use_Num,
		sum(tel.[% LTE2600]*tel.[Count_%LTE2600]) as Radio_LTE2600_use_Num,
		sum(tel.[% LTE1800]*tel.[Count_%LTE1800]) as Radio_LTE1800_use_Num,
		sum(tel.[% LTE800]*tel.[Count_%LTE800]) as Radio_LTE800_use_Num,
		sum(O4G.subidas*(isnull(tel.[% U2100],0)+isnull(tel.[% U900],0)+isnull(tel.[% LTE2100],0)+isnull(tel.[% LTE2600],0)+isnull(tel.[% LTE1800],0)+isnull(tel.[% LTE800],0))) as Radio_Band_Use_Den,
		sum(tel.[Count_%U2100]) as Radio_U2100_use_Den,
		sum(tel.[Count_%U900]) as Radio_U900_use_Den,
		sum(tel.[Count_%LTE2100]) as Radio_LTE2100_use_Den,
		sum(tel.[Count_%LTE2600]) as Radio_LTE2600_use_Den,
		sum(tel.[Count_%LTE1800]) as Radio_LTE1800_use_Den,
		sum(tel.[Count_%LTE800]) as Radio_LTE800_use_Den,

		-- Esta info en 3G, no tienen sentido en 4GOnly:
		sum(0) as [3G_DualCarrier_use_Num],	sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],		sum(0) as [3G_DC_2100_use_Den],
		sum(0) as [3G_DC_900_use_Num],		sum(0) as [3G_DC_900_use_Den],

		sum(0) as [3G_NumCodes_use_Num],	sum(0) as [3G_NumCodes_use_Den],

		sum(0) as [3G_QPSK_use_Num],	sum(0) as [3G_16QAM_use_Num],
		sum(0) as [3G_64QAM_use_Num],	sum(0) as [3G_QPSK_use_Den],
		sum(0) as [3G_16QAM_use_Den],   sum(0) as [3G_64QAM_use_Den],

		sum(0) as [3G_%_SF22_Num],		sum(0) as [3G_%_SF22andSF42_Num],	sum(0) as [3G_%_SF4_Num],	sum(0) as [3G_%_SF42_Num],
		sum(0) as [3G_%_SF22_Den],		sum(0) as [3G_%_SF22andSF42_Den],	sum(0) as [3G_%_SF4_Den],	sum(0) as [3G_%_SF42_Den],
		sum(0) as [3G_%_TTI2ms_Num],	sum(0) as [3G_%_TTI2ms_Den],

		sum(0) as [RSCP_Lin_Num],	sum(0) as [EcI0_Lin_Num],		sum(0) as [RSCP_Lin_Den],		sum(0) as [EcI0_Lin_Den],	

		-- Performance -- Esta info en 3G, no tienen sentido en 4GOnly:
		sum(0) as [3G_CQI],		sum(0) as [3G_DataStats_Den],
		sum(0) as CQI_U900_Num,	sum(0) as CQI_U900_Den,	sum(0) as CQI_U2100_Num,	sum(0) as CQI_U2100_Den,

		sum(0) as [HSPA_PCT_Num],	sum(0) as [HSPA+_PCT_Num],	sum(0) as [HSPA+_DC_PCT_Num],
		sum(0) as [HSPA_PCT_Den],	sum(0) as [HSPA+_PCT_Den],	sum(0) as [HSPA+_DC_PCT_Den],

		sum(0) as [UL_Inter_Lin_Num],	sum(0) as [UL_Inter_Lin_Den],	
	
		-- Performance LTE:
		sum(pfl.[Count_CQI_4G]*pfl.[ CQI]) as CQI_4G_Num,
		sum(pfl.Count_CQI_L800*pfl.CQI_L800) as CQI_L800_Num,
		sum(pfl.Count_CQI_L1800*pfl.CQI_L1800) as CQI_L1800_Num,
		sum(pfl.Count_CQI_L2100*pfl.CQI_L2100) as CQI_L2100_Num,
		sum(pfl.Count_CQI_L2600*pfl.CQI_L2600) as CQI_L2600_Num,
		sum(pfl.[Count_CQI_4G]) as CQI_4G_Den,
		sum(pfl.Count_CQI_L800) as CQI_L800_Den,
		sum(pfl.Count_CQI_L1800) as CQI_L1800_Den,
		sum(pfl.Count_CQI_L2100) as CQI_L2100_Den,
		sum(pfl.Count_CQI_L2600) as CQI_L2600_Den,

		sum(pfl.Count_LTE_5Mhz_SC *pfl.LTE_5Mhz_SC_PCT) as LTE_5Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_10Mhz_SC*pfl.LTE_10Mhz_SC_PCT) as LTE_10Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_15Mhz_SC*pfl.LTE_15Mhz_SC_PCT) as LTE_15Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_20Mhz_SC*pfl.LTE_20Mhz_SC_PCT) as LTE_20Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_CA_Use_Num,
		sum(0) as LTE_20Mhz_CA_Use_Num,
		sum(0) as LTE_25Mhz_CA_Use_Num,
		sum(0) as LTE_30Mhz_CA_Use_Num,
		sum(0) as LTE_35Mhz_CA_Use_Num,
		sum(0) as LTE_40Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_5Mhz_SC) as LTE_5Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_10Mhz_SC) as LTE_10Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_15Mhz_SC) as LTE_15Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_20Mhz_SC) as LTE_20Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_CA_Use_Den,
		sum(0) as LTE_20Mhz_CA_Use_Den,
		sum(0) as LTE_25Mhz_CA_Use_Den,
		sum(0) as LTE_30Mhz_CA_Use_Den,
		sum(0) as LTE_35Mhz_CA_Use_Den,
		sum(0) as LTE_40Mhz_CA_Use_Den,		

		sum((isnull(pfl.Count_LTE_5Mhz_SC,0) 
		 --    +isnull(pfl.Count_LTE_10Mhz_SC,0) +isnull(pfl.Count_LTE_15Mhz_SC,0) +isnull(pfl.Count_LTE_20Mhz_SC,0) +
		 --    isnull(pfl.Count_LTE_15Mhz_CA,0) +isnull(pfl.Count_LTE_20Mhz_CA,0) +isnull(pfl.Count_LTE_25Mhz_CA,0) +isnull(pfl.Count_LTE_30Mhz_CA,0) +
		 --    isnull(pfl.Count_LTE_35Mhz_CA,0) +isnull(pfl.Count_LTE_40Mhz_CA,0)
			)
			*(
			pfl.LTE_5Mhz_SC_PCT+pfl.LTE_10Mhz_SC_PCT+pfl.LTE_15Mhz_SC_PCT+pfl.LTE_20Mhz_SC_PCT)
			) as LTE_BW_use_den,
		sum(pfl.[ RBs]*pfl.[Count_RBs]) as [4G_RBs_use_Num],
		sum(pfl.[Count_RBs]) as [4G_RBs_use_Den],

		sum(pfl.[ % TM1]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM1_use_Num],
		sum(pfl.[ % TM2]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM2_use_Num],
		sum(pfl.[ % TM3]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM3_use_Num],
		sum(pfl.[ % TM4]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM4_use_Num],
		sum(pfl.[ % MIMO]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM5_use_Num],
		sum(pfl.[ % TM6]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM6_use_Num],
		sum(pfl.[ % TM7]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM7_use_Num],
		sum(pfl.[ % TM8]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM8_N],
		sum(pfl.[ % TM9]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM9_N],
		sum(pfl.[ % TM Invalid]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TMInvalid_use_Num],
		sum(0) as [4G_TMUnknown_use_Num],
		sum([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid]) as [4G_TM_Den],

		-- Technology LTE:
		sum(0) as [4G_%CA_Num],
		sum(0) as [4G_%CA_Den],
		sum((tel.[BPSK])*tel.Count_BPSK) as [4G_BPSK_Use_Num],
		sum((tel.[QPSK])*tel.Count_QPSK) as [4G_QPSK_Use_Num],
		sum((tel.[16QAM])*tel.Count_16QAM) as [4G_16QAM_Use_Num],
		sum(0) as [4G_64QAM_Use_Num],
		sum(tel.Count_BPSK) as [4G_BPSK_Use_Den],
		sum(tel.Count_QPSK) as [4G_QPSK_Use_Den],
		sum(tel.Count_16QAM) as [4G_16QAM_Use_Den],
		sum(0) as [4G_64QAM_Use_Den],

		sum((isnull(pfl.Count_CQI_L800,0)+isnull(pfl.Count_CQI_L1800,0)+isnull(pfl.Count_CQI_L2100,0)+isnull(pfl.Count_CQI_L2600,0))*(isnull(tel.[16QAM],0)+isnull(tel.QPSK,0))) as [4G_stats_Den],

		sum(tel.[RSRP_Lin]*tel.[Count_RSRP_Lin]) as [RSRP_Lin_Num],
		sum(tel.[RSRQ_Lin]*tel.[Count_RSRQ_Lin]) as [RSRQ_Lin_Num],	
		sum(tel.[SINR_Lin]*tel.[Count_SINR_Lin]) as [SINR_Lin_Num],	
		sum(tel.[Count_RSRP_Lin]) as [RSRP_Lin_Den],	
		sum(tel.[Count_RSRQ_Lin]) as [RSRQ_Lin_Den],	
		sum(tel.[Count_SINR_Lin]) as [SINR_Lin_Den],

		-- New KPIs:
		sum(newk.[MIMO_CE_num]) as [MIMO_num],
		sum(newk.[RI1_CE_num]) as [RI1_num],
		sum(newk.[RI2_CE_num]) as [RI2_num],
		sum(newk.[MIMO_CE_den]) as [MIMO_den],
		sum(newk.[RI1_CE_den]) as [RI1_den],
		sum(newk.[RI2_CE_den]) as [RI2_den],
		sum(newk.Count_RBs_CE) as RBs_Allocated_Den,
		sum(newk.Count_RBs_CE*isnull(newk.[RBs CE],0)) as RBs_Allocated_Num,
		max(newk.[Max RBs CE]) as RBs_Alloca00ted_Max,

		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		sum(isnull(O4G.[ 0-0.5Mbps_N ],0)) as [1_N],	sum(isnull(O4G.[ 0.5-1Mbps_N ],0)) as [2_N],	sum(isnull(O4G.[ 1-1.5Mbps_N ],0)) as [3_N],	sum(isnull(O4G.[ 1.5-2Mbps_N ],0)) as [4_N],	sum(isnull(O4G.[ 2-2.5Mbps_N ],0)) as [5_N],
		sum(isnull(O4G.[ 2.5-3Mbps_N ],0)) as [6_N],	sum(isnull(O4G.[ 3-3.5Mbps_N ],0)) as [7_N],	sum(isnull(O4G.[ 3.5-4Mbps_N ],0)) as [8_N],	sum(isnull(O4G.[ 4-4.5Mbps_N ],0)) as [9_N],	sum(isnull(O4G.[ 4.5-5Mbps_N ],0)) as [10_N],
		sum(isnull(O4G.[ 5-5.5Mbps_N ],0)) as [11_N],	sum(isnull(O4G.[ 5.5-6Mbps_N ],0)) as [12_N],	sum(isnull(O4G.[ 6-6.5Mbps_N ],0)) as [13_N],	sum(isnull(O4G.[ 6.5-7Mbps_N ],0)) as [14_N],	sum(isnull(O4G.[ 7-7.5Mbps_N ],0)) as [15_N],	
		sum(isnull(O4G.[ 7.5-8Mbps_N ],0)) as [16_N],	sum(isnull(O4G.[ 8-8.5Mbps_N ],0)) as [17_N],	sum(isnull(O4G.[ 8.5-9Mbps_N ],0)) as [18_N],	sum(isnull(O4G.[ 9-9.5Mbps_N ],0)) as [19_N],	sum(isnull(O4G.[ 9.5-10Mbps_N ],0)) as [20_N],
		sum(isnull(O4G.[ 10-10.5Mbps_N ],0)) as [21_N],	sum(isnull(O4G.[ 10.5-11Mbps_N ],0)) as [22_N],	sum(isnull(O4G.[ 11-11.5Mbps_N ],0)) as [23_N],	sum(isnull(O4G.[ 11.5-12Mbps_N ],0)) as [24_N],	sum(isnull(O4G.[ 12-12.5Mbps_N ],0)) as [25_N],
		sum(isnull(O4G.[ 12.5-13Mbps_N ],0)) as [26_N],	sum(isnull(O4G.[ 13-13.5Mbps_N ],0)) as [27_N],	sum(isnull(O4G.[ 13.5-14Mbps_N ],0)) as [28_N],	sum(isnull(O4G.[ 14-14.5Mbps_N ],0)) as [29_N],	sum(isnull(O4G.[ 14.5-15Mbps_N ],0)) as [30_N],
		sum(isnull(O4G.[ 15-15.5Mbps_N ],0)) as [31_N],	sum(isnull(O4G.[ 15.5-16Mbps_N ],0)) as [32_N],	sum(isnull(O4G.[ 16-16.5Mbps_N ],0)) as [33_N],	sum(isnull(O4G.[ 16.5-17Mbps_N ],0)) as [34_N],	sum(isnull(O4G.[ 17-17.5Mbps_N ],0)) as [35_N],
		sum(isnull(O4G.[ 17.5-18Mbps_N ],0)) as [36_N],	sum(isnull(O4G.[ 18-18.5Mbps_N ],0)) as [37_N],	sum(isnull(O4G.[ 18.5-19Mbps_N ],0)) as [38_N],	sum(isnull(O4G.[ 19-19.5Mbps_N ],0)) as [39_N],	sum(isnull(O4G.[ 19.5-20Mbps_N ],0)) as [40_N],
		sum(isnull(O4G.[ 20-20.5Mbps_N ],0)) as [41_N],	sum(isnull(O4G.[ 20.5-21Mbps_N ],0)) as [42_N],	sum(isnull(O4G.[ 21-21.5Mbps_N ],0)) as [43_N],	sum(isnull(O4G.[ 21.5-22Mbps_N ],0)) as [44_N],	sum(isnull(O4G.[ 22-22.5Mbps_N ],0)) as [45_N],
		sum(isnull(O4G.[ 22.5-23Mbps_N ],0)) as [46_N],	sum(isnull(O4G.[ 23-23.5Mbps_N ],0)) as [47_N],	sum(isnull(O4G.[ 23.5-24Mbps_N ],0)) as [48_N],	sum(isnull(O4G.[ 24-24.5Mbps_N ],0)) as [49_N],	sum(isnull(O4G.[ 24.5-25Mbps_N ],0)) as [50_N],
		sum(isnull(O4G.[ >25Mbps_N],0)) as [51_N],
		sum(0) as [52_N],	sum(0) as [53_N],	sum(0) as [54_N],	sum(0) as [55_N],	sum(0) as [56_N],	sum(0) as [57_N],	sum(0) as [58_N],	sum(0) as [59_N],	sum(0) as [60_N],	
		sum(0) as [61_N],	sum(0) as [62_N],	sum(0) as [63_N],	sum(0) as [64_N],	sum(0) as [65_N],	sum(0) as [66_N]
	
		--t.Region_VF as Region_Road_VF, t.Region_OSP as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,sum(isnull(O4G.[ 0-5Mbps],0)) as [1]		,sum(isnull(O4G.[ 5-10Mbps],0)) as [2]		,sum(isnull(O4G.[ 10-15Mbps],0)) as [3]		,sum(isnull(O4G.[ 15-20Mbps],0)) as [4]		,sum(isnull(O4G.[ 20-25Mbps],0)) as [5]
		,sum(isnull(O4G.[ 25-30Mbps],0)) as [6]		,sum(isnull(O4G.[ 30-35Mbps],0)) as [7]		,sum(isnull(O4G.[ 35-40Mbps],0)) as [8]		,sum(isnull(O4G.[ 40-45Mbps],0)) as [9]		,sum(isnull(O4G.[ 45-50Mbps],0)) as [10]
		,sum(isnull(O4G.[ >50Mbps],0)) as [11]	
		,sum(0) as [12]	,sum(0) as [13]	,sum(0) as [14]	,sum(0) as [15]	,sum(0) as [16]	,sum(0) as [17]	,sum(0) as [18]	,sum(0) as [19]	,sum(0) as [20]
		,sum(0) as [21]	,sum(0) as [22]	,sum(0) as [23]	,sum(0) as [24]	,sum(0) as [25]	,sum(0) as [26]	,sum(0) as [27]	,sum(0) as [28]	,sum(0) as [29]
		,sum(0) as [30]	,sum(0) as [31]	,sum(0) as [32]	,sum(0) as [33]	,sum(0) as [34]	,sum(0) as [35]	,sum(0) as [36]	,sum(0) as [37]	,sum(0) as [38]
		,sum(0) as [39]	,sum(0) as [40]	,sum(0) as [41],

		-- Parametros de configuracion:
		pfl.ASideDevice as ASideDevice, pfl.BSideDevice as BSideDevice, pfl.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from	[aggrData4G_ROAD].dbo.[lcc_aggr_sp_MDD_Data_UL_Thput_CE] t
				left outer join [aggrData4G_ROAD].[dbo].[lcc_aggr_sp_MDD_Data_UL_Performance_CE_LTE_4G] pfl
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(pfl.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=pfl.mnc and t.Date_Reporting=pfl.Date_Reporting and t.entidad=pfl.entidad and t.Aggr_Type=pfl.Aggr_Type and t.Report_Type=pfl.Report_Type and t.meas_round=pfl.meas_round
				left outer join [aggrData4G_ROAD].[dbo].[lcc_aggr_sp_MDD_Data_UL_Technology_CE_LTE_4G] tel
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(tel.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=tel.mnc and t.Date_Reporting=tel.Date_Reporting and t.entidad=tel.entidad and t.Aggr_Type=tel.Aggr_Type and t.Report_Type=tel.Report_Type and t.meas_round=tel.meas_round
				left outer join [aggrData4G_ROAD].[dbo].[lcc_aggr_sp_MDD_Data_NEW_KPIs_UL_LTE_4G] newk
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(newk.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=newk.mnc and t.Date_Reporting=newk.Date_Reporting and t.entidad=newk.entidad and t.Aggr_Type=newk.Aggr_Type and t.Report_Type=newk.Report_Type and t.meas_round=newk.meas_round
				left outer join [AGGRData4G_ROAD].[dbo].[lcc_aggr_sp_MDD_Data_UL_Thput_CE_LTE_4G] O4G
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(O4G.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=O4G.mnc and t.Date_Reporting=O4G.Date_Reporting and t.entidad=O4G.entidad and t.Aggr_Type=O4G.Aggr_Type and t.Report_Type=O4G.Report_Type and t.meas_round=O4G.meas_round
				, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, t.mnc, t.meas_round, t.Date_Reporting, t.Week_Reporting, t.entidad, t.Report_Type, t.Aggr_Type,
		pfl.ASideDevice, pfl.BSideDevice, pfl.SWVersion--, t.Region_VF, t.Region_OSP

	-----------
	-- 4GOnly y ROAD - NC_DL
	insert into _RI_Data_e 
	select  
		p.codigo_ine, case when  t.entidad like 'AVE-%' or  t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment, t.mnc, t.meas_round, t.Date_Reporting as meas_date, t.Week_Reporting as meas_week, 
		'4GOnly' as meas_Tech, 'NC_DL' as Test_type, 'Downlink' as Direction,  t.entidad as vf_entity, t.Report_Type, t.Aggr_Type,
	
		-- General:
		sum(O4G.navegaciones) as Num_tests,
		sum(O4G.[fallos de acceso]) as Failed,
		sum(O4G.[fallos de descarga]) as Dropped,
		sum(0) as Session_time_Num,
		sum(O4G.count_throughput) as Throughput_Den,
		sum(0) as Session_time_Den,
		sum(O4G.Throughput*O4G.count_throughput) as Throughput_Num,
		max(O4G.[Throughput Max]) as Throughput_Max,
		sum(O4G.Count_Throughput_3M) as Throughput_3M_Num,
		sum(O4G.Count_Throughput_1M) as Throughput_1M_Num,
		sum(O4G.Count_Throughput_128k) as Throughput_128K_Num,
		sum(0) as Throughput_64K_Num,
		sum(O4G.Count_Throughput_384k) as Throughput_384K_Num,
		--CAC 10/08/2017: thput de test sin error y con error
		sum(O4G.Count_Throughput_ALL) as Throughput_with_Error_Den,
		sum(O4G.Throughput_ALL*O4G.Count_Throughput_ALL) as Throughput_with_Error_Num,
		sum(0) as WEB_IP_ACCESS_TIME_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_DEN,
		sum(0) as WEB_HTTP_TRANSFER_TIME_NUM,
		sum(0) as WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_NUM,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(tel.[% GSM]*tel.[Count_%GSM]) as Radio_2G_use_Num,
		sum(tel.[% WCDMA]*tel.[Count_%WCDMA]) as Radio_3G_use_Num,
		sum(tel.[% LTE]*tel.[Count_%LTE]) as Radio_4G_use_Num,
		sum(O4G.navegaciones*(isnull(tel.[% GSM],0)+isnull(tel.[% WCDMA],0)+isnull(tel.[% LTE],0))) as Radio_use_Den,
		sum(tel.[Count_%GSM]) as Radio_2G_use_Den,
		sum(tel.[Count_%WCDMA]) as Radio_3G_use_Den,
		sum(tel.[Count_%LTE]) as Radio_4G_use_Den,

		sum(tel.[% U2100]*tel.[Count_%U2100]) as Radio_U2100_use_Num,
		sum(tel.[% U900]*tel.[Count_%U900]) as Radio_U900_use_Num,
		sum(tel.[% LTE2100]*tel.[Count_%LTE2100]) as Radio_LTE2100_use_Num,
		sum(tel.[% LTE2600]*tel.[Count_%LTE2600]) as Radio_LTE2600_use_Num,
		sum(tel.[% LTE1800]*tel.[Count_%LTE1800]) as Radio_LTE1800_use_Num,
		sum(tel.[% LTE800]*tel.[Count_%LTE800]) as Radio_LTE800_use_Num,
		sum(O4G.navegaciones*(isnull(tel.[% U2100],0)+isnull(tel.[% U900],0)+isnull(tel.[% LTE2100],0)+isnull(tel.[% LTE2600],0)+isnull(tel.[% LTE1800],0)+isnull(tel.[% LTE800],0))) as Radio_Band_Use_Den,
		sum(tel.[Count_%U2100]) as Radio_U2100_use_Den,
		sum(tel.[Count_%U900]) as Radio_U900_use_Den,
		sum(tel.[Count_%LTE2100]) as Radio_LTE2100_use_Den,
		sum(tel.[Count_%LTE2600]) as Radio_LTE2600_use_Den,
		sum(tel.[Count_%LTE1800]) as Radio_LTE1800_use_Den,
		sum(tel.[Count_%LTE800]) as Radio_LTE800_use_Den,

		-- Esta info en 3G, no tienen sentido en 4GOnly:
		sum(0) as [3G_DualCarrier_use_Num],	sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],		sum(0) as [3G_DC_2100_use_Den],
		sum(0) as [3G_DC_900_use_Num],		sum(0) as [3G_DC_900_use_Den],

		sum(0) as [3G_NumCodes_use_Num],	sum(0) as [3G_NumCodes_use_Den],

		sum(0) as [3G_QPSK_use_Num],	sum(0) as [3G_16QAM_use_Num],
		sum(0) as [3G_64QAM_use_Num],	sum(0) as [3G_QPSK_use_Den],
		sum(0) as [3G_16QAM_use_Den],   sum(0) as [3G_64QAM_use_Den],

		sum(0) as [3G_%_SF22_Num],		sum(0) as [3G_%_SF22andSF42_Num],	sum(0) as [3G_%_SF4_Num],	sum(0) as [3G_%_SF42_Num],
		sum(0) as [3G_%_SF22_Den],		sum(0) as [3G_%_SF22andSF42_Den],	sum(0) as [3G_%_SF4_Den],	sum(0) as [3G_%_SF42_Den],
		sum(0) as [3G_%_TTI2ms_Num],	sum(0) as [3G_%_TTI2ms_Den],

		sum(0) as [RSCP_Lin_Num],	sum(0) as [EcI0_Lin_Num],		sum(0) as [RSCP_Lin_Den],		sum(0) as [EcI0_Lin_Den],	

		-- Performance -- Esta info en 3G, no tienen sentido en 4GOnly:
		sum(0) as [3G_CQI],		sum(0) as [3G_DataStats_Den],
		sum(0) as CQI_U900_Num,	sum(0) as CQI_U900_Den,	sum(0) as CQI_U2100_Num,	sum(0) as CQI_U2100_Den,

		sum(0) as [HSPA_PCT_Num],	sum(0) as [HSPA+_PCT_Num],	sum(0) as [HSPA+_DC_PCT_Num],
		sum(0) as [HSPA_PCT_Den],	sum(0) as [HSPA+_PCT_Den],	sum(0) as [HSPA+_DC_PCT_Den],

		sum(0) as [UL_Inter_Lin_Num],	sum(0) as [UL_Inter_Lin_Den],	
	
		-- Performance LTE:
		sum(pfl.[Count_CQI_4G]*pfl.[CQI_4G]) as CQI_4G_Num,
		sum(pfl.Count_CQI_L800*pfl.CQI_L800) as CQI_L800_Num,
		sum(pfl.Count_CQI_L1800*pfl.CQI_L1800) as CQI_L1800_Num,
		sum(pfl.Count_CQI_L2100*pfl.CQI_L2100) as CQI_L2100_Num,
		sum(pfl.Count_CQI_L2600*pfl.CQI_L2600) as CQI_L2600_Num,
		sum(pfl.[Count_CQI_4G]) as CQI_4G_Den,
		sum(pfl.Count_CQI_L800) as CQI_L800_Den,
		sum(pfl.Count_CQI_L1800) as CQI_L1800_Den,
		sum(pfl.Count_CQI_L2100) as CQI_L2100_Den,
		sum(pfl.Count_CQI_L2600) as CQI_L2600_Den,

		sum(pfl.Count_LTE_5Mhz_SC *pfl.LTE_5Mhz_SC_PCT) as LTE_5Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_10Mhz_SC*pfl.LTE_10Mhz_SC_PCT) as LTE_10Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_15Mhz_SC*pfl.LTE_15Mhz_SC_PCT) as LTE_15Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_20Mhz_SC*pfl.LTE_20Mhz_SC_PCT) as LTE_20Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_15Mhz_CA*pfl.LTE_15Mhz_CA_PCT) as LTE_15Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_20Mhz_CA*pfl.LTE_20Mhz_CA_PCT) as LTE_20Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_25Mhz_CA*pfl.LTE_25Mhz_CA_PCT) as LTE_25Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_30Mhz_CA*pfl.LTE_30Mhz_CA_PCT) as LTE_30Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_35Mhz_CA*pfl.LTE_35Mhz_CA_PCT) as LTE_35Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_40Mhz_CA*pfl.LTE_40Mhz_CA_PCT) as LTE_40Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_5Mhz_SC) as LTE_5Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_10Mhz_SC) as LTE_10Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_15Mhz_SC) as LTE_15Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_20Mhz_SC) as LTE_20Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_15Mhz_CA) as LTE_15Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_20Mhz_CA) as LTE_20Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_25Mhz_CA) as LTE_25Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_30Mhz_CA) as LTE_30Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_35Mhz_CA) as LTE_35Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_40Mhz_CA) as LTE_40Mhz_CA_Use_Den,	
			
		sum((isnull(pfl.Count_LTE_5Mhz_SC,0) 
		 --    +isnull(pfl.Count_LTE_10Mhz_SC,0) +isnull(pfl.Count_LTE_15Mhz_SC,0) +isnull(pfl.Count_LTE_20Mhz_SC,0) +
		 --    isnull(pfl.Count_LTE_15Mhz_CA,0) +isnull(pfl.Count_LTE_20Mhz_CA,0) +isnull(pfl.Count_LTE_25Mhz_CA,0) +isnull(pfl.Count_LTE_30Mhz_CA,0) +
		 --    isnull(pfl.Count_LTE_35Mhz_CA,0) +isnull(pfl.Count_LTE_40Mhz_CA,0)
			)
			*(
			pfl.LTE_5Mhz_SC_PCT+pfl.LTE_10Mhz_SC_PCT+pfl.LTE_15Mhz_SC_PCT+pfl.LTE_20Mhz_SC_PCT+pfl.LTE_15Mhz_CA_PCT+
			pfl.LTE_20Mhz_CA_PCT+pfl.LTE_25Mhz_CA_PCT+pfl.LTE_30Mhz_CA_PCT+pfl.LTE_35Mhz_CA_PCT+pfl.LTE_40Mhz_CA_PCT
			)) as LTE_BW_use_den,
		sum(pfl.[ RBs]*pfl.[Count_RBs]) as [4G_RBs_use_Num],
		sum(pfl.[Count_RBs]) as [4G_RBs_use_Den],

		sum(pfl.[ % TM1]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM1_use_Num],
		sum(pfl.[ % TM2]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM2_use_Num],
		sum(pfl.[ % TM3]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM3_use_Num],
		sum(pfl.[ % TM4]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM4_use_Num],
		sum(pfl.[ % MIMO]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM5_use_Num],
		sum(pfl.[ % TM6]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM6_use_Num],
		sum(pfl.[ % TM7]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM7_use_Num],
		sum(0) as [4G_TM8_use_Num],
		sum(0) as [4G_TM9_use_Num],
		sum(pfl.[ % TM Invalid]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TMInvalid_use_Num],
		sum(pfl.[ % TM Unknown]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TMUnknown_use_Num],
		sum([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown]) as [4G_TM_Den],

		-- Technology LTE:
		sum(tel.[Count_%CA]*tel.[% CA]) as [4G_%CA_Num],
		sum(tel.[Count_%CA]) as [4G_%CA_Den],
		sum(0) as [4G_BPSK_Use_Num],
		sum((tel.QPSK/100.0)*tel.Count_QPSK) as [4G_QPSK_Use_Num],
		sum((tel.[16QAM]/100.0)*tel.Count_16QAM) as [4G_16QAM_Use_Num],
		sum((tel.[64QAM]/100.0)*tel.Count_64QAM) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],
		sum(tel.Count_QPSK) as [4G_QPSK_Use_Den],
		sum(tel.Count_16QAM) as [4G_16QAM_Use_Den],
		sum(tel.Count_64QAM) as [4G_64QAM_Use_Den],
	
		sum((isnull(pfl.Count_CQI_L800,0)+isnull(pfl.Count_CQI_L1800,0)+isnull(pfl.Count_CQI_L2100,0)+isnull(pfl.Count_CQI_L2600,0))*(isnull(tel.[64QAM]/100.0,0)+isnull(tel.[16QAM]/100.0,0)+isnull(tel.QPSK/100.0,0))) as [4G_stats_Den],

		sum(tel.[RSRP_Lin]*tel.[Count_RSRP_Lin]) as [RSRP_Lin_Num],
		sum(tel.[RSRQ_Lin]*tel.[Count_RSRQ_Lin]) as [RSRQ_Lin_Num],	
		sum(tel.[SINR_Lin]*tel.[Count_SINR_Lin]) as [SINR_Lin_Num],	
		sum(tel.[Count_RSRP_Lin]) as [RSRP_Lin_Den],	
		sum(tel.[Count_RSRQ_Lin]) as [RSRQ_Lin_Den],	
		sum(tel.[Count_SINR_Lin]) as [SINR_Lin_Den],

		-- New KPIs:
		sum(newk.[MIMO_NC_num]) as [MIMO_num],
		sum(newk.[RI1_NC_num]) as [RI1_num],
		sum(newk.[RI2_NC_num]) as [RI2_num],

		sum(newk.[MIMO_NC_den]) as [MIMO_den],
		sum(newk.[RI1_NC_den]) as [RI1_den],
		sum(newk.[RI2_NC_den]) as [RI2_den],

		sum(newk.Count_RBs_NC) as RBs_Allocated_Den,
		sum(newk.Count_RBs_NC*isnull(newk.[RBs NC],0)) as RBs_Allocated_Num,
		max(newk.[Max RBs NC]) as RBs_Allocated_Max,

		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		sum(isnull(O4G.[ 0-3.5Mbps_N ],0)) as [1_N],		sum(isnull(O4G.[ 3.5-7Mbps_N ],0)) as [2_N],		sum(isnull(O4G.[ 7-10.5Mbps_N ],0)) as [3_N],		sum(isnull(O4G.[ 10.5-14Mbps_N ],0)) as [4_N],		sum(isnull(O4G.[ 14-17.5Mbps_N ],0)) as [5_N],
		sum(isnull(O4G.[ 17.5-21Mbps_N ],0)) as [6_N],		sum(isnull(O4G.[ 21-24.5Mbps_N ],0)) as [7_N],		sum(isnull(O4G.[ 24.5-28Mbps_N ],0)) as [8_N],		sum(isnull(O4G.[ 28-31.5Mbps_N ],0)) as [9_N],		sum(isnull(O4G.[ 31.5-35Mbps_N ],0)) as [10_N],
		sum(isnull(O4G.[ 35-38.5Mbps_N ],0)) as [11_N],		sum(isnull(O4G.[ 38.5-42Mbps_N ],0)) as [12_N],		sum(isnull(O4G.[ 42-45.5Mbps_N ],0)) as [13_N],		sum(isnull(O4G.[ 45.5-49Mbps_N ],0)) as [14_N],	sum(isnull(O4G.[ 49-52.5Mbps_N ],0)) as [15_N],
		sum(isnull(O4G.[ 52.5-56Mbps_N ],0)) as [16_N],		sum(isnull(O4G.[ 56-59.5Mbps_N ],0)) as [17_N],		sum(isnull(O4G.[ 59.5-63Mbps_N ],0)) as [18_N],		sum(isnull(O4G.[ 63-66.5Mbps_N ],0)) as [19_N],	sum(isnull(O4G.[ 66.5-70Mbps_N ],0)) as [20_N],
		sum(isnull(O4G.[ 70-73.5Mbps_N ],0)) as [21_N],		sum(isnull(O4G.[ 73.5-77Mbps_N ],0)) as [22_N],		sum(isnull(O4G.[ 77-80.5Mbps_N ],0)) as [23_N],		sum(isnull(O4G.[ 80.5-84Mbps_N ],0)) as [24_N],	sum(isnull(O4G.[ 84-87.5Mbps_N ],0)) as [25_N],
		sum(isnull(O4G.[ 87.5-91Mbps_N ],0)) as [26_N],		sum(isnull(O4G.[ 91-94.5Mbps_N ],0)) as [27_N],		sum(isnull(O4G.[ 94.5-98Mbps_N ],0)) as [28_N],		sum(isnull(O4G.[ 98-101.5Mbps_N ],0)) as [29_N],	sum(isnull(O4G.[ 101.5-105Mbps_N ],0)) as [30_N],
		sum(isnull(O4G.[ 105-108.5Mbps_N ],0)) as [31_N],	sum(isnull(O4G.[ 108.5-112Mbps_N ],0)) as [32_N],	sum(isnull(O4G.[ 112-115.5Mbps_N ],0)) as [33_N],	sum(isnull(O4G.[ 115.5-119Mbps_N ],0)) as [34_N],	sum(isnull(O4G.[ 119-122.5Mbps_N ],0)) as [35_N],
		sum(isnull(O4G.[ 122.5-126Mbps_N ],0)) as [36_N],	sum(isnull(O4G.[ 126-129.5Mbps_N ],0)) as [37_N],	sum(isnull(O4G.[ 129.5-133Mbps_N ],0)) as [38_N],	sum(isnull(O4G.[ 133-136.5Mbps_N ],0)) as [39_N],	sum(isnull(O4G.[ 136.5-140Mbps_N ],0)) as [40_N],
		sum(isnull(O4G.[ 140-143.5Mbps_N ],0)) as [41_N],	sum(isnull(O4G.[ 143.5-147Mbps_N ],0)) as [42_N],	sum(isnull(O4G.[ 147-150.5Mbps_N ],0)) as [43_N],	sum(isnull(O4G.[ 150.5-154Mbps_N ],0)) as [44_N],	sum(isnull(O4G.[ 154-157.5Mbps_N ],0)) as [45_N],
		sum(isnull(O4G.[ 157.5-161Mbps_N ],0)) as [46_N],	sum(isnull(O4G.[ 161-164.5Mbps_N ],0)) as [47_N],	sum(isnull(O4G.[ 164.5-168Mbps_N ],0)) as [48_N],	sum(isnull(O4G.[ 168-171.5Mbps_N ],0)) as [49_N],	sum(isnull(O4G.[ 171.5-175Mbps_N ],0)) as [50_N],
		sum(isnull(O4G.[ 175-178.5Mbps_N ],0)) as [51_N],	sum(isnull(O4G.[ 178.5-182Mbps_N ],0)) as [52_N],	sum(isnull(O4G.[ 182-185.5Mbps_N ],0)) as [53_N],	sum(isnull(O4G.[ 185.5-189Mbps_N ],0)) as [54_N],	sum(isnull(O4G.[ 189-192.5Mbps_N ],0)) as [55_N],
		sum(isnull(O4G.[ 192.5-196Mbps_N ],0)) as [56_N],	sum(isnull(O4G.[ >196Mbps_N ],0)) as [57_N],
		sum(0) as [58_N],	sum(0) as [59_N],	sum(0) as [60_N],	sum(0) as [61_N],	sum(0) as [62_N],	sum(0) as [63_N],	sum(0) as [64_N],	sum(0) as [65_N],	sum(0) as [66_N]
	
		--null as Region_Road_VF, null as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,sum(isnull(O4G.[ 0-5Mbps],0)) as [1]		,sum(isnull(O4G.[ 5-10Mbps],0)) as [2]		,sum(isnull(O4G.[ 10-15Mbps],0)) as [3]		,sum(isnull(O4G.[ 15-20Mbps],0)) as [4]		,sum(isnull(O4G.[ 20-25Mbps],0)) as [5]
		,sum(isnull(O4G.[ 25-30Mbps],0)) as [6]		,sum(isnull(O4G.[ 30-35Mbps],0)) as [7]		,sum(isnull(O4G.[ 35-40Mbps],0)) as [8]		,sum(isnull(O4G.[ 40-45Mbps],0)) as [9]		,sum(isnull(O4G.[ 45-50Mbps],0)) as [10]
		,sum(isnull(O4G.[ 50-55Mbps],0)) as [11]	,sum(isnull(O4G.[ 55-60Mbps],0)) as [12]	,sum(isnull(O4G.[ 60-65Mbps],0)) as [13]	,sum(isnull(O4G.[ 65-70Mbps],0)) as [14]	,sum(isnull(O4G.[ 70-75Mbps],0)) as [15]
		,sum(isnull(O4G.[ 75-80Mbps],0)) as [16]	,sum(isnull(O4G.[ 80-85Mbps],0)) as [17]	,sum(isnull(O4G.[ 85-90Mbps],0)) as [18]	,sum(isnull(O4G.[ 90-95Mbps],0)) as [19]	,sum(isnull(O4G.[ 95-100Mbps],0)) as [20]
		,sum(isnull(O4G.[ 100-105Mbps],0)) as [21]	,sum(isnull(O4G.[ 105-110Mbps],0)) as [22]	,sum(isnull(O4G.[ 110-115Mbps],0)) as [23]	,sum(isnull(O4G.[ 115-120Mbps],0)) as [24]	,sum(isnull(O4G.[ 120-125Mbps],0)) as [25]
		,sum(isnull(O4G.[ 125-130Mbps],0)) as [26]	,sum(isnull(O4G.[ 130-135Mbps],0)) as [27]	,sum(isnull(O4G.[ 135-140Mbps],0)) as [28]	,sum(isnull(O4G.[ 140-145Mbps],0)) as [29]	,sum(isnull(O4G.[ 145-150Mbps],0)) as [30]
		,sum(isnull(O4G.[ >150Mbps],0)) as [31]
		,sum(0) as [32]	,sum(0) as [33]	,sum(0) as [34]	,sum(0) as [35]	,sum(0) as [36]	,sum(0) as [37]	,sum(0) as [38]	,sum(0) as [39]	,sum(0) as [40]	,sum(0) as [41],

		-- Parametros de configuracion:
		pfl.ASideDevice as ASideDevice, pfl.BSideDevice as BSideDevice, pfl.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from	[AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_DL_Thput_NC] t
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_DL_Performance_NC_LTE_4G] pfl
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(pfl.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=pfl.mnc and t.Date_Reporting=pfl.Date_Reporting and t.entidad=pfl.entidad and t.Aggr_Type=pfl.Aggr_Type and t.Report_Type=pfl.Report_Type and t.meas_round=pfl.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_DL_Technology_NC_LTE_4G] tel
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(tel.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=tel.mnc and t.Date_Reporting=tel.Date_Reporting and t.entidad=tel.entidad and t.Aggr_Type=tel.Aggr_Type and t.Report_Type=tel.Report_Type and t.meas_round=tel.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_NEW_KPIs_DL_LTE_4G] newk
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(newk.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=newk.mnc and t.Date_Reporting=newk.Date_Reporting and t.entidad=newk.entidad and t.Aggr_Type=newk.Aggr_Type and t.Report_Type=newk.Report_Type and t.meas_round=newk.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_DL_Thput_NC_LTE_4G] O4G
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(O4G.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=O4G.mnc and t.Date_Reporting=O4G.Date_Reporting and t.entidad=O4G.entidad and t.Aggr_Type=O4G.Aggr_Type and t.Report_Type=O4G.Report_Type and t.meas_round=O4G.meas_round
				, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, case when  t.entidad like 'AVE-%' or  t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end, t.mnc, t.meas_round, t.Date_Reporting, t.Week_Reporting, t.entidad, t.Report_Type, t.Aggr_Type,
		pfl.ASideDevice, pfl.BSideDevice, pfl.SWVersion--, t.Region_VF, t.Region_OSP

	-----------
	union all	-- Road 4GOnly - NC_DL
	select  
		p.codigo_ine, 'Roads' vf_environment, t.mnc, t.meas_round, t.Date_Reporting as meas_date, t.Week_Reporting as meas_week, 
		'Road 4GOnly' as meas_Tech, 'NC_DL' as Test_type, 'Downlink' as Direction,  t.entidad as vf_entity, t.Report_Type, t.Aggr_Type,
	
		-- General:
		sum(O4G.navegaciones) as Num_tests,
		sum(O4G.[fallos de acceso]) as Failed,
		sum(O4G.[fallos de descarga]) as Dropped,
		sum(0) as Session_time_Num,
		sum(O4G.count_throughput) as Throughput_Den,
		sum(0) as Session_time_Den,
		sum(O4G.Throughput*O4G.count_throughput) as Throughput_Num,
		max(O4G.[Throughput Max]) as Throughput_Max,
		sum(O4G.Count_Throughput_3M) as Throughput_3M_Num,
		sum(O4G.Count_Throughput_1M) as Throughput_1M_Num,
		sum(O4G.Count_Throughput_128k) as Throughput_128K_Num,
		sum(0) as Throughput_64K_Num,
		sum(O4G.Count_Throughput_384k) as Throughput_384K_Num,
		--CAC 10/08/2017: thput de test sin error y con error
		sum(O4G.Count_Throughput_ALL) as Throughput_with_Error_Den,
		sum(O4G.Throughput_ALL*O4G.Count_Throughput_ALL) as Throughput_with_Error_Num,
		sum(0) as WEB_IP_ACCESS_TIME_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_DEN,
		sum(0) as WEB_HTTP_TRANSFER_TIME_NUM,
		sum(0) as WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_NUM,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(tel.[% GSM]*tel.[Count_%GSM]) as Radio_2G_use_Num,
		sum(tel.[% WCDMA]*tel.[Count_%WCDMA]) as Radio_3G_use_Num,
		sum(tel.[% LTE]*tel.[Count_%LTE]) as Radio_4G_use_Num,
		sum(O4G.navegaciones*(isnull(tel.[% GSM],0)+isnull(tel.[% WCDMA],0)+isnull(tel.[% LTE],0))) as Radio_use_Den,
		sum(tel.[Count_%GSM]) as Radio_2G_use_Den,
		sum(tel.[Count_%WCDMA]) as Radio_3G_use_Den,
		sum(tel.[Count_%LTE]) as Radio_4G_use_Den,

		sum(tel.[% U2100]*tel.[Count_%U2100]) as Radio_U2100_use_Num,
		sum(tel.[% U900]*tel.[Count_%U900]) as Radio_U900_use_Num,
		sum(tel.[% LTE2100]*tel.[Count_%LTE2100]) as Radio_LTE2100_use_Num,
		sum(tel.[% LTE2600]*tel.[Count_%LTE2600]) as Radio_LTE2600_use_Num,
		sum(tel.[% LTE1800]*tel.[Count_%LTE1800]) as Radio_LTE1800_use_Num,
		sum(tel.[% LTE800]*tel.[Count_%LTE800]) as Radio_LTE800_use_Num,
		sum(O4G.navegaciones*(isnull(tel.[% U2100],0)+isnull(tel.[% U900],0)+isnull(tel.[% LTE2100],0)+isnull(tel.[% LTE2600],0)+isnull(tel.[% LTE1800],0)+isnull(tel.[% LTE800],0))) as Radio_Band_Use_Den,
		sum(tel.[Count_%U2100]) as Radio_U2100_use_Den,
		sum(tel.[Count_%U900]) as Radio_U900_use_Den,
		sum(tel.[Count_%LTE2100]) as Radio_LTE2100_use_Den,
		sum(tel.[Count_%LTE2600]) as Radio_LTE2600_use_Den,
		sum(tel.[Count_%LTE1800]) as Radio_LTE1800_use_Den,
		sum(tel.[Count_%LTE800]) as Radio_LTE800_use_Den,

		-- Esta info en 3G, no tienen sentido en 4GOnly:
		sum(0) as [3G_DualCarrier_use_Num],	sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],		sum(0) as [3G_DC_2100_use_Den],
		sum(0) as [3G_DC_900_use_Num],		sum(0) as [3G_DC_900_use_Den],

		sum(0) as [3G_NumCodes_use_Num],	sum(0) as [3G_NumCodes_use_Den],

		sum(0) as [3G_QPSK_use_Num],	sum(0) as [3G_16QAM_use_Num],
		sum(0) as [3G_64QAM_use_Num],	sum(0) as [3G_QPSK_use_Den],
		sum(0) as [3G_16QAM_use_Den],   sum(0) as [3G_64QAM_use_Den],

		sum(0) as [3G_%_SF22_Num],		sum(0) as [3G_%_SF22andSF42_Num],	sum(0) as [3G_%_SF4_Num],	sum(0) as [3G_%_SF42_Num],
		sum(0) as [3G_%_SF22_Den],		sum(0) as [3G_%_SF22andSF42_Den],	sum(0) as [3G_%_SF4_Den],	sum(0) as [3G_%_SF42_Den],
		sum(0) as [3G_%_TTI2ms_Num],	sum(0) as [3G_%_TTI2ms_Den],

		sum(0) as [RSCP_Lin_Num],	sum(0) as [EcI0_Lin_Num],		sum(0) as [RSCP_Lin_Den],		sum(0) as [EcI0_Lin_Den],	

		-- Performance -- Esta info en 3G, no tienen sentido en 4GOnly:
		sum(0) as [3G_CQI],		sum(0) as [3G_DataStats_Den],
		sum(0) as CQI_U900_Num,	sum(0) as CQI_U900_Den,	sum(0) as CQI_U2100_Num,	sum(0) as CQI_U2100_Den,

		sum(0) as [HSPA_PCT_Num],	sum(0) as [HSPA+_PCT_Num],	sum(0) as [HSPA+_DC_PCT_Num],
		sum(0) as [HSPA_PCT_Den],	sum(0) as [HSPA+_PCT_Den],	sum(0) as [HSPA+_DC_PCT_Den],

		sum(0) as [UL_Inter_Lin_Num],	sum(0) as [UL_Inter_Lin_Den],	
	
		-- Performance LTE:
		sum(pfl.[Count_CQI_4G]*pfl.[CQI_4G]) as CQI_4G_Num,
		sum(pfl.Count_CQI_L800*pfl.CQI_L800) as CQI_L800_Num,
		sum(pfl.Count_CQI_L1800*pfl.CQI_L1800) as CQI_L1800_Num,
		sum(pfl.Count_CQI_L2100*pfl.CQI_L2100) as CQI_L2100_Num,
		sum(pfl.Count_CQI_L2600*pfl.CQI_L2600) as CQI_L2600_Num,
		sum(pfl.[Count_CQI_4G]) as CQI_4G_Den,
		sum(pfl.Count_CQI_L800) as CQI_L800_Den,
		sum(pfl.Count_CQI_L1800) as CQI_L1800_Den,
		sum(pfl.Count_CQI_L2100) as CQI_L2100_Den,
		sum(pfl.Count_CQI_L2600) as CQI_L2600_Den,

		sum(pfl.Count_LTE_5Mhz_SC *pfl.LTE_5Mhz_SC_PCT) as LTE_5Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_10Mhz_SC*pfl.LTE_10Mhz_SC_PCT) as LTE_10Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_15Mhz_SC*pfl.LTE_15Mhz_SC_PCT) as LTE_15Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_20Mhz_SC*pfl.LTE_20Mhz_SC_PCT) as LTE_20Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_15Mhz_CA*pfl.LTE_15Mhz_CA_PCT) as LTE_15Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_20Mhz_CA*pfl.LTE_20Mhz_CA_PCT) as LTE_20Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_25Mhz_CA*pfl.LTE_25Mhz_CA_PCT) as LTE_25Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_30Mhz_CA*pfl.LTE_30Mhz_CA_PCT) as LTE_30Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_35Mhz_CA*pfl.LTE_35Mhz_CA_PCT) as LTE_35Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_40Mhz_CA*pfl.LTE_40Mhz_CA_PCT) as LTE_40Mhz_CA_Use_Num,	
		sum(pfl.Count_LTE_5Mhz_SC) as LTE_5Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_10Mhz_SC) as LTE_10Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_15Mhz_SC) as LTE_15Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_20Mhz_SC) as LTE_20Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_15Mhz_CA) as LTE_15Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_20Mhz_CA) as LTE_20Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_25Mhz_CA) as LTE_25Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_30Mhz_CA) as LTE_30Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_35Mhz_CA) as LTE_35Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_40Mhz_CA) as LTE_40Mhz_CA_Use_Den,	

		sum((isnull(pfl.Count_LTE_5Mhz_SC,0) 
		 --    +isnull(pfl.Count_LTE_10Mhz_SC,0) +isnull(pfl.Count_LTE_15Mhz_SC,0) +isnull(pfl.Count_LTE_20Mhz_SC,0) +
		 --    isnull(pfl.Count_LTE_15Mhz_CA,0) +isnull(pfl.Count_LTE_20Mhz_CA,0) +isnull(pfl.Count_LTE_25Mhz_CA,0) +isnull(pfl.Count_LTE_30Mhz_CA,0) +
		 --    isnull(pfl.Count_LTE_35Mhz_CA,0) +isnull(pfl.Count_LTE_40Mhz_CA,0)
			)
			*(
			pfl.LTE_5Mhz_SC_PCT+pfl.LTE_10Mhz_SC_PCT+pfl.LTE_15Mhz_SC_PCT+pfl.LTE_20Mhz_SC_PCT+pfl.LTE_15Mhz_CA_PCT+
			pfl.LTE_20Mhz_CA_PCT+pfl.LTE_25Mhz_CA_PCT+pfl.LTE_30Mhz_CA_PCT+pfl.LTE_35Mhz_CA_PCT+pfl.LTE_40Mhz_CA_PCT
			)) as LTE_BW_use_den,
		sum(pfl.[ RBs]*pfl.[Count_RBs]) as [4G_RBs_use_Num],
		sum(pfl.[Count_RBs]) as [4G_RBs_use_Den],

		sum(pfl.[ % TM1]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM1_use_Num],
		sum(pfl.[ % TM2]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM2_use_Num],
		sum(pfl.[ % TM3]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM3_use_Num],
		sum(pfl.[ % TM4]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM4_use_Num],
		sum(pfl.[ % MIMO]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM5_use_Num],
		sum(pfl.[ % TM6]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM6_use_Num],
		sum(pfl.[ % TM7]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM7_use_Num],
		sum(0) as [4G_TM8_use_Num],
		sum(0) as [4G_TM9_use_Num],
		sum(pfl.[ % TM Invalid]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TMInvalid_use_Num],
		sum(pfl.[ % TM Unknown]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TMUnknown_use_Num],
		sum([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown]) as [4G_TM_Den],

		-- Technology LTE:
		sum(tel.[Count_%CA]*tel.[% CA]) as [4G_%CA_Num],
		sum(tel.[Count_%CA]) as [4G_%CA_Den],
		sum(0) as [4G_BPSK_Use_Num],
		sum((tel.QPSK/100.0)*tel.Count_QPSK) as [4G_QPSK_Use_Num],
		sum((tel.[16QAM]/100.0)*tel.Count_16QAM) as [4G_16QAM_Use_Num],
		sum((tel.[64QAM]/100.0)*tel.Count_64QAM) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],
		sum(tel.Count_QPSK) as [4G_QPSK_Use_Den],
		sum(tel.Count_16QAM) as [4G_16QAM_Use_Den],
		sum(tel.Count_64QAM) as [4G_64QAM_Use_Den],

		sum((isnull(pfl.Count_CQI_L800,0)+isnull(pfl.Count_CQI_L1800,0)+isnull(pfl.Count_CQI_L2100,0)+isnull(pfl.Count_CQI_L2600,0))*(isnull(tel.[64QAM]/100.0,0)+isnull(tel.[16QAM]/100.0,0)+isnull(tel.QPSK/100.0,0))) as [4G_stats_Den],

		sum(tel.[RSRP_Lin]*tel.[Count_RSRP_Lin]) as [RSRP_Lin_Num],
		sum(tel.[RSRQ_Lin]*tel.[Count_RSRQ_Lin]) as [RSRQ_Lin_Num],	
		sum(tel.[SINR_Lin]*tel.[Count_SINR_Lin]) as [SINR_Lin_Num],	
		sum(tel.[Count_RSRP_Lin]) as [RSRP_Lin_Den],	
		sum(tel.[Count_RSRQ_Lin]) as [RSRQ_Lin_Den],	
		sum(tel.[Count_SINR_Lin]) as [SINR_Lin_Den],

		-- New KPIs:
		sum(newk.[MIMO_NC_num]) as [MIMO_num],
		sum(newk.[RI1_NC_num]) as [RI1_num],
		sum(newk.[RI2_NC_num]) as [RI2_num],
		sum(newk.[MIMO_NC_den]) as [MIMO_den],
		sum(newk.[RI1_NC_den]) as [RI1_den],
		sum(newk.[RI2_NC_den]) as [RI2_den],
		sum(newk.Count_RBs_NC) as RBs_Allocated_Den,
		sum(newk.Count_RBs_NC*isnull(newk.[RBs NC],0)) as RBs_Allocated_Num,
		max(newk.[Max RBs NC]) as RBs_Allocated_Max,

		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		sum(isnull(O4G.[ 0-3.5Mbps_N ],0)) as [1_N],		sum(isnull(O4G.[ 3.5-7Mbps_N ],0)) as [2_N],		sum(isnull(O4G.[ 7-10.5Mbps_N ],0)) as [3_N],		sum(isnull(O4G.[ 10.5-14Mbps_N ],0)) as [4_N],		sum(isnull(O4G.[ 14-17.5Mbps_N ],0)) as [5_N],
		sum(isnull(O4G.[ 17.5-21Mbps_N ],0)) as [6_N],		sum(isnull(O4G.[ 21-24.5Mbps_N ],0)) as [7_N],		sum(isnull(O4G.[ 24.5-28Mbps_N ],0)) as [8_N],		sum(isnull(O4G.[ 28-31.5Mbps_N ],0)) as [9_N],		sum(isnull(O4G.[ 31.5-35Mbps_N ],0)) as [10_N],
		sum(isnull(O4G.[ 35-38.5Mbps_N ],0)) as [11_N],		sum(isnull(O4G.[ 38.5-42Mbps_N ],0)) as [12_N],		sum(isnull(O4G.[ 42-45.5Mbps_N ],0)) as [13_N],		sum(isnull(O4G.[ 45.5-49Mbps_N ],0)) as [14_N],		sum(isnull(O4G.[ 49-52.5Mbps_N ],0)) as [15_N],
		sum(isnull(O4G.[ 52.5-56Mbps_N ],0)) as [16_N],		sum(isnull(O4G.[ 56-59.5Mbps_N ],0)) as [17_N],		sum(isnull(O4G.[ 59.5-63Mbps_N ],0)) as [18_N],		sum(isnull(O4G.[ 63-66.5Mbps_N ],0)) as [19_N],		sum(isnull(O4G.[ 66.5-70Mbps_N ],0)) as [20_N],
		sum(isnull(O4G.[ 70-73.5Mbps_N ],0)) as [21_N],		sum(isnull(O4G.[ 73.5-77Mbps_N ],0)) as [22_N],		sum(isnull(O4G.[ 77-80.5Mbps_N ],0)) as [23_N],		sum(isnull(O4G.[ 80.5-84Mbps_N ],0)) as [24_N],		sum(isnull(O4G.[ 84-87.5Mbps_N ],0)) as [25_N],
		sum(isnull(O4G.[ 87.5-91Mbps_N ],0)) as [26_N],		sum(isnull(O4G.[ 91-94.5Mbps_N ],0)) as [27_N],		sum(isnull(O4G.[ 94.5-98Mbps_N ],0)) as [28_N],		sum(isnull(O4G.[ 98-101.5Mbps_N ],0)) as [29_N],	sum(isnull(O4G.[ 101.5-105Mbps_N ],0)) as [30_N],
		sum(isnull(O4G.[ 105-108.5Mbps_N ],0)) as [31_N],	sum(isnull(O4G.[ 108.5-112Mbps_N ],0)) as [32_N],	sum(isnull(O4G.[ 112-115.5Mbps_N ],0)) as [33_N],	sum(isnull(O4G.[ 115.5-119Mbps_N ],0)) as [34_N],	sum(isnull(O4G.[ 119-122.5Mbps_N ],0)) as [35_N],
		sum(isnull(O4G.[ 122.5-126Mbps_N ],0)) as [36_N],	sum(isnull(O4G.[ 126-129.5Mbps_N ],0)) as [37_N],	sum(isnull(O4G.[ 129.5-133Mbps_N ],0)) as [38_N],	sum(isnull(O4G.[ 133-136.5Mbps_N ],0)) as [39_N],	sum(isnull(O4G.[ 136.5-140Mbps_N ],0)) as [40_N],
		sum(isnull(O4G.[ 140-143.5Mbps_N ],0)) as [41_N],	sum(isnull(O4G.[ 143.5-147Mbps_N ],0)) as [42_N],	sum(isnull(O4G.[ 147-150.5Mbps_N ],0)) as [43_N],	sum(isnull(O4G.[ 150.5-154Mbps_N ],0)) as [44_N],	sum(isnull(O4G.[ 154-157.5Mbps_N ],0)) as [45_N],
		sum(isnull(O4G.[ 157.5-161Mbps_N ],0)) as [46_N],	sum(isnull(O4G.[ 161-164.5Mbps_N ],0)) as [47_N],	sum(isnull(O4G.[ 164.5-168Mbps_N ],0)) as [48_N],	sum(isnull(O4G.[ 168-171.5Mbps_N ],0)) as [49_N],	sum(isnull(O4G.[ 171.5-175Mbps_N ],0)) as [50_N],
		sum(isnull(O4G.[ 175-178.5Mbps_N ],0)) as [51_N],	sum(isnull(O4G.[ 178.5-182Mbps_N ],0)) as [52_N],	sum(isnull(O4G.[ 182-185.5Mbps_N ],0)) as [53_N],	sum(isnull(O4G.[ 185.5-189Mbps_N ],0)) as [54_N],	sum(isnull(O4G.[ 189-192.5Mbps_N ],0)) as [55_N],
		sum(isnull(O4G.[ 192.5-196Mbps_N ],0)) as [56_N],	sum(isnull(O4G.[ >196Mbps_N ],0)) as [57_N],
		sum(0) as [58_N],	sum(0) as [59_N],	sum(0) as [60_N],	sum(0) as [61_N],	sum(0) as [62_N],	sum(0) as [63_N],	sum(0) as [64_N],	sum(0) as [65_N],	sum(0) as [66_N]
	
		--t.Region_VF as Region_Road_VF, t.Region_OSP as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,sum(isnull(O4G.[ 0-5Mbps],0)) as [1]		,sum(isnull(O4G.[ 5-10Mbps],0)) as [2]		,sum(isnull(O4G.[ 10-15Mbps],0)) as [3]		,sum(isnull(O4G.[ 15-20Mbps],0)) as [4]		,sum(isnull(O4G.[ 20-25Mbps],0)) as [5]
		,sum(isnull(O4G.[ 25-30Mbps],0)) as [6]		,sum(isnull(O4G.[ 30-35Mbps],0)) as [7]		,sum(isnull(O4G.[ 35-40Mbps],0)) as [8]		,sum(isnull(O4G.[ 40-45Mbps],0)) as [9]		,sum(isnull(O4G.[ 45-50Mbps],0)) as [10]
		,sum(isnull(O4G.[ 50-55Mbps],0)) as [11]	,sum(isnull(O4G.[ 55-60Mbps],0)) as [12]	,sum(isnull(O4G.[ 60-65Mbps],0)) as [13]	,sum(isnull(O4G.[ 65-70Mbps],0)) as [14]	,sum(isnull(O4G.[ 70-75Mbps],0)) as [15]
		,sum(isnull(O4G.[ 75-80Mbps],0)) as [16]	,sum(isnull(O4G.[ 80-85Mbps],0)) as [17]	,sum(isnull(O4G.[ 85-90Mbps],0)) as [18]	,sum(isnull(O4G.[ 90-95Mbps],0)) as [19]	,sum(isnull(O4G.[ 95-100Mbps],0)) as [20]
		,sum(isnull(O4G.[ 100-105Mbps],0)) as [21]	,sum(isnull(O4G.[ 105-110Mbps],0)) as [22]	,sum(isnull(O4G.[ 110-115Mbps],0)) as [23]	,sum(isnull(O4G.[ 115-120Mbps],0)) as [24]	,sum(isnull(O4G.[ 120-125Mbps],0)) as [25]
		,sum(isnull(O4G.[ 125-130Mbps],0)) as [26]	,sum(isnull(O4G.[ 130-135Mbps],0)) as [27]	,sum(isnull(O4G.[ 135-140Mbps],0)) as [28]	,sum(isnull(O4G.[ 140-145Mbps],0)) as [29]	,sum(isnull(O4G.[ 145-150Mbps],0)) as [30]
		,sum(isnull(O4G.[ >150Mbps],0)) as [31]
		,sum(0) as [32]	,sum(0) as [33]	,sum(0) as [34]	,sum(0) as [35]	,sum(0) as [36]	,sum(0) as [37]	,sum(0) as [38]	,sum(0) as [39]	,sum(0) as [40]	,sum(0) as [41],

		-- Parametros de configuracion:
		pfl.ASideDevice as ASideDevice, pfl.BSideDevice as BSideDevice, pfl.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from	[aggrData4G_ROAD].dbo.[lcc_aggr_sp_MDD_Data_DL_Thput_NC] t
				left outer join [aggrData4G_ROAD].[dbo].[lcc_aggr_sp_MDD_Data_DL_Performance_NC_LTE_4G] pfl
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(pfl.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=pfl.mnc and t.Date_Reporting=pfl.Date_Reporting and t.entidad=pfl.entidad and t.Aggr_Type=pfl.Aggr_Type and t.Report_Type=pfl.Report_Type and t.meas_round=pfl.meas_round
				left outer join [aggrData4G_ROAD].[dbo].[lcc_aggr_sp_MDD_Data_DL_Technology_NC_LTE_4G] tel
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(tel.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=tel.mnc and t.Date_Reporting=tel.Date_Reporting and t.entidad=tel.entidad and t.Aggr_Type=tel.Aggr_Type and t.Report_Type=tel.Report_Type and t.meas_round=tel.meas_round
				left outer join [aggrData4G_ROAD].[dbo].[lcc_aggr_sp_MDD_Data_NEW_KPIs_DL_LTE_4G] newk
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(newk.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=newk.mnc and t.Date_Reporting=newk.Date_Reporting and t.entidad=newk.entidad and t.Aggr_Type=newk.Aggr_Type and t.Report_Type=newk.Report_Type and t.meas_round=newk.meas_round
				left outer join [AGGRData4G_ROAD].[dbo].[lcc_aggr_sp_MDD_Data_DL_Thput_NC_LTE_4G] O4G
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(O4G.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=O4G.mnc and t.Date_Reporting=O4G.Date_Reporting and t.entidad=O4G.entidad and t.Aggr_Type=O4G.Aggr_Type and t.Report_Type=O4G.Report_Type and t.meas_round=O4G.meas_round
				, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, t.mnc, t.meas_round, t.Date_Reporting, t.Week_Reporting, t.entidad, t.Report_Type, t.Aggr_Type,
		pfl.ASideDevice, pfl.BSideDevice, pfl.SWVersion--, t.Region_VF, t.Region_OSP

	-----------
	-- 4GOnly y ROAD - NC_UL
	insert into _RI_Data_e 
	select  
		p.codigo_ine, case when  t.entidad like 'AVE-%' or  t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment, t.mnc, t.meas_round, t.Date_Reporting as meas_date, t.Week_Reporting as meas_week, 
		'4GOnly' as meas_Tech, 'NC_UL' as Test_type, 'Uplink' as Direction,  t.entidad as vf_entity, t.Report_Type, t.Aggr_Type,
	
		-- General:
		sum(O4G.Subidas) as Num_tests,
		sum(O4G.[fallos de acceso]) as Failed,
		sum(O4G.[fallos de descarga]) as Dropped,
		sum(0) as Session_time_Num,
		sum(O4G.count_throughput) as Throughput_Den,
		sum(0) as Session_time_Den,
		sum(O4G.Throughput*O4G.count_throughput) as Throughput_Num,
		max(O4G.[Throughput Max]) as Throughput_Max,
		sum(0) as Throughput_3M_Num,
		sum(O4G.Count_Throughput_1M) as Throughput_1M_Num,
		sum(0) as Throughput_128K_Num,
		sum(O4G.Count_Throughput_64k) as Throughput_64K_Num,
		sum(O4G.Count_Throughput_384k) as Throughput_384K_Num,
		--CAC 10/08/2017: thput de test sin error y con error
		sum(O4G.Count_Throughput_ALL) as Throughput_with_Error_Den,
		sum(O4G.Throughput_ALL*O4G.Count_Throughput_ALL) as Throughput_with_Error_Num,
		sum(0) as WEB_IP_ACCESS_TIME_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_DEN,
		sum(0) as WEB_HTTP_TRANSFER_TIME_NUM,
		sum(0) as WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_NUM,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(tel.[% GSM]*tel.[Count_%GSM]) as Radio_2G_use_Num,
		sum(tel.[% WCDMA]*tel.[Count_%WCDMA]) as Radio_3G_use_Num,
		sum(tel.[% LTE]*tel.[Count_%LTE]) as Radio_4G_use_Num,
		sum(O4G.Subidas*(isnull(tel.[% GSM],0)+isnull(tel.[% WCDMA],0)+isnull(tel.[% LTE],0))) as Radio_use_Den,
		sum(tel.[Count_%GSM]) as Radio_2G_use_Den,
		sum(tel.[Count_%WCDMA]) as Radio_3G_use_Den,
		sum(tel.[Count_%LTE]) as Radio_4G_use_Den,

		sum(tel.[% U2100]*tel.[Count_%U2100]) as Radio_U2100_use_Num,
		sum(tel.[% U900]*tel.[Count_%U900]) as Radio_U900_use_Num,
		sum(tel.[% LTE2100]*tel.[Count_%LTE2100]) as Radio_LTE2100_use_Num,
		sum(tel.[% LTE2600]*tel.[Count_%LTE2600]) as Radio_LTE2600_use_Num,
		sum(tel.[% LTE1800]*tel.[Count_%LTE1800]) as Radio_LTE1800_use_Num,
		sum(tel.[% LTE800]*tel.[Count_%LTE800]) as Radio_LTE800_use_Num,
		sum(O4G.Subidas*(isnull(tel.[% U2100],0)+isnull(tel.[% U900],0)+isnull(tel.[% LTE2100],0)+isnull(tel.[% LTE2600],0)+isnull(tel.[% LTE1800],0)+isnull(tel.[% LTE800],0))) as Radio_Band_Use_Den,
		sum(tel.[Count_%U2100]) as Radio_U2100_use_Den,
		sum(tel.[Count_%U900]) as Radio_U900_use_Den,
		sum(tel.[Count_%LTE2100]) as Radio_LTE2100_use_Den,
		sum(tel.[Count_%LTE2600]) as Radio_LTE2600_use_Den,
		sum(tel.[Count_%LTE1800]) as Radio_LTE1800_use_Den,
		sum(tel.[Count_%LTE800]) as Radio_LTE800_use_Den,

		-- Esta info en 3G, no tienen sentido en 4GOnly:
		sum(0) as [3G_DualCarrier_use_Num],	sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],		sum(0) as [3G_DC_2100_use_Den],
		sum(0) as [3G_DC_900_use_Num],		sum(0) as [3G_DC_900_use_Den],

		sum(0) as [3G_NumCodes_use_Num],	sum(0) as [3G_NumCodes_use_Den],

		sum(0) as [3G_QPSK_use_Num],	sum(0) as [3G_16QAM_use_Num],
		sum(0) as [3G_64QAM_use_Num],	sum(0) as [3G_QPSK_use_Den],
		sum(0) as [3G_16QAM_use_Den],   sum(0) as [3G_64QAM_use_Den],

		sum(0) as [3G_%_SF22_Num],		sum(0) as [3G_%_SF22andSF42_Num],	sum(0) as [3G_%_SF4_Num],	sum(0) as [3G_%_SF42_Num],
		sum(0) as [3G_%_SF22_Den],		sum(0) as [3G_%_SF22andSF42_Den],	sum(0) as [3G_%_SF4_Den],	sum(0) as [3G_%_SF42_Den],
		sum(0) as [3G_%_TTI2ms_Num],	sum(0) as [3G_%_TTI2ms_Den],

		sum(0) as [RSCP_Lin_Num],	sum(0) as [EcI0_Lin_Num],		sum(0) as [RSCP_Lin_Den],		sum(0) as [EcI0_Lin_Den],	

		-- Performance -- Esta info en 3G, no tienen sentido en 4GOnly:
		sum(0) as [3G_CQI],		sum(0) as [3G_DataStats_Den],
		sum(0) as CQI_U900_Num,	sum(0) as CQI_U900_Den,	sum(0) as CQI_U2100_Num,	sum(0) as CQI_U2100_Den,

		sum(0) as [HSPA_PCT_Num],	sum(0) as [HSPA+_PCT_Num],	sum(0) as [HSPA+_DC_PCT_Num],
		sum(0) as [HSPA_PCT_Den],	sum(0) as [HSPA+_PCT_Den],	sum(0) as [HSPA+_DC_PCT_Den],

		sum(0) as [UL_Inter_Lin_Num],	sum(0) as [UL_Inter_Lin_Den],	
	
		-- Performance LTE:
		sum(pfl.[Count_CQI_4G]*pfl.[ CQI]) as CQI_4G_Num,
		sum(pfl.Count_CQI_L800*pfl.CQI_L800) as CQI_L800_Num,
		sum(pfl.Count_CQI_L1800*pfl.CQI_L1800) as CQI_L1800_Num,
		sum(pfl.Count_CQI_L2100*pfl.CQI_L2100) as CQI_L2100_Num,
		sum(pfl.Count_CQI_L2600*pfl.CQI_L2600) as CQI_L2600_Num,
		sum(pfl.[Count_CQI_4G]) as CQI_4G_Den,
		sum(pfl.Count_CQI_L800) as CQI_L800_Den,
		sum(pfl.Count_CQI_L1800) as CQI_L1800_Den,
		sum(pfl.Count_CQI_L2100) as CQI_L2100_Den,
		sum(pfl.Count_CQI_L2600) as CQI_L2600_Den,

		sum(pfl.Count_LTE_5Mhz_SC *pfl.LTE_5Mhz_SC_PCT) as LTE_5Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_10Mhz_SC*pfl.LTE_10Mhz_SC_PCT) as LTE_10Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_15Mhz_SC*pfl.LTE_15Mhz_SC_PCT) as LTE_15Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_20Mhz_SC*pfl.LTE_20Mhz_SC_PCT) as LTE_20Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_CA_Use_Num,
		sum(0) as LTE_20Mhz_CA_Use_Num,
		sum(0) as LTE_25Mhz_CA_Use_Num,
		sum(0) as LTE_30Mhz_CA_Use_Num,
		sum(0) as LTE_35Mhz_CA_Use_Num,
		sum(0) as LTE_40Mhz_CA_Use_Num,	
		sum(pfl.Count_LTE_5Mhz_SC) as LTE_5Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_10Mhz_SC) as LTE_10Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_15Mhz_SC) as LTE_15Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_20Mhz_SC) as LTE_20Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_CA_Use_Den,
		sum(0) as LTE_20Mhz_CA_Use_Den,
		sum(0) as LTE_25Mhz_CA_Use_Den,
		sum(0) as LTE_30Mhz_CA_Use_Den,
		sum(0) as LTE_35Mhz_CA_Use_Den,
		sum(0) as LTE_40Mhz_CA_Use_Den,

		sum((isnull(pfl.Count_LTE_5Mhz_SC,0) 
		 --    +isnull(pfl.Count_LTE_10Mhz_SC,0) +isnull(pfl.Count_LTE_15Mhz_SC,0) +isnull(pfl.Count_LTE_20Mhz_SC,0) +
		 --    isnull(pfl.Count_LTE_15Mhz_CA,0) +isnull(pfl.Count_LTE_20Mhz_CA,0) +isnull(pfl.Count_LTE_25Mhz_CA,0) +isnull(pfl.Count_LTE_30Mhz_CA,0) +
		 --    isnull(pfl.Count_LTE_35Mhz_CA,0) +isnull(pfl.Count_LTE_40Mhz_CA,0)
			)
			*(
			pfl.LTE_5Mhz_SC_PCT+pfl.LTE_10Mhz_SC_PCT+pfl.LTE_15Mhz_SC_PCT+pfl.LTE_20Mhz_SC_PCT)
			) as LTE_BW_use_den,	
		sum(pfl.[ RBs]*pfl.[Count_RBs]) as [4G_RBs_use_Num],
		sum(pfl.[Count_RBs]) as [4G_RBs_use_Den],

		sum(pfl.[ % TM1]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM1_use_Num],
		sum(pfl.[ % TM2]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM2_use_Num],
		sum(pfl.[ % TM3]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM3_use_Num],
		sum(pfl.[ % TM4]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM4_use_Num],
		sum(pfl.[ % MIMO]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM5_use_Num],
		sum(pfl.[ % TM6]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM6_use_Num],
		sum(pfl.[ % TM7]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM7_use_Num],
		sum(pfl.[ % TM8]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM8_N],
		sum(pfl.[ % TM9]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM9_N],
		sum(pfl.[ % TM Invalid]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TMInvalid_use_Num],
		sum(0) as [4G_TMUnknown_use_Num],
		sum([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid]) as [4G_TM_Den],

		-- Technology LTE:
		sum(0) as [4G_%CA_Num],
		sum(0) as [4G_%CA_Den],
		sum((tel.[BPSK])*tel.Count_BPSK) as [4G_BPSK_Use_Num],
		sum((tel.[QPSK])*tel.Count_QPSK) as [4G_QPSK_Use_Num],
		sum((tel.[16QAM])*tel.Count_16QAM) as [4G_16QAM_Use_Num],
		sum(0) as [4G_64QAM_Use_Num],
		sum(tel.Count_BPSK) as [4G_BPSK_Use_Den],
		sum(tel.Count_QPSK) as [4G_QPSK_Use_Den],
		sum(tel.Count_16QAM) as [4G_16QAM_Use_Den],
		sum(0) as [4G_64QAM_Use_Den],
	
		sum((isnull(pfl.Count_CQI_L800,0)+isnull(pfl.Count_CQI_L1800,0)+isnull(pfl.Count_CQI_L2100,0)+isnull(pfl.Count_CQI_L2600,0))*(isnull(tel.[16QAM],0)+isnull(tel.QPSK,0))) as [4G_stats_Den],

		sum(tel.[RSRP_Lin]*tel.[Count_RSRP_Lin]) as [RSRP_Lin_Num],
		sum(tel.[RSRQ_Lin]*tel.[Count_RSRQ_Lin]) as [RSRQ_Lin_Num],	
		sum(tel.[SINR_Lin]*tel.[Count_SINR_Lin]) as [SINR_Lin_Num],	
		sum(tel.[Count_RSRP_Lin]) as [RSRP_Lin_Den],	
		sum(tel.[Count_RSRQ_Lin]) as [RSRQ_Lin_Den],	
		sum(tel.[Count_SINR_Lin]) as [SINR_Lin_Den],

		-- New KPIs:
		sum(newk.[MIMO_NC_num]) as [MIMO_num],
		sum(newk.[RI1_NC_num]) as [RI1_num],
		sum(newk.[RI2_NC_num]) as [RI2_num],
		sum(newk.[MIMO_NC_den]) as [MIMO_den],
		sum(newk.[RI1_NC_den]) as [RI1_den],
		sum(newk.[RI2_NC_den]) as [RI2_den],
		sum(newk.Count_RBs_NC) as RBs_Allocated_Den,
		sum(newk.Count_RBs_NC*isnull(newk.[RBs NC],0)) as RBs_Allocated_Num,
		max(newk.[Max RBs NC]) as RBs_Allocated_Max,

		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		sum(isnull(O4G.[ 0-0.8Mbps_N ],0)) as [1_N],	sum(isnull(O4G.[ 0.8-1.6Mbps_N ],0)) as [2_N],		sum(isnull(O4G.[ 1.6-2.4Mbps_N ],0)) as [3_N],		sum(isnull(O4G.[ 2.4-3.2Mbps_N ],0)) as [4_N],		sum(isnull(O4G.[ 3.2-4Mbps_N ],0)) as [5_N],
		sum(isnull(O4G.[ 4-4.8Mbps_N ],0)) as [6_N],	sum(isnull(O4G.[ 4.8-5.6Mbps_N ],0)) as [7_N],		sum(isnull(O4G.[ 5.6-6.4Mbps_N ],0)) as [8_N],		sum(isnull(O4G.[ 6.4-7.2Mbps_N ],0)) as [9_N],		sum(isnull(O4G.[ 7.2-8Mbps_N ],0)) as [10_N],
		sum(isnull(O4G.[ 8-8.8Mbps_N ],0)) as [11_N],	sum(isnull(O4G.[ 8.8-9.6Mbps_N ],0)) as [12_N],		sum(isnull(O4G.[ 9.6-10.4Mbps_N ],0)) as [13_N],	sum(isnull(O4G.[ 10.4-11.2Mbps_N ],0)) as [14_N],	sum(isnull(O4G.[ 11.2-12Mbps_N ],0)) as [15_N],
		sum(isnull(O4G.[ 12-12.8Mbps_N ],0)) as [16_N],	sum(isnull(O4G.[ 12.8-13.6Mbps_N ],0)) as [17_N],	sum(isnull(O4G.[ 13.6-14.4Mbps_N ],0)) as [18_N],	sum(isnull(O4G.[ 14.4-15.2Mbps_N ],0)) as [19_N],	sum(isnull(O4G.[ 15.2-16Mbps_N ],0)) as [20_N],
		sum(isnull(O4G.[ 16-16.8Mbps_N ],0)) as [21_N],	sum(isnull(O4G.[ 16.8-17.6Mbps_N ],0)) as [22_N],	sum(isnull(O4G.[ 17.6-18.4Mbps_N ],0)) as [23_N],	sum(isnull(O4G.[ 18.4-19.2Mbps_N ],0)) as [24_N],	sum(isnull(O4G.[ 19.2-20Mbps_N ],0)) as [25_N],
		sum(isnull(O4G.[ 20-20.8Mbps_N ],0)) as [26_N],	sum(isnull(O4G.[ 20.8-21.6Mbps_N ],0)) as [27_N],	sum(isnull(O4G.[ 21.6-22.4Mbps_N ],0)) as [28_N],	sum(isnull(O4G.[ 22.4-23.2Mbps_N ],0)) as [29_N],	sum(isnull(O4G.[ 23.2-24Mbps_N ],0)) as [30_N],
		sum(isnull(O4G.[ 24-24.8Mbps_N ],0)) as [31_N],	sum(isnull(O4G.[ 24.8-25.6Mbps_N ],0)) as [32_N],	sum(isnull(O4G.[ 25.6-26.4Mbps_N ],0)) as [33_N],	sum(isnull(O4G.[ 26.4-27.2Mbps_N ],0)) as [34_N],	sum(isnull(O4G.[ 27.2-28Mbps_N ],0)) as [35_N],
		sum(isnull(O4G.[ 28-28.8Mbps_N ],0)) as [36_N],	sum(isnull(O4G.[ 28.8-29.6Mbps_N ],0)) as [37_N],	sum(isnull(O4G.[ 29.6-30.4Mbps_N ],0)) as [38_N],	sum(isnull(O4G.[ 30.4-31.2Mbps_N ],0)) as [39_N],	sum(isnull(O4G.[ 31.2-32Mbps_N ],0)) as [40_N],
		sum(isnull(O4G.[ 32-32.8Mbps_N ],0)) as [41_N],	sum(isnull(O4G.[ 32.8-33.6Mbps_N ],0)) as [42_N],	sum(isnull(O4G.[ 33.6-34.4Mbps_N ],0)) as [43_N],	sum(isnull(O4G.[ 34.4-35.2Mbps_N ],0)) as [44_N],	sum(isnull(O4G.[ 35.2-36Mbps_N ],0)) as [45_N],
		sum(isnull(O4G.[ 36-36.8Mbps_N ],0)) as [46_N],	sum(isnull(O4G.[ 36.8-37.6Mbps_N ],0)) as [47_N],	sum(isnull(O4G.[ 37.6-38.4Mbps_N ],0)) as [48_N],	sum(isnull(O4G.[ 38.4-39.2Mbps_N ],0)) as [49_N],	sum(isnull(O4G.[ 39.2-40Mbps_N ],0)) as [50_N],
		sum(isnull(O4G.[ 40-40.8Mbps_N ],0)) as [51_N],	sum(isnull(O4G.[ 40.8-41.6Mbps_N ],0)) as [52_N],	sum(isnull(O4G.[ 41.6-42.4Mbps_N ],0)) as [53_N],	sum(isnull(O4G.[ 42.4-43.2Mbps_N ],0)) as [54_N],	sum(isnull(O4G.[ 43.2-44Mbps_N ],0)) as [55_N],
		sum(isnull(O4G.[ 44-44.8Mbps_N ],0)) as [56_N],	sum(isnull(O4G.[ 44.8-45.6Mbps_N ],0)) as [57_N],	sum(isnull(O4G.[ 45.6-46.4Mbps_N ],0)) as [58_N],	sum(isnull(O4G.[ 46.4-47.2Mbps_N ],0)) as [59_N],	sum(isnull(O4G.[ 47.2-48Mbps_N ],0)) as [60_N],
		sum(isnull(O4G.[ 48-48.8Mbps_N ],0)) as [61_N],	sum(isnull(O4G.[ 48.8-49.6Mbps_N ],0)) as [62_N],	sum(isnull(O4G.[ 49.6-50.4Mbps_N ],0)) as [63_N],	sum(isnull(O4G.[ 50.4-51.2Mbps_N ],0)) as [64_N],	sum(isnull(O4G.[ 51.2-52Mbps_N ],0)) as [65_N],	
		sum(isnull(O4G.[ >52Mbps_N],0)) as [66_N]
	
		--null as Region_Road_VF, null as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,sum(isnull(O4G.[ 0-5Mbps],0)) as [1]		,sum(isnull(O4G.[ 5-10Mbps],0)) as [2]		,sum(isnull(O4G.[ 10-15Mbps],0)) as [3]		,sum(isnull(O4G.[ 15-20Mbps],0)) as [4]		,sum(isnull(O4G.[ 20-25Mbps],0)) as [5]
		,sum(isnull(O4G.[ 25-30Mbps],0)) as [6]		,sum(isnull(O4G.[ 30-35Mbps],0)) as [7]		,sum(isnull(O4G.[ 35-40Mbps],0)) as [8]		,sum(isnull(O4G.[ 40-45Mbps],0)) as [9]		,sum(isnull(O4G.[ 45-50Mbps],0)) as [10]
		,sum(isnull(O4G.[ >50Mbps],0)) as [11]	
		,sum(0) as [12]	,sum(0) as [13]	,sum(0) as [14]	,sum(0) as [15]	,sum(0) as [16]	,sum(0) as [17]	,sum(0) as [18]	,sum(0) as [19]	,sum(0) as [20]
		,sum(0) as [21]	,sum(0) as [22]	,sum(0) as [23]	,sum(0) as [24]	,sum(0) as [25]	,sum(0) as [26]	,sum(0) as [27]	,sum(0) as [28]	,sum(0) as [29]
		,sum(0) as [30]	,sum(0) as [31]	,sum(0) as [32]	,sum(0) as [33]	,sum(0) as [34]	,sum(0) as [35]	,sum(0) as [36]	,sum(0) as [37]	,sum(0) as [38]
		,sum(0) as [39]	,sum(0) as [40]	,sum(0) as [41],

		-- Parametros de configuracion:
		pfl.ASideDevice as ASideDevice, pfl.BSideDevice as BSideDevice, pfl.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from	[AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_UL_Thput_NC] t
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_UL_Performance_NC_LTE_4G] pfl
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(pfl.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=pfl.mnc and t.Date_Reporting=pfl.Date_Reporting and t.entidad=pfl.entidad and t.Aggr_Type=pfl.Aggr_Type and t.Report_Type=pfl.Report_Type and t.meas_round=pfl.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_UL_Technology_NC_LTE_4G] tel
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(tel.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=tel.mnc and t.Date_Reporting=tel.Date_Reporting and t.entidad=tel.entidad and t.Aggr_Type=tel.Aggr_Type and t.Report_Type=tel.Report_Type and t.meas_round=tel.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_NEW_KPIs_UL_LTE_4G] newk
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(newk.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=newk.mnc and t.Date_Reporting=newk.Date_Reporting and t.entidad=newk.entidad and t.Aggr_Type=newk.Aggr_Type and t.Report_Type=newk.Report_Type and t.meas_round=newk.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_UL_Thput_NC_LTE_4G] O4G
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(O4G.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=O4G.mnc and t.Date_Reporting=O4G.Date_Reporting and t.entidad=O4G.entidad and t.Aggr_Type=O4G.Aggr_Type and t.Report_Type=O4G.Report_Type and t.meas_round=O4G.meas_round
				, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, case when  t.entidad like 'AVE-%' or  t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end, t.mnc, t.meas_round, t.Date_Reporting, t.Week_Reporting, t.entidad, t.Report_Type, t.Aggr_Type,
		pfl.ASideDevice, pfl.BSideDevice, pfl.SWVersion--, t.Region_VF, t.Region_OSP

	-----------
	union all	-- Road 4GOnly - NC_UL	
	select  
		p.codigo_ine, 'Roads' vf_environment, t.mnc, t.meas_round, t.Date_Reporting as meas_date, t.Week_Reporting as meas_week, 
		'Road 4GOnly' as meas_Tech, 'NC_UL' as Test_type, 'Uplink' as Direction,  t.entidad as vf_entity, t.Report_Type, t.Aggr_Type,
	
		-- General:
		sum(O4G.Subidas) as Num_tests,
		sum(O4G.[fallos de acceso]) as Failed,
		sum(O4G.[fallos de descarga]) as Dropped,
		sum(0) as Session_time_Num,
		sum(O4G.count_throughput) as Throughput_Den,
		sum(0) as Session_time_Den,
		sum(O4G.Throughput*O4G.count_throughput) as Throughput_Num,
		max(O4G.[Throughput Max]) as Throughput_Max,
		sum(0) as Throughput_3M_Num,
		sum(O4G.Count_Throughput_1M) as Throughput_1M_Num,
		sum(0) as Throughput_128K_Num,
		sum(O4G.Count_Throughput_64k) as Throughput_64K_Num,
		sum(O4G.Count_Throughput_384k) as Throughput_384K_Num,
		--CAC 10/08/2017: thput de test sin error y con error
		sum(O4G.Count_Throughput_ALL) as Throughput_with_Error_Den,
		sum(O4G.Throughput_ALL*O4G.Count_Throughput_ALL) as Throughput_with_Error_Num,
		sum(0) as WEB_IP_ACCESS_TIME_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_DEN,
		sum(0) as WEB_HTTP_TRANSFER_TIME_NUM,
		sum(0) as WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_NUM,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(tel.[% GSM]*tel.[Count_%GSM]) as Radio_2G_use_Num,
		sum(tel.[% WCDMA]*tel.[Count_%WCDMA]) as Radio_3G_use_Num,
		sum(tel.[% LTE]*tel.[Count_%LTE]) as Radio_4G_use_Num,
		sum(O4G.Subidas*(isnull(tel.[% GSM],0)+isnull(tel.[% WCDMA],0)+isnull(tel.[% LTE],0))) as Radio_use_Den,
		sum(tel.[Count_%GSM]) as Radio_2G_use_Den,
		sum(tel.[Count_%WCDMA]) as Radio_3G_use_Den,
		sum(tel.[Count_%LTE]) as Radio_4G_use_Den,

		sum(tel.[% U2100]*tel.[Count_%U2100]) as Radio_U2100_use_Num,
		sum(tel.[% U900]*tel.[Count_%U900]) as Radio_U900_use_Num,
		sum(tel.[% LTE2100]*tel.[Count_%LTE2100]) as Radio_LTE2100_use_Num,
		sum(tel.[% LTE2600]*tel.[Count_%LTE2600]) as Radio_LTE2600_use_Num,
		sum(tel.[% LTE1800]*tel.[Count_%LTE1800]) as Radio_LTE1800_use_Num,
		sum(tel.[% LTE800]*tel.[Count_%LTE800]) as Radio_LTE800_use_Num,
		sum(O4G.Subidas*(isnull(tel.[% U2100],0)+isnull(tel.[% U900],0)+isnull(tel.[% LTE2100],0)+isnull(tel.[% LTE2600],0)+isnull(tel.[% LTE1800],0)+isnull(tel.[% LTE800],0))) as Radio_Band_Use_Den,
		sum(tel.[Count_%U2100]) as Radio_U2100_use_Den,
		sum(tel.[Count_%U900]) as Radio_U900_use_Den,
		sum(tel.[Count_%LTE2100]) as Radio_LTE2100_use_Den,
		sum(tel.[Count_%LTE2600]) as Radio_LTE2600_use_Den,
		sum(tel.[Count_%LTE1800]) as Radio_LTE1800_use_Den,
		sum(tel.[Count_%LTE800]) as Radio_LTE800_use_Den,

		-- Esta info en 3G, no tienen sentido en 4GOnly:
		sum(0) as [3G_DualCarrier_use_Num],	sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],		sum(0) as [3G_DC_2100_use_Den],
		sum(0) as [3G_DC_900_use_Num],		sum(0) as [3G_DC_900_use_Den],

		sum(0) as [3G_NumCodes_use_Num],	sum(0) as [3G_NumCodes_use_Den],

		sum(0) as [3G_QPSK_use_Num],	sum(0) as [3G_16QAM_use_Num],
		sum(0) as [3G_64QAM_use_Num],	sum(0) as [3G_QPSK_use_Den],
		sum(0) as [3G_16QAM_use_Den],   sum(0) as [3G_64QAM_use_Den],

		sum(0) as [3G_%_SF22_Num],		sum(0) as [3G_%_SF22andSF42_Num],	sum(0) as [3G_%_SF4_Num],	sum(0) as [3G_%_SF42_Num],
		sum(0) as [3G_%_SF22_Den],		sum(0) as [3G_%_SF22andSF42_Den],	sum(0) as [3G_%_SF4_Den],	sum(0) as [3G_%_SF42_Den],
		sum(0) as [3G_%_TTI2ms_Num],	sum(0) as [3G_%_TTI2ms_Den],

		sum(0) as [RSCP_Lin_Num],	sum(0) as [EcI0_Lin_Num],		sum(0) as [RSCP_Lin_Den],		sum(0) as [EcI0_Lin_Den],	

		-- Performance -- Esta info en 3G, no tienen sentido en 4GOnly:
		sum(0) as [3G_CQI],		sum(0) as [3G_DataStats_Den],
		sum(0) as CQI_U900_Num,	sum(0) as CQI_U900_Den,	sum(0) as CQI_U2100_Num,	sum(0) as CQI_U2100_Den,

		sum(0) as [HSPA_PCT_Num],	sum(0) as [HSPA+_PCT_Num],	sum(0) as [HSPA+_DC_PCT_Num],
		sum(0) as [HSPA_PCT_Den],	sum(0) as [HSPA+_PCT_Den],	sum(0) as [HSPA+_DC_PCT_Den],

		sum(0) as [UL_Inter_Lin_Num],	sum(0) as [UL_Inter_Lin_Den],	
	
		-- Performance LTE:
		sum(pfl.[Count_CQI_4G]*pfl.[ CQI]) as CQI_4G_Num,
		sum(pfl.Count_CQI_L800*pfl.CQI_L800) as CQI_L800_Num,
		sum(pfl.Count_CQI_L1800*pfl.CQI_L1800) as CQI_L1800_Num,
		sum(pfl.Count_CQI_L2100*pfl.CQI_L2100) as CQI_L2100_Num,
		sum(pfl.Count_CQI_L2600*pfl.CQI_L2600) as CQI_L2600_Num,
		sum(pfl.[Count_CQI_4G]) as CQI_4G_Den,
		sum(pfl.Count_CQI_L800) as CQI_L800_Den,
		sum(pfl.Count_CQI_L1800) as CQI_L1800_Den,
		sum(pfl.Count_CQI_L2100) as CQI_L2100_Den,
		sum(pfl.Count_CQI_L2600) as CQI_L2600_Den,

		sum(pfl.Count_LTE_5Mhz_SC *pfl.LTE_5Mhz_SC_PCT) as LTE_5Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_10Mhz_SC*pfl.LTE_10Mhz_SC_PCT) as LTE_10Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_15Mhz_SC*pfl.LTE_15Mhz_SC_PCT) as LTE_15Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_20Mhz_SC*pfl.LTE_20Mhz_SC_PCT) as LTE_20Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_CA_Use_Num,
		sum(0) as LTE_20Mhz_CA_Use_Num,
		sum(0) as LTE_25Mhz_CA_Use_Num,
		sum(0) as LTE_30Mhz_CA_Use_Num,
		sum(0) as LTE_35Mhz_CA_Use_Num,
		sum(0) as LTE_40Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_5Mhz_SC) as LTE_5Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_10Mhz_SC) as LTE_10Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_15Mhz_SC) as LTE_15Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_20Mhz_SC) as LTE_20Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_CA_Use_Den,
		sum(0) as LTE_20Mhz_CA_Use_Den,
		sum(0) as LTE_25Mhz_CA_Use_Den,
		sum(0) as LTE_30Mhz_CA_Use_Den,
		sum(0) as LTE_35Mhz_CA_Use_Den,
		sum(0) as LTE_40Mhz_CA_Use_Den,

		sum((isnull(pfl.Count_LTE_5Mhz_SC,0) 
		 --    +isnull(pfl.Count_LTE_10Mhz_SC,0) +isnull(pfl.Count_LTE_15Mhz_SC,0) +isnull(pfl.Count_LTE_20Mhz_SC,0) +
		 --    isnull(pfl.Count_LTE_15Mhz_CA,0) +isnull(pfl.Count_LTE_20Mhz_CA,0) +isnull(pfl.Count_LTE_25Mhz_CA,0) +isnull(pfl.Count_LTE_30Mhz_CA,0) +
		 --    isnull(pfl.Count_LTE_35Mhz_CA,0) +isnull(pfl.Count_LTE_40Mhz_CA,0)
			)
			*(
			pfl.LTE_5Mhz_SC_PCT+pfl.LTE_10Mhz_SC_PCT+pfl.LTE_15Mhz_SC_PCT+pfl.LTE_20Mhz_SC_PCT)
			) as LTE_BW_use_den,	
		sum(pfl.[ RBs]*pfl.[Count_RBs]) as [4G_RBs_use_Num],
		sum(pfl.[Count_RBs]) as [4G_RBs_use_Den],

		sum(pfl.[ % TM1]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM1_use_Num],
		sum(pfl.[ % TM2]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM2_use_Num],
		sum(pfl.[ % TM3]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM3_use_Num],
		sum(pfl.[ % TM4]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM4_use_Num],
		sum(pfl.[ % MIMO]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM5_use_Num],
		sum(pfl.[ % TM6]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM6_use_Num],
		sum(pfl.[ % TM7]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM7_use_Num],
		sum(pfl.[ % TM8]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM8_N],
		sum(pfl.[ % TM9]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM9_N],
		sum(pfl.[ % TM Invalid]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TMInvalid_use_Num],
		sum(0) as [4G_TMUnknown_use_Num],
		sum([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid]) as [4G_TM_Den],

		-- Technology LTE:
		sum(0) as [4G_%CA_Num],
		sum(0) as [4G_%CA_Den],
		sum((tel.[BPSK])*tel.Count_BPSK) as [4G_BPSK_Use_Num],
		sum((tel.[QPSK])*tel.Count_QPSK) as [4G_QPSK_Use_Num],
		sum((tel.[16QAM])*tel.Count_16QAM) as [4G_16QAM_Use_Num],
		sum(0) as [4G_64QAM_Use_Num],
		sum(tel.Count_BPSK) as [4G_BPSK_Use_Den],
		sum(tel.Count_QPSK) as [4G_QPSK_Use_Den],
		sum(tel.Count_16QAM) as [4G_16QAM_Use_Den],
		sum(0) as [4G_64QAM_Use_Den],

		sum((isnull(pfl.Count_CQI_L800,0)+isnull(pfl.Count_CQI_L1800,0)+isnull(pfl.Count_CQI_L2100,0)+isnull(pfl.Count_CQI_L2600,0))*(isnull(tel.[16QAM],0)+isnull(tel.QPSK,0))) as [4G_stats_Den],
	
		sum(tel.[RSRP_Lin]*tel.[Count_RSRP_Lin]) as [RSRP_Lin_Num],
		sum(tel.[RSRQ_Lin]*tel.[Count_RSRQ_Lin]) as [RSRQ_Lin_Num],	
		sum(tel.[SINR_Lin]*tel.[Count_SINR_Lin]) as [SINR_Lin_Num],	
		sum(tel.[Count_RSRP_Lin]) as [RSRP_Lin_Den],	
		sum(tel.[Count_RSRQ_Lin]) as [RSRQ_Lin_Den],	
		sum(tel.[Count_SINR_Lin]) as [SINR_Lin_Den],

		-- New KPIs:
		sum(newk.[MIMO_NC_num]) as [MIMO_num],
		sum(newk.[RI1_NC_num]) as [RI1_num],
		sum(newk.[RI2_NC_num]) as [RI2_num],
		sum(newk.[MIMO_NC_den]) as [MIMO_den],
		sum(newk.[RI1_NC_den]) as [RI1_den],
		sum(newk.[RI2_NC_den]) as [RI2_den],
		sum(newk.Count_RBs_NC) as RBs_Allocated_Den,
		sum(newk.Count_RBs_NC*isnull(newk.[RBs NC],0)) as RBs_Allocated_Num,
		max(newk.[Max RBs NC]) as RBs_Allocated_Max,

		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		sum(isnull(O4G.[ 0-0.8Mbps_N ],0)) as [1_N],	sum(isnull(O4G.[ 0.8-1.6Mbps_N ],0)) as [2_N],		sum(isnull(O4G.[ 1.6-2.4Mbps_N ],0)) as [3_N],		sum(isnull(O4G.[ 2.4-3.2Mbps_N ],0)) as [4_N],		sum(isnull(O4G.[ 3.2-4Mbps_N ],0)) as [5_N],
		sum(isnull(O4G.[ 4-4.8Mbps_N ],0)) as [6_N],	sum(isnull(O4G.[ 4.8-5.6Mbps_N ],0)) as [7_N],		sum(isnull(O4G.[ 5.6-6.4Mbps_N ],0)) as [8_N],		sum(isnull(O4G.[ 6.4-7.2Mbps_N ],0)) as [9_N],		sum(isnull(O4G.[ 7.2-8Mbps_N ],0)) as [10_N],
		sum(isnull(O4G.[ 8-8.8Mbps_N ],0)) as [11_N],	sum(isnull(O4G.[ 8.8-9.6Mbps_N ],0)) as [12_N],		sum(isnull(O4G.[ 9.6-10.4Mbps_N ],0)) as [13_N],	sum(isnull(O4G.[ 10.4-11.2Mbps_N ],0)) as [14_N],	sum(isnull(O4G.[ 11.2-12Mbps_N ],0)) as [15_N],
		sum(isnull(O4G.[ 12-12.8Mbps_N ],0)) as [16_N],	sum(isnull(O4G.[ 12.8-13.6Mbps_N ],0)) as [17_N],	sum(isnull(O4G.[ 13.6-14.4Mbps_N ],0)) as [18_N],	sum(isnull(O4G.[ 14.4-15.2Mbps_N ],0)) as [19_N],	sum(isnull(O4G.[ 15.2-16Mbps_N ],0)) as [20_N],
		sum(isnull(O4G.[ 16-16.8Mbps_N ],0)) as [21_N],	sum(isnull(O4G.[ 16.8-17.6Mbps_N ],0)) as [22_N],	sum(isnull(O4G.[ 17.6-18.4Mbps_N ],0)) as [23_N],	sum(isnull(O4G.[ 18.4-19.2Mbps_N ],0)) as [24_N],	sum(isnull(O4G.[ 19.2-20Mbps_N ],0)) as [25_N],
		sum(isnull(O4G.[ 20-20.8Mbps_N ],0)) as [26_N],	sum(isnull(O4G.[ 20.8-21.6Mbps_N ],0)) as [27_N],	sum(isnull(O4G.[ 21.6-22.4Mbps_N ],0)) as [28_N],	sum(isnull(O4G.[ 22.4-23.2Mbps_N ],0)) as [29_N],	sum(isnull(O4G.[ 23.2-24Mbps_N ],0)) as [30_N],
		sum(isnull(O4G.[ 24-24.8Mbps_N ],0)) as [31_N],	sum(isnull(O4G.[ 24.8-25.6Mbps_N ],0)) as [32_N],	sum(isnull(O4G.[ 25.6-26.4Mbps_N ],0)) as [33_N],	sum(isnull(O4G.[ 26.4-27.2Mbps_N ],0)) as [34_N],	sum(isnull(O4G.[ 27.2-28Mbps_N ],0)) as [35_N],
		sum(isnull(O4G.[ 28-28.8Mbps_N ],0)) as [36_N],	sum(isnull(O4G.[ 28.8-29.6Mbps_N ],0)) as [37_N],	sum(isnull(O4G.[ 29.6-30.4Mbps_N ],0)) as [38_N],	sum(isnull(O4G.[ 30.4-31.2Mbps_N ],0)) as [39_N],	sum(isnull(O4G.[ 31.2-32Mbps_N ],0)) as [40_N],
		sum(isnull(O4G.[ 32-32.8Mbps_N ],0)) as [41_N],	sum(isnull(O4G.[ 32.8-33.6Mbps_N ],0)) as [42_N],	sum(isnull(O4G.[ 33.6-34.4Mbps_N ],0)) as [43_N],	sum(isnull(O4G.[ 34.4-35.2Mbps_N ],0)) as [44_N],	sum(isnull(O4G.[ 35.2-36Mbps_N ],0)) as [45_N],
		sum(isnull(O4G.[ 36-36.8Mbps_N ],0)) as [46_N],	sum(isnull(O4G.[ 36.8-37.6Mbps_N ],0)) as [47_N],	sum(isnull(O4G.[ 37.6-38.4Mbps_N ],0)) as [48_N],	sum(isnull(O4G.[ 38.4-39.2Mbps_N ],0)) as [49_N],	sum(isnull(O4G.[ 39.2-40Mbps_N ],0)) as [50_N],
		sum(isnull(O4G.[ 40-40.8Mbps_N ],0)) as [51_N],	sum(isnull(O4G.[ 40.8-41.6Mbps_N ],0)) as [52_N],	sum(isnull(O4G.[ 41.6-42.4Mbps_N ],0)) as [53_N],	sum(isnull(O4G.[ 42.4-43.2Mbps_N ],0)) as [54_N],	sum(isnull(O4G.[ 43.2-44Mbps_N ],0)) as [55_N],
		sum(isnull(O4G.[ 44-44.8Mbps_N ],0)) as [56_N],	sum(isnull(O4G.[ 44.8-45.6Mbps_N ],0)) as [57_N],	sum(isnull(O4G.[ 45.6-46.4Mbps_N ],0)) as [58_N],	sum(isnull(O4G.[ 46.4-47.2Mbps_N ],0)) as [59_N],	sum(isnull(O4G.[ 47.2-48Mbps_N ],0)) as [60_N],
		sum(isnull(O4G.[ 48-48.8Mbps_N ],0)) as [61_N],	sum(isnull(O4G.[ 48.8-49.6Mbps_N ],0)) as [62_N],	sum(isnull(O4G.[ 49.6-50.4Mbps_N ],0)) as [63_N],	sum(isnull(O4G.[ 50.4-51.2Mbps_N ],0)) as [64_N],	sum(isnull(O4G.[ 51.2-52Mbps_N ],0)) as [65_N],	
		sum(isnull(O4G.[ >52Mbps_N],0)) as [66_N]
	
		--t.Region_VF as Region_Road_VF, t.Region_OSP as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,sum(isnull(O4G.[ 0-5Mbps],0)) as [1]		,sum(isnull(O4G.[ 5-10Mbps],0)) as [2]		,sum(isnull(O4G.[ 10-15Mbps],0)) as [3]		,sum(isnull(O4G.[ 15-20Mbps],0)) as [4]		,sum(isnull(O4G.[ 20-25Mbps],0)) as [5]
		,sum(isnull(O4G.[ 25-30Mbps],0)) as [6]		,sum(isnull(O4G.[ 30-35Mbps],0)) as [7]		,sum(isnull(O4G.[ 35-40Mbps],0)) as [8]		,sum(isnull(O4G.[ 40-45Mbps],0)) as [9]		,sum(isnull(O4G.[ 45-50Mbps],0)) as [10]
		,sum(isnull(O4G.[ >50Mbps],0)) as [11]	
		,sum(0) as [12]	,sum(0) as [13]	,sum(0) as [14]	,sum(0) as [15]	,sum(0) as [16]	,sum(0) as [17]	,sum(0) as [18]	,sum(0) as [19]	,sum(0) as [20]
		,sum(0) as [21]	,sum(0) as [22]	,sum(0) as [23]	,sum(0) as [24]	,sum(0) as [25]	,sum(0) as [26]	,sum(0) as [27]	,sum(0) as [28]	,sum(0) as [29]
		,sum(0) as [30]	,sum(0) as [31]	,sum(0) as [32]	,sum(0) as [33]	,sum(0) as [34]	,sum(0) as [35]	,sum(0) as [36]	,sum(0) as [37]	,sum(0) as [38]
		,sum(0) as [39]	,sum(0) as [40]	,sum(0) as [41],

		-- Parametros de configuracion:
		pfl.ASideDevice as ASideDevice, pfl.BSideDevice as BSideDevice, pfl.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL
		
	from	[aggrData4G_ROAD].dbo.[lcc_aggr_sp_MDD_Data_UL_Thput_NC] t
				left outer join [aggrData4G_ROAD].[dbo].[lcc_aggr_sp_MDD_Data_UL_Performance_NC_LTE_4G] pfl
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(pfl.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=pfl.mnc and t.Date_Reporting=pfl.Date_Reporting and t.entidad=pfl.entidad and t.Aggr_Type=pfl.Aggr_Type and t.Report_Type=pfl.Report_Type and t.meas_round=pfl.meas_round
				left outer join [aggrData4G_ROAD].[dbo].[lcc_aggr_sp_MDD_Data_UL_Technology_NC_LTE_4G] tel
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(tel.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=tel.mnc and t.Date_Reporting=tel.Date_Reporting and t.entidad=tel.entidad and t.Aggr_Type=tel.Aggr_Type and t.Report_Type=tel.Report_Type and t.meas_round=tel.meas_round
				left outer join [aggrData4G_ROAD].[dbo].[lcc_aggr_sp_MDD_Data_NEW_KPIs_UL_LTE_4G] newk
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(newk.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=newk.mnc and t.Date_Reporting=newk.Date_Reporting and t.entidad=newk.entidad and t.Aggr_Type=newk.Aggr_Type and t.Report_Type=newk.Report_Type and t.meas_round=newk.meas_round
				left outer join [AGGRData4G_ROAD].[dbo].[lcc_aggr_sp_MDD_Data_UL_Thput_NC_LTE_4G] O4G
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(O4G.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=O4G.mnc and t.Date_Reporting=O4G.Date_Reporting and t.entidad=O4G.entidad and t.Aggr_Type=O4G.Aggr_Type and t.Report_Type=O4G.Report_Type and t.meas_round=O4G.meas_round
				, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, t.mnc, t.meas_round, t.Date_Reporting, t.Week_Reporting, t.entidad, t.Report_Type, t.Aggr_Type,
		pfl.ASideDevice, pfl.BSideDevice, pfl.SWVersion--, t.Region_VF, t.Region_OSP

	-------------
	-- 4GOnly y ROAD WEB	
	insert into _RI_Data_e	
	select  
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment, t.mnc, t.meas_round, t.Date_Reporting as meas_date, t.Week_Reporting as meas_week, 
		'4GOnly' as meas_Tech, 'WEB HTTP' as Test_type, 'Downlink' as Direction, t.entidad as vf_entity, t.Report_Type, t.Aggr_Type,
		
		-- General:
		sum(W4G.Navegaciones) as Num_tests,
		sum(W4G.[Fallos de acceso]) as Failed,
		sum(W4G.[Navegaciones fallidas]) as Dropped,
		sum(cast(W4G.[Session Time] as float)*W4G.[Count_SessionTime]) as Session_time_Num,
		sum(0) as Throughput_Den,
		sum(W4G.[Count_SessionTime]) as Session_time_Den,
		sum(0) as Throughput_Num,
		max(0) as Throughput_Max,
		sum(0) as Throughput_3M_Num,
		sum(0) as Throughput_1M_Num,
		sum(0) as Throughput_128K_Num,
		sum(0) as Throughput_64K_Num,
		sum(0) as Throughput_384K_Num,
		--CAC 10/08/2017: thput de test sin error y con error
		sum(0) as Throughput_with_Error_Den,
		sum(0) as Throughput_with_Error_Num,
		sum(cast(W4G.[IP Service Setup Time] as float)*W4G.[Count_IPServiceSetupTime]) as WEB_IP_ACCESS_TIME_NUM,
		sum(W4G.[Count_IPServiceSetupTime]) as WEB_IP_ACCESS_TIME_DEN,
		sum(cast(W4G.[Transfer Time] as float)*W4G.[Count_TransferTime]) as WEB_HTTP_TRANSFER_TIME_NUM,
		sum(W4G.[Count_TransferTime]) as WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_NUM,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(0) as Radio_2G_use_Num,
		sum(0) as Radio_3G_use_Num,
		sum(0) as Radio_4G_use_Num,
		sum(0) as Radio_use_Den,
		sum(0) as Radio_2G_use_Den,
		sum(0) as Radio_3G_use_Den,
		sum(0) as Radio_4G_use_Den,

		sum(0) as Radio_U2100_use_Num,
		sum(0) as Radio_U900_use_Num,
		sum(0) as Radio_LTE2100_use_Num,
		sum(0) as Radio_LTE2600_use_Num,
		sum(0) as Radio_LTE1800_use_Num,
		sum(0) as Radio_LTE800_use_Num,
		sum(0) as Radio_Band_Use_Den,
		sum(0) as Radio_U2100_use_Den,
		sum(0) as Radio_U900_use_Den,
		sum(0) as Radio_LTE2100_use_Den,
		sum(0) as Radio_LTE2600_use_Den,
		sum(0) as Radio_LTE1800_use_Den,
		sum(0) as Radio_LTE800_use_Den,

		sum(0) as [3G_DualCarrier_use_Num],
		sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],
		sum(0) as [3G_DC_2100_use_Den],
		sum(0) as [3G_DC_900_use_Num],
		sum(0) as [3G_DC_900_use_Den],

		sum(0) as [3G_NumCodes_use_Num],
		sum(0) as [3G_NumCodes_use_Den],
		sum(0) as [3G_QPSK_use_Num],
		sum(0) as [3G_16QAM_use_Num],
		sum(0) as [3G_64QAM_use_Num],
		sum(0) as [3G_QPSK_use_Den],
		sum(0) as [3G_16QAM_use_Den],
		sum(0) as [3G_64QAM_use_Den],

		sum(0) as [3G_%_SF22_Num],
		sum(0) as [3G_%_SF22andSF42_Num],
		sum(0) as [3G_%_SF4_Num],
		sum(0) as [3G_%_SF42_Num],
		sum(0) as [3G_%_SF22_Den],
		sum(0) as [3G_%_SF22andSF42_Den],
		sum(0) as [3G_%_SF4_Den],
		sum(0) as [3G_%_SF42_Den],
		sum(0) as [3G_%_TTI2ms_Num],
		sum(0) as [3G_%_TTI2ms_Den],	
	
		sum(0) as [RSCP_Lin_Num],
		sum(0) as [EcI0_Lin_Num],	
		sum(0) as [RSCP_Lin_Den],	
		sum(0) as [EcI0_Lin_Den],
	
		-- Performance:
		sum(0) as [3G_CQI],
		sum(0) as [3G_DataStats_Den],
		Sum(0) as CQI_U900_Num,
		sum(0) as CQI_U900_Den,
		Sum(0) as CQI_U2100_Num,
		sum(0) as CQI_U2100_Den,

		sum(0) as [HSPA_PCT_Num],
		sum(0) as [HSPA+_PCT_Num],
		sum(0) as [HSPA+_DC_PCT_Num],
		sum(0) as [HSPA_PCT_Den],
		sum(0) as [HSPA+_PCT_Den],
		sum(0) as [HSPA+_DC_PCT_Den],

		sum(0) as [UL_Inter_Lin_Num],
		sum(0) as [UL_Inter_Lin_Den],	
	
		-- Performance LTE:
		sum(0) as CQI_4G_Num,
		sum(0) as CQI_L800_Num,
		sum(0) as CQI_L1800_Num,
		sum(0) as CQI_L2100_Num,
		sum(0) as CQI_L2600_Num,
		sum(0) as CQI_4G_Den,
		sum(0) as CQI_L800_Den,
		sum(0) as CQI_L1800_Den,
		sum(0) as CQI_L2100_Den,
		sum(0) as CQI_L2600_Den,

		sum(0) as LTE_5Mhz_SC_Use_Num,
		sum(0) as LTE_10Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_SC_Use_Num,
		sum(0) as LTE_20Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_CA_Use_Num,
		sum(0) as LTE_20Mhz_CA_Use_Num,
		sum(0) as LTE_25Mhz_CA_Use_Num,
		sum(0) as LTE_30Mhz_CA_Use_Num,
		sum(0) as LTE_35Mhz_CA_Use_Num,
		sum(0) as LTE_40Mhz_CA_Use_Num,
		sum(0) as LTE_5Mhz_SC_Use_Den,
		sum(0) as LTE_10Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_SC_Use_Den,
		sum(0) as LTE_20Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_CA_Use_Den,
		sum(0) as LTE_20Mhz_CA_Use_Den,
		sum(0) as LTE_25Mhz_CA_Use_Den,
		sum(0) as LTE_30Mhz_CA_Use_Den,
		sum(0) as LTE_35Mhz_CA_Use_Den,
		sum(0) as LTE_40Mhz_CA_Use_Den,
		
		sum(0) as LTE_BW_use_den,	
		sum(0) as [4G_RBs_use_Num],
		sum(0) as [4G_RBs_use_Den],

		sum(0) as [4G_TM1_use_Num],
		sum(0) as [4G_TM2_use_Num],
		sum(0) as [4G_TM3_use_Num],
		sum(0) as [4G_TM4_use_Num],
		sum(0) as [4G_TM5_use_Num],
		sum(0) as [4G_TM6_use_Num],
		sum(0) as [4G_TM7_use_Num],
		sum(0) as [4G_TM8_use_Num],
		sum(0) as [4G_TM9_use_Num],
		sum(0) as [4G_TMInvalid_use_Num],
		sum(0) as [4G_TMUnknown_use_Num],
		sum(0) as [4G_TM_Den],
	
		-- Technology LTE:
		sum(0) as [4G_%CA_Num],
		sum(0) as [4G_%CA_Den],
		sum(0) as [4G_BPSK_Use_Num],
		sum(0) as [4G_QPSK_Use_Num],
		sum(0) as [4G_16QAM_Use_Num],
		sum(0) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],
		sum(0) as [4G_QPSK_Use_Den],
		sum(0) as [4G_16QAM_Use_Den],
		sum(0) as [4G_64QAM_Use_Den],

		sum(0) as [4G_stats_Den],
		sum(0) as [RSRP_Lin_Num],
		sum(0) as [RSRQ_Lin_Num],
		sum(0) as [SINR_Lin_Num],			
		sum(0) as [RSRP_Lin_Den],
		sum(0) as [RSRQ_Lin_Den],
		sum(0) as [SINR_Lin_Den],		

		--New KPIs:
		sum(0) as [MIMO_num],
		sum(0) as [RI1_num],
		sum(0) as [RI2_num],
		sum(0) as [MIMO_den],
		sum(0) as [RI1_den],
		sum(0) as [RI2_den],
		sum(0) as RBs_Allocated_Den,
		sum(0) as RBs_Allocated_Num,
		max(0) as RBs_Allocated_Max,	
	
		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		sum(0) as [1_N],	sum(0) as [2_N],	sum(0) as [3_N],	sum(0) as [4_N],	sum(0) as [5_N],	sum(0) as [6_N],	sum(0) as [7_N],	sum(0) as [8_N],	sum(0) as [9_N],	sum(0) as [10_N],
		sum(0) as [11_N],	sum(0) as [12_N],	sum(0) as [13_N],	sum(0) as [14_N],	sum(0) as [15_N],	sum(0) as [16_N],	sum(0) as [17_N],	sum(0) as [18_N],	sum(0) as [19_N],	sum(0) as [20_N],
		sum(0) as [21_N],	sum(0) as [22_N],	sum(0) as [23_N],	sum(0) as [24_N],	sum(0) as [25_N],	sum(0) as [26_N],	sum(0) as [27_N],	sum(0) as [28_N],	sum(0) as [29_N],	sum(0) as [30_N],
		sum(0) as [31_N],	sum(0) as [32_N],	sum(0) as [33_N],	sum(0) as [34_N],	sum(0) as [35_N],	sum(0) as [36_N],	sum(0) as [37_N],	sum(0) as [38_N],	sum(0) as [39_N],	sum(0) as [40_N],
		sum(0) as [41_N],	sum(0) as [42_N],	sum(0) as [43_N],	sum(0) as [44_N],	sum(0) as [45_N],	sum(0) as [46_N],	sum(0) as [47_N],	sum(0) as [48_N],	sum(0) as [49_N],	sum(0) as [50_N],
		sum(0) as [51_N],	sum(0) as [52_N],	sum(0) as [53_N],	sum(0) as [54_N],	sum(0) as [55_N],	sum(0) as [56_N],	sum(0) as [57_N],	sum(0) as [58_N],	sum(0) as [59_N],	sum(0) as [60_N],
		sum(0) as [61_N],	sum(0) as [62_N],	sum(0) as [63_N],	sum(0) as [64_N],	sum(0) as [65_N],	sum(0) as [66_N]
	
		--null as Region_Road_VF, null as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,sum(0) as [1]	,sum(0) as [2]	,sum(0) as [3]	,sum(0) as [4]	,sum(0) as [5]	,sum(0) as [6]	,sum(0) as [7]	,sum(0) as [8]	,sum(0) as [9]	,sum(0) as [10]
		,sum(0) as [11]	,sum(0) as [12]	,sum(0) as [13]	,sum(0) as [14]	,sum(0) as [15]	,sum(0) as [16]	,sum(0) as [17]	,sum(0) as [18]	,sum(0) as [19]	,sum(0) as [20]
		,sum(0) as [21]	,sum(0) as [22]	,sum(0) as [23]	,sum(0) as [24]	,sum(0) as [25]	,sum(0) as [26]	,sum(0) as [27]	,sum(0) as [28]	,sum(0) as [29]	,sum(0) as [30]
		,sum(0) as [31]	,sum(0) as [32]	,sum(0) as [33]	,sum(0) as [34]	,sum(0) as [35]	,sum(0) as [36]	,sum(0) as [37]	,sum(0) as [38]	,sum(0) as [39]	,sum(0) as [40]
		,sum(0) as [41],

		-- Parametros de configuracion:
		t.ASideDevice as ASideDevice, t.BSideDevice as BSideDevice, t.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_Web] t
		left outer join [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_Web_4G] W4G on (isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(W4G.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=W4G.mnc and t.Date_Reporting=W4G.Date_Reporting and t.entidad=W4G.entidad and t.Aggr_Type=W4G.Aggr_Type and t.Report_Type=W4G.Report_Type and t.meas_round=W4G.meas_round)
		, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end, t.mnc, t.meas_round, t.Date_Reporting, t.Week_Reporting, t.entidad, t.Report_Type, t.Aggr_Type,
		t.ASideDevice, t.BSideDevice, t.SWVersion--, t.Region_VF, t.Region_OSP

	-----------
	union all	-- WEB Road 4GOnly
	select  
		p.codigo_ine, 'Roads' vf_environment, t.mnc, t.meas_round, t.Date_Reporting as meas_date, t.Week_Reporting as meas_week, 
		'Road 4GOnly' as meas_Tech, 'WEB HTTP' as Test_type, 'Downlink' as Direction, t.entidad as vf_entity, t.Report_Type, t.Aggr_Type,
		
		-- General:
		sum(W4G.Navegaciones) as Num_tests,
		sum(W4G.[Fallos de acceso]) as Failed,
		sum(W4G.[Navegaciones fallidas]) as Dropped,
		sum(cast(W4G.[Session Time] as float)*W4G.[Count_SessionTime]) as Session_time_Num,
		sum(0) as Throughput_Den,
		sum(W4G.[Count_SessionTime]) as Session_time_Den,
		sum(0) as Throughput_Num,
		max(0) as Throughput_Max,
		sum(0) as Throughput_3M_Num,
		sum(0) as Throughput_1M_Num,
		sum(0) as Throughput_128K_Num,
		sum(0) as Throughput_64K_Num,
		sum(0) as Throughput_384K_Num,
		--CAC 10/08/2017: thput de test sin error y con error
		sum(0) as Throughput_with_Error_Den,
		sum(0) as Throughput_with_Error_Num,
		sum(cast(W4G.[IP Service Setup Time] as float)*W4G.[Count_IPServiceSetupTime]) as WEB_IP_ACCESS_TIME_NUM,
		sum(W4G.[Count_IPServiceSetupTime]) as WEB_IP_ACCESS_TIME_DEN,
		sum(cast(W4G.[Transfer Time] as float)*W4G.[Count_TransferTime]) as WEB_HTTP_TRANSFER_TIME_NUM,
		sum(W4G.[Count_TransferTime]) as WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_NUM,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(0) as Radio_2G_use_Num,
		sum(0) as Radio_3G_use_Num,
		sum(0) as Radio_4G_use_Num,
		sum(0) as Radio_use_Den,
		sum(0) as Radio_2G_use_Den,
		sum(0) as Radio_3G_use_Den,
		sum(0) as Radio_4G_use_Den,

		sum(0) as Radio_U2100_use_Num,
		sum(0) as Radio_U900_use_Num,
		sum(0) as Radio_LTE2100_use_Num,
		sum(0) as Radio_LTE2600_use_Num,
		sum(0) as Radio_LTE1800_use_Num,
		sum(0) as Radio_LTE800_use_Num,
		sum(0) as Radio_Band_Use_Den,
		sum(0) as Radio_U2100_use_Den,
		sum(0) as Radio_U900_use_Den,
		sum(0) as Radio_LTE2100_use_Den,
		sum(0) as Radio_LTE2600_use_Den,
		sum(0) as Radio_LTE1800_use_Den,
		sum(0) as Radio_LTE800_use_Den,

		sum(0) as [3G_DualCarrier_use_Num],
		sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],
		sum(0) as [3G_DC_2100_use_Den],
		sum(0) as [3G_DC_900_use_Num],
		sum(0) as [3G_DC_900_use_Den],

		sum(0) as [3G_NumCodes_use_Num],
		sum(0) as [3G_NumCodes_use_Den],
		sum(0) as [3G_QPSK_use_Num],
		sum(0) as [3G_16QAM_use_Num],
		sum(0) as [3G_64QAM_use_Num],
		sum(0) as [3G_QPSK_use_Den],
		sum(0) as [3G_16QAM_use_Den],
		sum(0) as [3G_64QAM_use_Den],

		sum(0) as [3G_%_SF22_Num],
		sum(0) as [3G_%_SF22andSF42_Num],
		sum(0) as [3G_%_SF4_Num],
		sum(0) as [3G_%_SF42_Num],
		sum(0) as [3G_%_SF22_Den],
		sum(0) as [3G_%_SF22andSF42_Den],
		sum(0) as [3G_%_SF4_Den],
		sum(0) as [3G_%_SF42_Den],
		sum(0) as [3G_%_TTI2ms_Num],
		sum(0) as [3G_%_TTI2ms_Den],	
	
		sum(0) as [RSCP_Lin_Num],
		sum(0) as [EcI0_Lin_Num],	
		sum(0) as [RSCP_Lin_Den],	
		sum(0) as [EcI0_Lin_Den],
		
		-- Performance:
		sum(0) as [3G_CQI],
		sum(0) as [3G_DataStats_Den],
		Sum(0) as CQI_U900_Num,
		sum(0) as CQI_U900_Den,
		Sum(0) as CQI_U2100_Num,
		sum(0) as CQI_U2100_Den,

		sum(0) as [HSPA_PCT_Num],
		sum(0) as [HSPA+_PCT_Num],
		sum(0) as [HSPA+_DC_PCT_Num],
		sum(0) as [HSPA_PCT_Den],
		sum(0) as [HSPA+_PCT_Den],
		sum(0) as [HSPA+_DC_PCT_Den],

		sum(0) as [UL_Inter_Lin_Num],
		sum(0) as [UL_Inter_Lin_Den],
	
		-- Performance LTE:
		sum(0) as CQI_4G_Num,
		sum(0) as CQI_L800_Num,
		sum(0) as CQI_L1800_Num,
		sum(0) as CQI_L2100_Num,
		sum(0) as CQI_L2600_Num,
		sum(0) as CQI_4G_Den,
		sum(0) as CQI_L800_Den,
		sum(0) as CQI_L1800_Den,
		sum(0) as CQI_L2100_Den,
		sum(0) as CQI_L2600_Den,

		sum(0) as LTE_5Mhz_SC_Use_Num,
		sum(0) as LTE_10Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_SC_Use_Num,
		sum(0) as LTE_20Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_CA_Use_Num,
		sum(0) as LTE_20Mhz_CA_Use_Num,
		sum(0) as LTE_25Mhz_CA_Use_Num,
		sum(0) as LTE_30Mhz_CA_Use_Num,
		sum(0) as LTE_35Mhz_CA_Use_Num,
		sum(0) as LTE_40Mhz_CA_Use_Num,	
		sum(0) as LTE_5Mhz_SC_Use_Den,
		sum(0) as LTE_10Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_SC_Use_Den,
		sum(0) as LTE_20Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_CA_Use_Den,
		sum(0) as LTE_20Mhz_CA_Use_Den,
		sum(0) as LTE_25Mhz_CA_Use_Den,
		sum(0) as LTE_30Mhz_CA_Use_Den,
		sum(0) as LTE_35Mhz_CA_Use_Den,
		sum(0) as LTE_40Mhz_CA_Use_Den,

		sum(0) as LTE_BW_use_den,	
		sum(0) as [4G_RBs_use_Num],
		sum(0) as [4G_RBs_use_Den],

		sum(0) as [4G_TM1_use_Num],
		sum(0) as [4G_TM2_use_Num],
		sum(0) as [4G_TM3_use_Num],
		sum(0) as [4G_TM4_use_Num],
		sum(0) as [4G_TM5_use_Num],
		sum(0) as [4G_TM6_use_Num],
		sum(0) as [4G_TM7_use_Num],
		sum(0) as [4G_TM8_use_Num],
		sum(0) as [4G_TM9_use_Num],
		sum(0) as [4G_TMInvalid_use_Num],
		sum(0) as [4G_TMUnknown_use_Num],
		sum(0) as [4G_TM_Den],
	
		-- Technology LTE:
		sum(0) as [4G_%CA_Num],
		sum(0) as [4G_%CA_Den],
		sum(0) as [4G_BPSK_Use_Num],
		sum(0) as [4G_QPSK_Use_Num],
		sum(0) as [4G_16QAM_Use_Num],
		sum(0) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],
		sum(0) as [4G_QPSK_Use_Den],
		sum(0) as [4G_16QAM_Use_Den],
		sum(0) as [4G_64QAM_Use_Den],

		sum(0) as [4G_stats_Den],
		sum(0) as [RSRP_Lin_Num],
		sum(0) as [RSRQ_Lin_Num],
		sum(0) as [SINR_Lin_Num],			
		sum(0) as [RSRP_Lin_Den],
		sum(0) as [RSRQ_Lin_Den],
		sum(0) as [SINR_Lin_Den],		

		--New KPIs:
		sum(0) as [MIMO_num],
		sum(0) as [RI1_num],
		sum(0) as [RI2_num],
		sum(0) as [MIMO_den],
		sum(0) as [RI1_den],
		sum(0) as [RI2_den],
		sum(0) as RBs_Allocated_Den,
		sum(0) as RBs_Allocated_Num,
		max(0) as RBs_Allocated_Max,	
	
		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		sum(0) as [1_N],	sum(0) as [2_N],	sum(0) as [3_N],	sum(0) as [4_N],	sum(0) as [5_N],	sum(0) as [6_N],	sum(0) as [7_N],	sum(0) as [8_N],	sum(0) as [9_N],	sum(0) as [10_N],
		sum(0) as [11_N],	sum(0) as [12_N],	sum(0) as [13_N],	sum(0) as [14_N],	sum(0) as [15_N],	sum(0) as [16_N],	sum(0) as [17_N],	sum(0) as [18_N],	sum(0) as [19_N],	sum(0) as [20_N],
		sum(0) as [21_N],	sum(0) as [22_N],	sum(0) as [23_N],	sum(0) as [24_N],	sum(0) as [25_N],	sum(0) as [26_N],	sum(0) as [27_N],	sum(0) as [28_N],	sum(0) as [29_N],	sum(0) as [30_N],
		sum(0) as [31_N],	sum(0) as [32_N],	sum(0) as [33_N],	sum(0) as [34_N],	sum(0) as [35_N],	sum(0) as [36_N],	sum(0) as [37_N],	sum(0) as [38_N],	sum(0) as [39_N],	sum(0) as [40_N],
		sum(0) as [41_N],	sum(0) as [42_N],	sum(0) as [43_N],	sum(0) as [44_N],	sum(0) as [45_N],	sum(0) as [46_N],	sum(0) as [47_N],	sum(0) as [48_N],	sum(0) as [49_N],	sum(0) as [50_N],
		sum(0) as [51_N],	sum(0) as [52_N],	sum(0) as [53_N],	sum(0) as [54_N],	sum(0) as [55_N],	sum(0) as [56_N],	sum(0) as [57_N],	sum(0) as [58_N],	sum(0) as [59_N],	sum(0) as [60_N],
		sum(0) as [61_N],	sum(0) as [62_N],	sum(0) as [63_N],	sum(0) as [64_N],	sum(0) as [65_N],	sum(0) as [66_N]
	
		--null as Region_Road_VF, null as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,sum(0) as [1]	,sum(0) as [2]	,sum(0) as [3]	,sum(0) as [4]	,sum(0) as [5]	,sum(0) as [6]	,sum(0) as [7]	,sum(0) as [8]	,sum(0) as [9]	,sum(0) as [10]
		,sum(0) as [11]	,sum(0) as [12]	,sum(0) as [13]	,sum(0) as [14]	,sum(0) as [15]	,sum(0) as [16]	,sum(0) as [17]	,sum(0) as [18]	,sum(0) as [19]	,sum(0) as [20]
		,sum(0) as [21]	,sum(0) as [22]	,sum(0) as [23]	,sum(0) as [24]	,sum(0) as [25]	,sum(0) as [26]	,sum(0) as [27]	,sum(0) as [28]	,sum(0) as [29]	,sum(0) as [30]
		,sum(0) as [31]	,sum(0) as [32]	,sum(0) as [33]	,sum(0) as [34]	,sum(0) as [35]	,sum(0) as [36]	,sum(0) as [37]	,sum(0) as [38]	,sum(0) as [39]	,sum(0) as [40]
		,sum(0) as [41],

		-- Parametros de configuracion:
		t.ASideDevice as ASideDevice, t.BSideDevice as BSideDevice, t.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from [aggrData4G_ROAD].dbo.[lcc_aggr_sp_MDD_Data_Web] t
			left outer join [aggrData4G_ROAD].dbo.[lcc_aggr_sp_MDD_Data_Web_4G] W4G on (isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(W4G.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=W4G.mnc and t.Date_Reporting=W4G.Date_Reporting and t.entidad=W4G.entidad and t.Aggr_Type=W4G.Aggr_Type and t.Report_Type=W4G.Report_Type and t.meas_round=W4G.meas_round)
		, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, t.mnc, t.meas_round, t.Date_Reporting, t.Week_Reporting, t.entidad, t.Report_Type, t.Aggr_Type,
		t.ASideDevice, t.BSideDevice, t.SWVersion--, t.Region_VF, t.Region_OSP,

	-----------
	union all	-- WEB HTTPS 4GOnly
	select  
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment, t.mnc, t.meas_round, t.Date_Reporting as meas_date, t.Week_Reporting as meas_week, 
		'4GOnly' as meas_Tech, 'WEB HTTPS' as Test_type, 'Downlink' as Direction, t.entidad as vf_entity, t.Report_Type, t.Aggr_Type,
		
		-- General:
		sum(W4G.[Navegaciones HTTPS]) as Num_tests,
		sum(W4G.[Fallos de acceso HTTPS]) as Failed,
		sum(W4G.[Navegaciones fallidas HTTPS]) as Dropped,
		sum(cast(W4G.[Session Time HTTPS] as float)*W4G.[Count_SessionTime HTTPS]) as Session_time_Num,
		sum(0) as Throughput_Den,
		sum(W4G.[Count_SessionTime HTTPS]) as Session_time_Den,
		sum(0) as Throughput_Num,
		max(0) as Throughput_Max,
		sum(0) as Throughput_3M_Num,
		sum(0) as Throughput_1M_Num,
		sum(0) as Throughput_128K_Num,
		sum(0) as Throughput_64K_Num,
		sum(0) as Throughput_384K_Num,
		--CAC 10/08/2017: thput de test sin error y con error
		sum(0) as Throughput_with_Error_Den,
		sum(0) as Throughput_with_Error_Num,
		sum(0) as WEB_IP_ACCESS_TIME_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_DEN,
		sum(0) as WEB_HTTP_TRANSFER_TIME_NUM,
		sum(0) as WEB_HTTP_TRANSFER_TIME_DEN,
		sum(cast(W4G.[IP Service Setup Time HTTPS] as float)*W4G.[Count_IPServiceSetupTime HTTPS]) as WEB_IP_ACCESS_TIME_HTTPS_NUM,
		sum(W4G.[Count_IPServiceSetupTime HTTPS]) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(cast(W4G.[Transfer Time HTTPS] as float)*W4G.[Count_TransferTime HTTPS]) as WEB_TRANSFER_TIME_HTTPS_NUM,
		sum(W4G.[Count_TransferTime HTTPS]) as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(0) as Radio_2G_use_Num,
		sum(0) as Radio_3G_use_Num,
		sum(0) as Radio_4G_use_Num,
		sum(0) as Radio_use_Den,
		sum(0) as Radio_2G_use_Den,
		sum(0) as Radio_3G_use_Den,
		sum(0) as Radio_4G_use_Den,

		sum(0) as Radio_U2100_use_Num,
		sum(0) as Radio_U900_use_Num,
		sum(0) as Radio_LTE2100_use_Num,
		sum(0) as Radio_LTE2600_use_Num,
		sum(0) as Radio_LTE1800_use_Num,
		sum(0) as Radio_LTE800_use_Num,
		sum(0) as Radio_Band_Use_Den,
		sum(0) as Radio_U2100_use_Den,
		sum(0) as Radio_U900_use_Den,
		sum(0) as Radio_LTE2100_use_Den,
		sum(0) as Radio_LTE2600_use_Den,
		sum(0) as Radio_LTE1800_use_Den,
		sum(0) as Radio_LTE800_use_Den,

		sum(0) as [3G_DualCarrier_use_Num],
		sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],
		sum(0) as [3G_DC_2100_use_Den],
		sum(0) as [3G_DC_900_use_Num],
		sum(0) as [3G_DC_900_use_Den],

		sum(0) as [3G_NumCodes_use_Num],
		sum(0) as [3G_NumCodes_use_Den],
		sum(0) as [3G_QPSK_use_Num],
		sum(0) as [3G_16QAM_use_Num],
		sum(0) as [3G_64QAM_use_Num],
		sum(0) as [3G_QPSK_use_Den],
		sum(0) as [3G_16QAM_use_Den],
		sum(0) as [3G_64QAM_use_Den],

		sum(0) as [3G_%_SF22_Num],
		sum(0) as [3G_%_SF22andSF42_Num],
		sum(0) as [3G_%_SF4_Num],
		sum(0) as [3G_%_SF42_Num],
		sum(0) as [3G_%_SF22_Den],
		sum(0) as [3G_%_SF22andSF42_Den],
		sum(0) as [3G_%_SF4_Den],
		sum(0) as [3G_%_SF42_Den],
		sum(0) as [3G_%_TTI2ms_Num],
		sum(0) as [3G_%_TTI2ms_Den],	
	
		sum(0) as [RSCP_Lin_Num],
		sum(0) as [EcI0_Lin_Num],	
		sum(0) as [RSCP_Lin_Den],	
		sum(0) as [EcI0_Lin_Den],
		
		-- Performance:
		sum(0) as [3G_CQI],
		sum(0) as [3G_DataStats_Den],
		Sum(0) as CQI_U900_Num,
		sum(0) as CQI_U900_Den,
		Sum(0) as CQI_U2100_Num,
		sum(0) as CQI_U2100_Den,

		sum(0) as [HSPA_PCT_Num],
		sum(0) as [HSPA+_PCT_Num],
		sum(0) as [HSPA+_DC_PCT_Num],
		sum(0) as [HSPA_PCT_Den],
		sum(0) as [HSPA+_PCT_Den],
		sum(0) as [HSPA+_DC_PCT_Den],

		sum(0) as [UL_Inter_Lin_Num],
		sum(0) as [UL_Inter_Lin_Den],
	
		-- Performance LTE:
		sum(0) as CQI_4G_Num,
		sum(0) as CQI_L800_Num,
		sum(0) as CQI_L1800_Num,
		sum(0) as CQI_L2100_Num,
		sum(0) as CQI_L2600_Num,
		sum(0) as CQI_4G_Den,
		sum(0) as CQI_L800_Den,
		sum(0) as CQI_L1800_Den,
		sum(0) as CQI_L2100_Den,
		sum(0) as CQI_L2600_Den,

		sum(0) as LTE_5Mhz_SC_Use_Num,
		sum(0) as LTE_10Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_SC_Use_Num,
		sum(0) as LTE_20Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_CA_Use_Num,
		sum(0) as LTE_20Mhz_CA_Use_Num,
		sum(0) as LTE_25Mhz_CA_Use_Num,
		sum(0) as LTE_30Mhz_CA_Use_Num,
		sum(0) as LTE_35Mhz_CA_Use_Num,
		sum(0) as LTE_40Mhz_CA_Use_Num,	
		sum(0) as LTE_5Mhz_SC_Use_Den,
		sum(0) as LTE_10Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_SC_Use_Den,
		sum(0) as LTE_20Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_CA_Use_Den,
		sum(0) as LTE_20Mhz_CA_Use_Den,
		sum(0) as LTE_25Mhz_CA_Use_Den,
		sum(0) as LTE_30Mhz_CA_Use_Den,
		sum(0) as LTE_35Mhz_CA_Use_Den,
		sum(0) as LTE_40Mhz_CA_Use_Den,

		sum(0) as LTE_BW_use_den,	
		sum(0) as [4G_RBs_use_Num],
		sum(0) as [4G_RBs_use_Den],

		sum(0) as [4G_TM1_use_Num],
		sum(0) as [4G_TM2_use_Num],
		sum(0) as [4G_TM3_use_Num],
		sum(0) as [4G_TM4_use_Num],
		sum(0) as [4G_TM5_use_Num],
		sum(0) as [4G_TM6_use_Num],
		sum(0) as [4G_TM7_use_Num],
		sum(0) as [4G_TM8_use_Num],
		sum(0) as [4G_TM9_use_Num],
		sum(0) as [4G_TMInvalid_use_Num],
		sum(0) as [4G_TMUnknown_use_Num],
		sum(0) as [4G_TM_Den],

		-- Technology LTE:
		sum(0) as [4G_%CA_Num],
		sum(0) as [4G_%CA_Den],
		sum(0) as [4G_BPSK_Use_Num],
		sum(0) as [4G_QPSK_Use_Num],
		sum(0) as [4G_16QAM_Use_Num],
		sum(0) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],
		sum(0) as [4G_QPSK_Use_Den],
		sum(0) as [4G_16QAM_Use_Den],
		sum(0) as [4G_64QAM_Use_Den],

		sum(0) as [4G_stats_Den],
		sum(0) as [RSRP_Lin_Num],
		sum(0) as [RSRQ_Lin_Num],
		sum(0) as [SINR_Lin_Num],			
		sum(0) as [RSRP_Lin_Den],
		sum(0) as [RSRQ_Lin_Den],
		sum(0) as [SINR_Lin_Den],		

		--New KPIs:
		sum(0) as [MIMO_num],
		sum(0) as [RI1_num],
		sum(0) as [RI2_num],
		sum(0) as [MIMO_den],
		sum(0) as [RI1_den],
		sum(0) as [RI2_den],
		sum(0) as RBs_Allocated_Den,
		sum(0) as RBs_Allocated_Num,
		max(0) as RBs_Allocated_Max,	
	
		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		sum(0) as [1_N],	sum(0) as [2_N],	sum(0) as [3_N],	sum(0) as [4_N],	sum(0) as [5_N],	sum(0) as [6_N],	sum(0) as [7_N],	sum(0) as [8_N],	sum(0) as [9_N],	sum(0) as [10_N],
		sum(0) as [11_N],	sum(0) as [12_N],	sum(0) as [13_N],	sum(0) as [14_N],	sum(0) as [15_N],	sum(0) as [16_N],	sum(0) as [17_N],	sum(0) as [18_N],	sum(0) as [19_N],	sum(0) as [20_N],
		sum(0) as [21_N],	sum(0) as [22_N],	sum(0) as [23_N],	sum(0) as [24_N],	sum(0) as [25_N],	sum(0) as [26_N],	sum(0) as [27_N],	sum(0) as [28_N],	sum(0) as [29_N],	sum(0) as [30_N],
		sum(0) as [31_N],	sum(0) as [32_N],	sum(0) as [33_N],	sum(0) as [34_N],	sum(0) as [35_N],	sum(0) as [36_N],	sum(0) as [37_N],	sum(0) as [38_N],	sum(0) as [39_N],	sum(0) as [40_N],
		sum(0) as [41_N],	sum(0) as [42_N],	sum(0) as [43_N],	sum(0) as [44_N],	sum(0) as [45_N],	sum(0) as [46_N],	sum(0) as [47_N],	sum(0) as [48_N],	sum(0) as [49_N],	sum(0) as [50_N],
		sum(0) as [51_N],	sum(0) as [52_N],	sum(0) as [53_N],	sum(0) as [54_N],	sum(0) as [55_N],	sum(0) as [56_N],	sum(0) as [57_N],	sum(0) as [58_N],	sum(0) as [59_N],	sum(0) as [60_N],
		sum(0) as [61_N],	sum(0) as [62_N],	sum(0) as [63_N],	sum(0) as [64_N],	sum(0) as [65_N],	sum(0) as [66_N]
	
		--null as Region_Road_VF, null as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,sum(0) as [1]	,sum(0) as [2]	,sum(0) as [3]	,sum(0) as [4]	,sum(0) as [5]	,sum(0) as [6]	,sum(0) as [7]	,sum(0) as [8]	,sum(0) as [9]	,sum(0) as [10]
		,sum(0) as [11]	,sum(0) as [12]	,sum(0) as [13]	,sum(0) as [14]	,sum(0) as [15]	,sum(0) as [16]	,sum(0) as [17]	,sum(0) as [18]	,sum(0) as [19]	,sum(0) as [20]
		,sum(0) as [21]	,sum(0) as [22]	,sum(0) as [23]	,sum(0) as [24]	,sum(0) as [25]	,sum(0) as [26]	,sum(0) as [27]	,sum(0) as [28]	,sum(0) as [29]	,sum(0) as [30]
		,sum(0) as [31]	,sum(0) as [32]	,sum(0) as [33]	,sum(0) as [34]	,sum(0) as [35]	,sum(0) as [36]	,sum(0) as [37]	,sum(0) as [38]	,sum(0) as [39]	,sum(0) as [40]
		,sum(0) as [41],

		-- Parametros de configuracion:
		t.ASideDevice as ASideDevice, t.BSideDevice as BSideDevice, t.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_Web] t
			left outer join  [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_Web_4G] W4G on (isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(W4G.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=W4G.mnc and t.Date_Reporting=W4G.Date_Reporting and t.entidad=W4G.entidad and t.Aggr_Type=W4G.Aggr_Type and t.Report_Type=W4G.Report_Type and t.meas_round=W4G.meas_round)
		, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end, t.mnc, t.meas_round, t.Date_Reporting, t.Week_Reporting, t.entidad, t.Report_Type, t.Aggr_Type,
		t.ASideDevice, t.BSideDevice, t.SWVersion--, t.Region_VF, t.Region_OSP
	
	-----------
	union all	-- WEB HTTPS Road 4GOnly
	select  
		p.codigo_ine, 'Roads' vf_environment, t.mnc, t.meas_round, t.Date_Reporting as meas_date, t.Week_Reporting as meas_week, 
		'Road 4GOnly' as meas_Tech, 'WEB HTTPS' as Test_type, 'Downlink' as Direction, t.entidad as vf_entity, t.Report_Type, t.Aggr_Type,
		
		-- General:
		sum(W4G.[Navegaciones HTTPS]) as Num_tests,
		sum(W4G.[Fallos de acceso HTTPS]) as Failed,
		sum(W4G.[Navegaciones fallidas HTTPS]) as Dropped,
		sum(cast(W4G.[Session Time HTTPS] as float)*W4G.[Count_SessionTime HTTPS]) as Session_time_Num,
		sum(0) as Throughput_Den,
		sum(W4G.[Count_SessionTime HTTPS]) as Session_time_Den,
		sum(0) as Throughput_Num,
		max(0) as Throughput_Max,
		sum(0) as Throughput_3M_Num,
		sum(0) as Throughput_1M_Num,
		sum(0) as Throughput_128K_Num,
		sum(0) as Throughput_64K_Num,
		sum(0) as Throughput_384K_Num,
		--CAC 10/08/2017: thput de test sin error y con error
		sum(0) as Throughput_with_Error_Den,
		sum(0) as Throughput_with_Error_Num,
		sum(0) as WEB_IP_ACCESS_TIME_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_DEN,
		sum(0) as WEB_HTTP_TRANSFER_TIME_NUM,
		sum(0) as WEB_HTTP_TRANSFER_TIME_DEN,
		sum(cast(W4G.[IP Service Setup Time HTTPS] as float)*W4G.[Count_IPServiceSetupTime HTTPS]) as WEB_IP_ACCESS_TIME_HTTPS_NUM,
		sum(W4G.[Count_IPServiceSetupTime HTTPS]) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(cast(W4G.[Transfer Time HTTPS] as float)*W4G.[Count_TransferTime HTTPS]) as WEB_TRANSFER_TIME_HTTPS_NUM,
		sum(W4G.[Count_TransferTime HTTPS]) as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(0) as Radio_2G_use_Num,
		sum(0) as Radio_3G_use_Num,
		sum(0) as Radio_4G_use_Num,
		sum(0) as Radio_use_Den,
		sum(0) as Radio_2G_use_Den,
		sum(0) as Radio_3G_use_Den,
		sum(0) as Radio_4G_use_Den,

		sum(0) as Radio_U2100_use_Num,
		sum(0) as Radio_U900_use_Num,
		sum(0) as Radio_LTE2100_use_Num,
		sum(0) as Radio_LTE2600_use_Num,
		sum(0) as Radio_LTE1800_use_Num,
		sum(0) as Radio_LTE800_use_Num,
		sum(0) as Radio_Band_Use_Den,
		sum(0) as Radio_U2100_use_Den,
		sum(0) as Radio_U900_use_Den,
		sum(0) as Radio_LTE2100_use_Den,
		sum(0) as Radio_LTE2600_use_Den,
		sum(0) as Radio_LTE1800_use_Den,
		sum(0) as Radio_LTE800_use_Den,

		sum(0) as [3G_DualCarrier_use_Num],
		sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],
		sum(0) as [3G_DC_2100_use_Den],
		sum(0) as [3G_DC_900_use_Num],
		sum(0) as [3G_DC_900_use_Den],

		sum(0) as [3G_NumCodes_use_Num],
		sum(0) as [3G_NumCodes_use_Den],
		sum(0) as [3G_QPSK_use_Num],
		sum(0) as [3G_16QAM_use_Num],
		sum(0) as [3G_64QAM_use_Num],
		sum(0) as [3G_QPSK_use_Den],
		sum(0) as [3G_16QAM_use_Den],
		sum(0) as [3G_64QAM_use_Den],

		sum(0) as [3G_%_SF22_Num],
		sum(0) as [3G_%_SF22andSF42_Num],
		sum(0) as [3G_%_SF4_Num],
		sum(0) as [3G_%_SF42_Num],
		sum(0) as [3G_%_SF22_Den],
		sum(0) as [3G_%_SF22andSF42_Den],
		sum(0) as [3G_%_SF4_Den],
		sum(0) as [3G_%_SF42_Den],
		sum(0) as [3G_%_TTI2ms_Num],
		sum(0) as [3G_%_TTI2ms_Den],	
	
		sum(0) as [RSCP_Lin_Num],
		sum(0) as [EcI0_Lin_Num],	
		sum(0) as [RSCP_Lin_Den],	
		sum(0) as [EcI0_Lin_Den],
		
		-- Performance:
		sum(0) as [3G_CQI],
		sum(0) as [3G_DataStats_Den],
		Sum(0) as CQI_U900_Num,
		sum(0) as CQI_U900_Den,
		Sum(0) as CQI_U2100_Num,
		sum(0) as CQI_U2100_Den,

		sum(0) as [HSPA_PCT_Num],
		sum(0) as [HSPA+_PCT_Num],
		sum(0) as [HSPA+_DC_PCT_Num],
		sum(0) as [HSPA_PCT_Den],
		sum(0) as [HSPA+_PCT_Den],
		sum(0) as [HSPA+_DC_PCT_Den],

		sum(0) as [UL_Inter_Lin_Num],
		sum(0) as [UL_Inter_Lin_Den],
	
		-- Performance LTE:
		sum(0) as CQI_4G_Num,
		sum(0) as CQI_L800_Num,
		sum(0) as CQI_L1800_Num,
		sum(0) as CQI_L2100_Num,
		sum(0) as CQI_L2600_Num,
		sum(0) as CQI_4G_Den,
		sum(0) as CQI_L800_Den,
		sum(0) as CQI_L1800_Den,
		sum(0) as CQI_L2100_Den,
		sum(0) as CQI_L2600_Den,

		sum(0) as LTE_5Mhz_SC_Use_Num,
		sum(0) as LTE_10Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_SC_Use_Num,
		sum(0) as LTE_20Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_CA_Use_Num,
		sum(0) as LTE_20Mhz_CA_Use_Num,
		sum(0) as LTE_25Mhz_CA_Use_Num,
		sum(0) as LTE_30Mhz_CA_Use_Num,
		sum(0) as LTE_35Mhz_CA_Use_Num,
		sum(0) as LTE_40Mhz_CA_Use_Num,	
		sum(0) as LTE_5Mhz_SC_Use_Den,
		sum(0) as LTE_10Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_SC_Use_Den,
		sum(0) as LTE_20Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_CA_Use_Den,
		sum(0) as LTE_20Mhz_CA_Use_Den,
		sum(0) as LTE_25Mhz_CA_Use_Den,
		sum(0) as LTE_30Mhz_CA_Use_Den,
		sum(0) as LTE_35Mhz_CA_Use_Den,
		sum(0) as LTE_40Mhz_CA_Use_Den,

		sum(0) as LTE_BW_use_den,	
		sum(0) as [4G_RBs_use_Num],
		sum(0) as [4G_RBs_use_Den],

		sum(0) as [4G_TM1_use_Num],
		sum(0) as [4G_TM2_use_Num],
		sum(0) as [4G_TM3_use_Num],
		sum(0) as [4G_TM4_use_Num],
		sum(0) as [4G_TM5_use_Num],
		sum(0) as [4G_TM6_use_Num],
		sum(0) as [4G_TM7_use_Num],
		sum(0) as [4G_TM8_use_Num],
		sum(0) as [4G_TM9_use_Num],
		sum(0) as [4G_TMInvalid_use_Num],
		sum(0) as [4G_TMUnknown_use_Num],
		sum(0) as [4G_TM_Den],

		-- Technology LTE:
		sum(0) as [4G_%CA_Num],
		sum(0) as [4G_%CA_Den],
		sum(0) as [4G_BPSK_Use_Num],
		sum(0) as [4G_QPSK_Use_Num],
		sum(0) as [4G_16QAM_Use_Num],
		sum(0) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],
		sum(0) as [4G_QPSK_Use_Den],
		sum(0) as [4G_16QAM_Use_Den],
		sum(0) as [4G_64QAM_Use_Den],

		sum(0) as [4G_stats_Den],
		sum(0) as [RSRP_Lin_Num],
		sum(0) as [RSRQ_Lin_Num],
		sum(0) as [SINR_Lin_Num],			
		sum(0) as [RSRP_Lin_Den],
		sum(0) as [RSRQ_Lin_Den],
		sum(0) as [SINR_Lin_Den],		

		--New KPIs:
		sum(0) as [MIMO_num],
		sum(0) as [RI1_num],
		sum(0) as [RI2_num],
		sum(0) as [MIMO_den],
		sum(0) as [RI1_den],
		sum(0) as [RI2_den],
		sum(0) as RBs_Allocated_Den,
		sum(0) as RBs_Allocated_Num,
		max(0) as RBs_Allocated_Max,	
	
		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		sum(0) as [1_N],	sum(0) as [2_N],	sum(0) as [3_N],	sum(0) as [4_N],	sum(0) as [5_N],	sum(0) as [6_N],	sum(0) as [7_N],	sum(0) as [8_N],	sum(0) as [9_N],	sum(0) as [10_N],
		sum(0) as [11_N],	sum(0) as [12_N],	sum(0) as [13_N],	sum(0) as [14_N],	sum(0) as [15_N],	sum(0) as [16_N],	sum(0) as [17_N],	sum(0) as [18_N],	sum(0) as [19_N],	sum(0) as [20_N],
		sum(0) as [21_N],	sum(0) as [22_N],	sum(0) as [23_N],	sum(0) as [24_N],	sum(0) as [25_N],	sum(0) as [26_N],	sum(0) as [27_N],	sum(0) as [28_N],	sum(0) as [29_N],	sum(0) as [30_N],
		sum(0) as [31_N],	sum(0) as [32_N],	sum(0) as [33_N],	sum(0) as [34_N],	sum(0) as [35_N],	sum(0) as [36_N],	sum(0) as [37_N],	sum(0) as [38_N],	sum(0) as [39_N],	sum(0) as [40_N],
		sum(0) as [41_N],	sum(0) as [42_N],	sum(0) as [43_N],	sum(0) as [44_N],	sum(0) as [45_N],	sum(0) as [46_N],	sum(0) as [47_N],	sum(0) as [48_N],	sum(0) as [49_N],	sum(0) as [50_N],
		sum(0) as [51_N],	sum(0) as [52_N],	sum(0) as [53_N],	sum(0) as [54_N],	sum(0) as [55_N],	sum(0) as [56_N],	sum(0) as [57_N],	sum(0) as [58_N],	sum(0) as [59_N],	sum(0) as [60_N],
		sum(0) as [61_N],	sum(0) as [62_N],	sum(0) as [63_N],	sum(0) as [64_N],	sum(0) as [65_N],	sum(0) as [66_N]
	
		--null as Region_Road_VF, null as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,sum(0) as [1]	,sum(0) as [2]	,sum(0) as [3]	,sum(0) as [4]	,sum(0) as [5]	,sum(0) as [6]	,sum(0) as [7]	,sum(0) as [8]	,sum(0) as [9]	,sum(0) as [10]
		,sum(0) as [11]	,sum(0) as [12]	,sum(0) as [13]	,sum(0) as [14]	,sum(0) as [15]	,sum(0) as [16]	,sum(0) as [17]	,sum(0) as [18]	,sum(0) as [19]	,sum(0) as [20]
		,sum(0) as [21]	,sum(0) as [22]	,sum(0) as [23]	,sum(0) as [24]	,sum(0) as [25]	,sum(0) as [26]	,sum(0) as [27]	,sum(0) as [28]	,sum(0) as [29]	,sum(0) as [30]
		,sum(0) as [31]	,sum(0) as [32]	,sum(0) as [33]	,sum(0) as [34]	,sum(0) as [35]	,sum(0) as [36]	,sum(0) as [37]	,sum(0) as [38]	,sum(0) as [39]	,sum(0) as [40]
		,sum(0) as [41],

		-- Parametros de configuracion:
		t.ASideDevice as ASideDevice, t.BSideDevice as BSideDevice, t.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from [aggrData4G_ROAD].dbo.[lcc_aggr_sp_MDD_Data_Web] t
			left outer join [aggrData4G_ROAD].dbo.[lcc_aggr_sp_MDD_Data_Web_4G] W4G on (isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(W4G.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=W4G.mnc and t.Date_Reporting=W4G.Date_Reporting and t.entidad=W4G.entidad and t.Aggr_Type=W4G.Aggr_Type and t.Report_Type=W4G.Report_Type and t.meas_round=W4G.meas_round)
		, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, t.mnc, t.meas_round, t.Date_Reporting, t.Week_Reporting, t.entidad, t.Report_Type, t.Aggr_Type, 
		t.ASideDevice, t.BSideDevice, t.SWVersion --,t.Region_VF, t.Region_OSP,

	-----------
	union all	-- WEB Public 4GOnly
	select  
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment, t.mnc, t.meas_round, t.Date_Reporting as meas_date, t.Week_Reporting as meas_week, 
		'4GOnly' as meas_Tech, 'WEB Public' as Test_type, 'Downlink' as Direction,  t.entidad as vf_entity, t.Report_Type, t.Aggr_Type,
		
		-- General:
		sum(W4G.[Navegaciones Public]) as Num_tests,
		sum(W4G.[Fallos de acceso public]) as Failed,
		sum(W4G.[Navegaciones fallidas public]) as Dropped,
		sum(cast(W4G.[Session Time public] as float)*W4G.[Count_SessionTime public]) as Session_time_Num,
		sum(0) as Throughput_Den,
		sum(W4G.[Count_SessionTime public]) as Session_time_Den,
		sum(0) as Throughput_Num,
		max(0) as Throughput_Max,
		sum(0) as Throughput_3M_Num,
		sum(0) as Throughput_1M_Num,
		sum(0) as Throughput_128K_Num,
		sum(0) as Throughput_64K_Num,
		sum(0) as Throughput_384K_Num,
		--CAC 10/08/2017: thput de test sin error y con error
		sum(0) as Throughput_with_Error_Den,
		sum(0) as Throughput_with_Error_Num,
		sum(0) as WEB_IP_ACCESS_TIME_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_DEN,
		sum(0) as WEB_HTTP_TRANSFER_TIME_NUM,
		sum(0) as WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_NUM,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(cast(W4G.[IP Service Setup Time Public] as float)*W4G.[Count_IPServiceSetupTime Public]) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,
		sum(W4G.[Count_IPServiceSetupTime Public]) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(cast(W4G.[Transfer Time Public] as float)*W4G.[Count_TransferTime Public]) as WEB_TRANSFER_TIME_PUBLIC_NUM,
		sum(W4G.[Count_TransferTime Public]) as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(0) as Radio_2G_use_Num,
		sum(0) as Radio_3G_use_Num,
		sum(0) as Radio_4G_use_Num,
		sum(0) as Radio_use_Den,
		sum(0) as Radio_2G_use_Den,
		sum(0) as Radio_3G_use_Den,
		sum(0) as Radio_4G_use_Den,

		sum(0) as Radio_U2100_use_Num,
		sum(0) as Radio_U900_use_Num,
		sum(0) as Radio_LTE2100_use_Num,
		sum(0) as Radio_LTE2600_use_Num,
		sum(0) as Radio_LTE1800_use_Num,
		sum(0) as Radio_LTE800_use_Num,
		sum(0) as Radio_Band_Use_Den,
		sum(0) as Radio_U2100_use_Den,
		sum(0) as Radio_U900_use_Den,
		sum(0) as Radio_LTE2100_use_Den,
		sum(0) as Radio_LTE2600_use_Den,
		sum(0) as Radio_LTE1800_use_Den,
		sum(0) as Radio_LTE800_use_Den,

		sum(0) as [3G_DualCarrier_use_Num],
		sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],
		sum(0) as [3G_DC_2100_use_Den],
		sum(0) as [3G_DC_900_use_Num],
		sum(0) as [3G_DC_900_use_Den],

		sum(0) as [3G_NumCodes_use_Num],
		sum(0) as [3G_NumCodes_use_Den],
		sum(0) as [3G_QPSK_use_Num],
		sum(0) as [3G_16QAM_use_Num],
		sum(0) as [3G_64QAM_use_Num],
		sum(0) as [3G_QPSK_use_Den],
		sum(0) as [3G_16QAM_use_Den],
		sum(0) as [3G_64QAM_use_Den],

		sum(0) as [3G_%_SF22_Num],
		sum(0) as [3G_%_SF22andSF42_Num],
		sum(0) as [3G_%_SF4_Num],
		sum(0) as [3G_%_SF42_Num],
		sum(0) as [3G_%_SF22_Den],
		sum(0) as [3G_%_SF22andSF42_Den],
		sum(0) as [3G_%_SF4_Den],
		sum(0) as [3G_%_SF42_Den],
		sum(0) as [3G_%_TTI2ms_Num],
		sum(0) as [3G_%_TTI2ms_Den],	
	
		sum(0) as [RSCP_Lin_Num],
		sum(0) as [EcI0_Lin_Num],	
		sum(0) as [RSCP_Lin_Den],	
		sum(0) as [EcI0_Lin_Den],
		
		-- Performance:
		sum(0) as [3G_CQI],
		sum(0) as [3G_DataStats_Den],
		Sum(0) as CQI_U900_Num,
		sum(0) as CQI_U900_Den,
		Sum(0) as CQI_U2100_Num,
		sum(0) as CQI_U2100_Den,

		sum(0) as [HSPA_PCT_Num],
		sum(0) as [HSPA+_PCT_Num],
		sum(0) as [HSPA+_DC_PCT_Num],
		sum(0) as [HSPA_PCT_Den],
		sum(0) as [HSPA+_PCT_Den],
		sum(0) as [HSPA+_DC_PCT_Den],

		sum(0) as [UL_Inter_Lin_Num],
		sum(0) as [UL_Inter_Lin_Den],
	
		-- Performance LTE:
		sum(0) as CQI_4G_Num,
		sum(0) as CQI_L800_Num,
		sum(0) as CQI_L1800_Num,
		sum(0) as CQI_L2100_Num,
		sum(0) as CQI_L2600_Num,
		sum(0) as CQI_4G_Den,
		sum(0) as CQI_L800_Den,
		sum(0) as CQI_L1800_Den,
		sum(0) as CQI_L2100_Den,
		sum(0) as CQI_L2600_Den,

		sum(0) as LTE_5Mhz_SC_Use_Num,
		sum(0) as LTE_10Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_SC_Use_Num,
		sum(0) as LTE_20Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_CA_Use_Num,
		sum(0) as LTE_20Mhz_CA_Use_Num,
		sum(0) as LTE_25Mhz_CA_Use_Num,
		sum(0) as LTE_30Mhz_CA_Use_Num,
		sum(0) as LTE_35Mhz_CA_Use_Num,
		sum(0) as LTE_40Mhz_CA_Use_Num,	
		sum(0) as LTE_5Mhz_SC_Use_Den,
		sum(0) as LTE_10Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_SC_Use_Den,
		sum(0) as LTE_20Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_CA_Use_Den,
		sum(0) as LTE_20Mhz_CA_Use_Den,
		sum(0) as LTE_25Mhz_CA_Use_Den,
		sum(0) as LTE_30Mhz_CA_Use_Den,
		sum(0) as LTE_35Mhz_CA_Use_Den,
		sum(0) as LTE_40Mhz_CA_Use_Den,

		sum(0) as LTE_BW_use_den,	
		sum(0) as [4G_RBs_use_Num],
		sum(0) as [4G_RBs_use_Den],

		sum(0) as [4G_TM1_use_Num],
		sum(0) as [4G_TM2_use_Num],
		sum(0) as [4G_TM3_use_Num],
		sum(0) as [4G_TM4_use_Num],
		sum(0) as [4G_TM5_use_Num],
		sum(0) as [4G_TM6_use_Num],
		sum(0) as [4G_TM7_use_Num],
		sum(0) as [4G_TM8_use_Num],
		sum(0) as [4G_TM9_use_Num],
		sum(0) as [4G_TMInvalid_use_Num],
		sum(0) as [4G_TMUnknown_use_Num],
		sum(0) as [4G_TM_Den],

		-- Technology LTE:
		sum(0) as [4G_%CA_Num],
		sum(0) as [4G_%CA_Den],
		sum(0) as [4G_BPSK_Use_Num],
		sum(0) as [4G_QPSK_Use_Num],
		sum(0) as [4G_16QAM_Use_Num],
		sum(0) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],
		sum(0) as [4G_QPSK_Use_Den],
		sum(0) as [4G_16QAM_Use_Den],
		sum(0) as [4G_64QAM_Use_Den],

		sum(0) as [4G_stats_Den],
		sum(0) as [RSRP_Lin_Num],
		sum(0) as [RSRQ_Lin_Num],
		sum(0) as [SINR_Lin_Num],			
		sum(0) as [RSRP_Lin_Den],
		sum(0) as [RSRQ_Lin_Den],
		sum(0) as [SINR_Lin_Den],		

		--New KPIs:
		sum(0) as [MIMO_num],
		sum(0) as [RI1_num],
		sum(0) as [RI2_num],
		sum(0) as [MIMO_den],
		sum(0) as [RI1_den],
		sum(0) as [RI2_den],
		sum(0) as RBs_Allocated_Den,
		sum(0) as RBs_Allocated_Num,
		max(0) as RBs_Allocated_Max,	
	
		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		sum(0) as [1_N],	sum(0) as [2_N],	sum(0) as [3_N],	sum(0) as [4_N],	sum(0) as [5_N],	sum(0) as [6_N],	sum(0) as [7_N],	sum(0) as [8_N],	sum(0) as [9_N],	sum(0) as [10_N],
		sum(0) as [11_N],	sum(0) as [12_N],	sum(0) as [13_N],	sum(0) as [14_N],	sum(0) as [15_N],	sum(0) as [16_N],	sum(0) as [17_N],	sum(0) as [18_N],	sum(0) as [19_N],	sum(0) as [20_N],
		sum(0) as [21_N],	sum(0) as [22_N],	sum(0) as [23_N],	sum(0) as [24_N],	sum(0) as [25_N],	sum(0) as [26_N],	sum(0) as [27_N],	sum(0) as [28_N],	sum(0) as [29_N],	sum(0) as [30_N],
		sum(0) as [31_N],	sum(0) as [32_N],	sum(0) as [33_N],	sum(0) as [34_N],	sum(0) as [35_N],	sum(0) as [36_N],	sum(0) as [37_N],	sum(0) as [38_N],	sum(0) as [39_N],	sum(0) as [40_N],
		sum(0) as [41_N],	sum(0) as [42_N],	sum(0) as [43_N],	sum(0) as [44_N],	sum(0) as [45_N],	sum(0) as [46_N],	sum(0) as [47_N],	sum(0) as [48_N],	sum(0) as [49_N],	sum(0) as [50_N],
		sum(0) as [51_N],	sum(0) as [52_N],	sum(0) as [53_N],	sum(0) as [54_N],	sum(0) as [55_N],	sum(0) as [56_N],	sum(0) as [57_N],	sum(0) as [58_N],	sum(0) as [59_N],	sum(0) as [60_N],
		sum(0) as [61_N],	sum(0) as [62_N],	sum(0) as [63_N],	sum(0) as [64_N],	sum(0) as [65_N],	sum(0) as [66_N]
	
		--null as Region_Road_VF, null as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,sum(0) as [1]	,sum(0) as [2]	,sum(0) as [3]	,sum(0) as [4]	,sum(0) as [5]	,sum(0) as [6]	,sum(0) as [7]	,sum(0) as [8]	,sum(0) as [9]	,sum(0) as [10]
		,sum(0) as [11]	,sum(0) as [12]	,sum(0) as [13]	,sum(0) as [14]	,sum(0) as [15]	,sum(0) as [16]	,sum(0) as [17]	,sum(0) as [18]	,sum(0) as [19]	,sum(0) as [20]
		,sum(0) as [21]	,sum(0) as [22]	,sum(0) as [23]	,sum(0) as [24]	,sum(0) as [25]	,sum(0) as [26]	,sum(0) as [27]	,sum(0) as [28]	,sum(0) as [29]	,sum(0) as [30]
		,sum(0) as [31]	,sum(0) as [32]	,sum(0) as [33]	,sum(0) as [34]	,sum(0) as [35]	,sum(0) as [36]	,sum(0) as [37]	,sum(0) as [38]	,sum(0) as [39]	,sum(0) as [40]
		,sum(0) as [41],

		-- Parametros de configuracion:
		t.ASideDevice as ASideDevice, t.BSideDevice as BSideDevice, t.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_Web] t
			left outer join [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_Web_4G] W4G on (isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(W4G.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=W4G.mnc and t.Date_Reporting=W4G.Date_Reporting and t.entidad=W4G.entidad and t.Aggr_Type=W4G.Aggr_Type and t.Report_Type=W4G.Report_Type and t.meas_round=W4G.meas_round)
		, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end, t.mnc, t.meas_round, t.Date_Reporting, t.Week_Reporting, t.entidad, t.Report_Type, t.Aggr_Type,
		t.ASideDevice, t.BSideDevice, t.SWVersion--, t.Region_VF, t.Region_OSP

	-----------
	union all	-- WEB Public Road 4GOnly
	select  
		p.codigo_ine, 'Roads' vf_environment, t.mnc, t.meas_round, t.Date_Reporting as meas_date, t.Week_Reporting as meas_week, 
		'Road 4GOnly' as meas_Tech, 'WEB Public' as Test_type, 'Downlink' as Direction, t.entidad as vf_entity, t.Report_Type, t.Aggr_Type,
		
		-- General:
		sum(W4G.[Navegaciones Public]) as Num_tests,
		sum(W4G.[Fallos de acceso public]) as Failed,
		sum(W4G.[Navegaciones fallidas public]) as Dropped,
		sum(cast(W4G.[Session Time public] as float)*W4G.[Count_SessionTime public]) as Session_time_Num,
		sum(0) as Throughput_Den,
		sum(W4G.[Count_SessionTime public]) as Session_time_Den,
		sum(0) as Throughput_Num,
		max(0) as Throughput_Max,
		sum(0) as Throughput_3M_Num,
		sum(0) as Throughput_1M_Num,
		sum(0) as Throughput_128K_Num,
		sum(0) as Throughput_64K_Num,
		sum(0) as Throughput_384K_Num,
		--CAC 10/08/2017: thput de test sin error y con error
		sum(0) as Throughput_with_Error_Den,
		sum(0) as Throughput_with_Error_Num,
		sum(0) as WEB_IP_ACCESS_TIME_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_DEN,
		sum(0) as WEB_HTTP_TRANSFER_TIME_NUM,
		sum(0) as WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_NUM,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(cast(W4G.[IP Service Setup Time Public] as float)*W4G.[Count_IPServiceSetupTime Public]) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,
		sum(W4G.[Count_IPServiceSetupTime Public]) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(cast(W4G.[Transfer Time Public] as float)*W4G.[Count_TransferTime Public]) as WEB_TRANSFER_TIME_PUBLIC_NUM,
		sum(W4G.[Count_TransferTime Public]) as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(0) as Radio_2G_use_Num,
		sum(0) as Radio_3G_use_Num,
		sum(0) as Radio_4G_use_Num,
		sum(0) as Radio_use_Den,
		sum(0) as Radio_2G_use_Den,
		sum(0) as Radio_3G_use_Den,
		sum(0) as Radio_4G_use_Den,

		sum(0) as Radio_U2100_use_Num,
		sum(0) as Radio_U900_use_Num,
		sum(0) as Radio_LTE2100_use_Num,
		sum(0) as Radio_LTE2600_use_Num,
		sum(0) as Radio_LTE1800_use_Num,
		sum(0) as Radio_LTE800_use_Num,
		sum(0) as Radio_Band_Use_Den,
		sum(0) as Radio_U2100_use_Den,
		sum(0) as Radio_U900_use_Den,
		sum(0) as Radio_LTE2100_use_Den,
		sum(0) as Radio_LTE2600_use_Den,
		sum(0) as Radio_LTE1800_use_Den,
		sum(0) as Radio_LTE800_use_Den,

		sum(0) as [3G_DualCarrier_use_Num],
		sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],
		sum(0) as [3G_DC_2100_use_Den],
		sum(0) as [3G_DC_900_use_Num],
		sum(0) as [3G_DC_900_use_Den],

		sum(0) as [3G_NumCodes_use_Num],
		sum(0) as [3G_NumCodes_use_Den],
		sum(0) as [3G_QPSK_use_Num],
		sum(0) as [3G_16QAM_use_Num],
		sum(0) as [3G_64QAM_use_Num],
		sum(0) as [3G_QPSK_use_Den],
		sum(0) as [3G_16QAM_use_Den],
		sum(0) as [3G_64QAM_use_Den],

		sum(0) as [3G_%_SF22_Num],
		sum(0) as [3G_%_SF22andSF42_Num],
		sum(0) as [3G_%_SF4_Num],
		sum(0) as [3G_%_SF42_Num],
		sum(0) as [3G_%_SF22_Den],
		sum(0) as [3G_%_SF22andSF42_Den],
		sum(0) as [3G_%_SF4_Den],
		sum(0) as [3G_%_SF42_Den],
		sum(0) as [3G_%_TTI2ms_Num],
		sum(0) as [3G_%_TTI2ms_Den],	
	
		sum(0) as [RSCP_Lin_Num],
		sum(0) as [EcI0_Lin_Num],	
		sum(0) as [RSCP_Lin_Den],	
		sum(0) as [EcI0_Lin_Den],
		
		-- Performance:
		sum(0) as [3G_CQI],
		sum(0) as [3G_DataStats_Den],
		Sum(0) as CQI_U900_Num,
		sum(0) as CQI_U900_Den,
		Sum(0) as CQI_U2100_Num,
		sum(0) as CQI_U2100_Den,

		sum(0) as [HSPA_PCT_Num],
		sum(0) as [HSPA+_PCT_Num],
		sum(0) as [HSPA+_DC_PCT_Num],
		sum(0) as [HSPA_PCT_Den],
		sum(0) as [HSPA+_PCT_Den],
		sum(0) as [HSPA+_DC_PCT_Den],

		sum(0) as [UL_Inter_Lin_Num],
		sum(0) as [UL_Inter_Lin_Den],
	
		-- Performance LTE:
		sum(0) as CQI_4G_Num,
		sum(0) as CQI_L800_Num,
		sum(0) as CQI_L1800_Num,
		sum(0) as CQI_L2100_Num,
		sum(0) as CQI_L2600_Num,
		sum(0) as CQI_4G_Den,
		sum(0) as CQI_L800_Den,
		sum(0) as CQI_L1800_Den,
		sum(0) as CQI_L2100_Den,
		sum(0) as CQI_L2600_Den,

		sum(0) as LTE_5Mhz_SC_Use_Num,
		sum(0) as LTE_10Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_SC_Use_Num,
		sum(0) as LTE_20Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_CA_Use_Num,
		sum(0) as LTE_20Mhz_CA_Use_Num,
		sum(0) as LTE_25Mhz_CA_Use_Num,
		sum(0) as LTE_30Mhz_CA_Use_Num,
		sum(0) as LTE_35Mhz_CA_Use_Num,
		sum(0) as LTE_40Mhz_CA_Use_Num,
		sum(0) as LTE_5Mhz_SC_Use_Den,
		sum(0) as LTE_10Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_SC_Use_Den,
		sum(0) as LTE_20Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_CA_Use_Den,
		sum(0) as LTE_20Mhz_CA_Use_Den,
		sum(0) as LTE_25Mhz_CA_Use_Den,
		sum(0) as LTE_30Mhz_CA_Use_Den,
		sum(0) as LTE_35Mhz_CA_Use_Den,
		sum(0) as LTE_40Mhz_CA_Use_Den,
		
		sum(0) as LTE_BW_use_den,	
		sum(0) as [4G_RBs_use_Num],
		sum(0) as [4G_RBs_use_Den],

		sum(0) as [4G_TM1_use_Num],
		sum(0) as [4G_TM2_use_Num],
		sum(0) as [4G_TM3_use_Num],
		sum(0) as [4G_TM4_use_Num],
		sum(0) as [4G_TM5_use_Num],
		sum(0) as [4G_TM6_use_Num],
		sum(0) as [4G_TM7_use_Num],
		sum(0) as [4G_TM8_use_Num],
		sum(0) as [4G_TM9_use_Num],
		sum(0) as [4G_TMInvalid_use_Num],
		sum(0) as [4G_TMUnknown_use_Num],
		sum(0) as [4G_TM_Den],

		-- Technology LTE:
		sum(0) as [4G_%CA_Num],
		sum(0) as [4G_%CA_Den],
		sum(0) as [4G_BPSK_Use_Num],
		sum(0) as [4G_QPSK_Use_Num],
		sum(0) as [4G_16QAM_Use_Num],
		sum(0) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],
		sum(0) as [4G_QPSK_Use_Den],
		sum(0) as [4G_16QAM_Use_Den],
		sum(0) as [4G_64QAM_Use_Den],

		sum(0) as [4G_stats_Den],
		sum(0) as [RSRP_Lin_Num],
		sum(0) as [RSRQ_Lin_Num],
		sum(0) as [SINR_Lin_Num],			
		sum(0) as [RSRP_Lin_Den],
		sum(0) as [RSRQ_Lin_Den],
		sum(0) as [SINR_Lin_Den],		

		--New KPIs:
		sum(0) as [MIMO_num],
		sum(0) as [RI1_num],
		sum(0) as [RI2_num],
		sum(0) as [MIMO_den],
		sum(0) as [RI1_den],
		sum(0) as [RI2_den],
		sum(0) as RBs_Allocated_Den,
		sum(0) as RBs_Allocated_Num,
		max(0) as RBs_Allocated_Max,	
	
		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		sum(0) as [1_N],	sum(0) as [2_N],	sum(0) as [3_N],	sum(0) as [4_N],	sum(0) as [5_N],	sum(0) as [6_N],	sum(0) as [7_N],	sum(0) as [8_N],	sum(0) as [9_N],	sum(0) as [10_N],
		sum(0) as [11_N],	sum(0) as [12_N],	sum(0) as [13_N],	sum(0) as [14_N],	sum(0) as [15_N],	sum(0) as [16_N],	sum(0) as [17_N],	sum(0) as [18_N],	sum(0) as [19_N],	sum(0) as [20_N],
		sum(0) as [21_N],	sum(0) as [22_N],	sum(0) as [23_N],	sum(0) as [24_N],	sum(0) as [25_N],	sum(0) as [26_N],	sum(0) as [27_N],	sum(0) as [28_N],	sum(0) as [29_N],	sum(0) as [30_N],
		sum(0) as [31_N],	sum(0) as [32_N],	sum(0) as [33_N],	sum(0) as [34_N],	sum(0) as [35_N],	sum(0) as [36_N],	sum(0) as [37_N],	sum(0) as [38_N],	sum(0) as [39_N],	sum(0) as [40_N],
		sum(0) as [41_N],	sum(0) as [42_N],	sum(0) as [43_N],	sum(0) as [44_N],	sum(0) as [45_N],	sum(0) as [46_N],	sum(0) as [47_N],	sum(0) as [48_N],	sum(0) as [49_N],	sum(0) as [50_N],
		sum(0) as [51_N],	sum(0) as [52_N],	sum(0) as [53_N],	sum(0) as [54_N],	sum(0) as [55_N],	sum(0) as [56_N],	sum(0) as [57_N],	sum(0) as [58_N],	sum(0) as [59_N],	sum(0) as [60_N],
		sum(0) as [61_N],	sum(0) as [62_N],	sum(0) as [63_N],	sum(0) as [64_N],	sum(0) as [65_N],	sum(0) as [66_N]
	
		--null as Region_Road_VF, null as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,sum(0) as [1]	,sum(0) as [2]	,sum(0) as [3]	,sum(0) as [4]	,sum(0) as [5]	,sum(0) as [6]	,sum(0) as [7]	,sum(0) as [8]	,sum(0) as [9]	,sum(0) as [10]
		,sum(0) as [11]	,sum(0) as [12]	,sum(0) as [13]	,sum(0) as [14]	,sum(0) as [15]	,sum(0) as [16]	,sum(0) as [17]	,sum(0) as [18]	,sum(0) as [19]	,sum(0) as [20]
		,sum(0) as [21]	,sum(0) as [22]	,sum(0) as [23]	,sum(0) as [24]	,sum(0) as [25]	,sum(0) as [26]	,sum(0) as [27]	,sum(0) as [28]	,sum(0) as [29]	,sum(0) as [30]
		,sum(0) as [31]	,sum(0) as [32]	,sum(0) as [33]	,sum(0) as [34]	,sum(0) as [35]	,sum(0) as [36]	,sum(0) as [37]	,sum(0) as [38]	,sum(0) as [39]	,sum(0) as [40]
		,sum(0) as [41],

		-- Parametros de configuracion:
		t.ASideDevice as ASideDevice, t.BSideDevice as BSideDevice, t.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from [aggrData4G_ROAD].dbo.[lcc_aggr_sp_MDD_Data_Web] t
			left outer join [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_Web_4G] W4G on (isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(W4G.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=W4G.mnc and t.Date_Reporting=W4G.Date_Reporting and t.entidad=W4G.entidad and t.Aggr_Type=W4G.Aggr_Type and t.Report_Type=W4G.Report_Type and t.meas_round=W4G.meas_round)
		, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, t.mnc, t.meas_round, t.Date_Reporting, t.Week_Reporting, t.entidad, t.Report_Type, t.Aggr_Type,
		t.ASideDevice, t.BSideDevice, t.SWVersion--, t.Region_VF, t.Region_OSP
	
	-------------
	-- 4GOnly YTB SD y ROAD 	
	insert into _RI_Data_e	
	select  
		p.codigo_ine, case when  t.entidad like 'AVE-%' or  t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment, t.mnc, t.meas_round, t.Date_Reporting as meas_date, t.Week_Reporting as meas_week, 
		'4GOnly' as meas_Tech, 'Youtube SD' as Test_type, 'Downlink' as Direction,  t.entidad as vf_entity, t.Report_Type, t.Aggr_Type,
		
		-- General:
		sum( YTB4G.Reproducciones) as Num_tests,
		sum( YTB4G.Fails) as Failed,
		sum( YTB4G.reproducciones- YTB4G.fails- YTB4G.[Successful video download]) as Dropped,
		sum(0) as Session_time_Num,
		sum(0) as Throughput_Den,
		sum(0) as Session_time_Den,
		sum(0) as Throughput_Num,
		max(0) as Throughput_Max,
		sum(0) as Throughput_3M_Num,
		sum(0) as Throughput_1M_Num,
		sum(0) as Throughput_128K_Num,
		sum(0) as Throughput_64K_Num,
		sum(0) as Throughput_384K_Num,
		--CAC 10/08/2017: thput de test sin error y con error
		sum(0) as Throughput_with_Error_Den,
		sum(0) as Throughput_with_Error_Num,
		sum(0) as WEB_IP_ACCESS_TIME_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_DEN,
		sum(0) as WEB_HTTP_TRANSFER_TIME_NUM,
		sum(0) as WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_NUM,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,
	
		-- Technology:
		sum(0) as Radio_2G_use_Num,
		sum(0) as Radio_3G_use_Num,
		sum(0) as Radio_4G_use_Num,
		sum(0) as Radio_use_Den,
		sum(0) as Radio_2G_use_Den,
		sum(0) as Radio_3G_use_Den,
		sum(0) as Radio_4G_use_Den,

		sum(0) as Radio_U2100_use_Num,
		sum(0) as Radio_U900_use_Num,
		sum(0) as Radio_LTE2100_use_Num,
		sum(0) as Radio_LTE2600_use_Num,
		sum(0) as Radio_LTE1800_use_Num,
		sum(0) as Radio_LTE800_use_Num,
		sum(0) as Radio_Band_Use_Den,
		sum(0) as Radio_U2100_use_Den,
		sum(0) as Radio_U900_use_Den,
		sum(0) as Radio_LTE2100_use_Den,
		sum(0) as Radio_LTE2600_use_Den,
		sum(0) as Radio_LTE1800_use_Den,
		sum(0) as Radio_LTE800_use_Den,

		sum(0) as [3G_DualCarrier_use_Num],
		sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],
		sum(0) as [3G_DC_2100_use_Den],
		sum(0) as [3G_DC_900_use_Num],
		sum(0) as [3G_DC_900_use_Den],

		sum(0) as [3G_NumCodes_use_Num],
		sum(0) as [3G_NumCodes_use_Den],
		sum(0) as [3G_QPSK_use_Num],
		sum(0) as [3G_16QAM_use_Num],
		sum(0) as [3G_64QAM_use_Num],
		sum(0) as [3G_QPSK_use_Den],
		sum(0) as [3G_16QAM_use_Den],
		sum(0) as [3G_64QAM_use_Den],

		sum(0) as [3G_%_SF22_Num],
		sum(0) as [3G_%_SF22andSF42_Num],
		sum(0) as [3G_%_SF4_Num],
		sum(0) as [3G_%_SF42_Num],
		sum(0) as [3G_%_SF22_Den],
		sum(0) as [3G_%_SF22andSF42_Den],
		sum(0) as [3G_%_SF4_Den],
		sum(0) as [3G_%_SF42_Den],
		sum(0) as [3G_%_TTI2ms_Num],
		sum(0) as [3G_%_TTI2ms_Den],	
	
		sum(0) as [RSCP_Lin_Num],
		sum(0) as [EcI0_Lin_Num],	
		sum(0) as [RSCP_Lin_Den],	
		sum(0) as [EcI0_Lin_Den],
		
		-- Performance:
		sum(0) as [3G_CQI],
		sum(0) as [3G_DataStats_Den],
		Sum(0) as CQI_U900_Num,
		sum(0) as CQI_U900_Den,
		Sum(0) as CQI_U2100_Num,
		sum(0) as CQI_U2100_Den,

		sum(0) as [HSPA_PCT_Num],
		sum(0) as [HSPA+_PCT_Num],
		sum(0) as [HSPA+_DC_PCT_Num],
		sum(0) as [HSPA_PCT_Den],
		sum(0) as [HSPA+_PCT_Den],
		sum(0) as [HSPA+_DC_PCT_Den],

		sum(0) as [UL_Inter_Lin_Num],
		sum(0) as [UL_Inter_Lin_Den],
	
		-- Performance LTE:
		sum(0) as CQI_4G_Num,
		sum(0) as CQI_L800_Num,
		sum(0) as CQI_L1800_Num,
		sum(0) as CQI_L2100_Num,
		sum(0) as CQI_L2600_Num,
		sum(0) as CQI_4G_Den,
		sum(0) as CQI_L800_Den,
		sum(0) as CQI_L1800_Den,
		sum(0) as CQI_L2100_Den,
		sum(0) as CQI_L2600_Den,

		sum(0) as LTE_5Mhz_SC_Use_Num,
		sum(0) as LTE_10Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_SC_Use_Num,
		sum(0) as LTE_20Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_CA_Use_Num,
		sum(0) as LTE_20Mhz_CA_Use_Num,
		sum(0) as LTE_25Mhz_CA_Use_Num,
		sum(0) as LTE_30Mhz_CA_Use_Num,
		sum(0) as LTE_35Mhz_CA_Use_Num,
		sum(0) as LTE_40Mhz_CA_Use_Num,	
		sum(0) as LTE_5Mhz_SC_Use_Den,
		sum(0) as LTE_10Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_SC_Use_Den,
		sum(0) as LTE_20Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_CA_Use_Den,
		sum(0) as LTE_20Mhz_CA_Use_Den,
		sum(0) as LTE_25Mhz_CA_Use_Den,
		sum(0) as LTE_30Mhz_CA_Use_Den,
		sum(0) as LTE_35Mhz_CA_Use_Den,
		sum(0) as LTE_40Mhz_CA_Use_Den,

		sum(0) as LTE_BW_use_den,	
		sum(0) as [4G_RBs_use_Num],
		sum(0) as [4G_RBs_use_Den],

		sum(0) as [4G_TM1_use_Num],
		sum(0) as [4G_TM2_use_Num],
		sum(0) as [4G_TM3_use_Num],
		sum(0) as [4G_TM4_use_Num],
		sum(0) as [4G_TM5_use_Num],
		sum(0) as [4G_TM6_use_Num],
		sum(0) as [4G_TM7_use_Num],
		sum(0) as [4G_TM8_use_Num],
		sum(0) as [4G_TM9_use_Num],
		sum(0) as [4G_TMInvalid_use_Num],
		sum(0) as [4G_TMUnknown_use_Num],
		sum(0) as [4G_TM_Den],

		-- Technology LTE:
		sum(0) as [4G_%CA_Num],
		sum(0) as [4G_%CA_Den],
		sum(0) as [4G_BPSK_Use_Num],
		sum(0) as [4G_QPSK_Use_Num],
		sum(0) as [4G_16QAM_Use_Num],
		sum(0) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],
		sum(0) as [4G_QPSK_Use_Den],
		sum(0) as [4G_16QAM_Use_Den],
		sum(0) as [4G_64QAM_Use_Den],

		sum(0) as [4G_stats_Den],
		sum(0) as [RSRP_Lin_Num],
		sum(0) as [RSRQ_Lin_Num],
		sum(0) as [SINR_Lin_Num],			
		sum(0) as [RSRP_Lin_Den],
		sum(0) as [RSRQ_Lin_Den],
		sum(0) as [SINR_Lin_Den],		

		--New KPIs:
		sum(0) as [MIMO_num],
		sum(0) as [RI1_num],
		sum(0) as [RI2_num],
		sum(0) as [MIMO_den],
		sum(0) as [RI1_den],
		sum(0) as [RI2_den],
		sum(0) as RBs_Allocated_Den,
		sum(0) as RBs_Allocated_Num,
		max(0) as RBs_Allocated_Max,	
	
		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		sum(0) as [1_N],	sum(0) as [2_N],	sum(0) as [3_N],	sum(0) as [4_N],	sum(0) as [5_N],	sum(0) as [6_N],	sum(0) as [7_N],	sum(0) as [8_N],	sum(0) as [9_N],	sum(0) as [10_N],
		sum(0) as [11_N],	sum(0) as [12_N],	sum(0) as [13_N],	sum(0) as [14_N],	sum(0) as [15_N],	sum(0) as [16_N],	sum(0) as [17_N],	sum(0) as [18_N],	sum(0) as [19_N],	sum(0) as [20_N],
		sum(0) as [21_N],	sum(0) as [22_N],	sum(0) as [23_N],	sum(0) as [24_N],	sum(0) as [25_N],	sum(0) as [26_N],	sum(0) as [27_N],	sum(0) as [28_N],	sum(0) as [29_N],	sum(0) as [30_N],
		sum(0) as [31_N],	sum(0) as [32_N],	sum(0) as [33_N],	sum(0) as [34_N],	sum(0) as [35_N],	sum(0) as [36_N],	sum(0) as [37_N],	sum(0) as [38_N],	sum(0) as [39_N],	sum(0) as [40_N],
		sum(0) as [41_N],	sum(0) as [42_N],	sum(0) as [43_N],	sum(0) as [44_N],	sum(0) as [45_N],	sum(0) as [46_N],	sum(0) as [47_N],	sum(0) as [48_N],	sum(0) as [49_N],	sum(0) as [50_N],
		sum(0) as [51_N],	sum(0) as [52_N],	sum(0) as [53_N],	sum(0) as [54_N],	sum(0) as [55_N],	sum(0) as [56_N],	sum(0) as [57_N],	sum(0) as [58_N],	sum(0) as [59_N],	sum(0) as [60_N],
		sum(0) as [61_N],	sum(0) as [62_N],	sum(0) as [63_N],	sum(0) as [64_N],	sum(0) as [65_N],	sum(0) as [66_N]
	
		--null as Region_Road_VF, null as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,sum(0) as [1]	,sum(0) as [2]	,sum(0) as [3]	,sum(0) as [4]	,sum(0) as [5]	,sum(0) as [6]	,sum(0) as [7]	,sum(0) as [8]	,sum(0) as [9]	,sum(0) as [10]
		,sum(0) as [11]	,sum(0) as [12]	,sum(0) as [13]	,sum(0) as [14]	,sum(0) as [15]	,sum(0) as [16]	,sum(0) as [17]	,sum(0) as [18]	,sum(0) as [19]	,sum(0) as [20]
		,sum(0) as [21]	,sum(0) as [22]	,sum(0) as [23]	,sum(0) as [24]	,sum(0) as [25]	,sum(0) as [26]	,sum(0) as [27]	,sum(0) as [28]	,sum(0) as [29]	,sum(0) as [30]
		,sum(0) as [31]	,sum(0) as [32]	,sum(0) as [33]	,sum(0) as [34]	,sum(0) as [35]	,sum(0) as [36]	,sum(0) as [37]	,sum(0) as [38]	,sum(0) as [39]	,sum(0) as [40]
		,sum(0) as [41],

		-- Parametros de configuracion:
		t.ASideDevice as ASideDevice, t.BSideDevice as BSideDevice, t.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL


	from [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_Youtube] t
			left outer join [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_Youtube_4G] YTB4G on (isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(YTB4G.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=YTB4G.mnc and t.Date_Reporting=YTB4G.Date_Reporting and t.entidad=YTB4G.entidad and t.Aggr_Type=YTB4G.Aggr_Type and t.Report_Type=YTB4G.Report_Type and t.meas_round=YTB4G.meas_round)
		, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, case when  t.entidad like 'AVE-%' or  t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end, t.mnc, t.meas_round, t.Date_Reporting, t.Week_Reporting, t.entidad, t.Report_Type, t.Aggr_Type,
		t.ASideDevice, t.BSideDevice, t.SWVersion--, t.Region_VF, t.Region_OSP

	-----------
	union all	-- YTB SD Road 4GOnly
	select  
		p.codigo_ine, 'Roads' vf_environment,  t.mnc,  t.meas_round,  t.Date_Reporting as meas_date,  t.Week_Reporting as meas_week, 
		'Road 4GOnly' as meas_Tech, 'Youtube SD' as Test_type, 'Downlink' as Direction,  t.entidad as vf_entity, t.Report_Type, t.Aggr_Type,
		
		-- General:
		sum(YTB4G.Reproducciones) as Num_tests,
		sum(YTB4G.Fails) as Failed,
		sum(YTB4G.[reproducciones] - YTB4G.[fails] - YTB4G.[Successful video download]) as Dropped,
		sum(0) as Session_time_Num,
		sum(0) as Throughput_Den,
		sum(0) as Session_time_Den,
		sum(0) as Throughput_Num,
		max(0) as Throughput_Max,
		sum(0) as Throughput_3M_Num,
		sum(0) as Throughput_1M_Num,
		sum(0) as Throughput_128K_Num,
		sum(0) as Throughput_64K_Num,
		sum(0) as Throughput_384K_Num,
		--CAC 10/08/2017: thput de test sin error y con error
		sum(0) as Throughput_with_Error_Den,
		sum(0) as Throughput_with_Error_Num,
		sum(0) as WEB_IP_ACCESS_TIME_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_DEN,
		sum(0) as WEB_HTTP_TRANSFER_TIME_NUM,
		sum(0) as WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_NUM,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,
	
		-- Technology:
		sum(0) as Radio_2G_use_Num,
		sum(0) as Radio_3G_use_Num,
		sum(0) as Radio_4G_use_Num,
		sum(0) as Radio_use_Den,
		sum(0) as Radio_2G_use_Den,
		sum(0) as Radio_3G_use_Den,
		sum(0) as Radio_4G_use_Den,

		sum(0) as Radio_U2100_use_Num,
		sum(0) as Radio_U900_use_Num,
		sum(0) as Radio_LTE2100_use_Num,
		sum(0) as Radio_LTE2600_use_Num,
		sum(0) as Radio_LTE1800_use_Num,
		sum(0) as Radio_LTE800_use_Num,
		sum(0) as Radio_Band_Use_Den,
		sum(0) as Radio_U2100_use_Den,
		sum(0) as Radio_U900_use_Den,
		sum(0) as Radio_LTE2100_use_Den,
		sum(0) as Radio_LTE2600_use_Den,
		sum(0) as Radio_LTE1800_use_Den,
		sum(0) as Radio_LTE800_use_Den,

		sum(0) as [3G_DualCarrier_use_Num],
		sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],
		sum(0) as [3G_DC_2100_use_Den],
		sum(0) as [3G_DC_900_use_Num],
		sum(0) as [3G_DC_900_use_Den],

		sum(0) as [3G_NumCodes_use_Num],
		sum(0) as [3G_NumCodes_use_Den],
		sum(0) as [3G_QPSK_use_Num],
		sum(0) as [3G_16QAM_use_Num],
		sum(0) as [3G_64QAM_use_Num],
		sum(0) as [3G_QPSK_use_Den],
		sum(0) as [3G_16QAM_use_Den],
		sum(0) as [3G_64QAM_use_Den],

		sum(0) as [3G_%_SF22_Num],
		sum(0) as [3G_%_SF22andSF42_Num],
		sum(0) as [3G_%_SF4_Num],
		sum(0) as [3G_%_SF42_Num],
		sum(0) as [3G_%_SF22_Den],
		sum(0) as [3G_%_SF22andSF42_Den],
		sum(0) as [3G_%_SF4_Den],
		sum(0) as [3G_%_SF42_Den],
		sum(0) as [3G_%_TTI2ms_Num],
		sum(0) as [3G_%_TTI2ms_Den],	
	
		sum(0) as [RSCP_Lin_Num],
		sum(0) as [EcI0_Lin_Num],	
		sum(0) as [RSCP_Lin_Den],	
		sum(0) as [EcI0_Lin_Den],
		
		-- Performance:
		sum(0) as [3G_CQI],
		sum(0) as [3G_DataStats_Den],
		Sum(0) as CQI_U900_Num,
		sum(0) as CQI_U900_Den,
		Sum(0) as CQI_U2100_Num,
		sum(0) as CQI_U2100_Den,

		sum(0) as [HSPA_PCT_Num],
		sum(0) as [HSPA+_PCT_Num],
		sum(0) as [HSPA+_DC_PCT_Num],
		sum(0) as [HSPA_PCT_Den],
		sum(0) as [HSPA+_PCT_Den],
		sum(0) as [HSPA+_DC_PCT_Den],

		sum(0) as [UL_Inter_Lin_Num],
		sum(0) as [UL_Inter_Lin_Den],
	
		-- Performance LTE:
		sum(0) as CQI_4G_Num,
		sum(0) as CQI_L800_Num,
		sum(0) as CQI_L1800_Num,
		sum(0) as CQI_L2100_Num,
		sum(0) as CQI_L2600_Num,
		sum(0) as CQI_4G_Den,
		sum(0) as CQI_L800_Den,
		sum(0) as CQI_L1800_Den,
		sum(0) as CQI_L2100_Den,
		sum(0) as CQI_L2600_Den,

		sum(0) as LTE_5Mhz_SC_Use_Num,
		sum(0) as LTE_10Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_SC_Use_Num,
		sum(0) as LTE_20Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_CA_Use_Num,
		sum(0) as LTE_20Mhz_CA_Use_Num,
		sum(0) as LTE_25Mhz_CA_Use_Num,
		sum(0) as LTE_30Mhz_CA_Use_Num,
		sum(0) as LTE_35Mhz_CA_Use_Num,
		sum(0) as LTE_40Mhz_CA_Use_Num,	
		sum(0) as LTE_5Mhz_SC_Use_Den,
		sum(0) as LTE_10Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_SC_Use_Den,
		sum(0) as LTE_20Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_CA_Use_Den,
		sum(0) as LTE_20Mhz_CA_Use_Den,
		sum(0) as LTE_25Mhz_CA_Use_Den,
		sum(0) as LTE_30Mhz_CA_Use_Den,
		sum(0) as LTE_35Mhz_CA_Use_Den,
		sum(0) as LTE_40Mhz_CA_Use_Den,

		sum(0) as LTE_BW_use_den,	
		sum(0) as [4G_RBs_use_Num],
		sum(0) as [4G_RBs_use_Den],

		sum(0) as [4G_TM1_use_Num],
		sum(0) as [4G_TM2_use_Num],
		sum(0) as [4G_TM3_use_Num],
		sum(0) as [4G_TM4_use_Num],
		sum(0) as [4G_TM5_use_Num],
		sum(0) as [4G_TM6_use_Num],
		sum(0) as [4G_TM7_use_Num],
		sum(0) as [4G_TM8_use_Num],
		sum(0) as [4G_TM9_use_Num],
		sum(0) as [4G_TMInvalid_use_Num],
		sum(0) as [4G_TMUnknown_use_Num],
		sum(0) as [4G_TM_Den],

		-- Technology LTE:
		sum(0) as [4G_%CA_Num],
		sum(0) as [4G_%CA_Den],
		sum(0) as [4G_BPSK_Use_Num],
		sum(0) as [4G_QPSK_Use_Num],
		sum(0) as [4G_16QAM_Use_Num],
		sum(0) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],
		sum(0) as [4G_QPSK_Use_Den],
		sum(0) as [4G_16QAM_Use_Den],
		sum(0) as [4G_64QAM_Use_Den],

		sum(0) as [4G_stats_Den],
		sum(0) as [RSRP_Lin_Num],
		sum(0) as [RSRQ_Lin_Num],
		sum(0) as [SINR_Lin_Num],			
		sum(0) as [RSRP_Lin_Den],
		sum(0) as [RSRQ_Lin_Den],
		sum(0) as [SINR_Lin_Den],		

		--New KPIs:
		sum(0) as [MIMO_num],
		sum(0) as [RI1_num],
		sum(0) as [RI2_num],
		sum(0) as [MIMO_den],
		sum(0) as [RI1_den],
		sum(0) as [RI2_den],
		sum(0) as RBs_Allocated_Den,
		sum(0) as RBs_Allocated_Num,
		max(0) as RBs_Allocated_Max,	
	
		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		sum(0) as [1_N],	sum(0) as [2_N],	sum(0) as [3_N],	sum(0) as [4_N],	sum(0) as [5_N],	sum(0) as [6_N],	sum(0) as [7_N],	sum(0) as [8_N],	sum(0) as [9_N],	sum(0) as [10_N],
		sum(0) as [11_N],	sum(0) as [12_N],	sum(0) as [13_N],	sum(0) as [14_N],	sum(0) as [15_N],	sum(0) as [16_N],	sum(0) as [17_N],	sum(0) as [18_N],	sum(0) as [19_N],	sum(0) as [20_N],
		sum(0) as [21_N],	sum(0) as [22_N],	sum(0) as [23_N],	sum(0) as [24_N],	sum(0) as [25_N],	sum(0) as [26_N],	sum(0) as [27_N],	sum(0) as [28_N],	sum(0) as [29_N],	sum(0) as [30_N],
		sum(0) as [31_N],	sum(0) as [32_N],	sum(0) as [33_N],	sum(0) as [34_N],	sum(0) as [35_N],	sum(0) as [36_N],	sum(0) as [37_N],	sum(0) as [38_N],	sum(0) as [39_N],	sum(0) as [40_N],
		sum(0) as [41_N],	sum(0) as [42_N],	sum(0) as [43_N],	sum(0) as [44_N],	sum(0) as [45_N],	sum(0) as [46_N],	sum(0) as [47_N],	sum(0) as [48_N],	sum(0) as [49_N],	sum(0) as [50_N],
		sum(0) as [51_N],	sum(0) as [52_N],	sum(0) as [53_N],	sum(0) as [54_N],	sum(0) as [55_N],	sum(0) as [56_N],	sum(0) as [57_N],	sum(0) as [58_N],	sum(0) as [59_N],	sum(0) as [60_N],
		sum(0) as [61_N],	sum(0) as [62_N],	sum(0) as [63_N],	sum(0) as [64_N],	sum(0) as [65_N],	sum(0) as [66_N]
	
		--null as Region_Road_VF, null as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,sum(0) as [1]	,sum(0) as [2]	,sum(0) as [3]	,sum(0) as [4]	,sum(0) as [5]	,sum(0) as [6]	,sum(0) as [7]	,sum(0) as [8]	,sum(0) as [9]	,sum(0) as [10]
		,sum(0) as [11]	,sum(0) as [12]	,sum(0) as [13]	,sum(0) as [14]	,sum(0) as [15]	,sum(0) as [16]	,sum(0) as [17]	,sum(0) as [18]	,sum(0) as [19]	,sum(0) as [20]
		,sum(0) as [21]	,sum(0) as [22]	,sum(0) as [23]	,sum(0) as [24]	,sum(0) as [25]	,sum(0) as [26]	,sum(0) as [27]	,sum(0) as [28]	,sum(0) as [29]	,sum(0) as [30]
		,sum(0) as [31]	,sum(0) as [32]	,sum(0) as [33]	,sum(0) as [34]	,sum(0) as [35]	,sum(0) as [36]	,sum(0) as [37]	,sum(0) as [38]	,sum(0) as [39]	,sum(0) as [40]
		,sum(0) as [41],

		-- Parametros de configuracion:
		t.ASideDevice as ASideDevice, t.BSideDevice as BSideDevice, t.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from [aggrData4G_ROAD].dbo.[lcc_aggr_sp_MDD_Data_Youtube] t
			left outer join [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_Youtube_4G] YTB4G on (isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(YTB4G.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=YTB4G.mnc and t.Date_Reporting=YTB4G.Date_Reporting and t.entidad=YTB4G.entidad and t.Aggr_Type=YTB4G.Aggr_Type and t.Report_Type=YTB4G.Report_Type and t.meas_round=YTB4G.meas_round)
		, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, t.mnc, t.meas_round, t.Date_Reporting, t.Week_Reporting, t.entidad, t.Report_Type, t.Aggr_Type,
		t.ASideDevice, t.BSideDevice, t.SWVersion--, t.Region_VF, t.Region_OSP

	-------------
	-- 4GOnly YTB HD	
	insert into _RI_Data_e	
	select  
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment, t.mnc, t.meas_round, t.Date_Reporting as meas_date,t.Week_Reporting as meas_week, 
		'4GOnly' as meas_Tech, 'Youtube HD' as Test_type, 'Downlink' as Direction, t.entidad as vf_entity, t.Report_Type, t.Aggr_Type,
		
		-- General:
		sum(YTB4G.Reproducciones) as Num_tests,
		sum(YTB4G.Fails) as Failed,
		sum(YTB4G.[reproducciones] - YTB4G.[fails] - YTB4G.[Successful video download]) as Dropped,
		sum(0) as Session_time_Num,
		sum(0) as Throughput_Den,
		sum(0) as Session_time_Den,
		sum(0) as Throughput_Num,
		max(0) as Throughput_Max,
		sum(0) as Throughput_3M_Num,
		sum(0) as Throughput_1M_Num,
		sum(0) as Throughput_128K_Num,
		sum(0) as Throughput_64K_Num,
		sum(0) as Throughput_384K_Num,
		--CAC 10/08/2017: thput de test sin error y con error
		sum(0) as Throughput_with_Error_Den,
		sum(0) as Throughput_with_Error_Num,
		sum(0) as WEB_IP_ACCESS_TIME_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_DEN,
		sum(0) as WEB_HTTP_TRANSFER_TIME_NUM,
		sum(0) as WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_NUM,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,
	
		-- Technology:
		sum(0) as Radio_2G_use_Num,
		sum(0) as Radio_3G_use_Num,
		sum(0) as Radio_4G_use_Num,
		sum(0) as Radio_use_Den,
		sum(0) as Radio_2G_use_Den,
		sum(0) as Radio_3G_use_Den,
		sum(0) as Radio_4G_use_Den,

		sum(0) as Radio_U2100_use_Num,
		sum(0) as Radio_U900_use_Num,
		sum(0) as Radio_LTE2100_use_Num,
		sum(0) as Radio_LTE2600_use_Num,
		sum(0) as Radio_LTE1800_use_Num,
		sum(0) as Radio_LTE800_use_Num,
		sum(0) as Radio_Band_Use_Den,
		sum(0) as Radio_U2100_use_Den,
		sum(0) as Radio_U900_use_Den,
		sum(0) as Radio_LTE2100_use_Den,
		sum(0) as Radio_LTE2600_use_Den,
		sum(0) as Radio_LTE1800_use_Den,
		sum(0) as Radio_LTE800_use_Den,

		sum(0) as [3G_DualCarrier_use_Num],
		sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],
		sum(0) as [3G_DC_2100_use_Den],
		sum(0) as [3G_DC_900_use_Num],
		sum(0) as [3G_DC_900_use_Den],

		sum(0) as [3G_NumCodes_use_Num],
		sum(0) as [3G_NumCodes_use_Den],
		sum(0) as [3G_QPSK_use_Num],
		sum(0) as [3G_16QAM_use_Num],
		sum(0) as [3G_64QAM_use_Num],
		sum(0) as [3G_QPSK_use_Den],
		sum(0) as [3G_16QAM_use_Den],
		sum(0) as [3G_64QAM_use_Den],

		sum(0) as [3G_%_SF22_Num],
		sum(0) as [3G_%_SF22andSF42_Num],
		sum(0) as [3G_%_SF4_Num],
		sum(0) as [3G_%_SF42_Num],
		sum(0) as [3G_%_SF22_Den],
		sum(0) as [3G_%_SF22andSF42_Den],
		sum(0) as [3G_%_SF4_Den],
		sum(0) as [3G_%_SF42_Den],
		sum(0) as [3G_%_TTI2ms_Num],
		sum(0) as [3G_%_TTI2ms_Den],	
	
		sum(0) as [RSCP_Lin_Num],
		sum(0) as [EcI0_Lin_Num],	
		sum(0) as [RSCP_Lin_Den],	
		sum(0) as [EcI0_Lin_Den],
		
		-- Performance:
		sum(0) as [3G_CQI],
		sum(0) as [3G_DataStats_Den],
		Sum(0) as CQI_U900_Num,
		sum(0) as CQI_U900_Den,
		Sum(0) as CQI_U2100_Num,
		sum(0) as CQI_U2100_Den,

		sum(0) as [HSPA_PCT_Num],
		sum(0) as [HSPA+_PCT_Num],
		sum(0) as [HSPA+_DC_PCT_Num],
		sum(0) as [HSPA_PCT_Den],
		sum(0) as [HSPA+_PCT_Den],
		sum(0) as [HSPA+_DC_PCT_Den],

		sum(0) as [UL_Inter_Lin_Num],
		sum(0) as [UL_Inter_Lin_Den],
	
		-- Performance LTE:
		sum(0) as CQI_4G_Num,
		sum(0) as CQI_L800_Num,
		sum(0) as CQI_L1800_Num,
		sum(0) as CQI_L2100_Num,
		sum(0) as CQI_L2600_Num,
		sum(0) as CQI_4G_Den,
		sum(0) as CQI_L800_Den,
		sum(0) as CQI_L1800_Den,
		sum(0) as CQI_L2100_Den,
		sum(0) as CQI_L2600_Den,

		sum(0) as LTE_5Mhz_SC_Use_Num,
		sum(0) as LTE_10Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_SC_Use_Num,
		sum(0) as LTE_20Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_CA_Use_Num,
		sum(0) as LTE_20Mhz_CA_Use_Num,
		sum(0) as LTE_25Mhz_CA_Use_Num,
		sum(0) as LTE_30Mhz_CA_Use_Num,
		sum(0) as LTE_35Mhz_CA_Use_Num,
		sum(0) as LTE_40Mhz_CA_Use_Num,	
		sum(0) as LTE_5Mhz_SC_Use_Den,
		sum(0) as LTE_10Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_SC_Use_Den,
		sum(0) as LTE_20Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_CA_Use_Den,
		sum(0) as LTE_20Mhz_CA_Use_Den,
		sum(0) as LTE_25Mhz_CA_Use_Den,
		sum(0) as LTE_30Mhz_CA_Use_Den,
		sum(0) as LTE_35Mhz_CA_Use_Den,
		sum(0) as LTE_40Mhz_CA_Use_Den,

		sum(0) as LTE_BW_use_den,
		sum(0) as [4G_RBs_use_Num],
		sum(0) as [4G_RBs_use_Den],

		sum(0) as [4G_TM1_use_Num],
		sum(0) as [4G_TM2_use_Num],
		sum(0) as [4G_TM3_use_Num],
		sum(0) as [4G_TM4_use_Num],
		sum(0) as [4G_TM5_use_Num],
		sum(0) as [4G_TM6_use_Num],
		sum(0) as [4G_TM7_use_Num],
		sum(0) as [4G_TM8_use_Num],
		sum(0) as [4G_TM9_use_Num],
		sum(0) as [4G_TMInvalid_use_Num],
		sum(0) as [4G_TMUnknown_use_Num],
		sum(0) as [4G_TM_Den],

		-- Technology LTE:
		sum(0) as [4G_%CA_Num],
		sum(0) as [4G_%CA_Den],
		sum(0) as [4G_BPSK_Use_Num],
		sum(0) as [4G_QPSK_Use_Num],
		sum(0) as [4G_16QAM_Use_Num],
		sum(0) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],
		sum(0) as [4G_QPSK_Use_Den],
		sum(0) as [4G_16QAM_Use_Den],
		sum(0) as [4G_64QAM_Use_Den],

		sum(0) as [4G_stats_Den],
		sum(0) as [RSRP_Lin_Num],
		sum(0) as [RSRQ_Lin_Num],
		sum(0) as [SINR_Lin_Num],			
		sum(0) as [RSRP_Lin_Den],
		sum(0) as [RSRQ_Lin_Den],
		sum(0) as [SINR_Lin_Den],		

		--New KPIs:
		sum(0) as [MIMO_num],
		sum(0) as [RI1_num],
		sum(0) as [RI2_num],
		sum(0) as [MIMO_den],
		sum(0) as [RI1_den],
		sum(0) as [RI2_den],
		sum(0) as RBs_Allocated_Den,
		sum(0) as RBs_Allocated_Num,
		max(0) as RBs_Allocated_Max,	
	
		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		sum(0) as [1_N],	sum(0) as [2_N],	sum(0) as [3_N],	sum(0) as [4_N],	sum(0) as [5_N],	sum(0) as [6_N],	sum(0) as [7_N],	sum(0) as [8_N],	sum(0) as [9_N],	sum(0) as [10_N],
		sum(0) as [11_N],	sum(0) as [12_N],	sum(0) as [13_N],	sum(0) as [14_N],	sum(0) as [15_N],	sum(0) as [16_N],	sum(0) as [17_N],	sum(0) as [18_N],	sum(0) as [19_N],	sum(0) as [20_N],
		sum(0) as [21_N],	sum(0) as [22_N],	sum(0) as [23_N],	sum(0) as [24_N],	sum(0) as [25_N],	sum(0) as [26_N],	sum(0) as [27_N],	sum(0) as [28_N],	sum(0) as [29_N],	sum(0) as [30_N],
		sum(0) as [31_N],	sum(0) as [32_N],	sum(0) as [33_N],	sum(0) as [34_N],	sum(0) as [35_N],	sum(0) as [36_N],	sum(0) as [37_N],	sum(0) as [38_N],	sum(0) as [39_N],	sum(0) as [40_N],
		sum(0) as [41_N],	sum(0) as [42_N],	sum(0) as [43_N],	sum(0) as [44_N],	sum(0) as [45_N],	sum(0) as [46_N],	sum(0) as [47_N],	sum(0) as [48_N],	sum(0) as [49_N],	sum(0) as [50_N],
		sum(0) as [51_N],	sum(0) as [52_N],	sum(0) as [53_N],	sum(0) as [54_N],	sum(0) as [55_N],	sum(0) as [56_N],	sum(0) as [57_N],	sum(0) as [58_N],	sum(0) as [59_N],	sum(0) as [60_N],
		sum(0) as [61_N],	sum(0) as [62_N],	sum(0) as [63_N],	sum(0) as [64_N],	sum(0) as [65_N],	sum(0) as [66_N]
	
		--null as Region_Road_VF, null as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,sum(0) as [1]	,sum(0) as [2]	,sum(0) as [3]	,sum(0) as [4]	,sum(0) as [5]	,sum(0) as [6]	,sum(0) as [7]	,sum(0) as [8]	,sum(0) as [9]	,sum(0) as [10]
		,sum(0) as [11]	,sum(0) as [12]	,sum(0) as [13]	,sum(0) as [14]	,sum(0) as [15]	,sum(0) as [16]	,sum(0) as [17]	,sum(0) as [18]	,sum(0) as [19]	,sum(0) as [20]
		,sum(0) as [21]	,sum(0) as [22]	,sum(0) as [23]	,sum(0) as [24]	,sum(0) as [25]	,sum(0) as [26]	,sum(0) as [27]	,sum(0) as [28]	,sum(0) as [29]	,sum(0) as [30]
		,sum(0) as [31]	,sum(0) as [32]	,sum(0) as [33]	,sum(0) as [34]	,sum(0) as [35]	,sum(0) as [36]	,sum(0) as [37]	,sum(0) as [38]	,sum(0) as [39]	,sum(0) as [40]
		,sum(0) as [41],

		-- Parametros de configuracion:
		t.ASideDevice as ASideDevice, t.BSideDevice as BSideDevice, t.SWVersion as SWVersion, 
		max(t.Youtube_Version) as YTB_Version, max(t.url) as YTB_URL		

	from [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_Youtube_HD] t
			left outer join [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_Youtube_HD_4G] YTB4G on (isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(YTB4G.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=YTB4G.mnc and t.Date_Reporting=YTB4G.Date_Reporting and t.entidad=YTB4G.entidad and t.Aggr_Type=YTB4G.Aggr_Type and t.Report_Type=YTB4G.Report_Type and t.meas_round=YTB4G.meas_round)		
		, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end, t.mnc, t.meas_round, t.Date_Reporting, t.Week_Reporting, t.entidad, t.Report_Type, t.Aggr_Type,
		t.ASideDevice, t.BSideDevice, t.SWVersion--, t.Youtube_Version, t.url	--, t.Region_VF, t.Region_OSP

	-----------
	union all	-- YTB HD Road 4GOnly
	select  
		p.codigo_ine, 'Roads' vf_environment, t.mnc, t.meas_round, t.Date_Reporting as meas_date, t.Week_Reporting as meas_week, 
		'Road 4GOnly' as meas_Tech, 'Youtube HD' as Test_type, 'Downlink' as Direction, t.entidad as vf_entity, t.Report_Type, t.Aggr_Type,
		
		-- General:
		sum(YTB4G.Reproducciones) as Num_tests,
		sum(YTB4G.Fails) as Failed,
		sum(YTB4G.[reproducciones] - YTB4G.[fails] - YTB4G.[Successful video download]) as Dropped,
		sum(0) as Session_time_Num,
		sum(0) as Throughput_Den,
		sum(0) as Session_time_Den,
		sum(0) as Throughput_Num,
		max(0) as Throughput_Max,
		sum(0) as Throughput_3M_Num,
		sum(0) as Throughput_1M_Num,
		sum(0) as Throughput_128K_Num,
		sum(0) as Throughput_64K_Num,
		sum(0) as Throughput_384K_Num,
		--CAC 10/08/2017: thput de test sin error y con error
		sum(0) as Throughput_with_Error_Den,
		sum(0) as Throughput_with_Error_Num,
		sum(0) as WEB_IP_ACCESS_TIME_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_DEN,
		sum(0) as WEB_HTTP_TRANSFER_TIME_NUM,
		sum(0) as WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_NUM,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,
	
		-- Technology:
		sum(0) as Radio_2G_use_Num,
		sum(0) as Radio_3G_use_Num,
		sum(0) as Radio_4G_use_Num,
		sum(0) as Radio_use_Den,
		sum(0) as Radio_2G_use_Den,
		sum(0) as Radio_3G_use_Den,
		sum(0) as Radio_4G_use_Den,

		sum(0) as Radio_U2100_use_Num,
		sum(0) as Radio_U900_use_Num,
		sum(0) as Radio_LTE2100_use_Num,
		sum(0) as Radio_LTE2600_use_Num,
		sum(0) as Radio_LTE1800_use_Num,
		sum(0) as Radio_LTE800_use_Num,
		sum(0) as Radio_Band_Use_Den,
		sum(0) as Radio_U2100_use_Den,
		sum(0) as Radio_U900_use_Den,
		sum(0) as Radio_LTE2100_use_Den,
		sum(0) as Radio_LTE2600_use_Den,
		sum(0) as Radio_LTE1800_use_Den,
		sum(0) as Radio_LTE800_use_Den,

		sum(0) as [3G_DualCarrier_use_Num],
		sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],
		sum(0) as [3G_DC_2100_use_Den],
		sum(0) as [3G_DC_900_use_Num],
		sum(0) as [3G_DC_900_use_Den],

		sum(0) as [3G_NumCodes_use_Num],
		sum(0) as [3G_NumCodes_use_Den],
		sum(0) as [3G_QPSK_use_Num],
		sum(0) as [3G_16QAM_use_Num],
		sum(0) as [3G_64QAM_use_Num],
		sum(0) as [3G_QPSK_use_Den],
		sum(0) as [3G_16QAM_use_Den],
		sum(0) as [3G_64QAM_use_Den],

		sum(0) as [3G_%_SF22_Num],
		sum(0) as [3G_%_SF22andSF42_Num],
		sum(0) as [3G_%_SF4_Num],
		sum(0) as [3G_%_SF42_Num],
		sum(0) as [3G_%_SF22_Den],
		sum(0) as [3G_%_SF22andSF42_Den],
		sum(0) as [3G_%_SF4_Den],
		sum(0) as [3G_%_SF42_Den],
		sum(0) as [3G_%_TTI2ms_Num],
		sum(0) as [3G_%_TTI2ms_Den],	
	
		sum(0) as [RSCP_Lin_Num],
		sum(0) as [EcI0_Lin_Num],	
		sum(0) as [RSCP_Lin_Den],	
		sum(0) as [EcI0_Lin_Den],
		
		-- Performance:
		sum(0) as [3G_CQI],
		sum(0) as [3G_DataStats_Den],
		Sum(0) as CQI_U900_Num,
		sum(0) as CQI_U900_Den,
		Sum(0) as CQI_U2100_Num,
		sum(0) as CQI_U2100_Den,

		sum(0) as [HSPA_PCT_Num],
		sum(0) as [HSPA+_PCT_Num],
		sum(0) as [HSPA+_DC_PCT_Num],
		sum(0) as [HSPA_PCT_Den],
		sum(0) as [HSPA+_PCT_Den],
		sum(0) as [HSPA+_DC_PCT_Den],

		sum(0) as [UL_Inter_Lin_Num],
		sum(0) as [UL_Inter_Lin_Den],
	
		-- Performance LTE:
		sum(0) as CQI_4G_Num,
		sum(0) as CQI_L800_Num,
		sum(0) as CQI_L1800_Num,
		sum(0) as CQI_L2100_Num,
		sum(0) as CQI_L2600_Num,
		sum(0) as CQI_4G_Den,
		sum(0) as CQI_L800_Den,
		sum(0) as CQI_L1800_Den,
		sum(0) as CQI_L2100_Den,
		sum(0) as CQI_L2600_Den,

		sum(0) as LTE_5Mhz_SC_Use_Num,
		sum(0) as LTE_10Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_SC_Use_Num,
		sum(0) as LTE_20Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_CA_Use_Num,
		sum(0) as LTE_20Mhz_CA_Use_Num,
		sum(0) as LTE_25Mhz_CA_Use_Num,
		sum(0) as LTE_30Mhz_CA_Use_Num,
		sum(0) as LTE_35Mhz_CA_Use_Num,
		sum(0) as LTE_40Mhz_CA_Use_Num,	
		sum(0) as LTE_5Mhz_SC_Use_Den,
		sum(0) as LTE_10Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_SC_Use_Den,
		sum(0) as LTE_20Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_CA_Use_Den,
		sum(0) as LTE_20Mhz_CA_Use_Den,
		sum(0) as LTE_25Mhz_CA_Use_Den,
		sum(0) as LTE_30Mhz_CA_Use_Den,
		sum(0) as LTE_35Mhz_CA_Use_Den,
		sum(0) as LTE_40Mhz_CA_Use_Den,

		sum(0) as LTE_BW_use_den,	
		sum(0) as [4G_RBs_use_Num],
		sum(0) as [4G_RBs_use_Den],

		sum(0) as [4G_TM1_use_Num],
		sum(0) as [4G_TM2_use_Num],
		sum(0) as [4G_TM3_use_Num],
		sum(0) as [4G_TM4_use_Num],
		sum(0) as [4G_TM5_use_Num],
		sum(0) as [4G_TM6_use_Num],
		sum(0) as [4G_TM7_use_Num],
		sum(0) as [4G_TM8_use_Num],
		sum(0) as [4G_TM9_use_Num],
		sum(0) as [4G_TMInvalid_use_Num],
		sum(0) as [4G_TMUnknown_use_Num],
		sum(0) as [4G_TM_Den],

		-- Technology LTE:
		sum(0) as [4G_%CA_Num],
		sum(0) as [4G_%CA_Den],
		sum(0) as [4G_BPSK_Use_Num],
		sum(0) as [4G_QPSK_Use_Num],
		sum(0) as [4G_16QAM_Use_Num],
		sum(0) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],
		sum(0) as [4G_QPSK_Use_Den],
		sum(0) as [4G_16QAM_Use_Den],
		sum(0) as [4G_64QAM_Use_Den],

		sum(0) as [4G_stats_Den],
		sum(0) as [RSRP_Lin_Num],
		sum(0) as [RSRQ_Lin_Num],
		sum(0) as [SINR_Lin_Num],			
		sum(0) as [RSRP_Lin_Den],
		sum(0) as [RSRQ_Lin_Den],
		sum(0) as [SINR_Lin_Den],		

		--New KPIs:
		sum(0) as [MIMO_num],
		sum(0) as [RI1_num],
		sum(0) as [RI2_num],
		sum(0) as [MIMO_den],
		sum(0) as [RI1_den],
		sum(0) as [RI2_den],
		sum(0) as RBs_Allocated_Den,
		sum(0) as RBs_Allocated_Num,
		max(0) as RBs_Allocated_Max,	
	
		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		sum(0) as [1_N],	sum(0) as [2_N],	sum(0) as [3_N],	sum(0) as [4_N],	sum(0) as [5_N],	sum(0) as [6_N],	sum(0) as [7_N],	sum(0) as [8_N],	sum(0) as [9_N],	sum(0) as [10_N],
		sum(0) as [11_N],	sum(0) as [12_N],	sum(0) as [13_N],	sum(0) as [14_N],	sum(0) as [15_N],	sum(0) as [16_N],	sum(0) as [17_N],	sum(0) as [18_N],	sum(0) as [19_N],	sum(0) as [20_N],
		sum(0) as [21_N],	sum(0) as [22_N],	sum(0) as [23_N],	sum(0) as [24_N],	sum(0) as [25_N],	sum(0) as [26_N],	sum(0) as [27_N],	sum(0) as [28_N],	sum(0) as [29_N],	sum(0) as [30_N],
		sum(0) as [31_N],	sum(0) as [32_N],	sum(0) as [33_N],	sum(0) as [34_N],	sum(0) as [35_N],	sum(0) as [36_N],	sum(0) as [37_N],	sum(0) as [38_N],	sum(0) as [39_N],	sum(0) as [40_N],
		sum(0) as [41_N],	sum(0) as [42_N],	sum(0) as [43_N],	sum(0) as [44_N],	sum(0) as [45_N],	sum(0) as [46_N],	sum(0) as [47_N],	sum(0) as [48_N],	sum(0) as [49_N],	sum(0) as [50_N],
		sum(0) as [51_N],	sum(0) as [52_N],	sum(0) as [53_N],	sum(0) as [54_N],	sum(0) as [55_N],	sum(0) as [56_N],	sum(0) as [57_N],	sum(0) as [58_N],	sum(0) as [59_N],	sum(0) as [60_N],
		sum(0) as [61_N],	sum(0) as [62_N],	sum(0) as [63_N],	sum(0) as [64_N],	sum(0) as [65_N],	sum(0) as [66_N]
	
		--null as Region_Road_VF, null as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,sum(0) as [1]	,sum(0) as [2]	,sum(0) as [3]	,sum(0) as [4]	,sum(0) as [5]	,sum(0) as [6]	,sum(0) as [7]	,sum(0) as [8]	,sum(0) as [9]	,sum(0) as [10]
		,sum(0) as [11]	,sum(0) as [12]	,sum(0) as [13]	,sum(0) as [14]	,sum(0) as [15]	,sum(0) as [16]	,sum(0) as [17]	,sum(0) as [18]	,sum(0) as [19]	,sum(0) as [20]
		,sum(0) as [21]	,sum(0) as [22]	,sum(0) as [23]	,sum(0) as [24]	,sum(0) as [25]	,sum(0) as [26]	,sum(0) as [27]	,sum(0) as [28]	,sum(0) as [29]	,sum(0) as [30]
		,sum(0) as [31]	,sum(0) as [32]	,sum(0) as [33]	,sum(0) as [34]	,sum(0) as [35]	,sum(0) as [36]	,sum(0) as [37]	,sum(0) as [38]	,sum(0) as [39]	,sum(0) as [40]
		,sum(0) as [41],

		-- Parametros de configuracion:
		t.ASideDevice as ASideDevice, t.BSideDevice as BSideDevice, t.SWVersion as SWVersion, 
		max(t.Youtube_Version) as YTB_Version, max(t.url) as YTB_URL		


	from [aggrData4G_ROAD].dbo.[lcc_aggr_sp_MDD_Data_Youtube_HD] t
			left outer join [aggrData4G_ROAD].dbo.[lcc_aggr_sp_MDD_Data_Youtube_HD_4G] YTB4G on (isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(YTB4G.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=YTB4G.mnc and t.Date_Reporting=YTB4G.Date_Reporting and t.entidad=YTB4G.entidad and t.Aggr_Type=YTB4G.Aggr_Type and t.Report_Type=YTB4G.Report_Type and t.meas_round=YTB4G.meas_round)		
		, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine,  t.mnc,  t.meas_round,  t.Date_Reporting,  t.Week_Reporting,  t.entidad,  t.Report_Type, t.Aggr_Type,
		t.ASideDevice, t.BSideDevice, t.SWVersion--, t.Youtube_Version, t.url--, t.Region_VF, t.Region_OSP

	-------------
	insert into [dbo].[_RI_Data_Ejecucion]
	select 'Fin 1.5. Insert Estadisticos 4GOnly y 4GOnly_Roads - DL/UL/WEB/YTB', getdate()


	-------------------------------------
	-- 1.6) Estadisticos	4G_CA_Only	
	-------------------------------------		
	print '1.6. Insert Estadisticos 4G_CA_Only y 4G_CA_Only_Roads - DL/UL/WEB/YTB' 	
	-------------
	-- 4G_CA_Only DL/UL
	insert into _RI_Data_e	
	select		-- 4G_CA_Only - CE_DL
		p.codigo_ine, case when  t.entidad like 'AVE-%' or  t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment, t.mnc, t.meas_round, t.Date_Reporting as meas_date, t.Week_Reporting as meas_week, 
		'4G_CA_Only' as meas_Tech, 'CE_DL' as Test_type, 'Downlink' as Direction,  t.entidad as vf_entity, t.Report_Type, t.Aggr_Type,
	
		-- General:
		sum(OCA.navegaciones) as Num_tests,
		sum(OCA.[fallos de acceso]) as Failed,
		sum(OCA.[fallos de descarga]) as Dropped,
		sum(OCA.[SessionTime]*OCA.navegaciones) as Session_time_Num,
		--sum(OCA.[tiempo de descarga]*OCA.count_throughput) as Session_time_Num,	-- SESSION_TIME de DL/UL, calculado como TRANSFER_TIME - se haría el cambio al calculo correcto en cambio de metodología para evitar salto de valor en QLIK.
		sum(OCA.count_throughput) as Throughput_Den,
		sum(OCA.navegaciones) as Session_time_Den,
		--sum(OCA.count_throughput) as Session_time_Den,
		sum(OCA.Throughput*OCA.count_throughput) as Throughput_Num,
		max(OCA.[Throughput Max]) as Throughput_Max,
		sum(OCA.Count_Throughput_3M) as Throughput_3M_Num,
		sum(OCA.Count_Throughput_1M) as Throughput_1M_Num,
		sum(0) as Throughput_128K_Num,
		sum(0) as Throughput_64K_Num,
		sum(0) as Throughput_384K_Num,
		--CAC 10/08/2017: thput de test sin error y con error
		sum(OCA.Count_Throughput_ALL) as Throughput_with_Error_Den,
		sum(OCA.Throughput_ALL*OCA.Count_Throughput_ALL) as Throughput_with_Error_Num,
		sum(0) as WEB_IP_ACCESS_TIME_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_DEN,
		sum(0) as WEB_HTTP_TRANSFER_TIME_NUM,
		sum(0) as WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_NUM,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,
		
		-- Technology:
		sum(tel.[% GSM]*tel.[Count_%GSM]) as Radio_2G_use_Num,
		sum(tel.[% WCDMA]*tel.[Count_%WCDMA]) as Radio_3G_use_Num,
		sum(tel.[% LTE]*tel.[Count_%LTE]) as Radio_4G_use_Num,
		sum(OCA.navegaciones*(isnull(tel.[% GSM],0)+isnull(tel.[% WCDMA],0)+isnull(tel.[% LTE],0))) as Radio_use_Den,
		sum(tel.[Count_%GSM]) as Radio_2G_use_Den,
		sum(tel.[Count_%WCDMA]) as Radio_3G_use_Den,
		sum(tel.[Count_%LTE]) as Radio_4G_use_Den,

		sum(tel.[% U2100]*tel.[Count_%U2100]) as Radio_U2100_use_Num,
		sum(tel.[% U900]*tel.[Count_%U900]) as Radio_U900_use_Num,
		sum(tel.[% LTE2100]*tel.[Count_%LTE2100]) as Radio_LTE2100_use_Num,
		sum(tel.[% LTE2600]*tel.[Count_%LTE2600]) as Radio_LTE2600_use_Num,
		sum(tel.[% LTE1800]*tel.[Count_%LTE1800]) as Radio_LTE1800_use_Num,
		sum(tel.[% LTE800]*tel.[Count_%LTE800]) as Radio_LTE800_use_Num,
		sum(OCA.navegaciones*(isnull(tel.[% U2100],0)+isnull(tel.[% U900],0)+isnull(tel.[% LTE2100],0)+isnull(tel.[% LTE2600],0)+isnull(tel.[% LTE1800],0)+isnull(tel.[% LTE800],0))) as Radio_Band_Use_Den,
		sum(tel.[Count_%U2100]) as Radio_U2100_use_Den,
		sum(tel.[Count_%U900]) as Radio_U900_use_Den,
		sum(tel.[Count_%LTE2100]) as Radio_LTE2100_use_Den,
		sum(tel.[Count_%LTE2600]) as Radio_LTE2600_use_Den,
		sum(tel.[Count_%LTE1800]) as Radio_LTE1800_use_Den,
		sum(tel.[Count_%LTE800]) as Radio_LTE800_use_Den,

		-- Esta info en 3G, no tienen sentido en 4G_CA_Only:
		sum(0) as [3G_DualCarrier_use_Num],	sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],		sum(0) as [3G_DC_2100_use_Den],
		sum(0) as [3G_DC_900_use_Num],		sum(0) as [3G_DC_900_use_Den],
		sum(0) as [3G_NumCodes_use_Num],	sum(0) as [3G_NumCodes_use_Den],
		sum(0) as [3G_QPSK_use_Num],		sum(0) as [3G_16QAM_use_Num],
		sum(0) as [3G_64QAM_use_Num],		sum(0) as [3G_QPSK_use_Den],
		sum(0) as [3G_16QAM_use_Den],		sum(0) as [3G_64QAM_use_Den],
		sum(0) as [3G_%_SF22_Num],			sum(0) as [3G_%_SF22andSF42_Num],	sum(0) as [3G_%_SF4_Num],	sum(0) as [3G_%_SF42_Num],
		sum(0) as [3G_%_SF22_Den],			sum(0) as [3G_%_SF22andSF42_Den],	sum(0) as [3G_%_SF4_Den],	sum(0) as [3G_%_SF42_Den],
		sum(0) as [3G_%_TTI2ms_Num],		sum(0) as [3G_%_TTI2ms_Den],
		sum(0) as [RSCP_Lin_Num],			sum(0) as [EcI0_Lin_Num],			sum(0) as [RSCP_Lin_Den],		sum(0) as [EcI0_Lin_Den],	

		-- Performance -- Esta info en 3G, no tienen sentido en 4G_CA_Only:
		sum(0) as [3G_CQI],				sum(0) as [3G_DataStats_Den],
		sum(0) as CQI_U900_Num,			sum(0) as CQI_U900_Den,		sum(0) as CQI_U2100_Num,	sum(0) as CQI_U2100_Den,
		sum(0) as [HSPA_PCT_Num],		sum(0) as [HSPA+_PCT_Num],	sum(0) as [HSPA+_DC_PCT_Num],
		sum(0) as [HSPA_PCT_Den],		sum(0) as [HSPA+_PCT_Den],	sum(0) as [HSPA+_DC_PCT_Den],
		sum(0) as [UL_Inter_Lin_Num],	sum(0) as [UL_Inter_Lin_Den],	
	
		-- Performance LTE:
		sum(pfl.[Count_CQI_4G]*pfl.[CQI_4G]) as CQI_4G_Num,
		sum(pfl.Count_CQI_L800*pfl.CQI_L800) as CQI_L800_Num,
		sum(pfl.Count_CQI_L1800*pfl.CQI_L1800) as CQI_L1800_Num,
		sum(pfl.Count_CQI_L2100*pfl.CQI_L2100) as CQI_L2100_Num,
		sum(pfl.Count_CQI_L2600*pfl.CQI_L2600) as CQI_L2600_Num,
		sum(pfl.[Count_CQI_4G]) as CQI_4G_Den,
		sum(pfl.Count_CQI_L800) as CQI_L800_Den,
		sum(pfl.Count_CQI_L1800) as CQI_L1800_Den,
		sum(pfl.Count_CQI_L2100) as CQI_L2100_Den,
		sum(pfl.Count_CQI_L2600) as CQI_L2600_Den,

		sum(pfl.Count_LTE_5Mhz_SC *pfl.LTE_5Mhz_SC_PCT) as LTE_5Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_10Mhz_SC*pfl.LTE_10Mhz_SC_PCT) as LTE_10Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_15Mhz_SC*pfl.LTE_15Mhz_SC_PCT) as LTE_15Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_20Mhz_SC*pfl.LTE_20Mhz_SC_PCT) as LTE_20Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_15Mhz_CA*pfl.LTE_15Mhz_CA_PCT) as LTE_15Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_20Mhz_CA*pfl.LTE_20Mhz_CA_PCT) as LTE_20Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_25Mhz_CA*pfl.LTE_25Mhz_CA_PCT) as LTE_25Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_30Mhz_CA*pfl.LTE_30Mhz_CA_PCT) as LTE_30Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_35Mhz_CA*pfl.LTE_35Mhz_CA_PCT) as LTE_35Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_40Mhz_CA*pfl.LTE_40Mhz_CA_PCT) as LTE_40Mhz_CA_Use_Num,	
		sum(pfl.Count_LTE_5Mhz_SC) as LTE_5Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_10Mhz_SC) as LTE_10Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_15Mhz_SC) as LTE_15Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_20Mhz_SC) as LTE_20Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_15Mhz_CA) as LTE_15Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_20Mhz_CA) as LTE_20Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_25Mhz_CA) as LTE_25Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_30Mhz_CA) as LTE_30Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_35Mhz_CA) as LTE_35Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_40Mhz_CA) as LTE_40Mhz_CA_Use_Den,	
	
		sum((isnull(pfl.Count_LTE_5Mhz_SC,0) 
		 --    +isnull(pfl.Count_LTE_10Mhz_SC,0) +isnull(pfl.Count_LTE_15Mhz_SC,0) +isnull(pfl.Count_LTE_20Mhz_SC,0) +
		 --    isnull(pfl.Count_LTE_15Mhz_CA,0) +isnull(pfl.Count_LTE_20Mhz_CA,0) +isnull(pfl.Count_LTE_25Mhz_CA,0) +isnull(pfl.Count_LTE_30Mhz_CA,0) +
		 --    isnull(pfl.Count_LTE_35Mhz_CA,0) +isnull(pfl.Count_LTE_40Mhz_CA,0)
			)
			*(
			pfl.LTE_5Mhz_SC_PCT+pfl.LTE_10Mhz_SC_PCT+pfl.LTE_15Mhz_SC_PCT+pfl.LTE_20Mhz_SC_PCT+pfl.LTE_15Mhz_CA_PCT+
			pfl.LTE_20Mhz_CA_PCT+pfl.LTE_25Mhz_CA_PCT+pfl.LTE_30Mhz_CA_PCT+pfl.LTE_35Mhz_CA_PCT+pfl.LTE_40Mhz_CA_PCT
			)) as LTE_BW_use_den,	

		sum(pfl.[ RBs]*pfl.[Count_RBs]) as [4G_RBs_use_Num],
		sum(pfl.[Count_RBs]) as [4G_RBs_use_Den],

		sum(pfl.[ % TM1]* ([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM1_use_Num],
		sum(pfl.[ % TM2]* ([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM2_use_Num],
		sum(pfl.[ % TM3]* ([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM3_use_Num],
		sum(pfl.[ % TM4]* ([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM4_use_Num],
		sum(pfl.[ % MIMO]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM5_use_Num],
		sum(pfl.[ % TM6]* ([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM6_use_Num],
		sum(pfl.[ % TM7]* ([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM7_use_Num],
		sum(0) as [4G_TM8_use_Num],
		sum(0) as [4G_TM9_use_Num],
		sum(pfl.[ % TM Invalid]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TMInvalid_use_Num],
		sum(pfl.[ % TM Unknown]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TMUnknown_use_Num],
		sum([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown]) as [4G_TM_Den],

		-- Technology LTE:
		sum(tel.[Count_%CA]*tel.[% CA]) as [4G_%CA_Num],
		sum(tel.[Count_%CA]) as [4G_%CA_Den],
		sum(0) as [4G_BPSK_Use_Num],
		sum((tel.QPSK/100.0)*tel.Count_QPSK) as [4G_QPSK_Use_Num],
		sum((tel.[16QAM]/100.0)*tel.Count_16QAM) as [4G_16QAM_Use_Num],
		sum((tel.[64QAM]/100.0)*tel.Count_64QAM) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],
		sum(tel.Count_QPSK) as [4G_QPSK_Use_Den],
		sum(tel.Count_16QAM) as [4G_16QAM_Use_Den],
		sum(tel.Count_64QAM) as [4G_64QAM_Use_Den],

		sum((isnull(pfl.Count_CQI_L800,0)+isnull(pfl.Count_CQI_L1800,0)+isnull(pfl.Count_CQI_L2100,0)+isnull(pfl.Count_CQI_L2600,0))*(isnull(tel.[64QAM]/100.0,0)+isnull(tel.[16QAM]/100.0,0)+isnull(tel.QPSK/100.0,0)))  as [4G_stats_Den],

		sum(tel.[RSRP_Lin]*tel.[Count_RSRP_Lin]) as [RSRP_Lin_Num],
		sum(tel.[RSRQ_Lin]*tel.[Count_RSRQ_Lin]) as [RSRQ_Lin_Num],	
		sum(tel.[SINR_Lin]*tel.[Count_SINR_Lin]) as [SINR_Lin_Num],	
		sum(tel.[Count_RSRP_Lin]) as [RSRP_Lin_Den],	
		sum(tel.[Count_RSRQ_Lin]) as [RSRQ_Lin_Den],	
		sum(tel.[Count_SINR_Lin]) as [SINR_Lin_Den],	

		-- New KPIs:
		sum(newk.[MIMO_CE_num]) as [MIMO_num],
		sum(newk.[RI1_CE_num]) as [RI1_num],
		sum(newk.[RI2_CE_num]) as [RI2_num],
		sum(newk.[MIMO_CE_den]) as [MIMO_den],
		sum(newk.[RI1_CE_den]) as [RI1_den],
		sum(newk.[RI2_CE_den]) as [RI2_den],
		sum(newk.Count_RBs_CE) as RBs_Allocated_Den,
		sum(newk.Count_RBs_CE*isnull(newk.[RBs CE],0)) as RBs_Allocated_Num,
		max(newk.[Max RBs CE]) as RBs_Allocated_Max,

		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:
		sum(isnull(OCA.[ 0-2Mbps_N ],0)) as [1_N],		sum(isnull(OCA.[ 2-4Mbps_N ],0)) as [2_N],		sum(isnull(OCA.[ 4-6Mbps_N ],0)) as [3_N],		sum(isnull(OCA.[ 6-8Mbps_N ],0)) as [4_N],		sum(isnull(OCA.[ 8-10Mbps_N ],0)) as [5_N],
		sum(isnull(OCA.[ 10-12Mbps_N ],0)) as [6_N],	sum(isnull(OCA.[ 12-14Mbps_N ],0)) as [7_N],	sum(isnull(OCA.[ 14-16Mbps_N ],0)) as [8_N],	sum(isnull(OCA.[ 16-18Mbps_N ],0)) as [9_N],	sum(isnull(OCA.[ 18-20Mbps_N ],0)) as [10_N],
		sum(isnull(OCA.[ 20-22Mbps_N ],0)) as [11_N],	sum(isnull(OCA.[ 22-24Mbps_N ],0)) as [12_N],	sum(isnull(OCA.[ 24-26Mbps_N ],0)) as [13_N],	sum(isnull(OCA.[ 26-28Mbps_N ],0)) as [14_N],	sum(isnull(OCA.[ 28-30Mbps_N ],0)) as [15_N],
		sum(isnull(OCA.[ 30-32Mbps_N ],0)) as [16_N],	sum(isnull(OCA.[ 32-34Mbps_N ],0)) as [17_N],	sum(isnull(OCA.[ 34-36Mbps_N ],0)) as [18_N],	sum(isnull(OCA.[ 36-38Mbps_N ],0)) as [19_N],	sum(isnull(OCA.[ 38-40Mbps_N ],0)) as [20_N],
		sum(isnull(OCA.[ 40-42Mbps_N ],0)) as [21_N],	sum(isnull(OCA.[ 42-44Mbps_N ],0)) as [22_N],	sum(isnull(OCA.[ 44-46Mbps_N ],0)) as [23_N],	sum(isnull(OCA.[ 46-48Mbps_N ],0)) as [24_N],	sum(isnull(OCA.[ 48-50Mbps_N ],0)) as [25_N],
		sum(isnull(OCA.[ 50-52Mbps_N ],0)) as [26_N],	sum(isnull(OCA.[ 52-54Mbps_N ],0)) as [27_N],	sum(isnull(OCA.[ 54-56Mbps_N ],0)) as [28_N],	sum(isnull(OCA.[ 56-58Mbps_N ],0)) as [29_N],	sum(isnull(OCA.[ 58-60Mbps_N ],0)) as [30_N],
		sum(isnull(OCA.[ 60-62Mbps_N ],0)) as [31_N],	sum(isnull(OCA.[ 62-64Mbps_N ],0)) as [32_N],	sum(isnull(OCA.[ 64-66Mbps_N ],0)) as [33_N],	sum(isnull(OCA.[ 66-68Mbps_N ],0)) as [34_N],	sum(isnull(OCA.[ 68-70Mbps_N ],0)) as [35_N],
		sum(isnull(OCA.[ 70-72Mbps_N ],0)) as [36_N],	sum(isnull(OCA.[ 72-74Mbps_N ],0)) as [37_N],	sum(isnull(OCA.[ 74-76Mbps_N ],0)) as [38_N],	sum(isnull(OCA.[ 76-78Mbps_N ],0)) as [39_N],	sum(isnull(OCA.[ 78-80Mbps_N ],0)) as [40_N],
		sum(isnull(OCA.[ 80-82Mbps_N ],0)) as [41_N],	sum(isnull(OCA.[ 82-84Mbps_N ],0)) as [42_N],	sum(isnull(OCA.[ 84-86Mbps_N ],0)) as [43_N],	sum(isnull(OCA.[ 86-88Mbps_N ],0)) as [44_N],	sum(isnull(OCA.[ 88-90Mbps_N ],0)) as [45_N],
		sum(isnull(OCA.[ 90-92Mbps_N ],0)) as [46_N],	sum(isnull(OCA.[ 92-94Mbps_N ],0)) as [47_N],	sum(isnull(OCA.[ 94-96Mbps_N ],0)) as [48_N],	sum(isnull(OCA.[ 96-98Mbps_N ],0)) as [49_N],	sum(isnull(OCA.[ 98-100Mbps_N ],0)) as [50_N],
		sum(isnull(OCA.[ >100Mbps_N],0)) as [51_N],	
		sum(0) as [52_N],	sum(0) as [53_N],	sum(0) as [54_N],	sum(0) as [55_N],	sum(0) as [56_N],	sum(0) as [57_N],	sum(0) as [58_N],	sum(0) as [59_N],	sum(0) as [60_N],
		sum(0) as [61_N],	sum(0) as [62_N],	sum(0) as [63_N],	sum(0) as [64_N],	sum(0) as [65_N],	sum(0) as [66_N]
	
		--null as Region_Road_VF, null as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,sum(isnull(OCA.[ 0-5Mbps],0)) as [1]		,sum(isnull(OCA.[ 5-10Mbps],0)) as [2]		,sum(isnull(OCA.[ 10-15Mbps],0)) as [3]		,sum(isnull(OCA.[ 15-20Mbps],0)) as [4]		,sum(isnull(OCA.[ 20-25Mbps],0)) as [5]
		,sum(isnull(OCA.[ 25-30Mbps],0)) as [6]		,sum(isnull(OCA.[ 30-35Mbps],0)) as [7]		,sum(isnull(OCA.[ 35-40Mbps],0)) as [8]		,sum(isnull(OCA.[ 40-45Mbps],0)) as [9]		,sum(isnull(OCA.[ 45-50Mbps],0)) as [10]
		,sum(isnull(OCA.[ 50-55Mbps],0)) as [11]	,sum(isnull(OCA.[ 55-60Mbps],0)) as [12]	,sum(isnull(OCA.[ 60-65Mbps],0)) as [13]	,sum(isnull(OCA.[ 65-70Mbps],0)) as [14]	,sum(isnull(OCA.[ 70-75Mbps],0)) as [15]
		,sum(isnull(OCA.[ 75-80Mbps],0)) as [16]	,sum(isnull(OCA.[ 80-85Mbps],0)) as [17]	,sum(isnull(OCA.[ 85-90Mbps],0)) as [18]	,sum(isnull(OCA.[ 90-95Mbps],0)) as [19]	,sum(isnull(OCA.[ 95-100Mbps],0)) as [20]
		,sum(isnull(OCA.[ 100-105Mbps],0)) as [21]	,sum(isnull(OCA.[ 105-110Mbps],0)) as [22]	,sum(isnull(OCA.[ 110-115Mbps],0)) as [23]	,sum(isnull(OCA.[ 115-120Mbps],0)) as [24]	,sum(isnull(OCA.[ 120-125Mbps],0)) as [25]
		,sum(isnull(OCA.[ 125-130Mbps],0)) as [26]	,sum(isnull(OCA.[ 130-135Mbps],0)) as [27]	,sum(isnull(OCA.[ 135-140Mbps],0)) as [28]	,sum(isnull(OCA.[ 140-145Mbps],0)) as [29]	,sum(isnull(OCA.[ 145-150Mbps],0)) as [30]
		,sum(isnull(OCA.[ >150Mbps],0)) as [31]
		,sum(0) as [32]	,sum(0) as [33]	,sum(0) as [34]	,sum(0) as [35]	,sum(0) as [36]	,sum(0) as [37]	,sum(0) as [38]	,sum(0) as [39]	,sum(0) as [40]	,sum(0) as [41],

		-- Parametros de configuracion:
		pfl.ASideDevice as ASideDevice, pfl.BSideDevice as BSideDevice, pfl.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_DL_Thput_CE] t
				left outer join  [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_DL_Performance_CE_LTE_CA_ONLY] pfl
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(pfl.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=pfl.mnc and t.Date_Reporting=pfl.Date_Reporting and t.entidad=pfl.entidad and t.Aggr_Type=pfl.Aggr_Type and t.Report_Type=pfl.Report_Type and t.meas_round=pfl.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_DL_Technology_CE_LTE_CA_ONLY] tel
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(tel.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=tel.mnc and t.Date_Reporting=tel.Date_Reporting and t.entidad=tel.entidad and t.Aggr_Type=tel.Aggr_Type and t.Report_Type=tel.Report_Type and t.meas_round=tel.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_NEW_KPIs_DL_LTE_CA_ONLY] newk
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(newk.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=newk.mnc and t.Date_Reporting=newk.Date_Reporting and t.entidad=newk.entidad and t.Aggr_Type=newk.Aggr_Type and t.Report_Type=newk.Report_Type and t.meas_round=newk.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_DL_Thput_CE_LTE_CA_ONLY] OCA
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(OCA.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=OCA.mnc and t.Date_Reporting=OCA.Date_Reporting and t.entidad=OCA.entidad and t.Aggr_Type=OCA.Aggr_Type and t.Report_Type=OCA.Report_Type and t.meas_round=OCA.meas_round
				, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, case when  t.entidad like 'AVE-%' or  t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end, t.mnc, t.meas_round, t.Date_Reporting, t.Week_Reporting, t.entidad, t.Report_Type, t.Aggr_Type,
		pfl.ASideDevice, pfl.BSideDevice, pfl.SWVersion--, t.Region_VF, t.Region_OSP

	-----------
	union all	-- Road 4G_CA_Only - CE_DL
	select  
		p.codigo_ine, 'Roads' vf_environment, t.mnc, t.meas_round, t.Date_Reporting as meas_date, t.Week_Reporting as meas_week, 
		'Road 4G_CA_Only' as meas_Tech, 'CE_DL' as Test_type, 'Downlink' as Direction,  t.entidad as vf_entity, t.Report_Type, t.Aggr_Type,
	
		-- General:
		sum(OCA.navegaciones) as Num_tests,
		sum(OCA.[fallos de acceso]) as Failed,
		sum(OCA.[fallos de descarga]) as Dropped,
		sum(OCA.[SessionTime]*OCA.navegaciones) as Session_time_Num,
		--sum(OCA.[tiempo de descarga]*OCA.count_throughput) as Session_time_Num,	-- SESSION_TIME de DL/UL, calculado como TRANSFER_TIME - se haría el cambio al calculo correcto en cambio de metodología para evitar salto de valor en QLIK.
		sum(OCA.count_throughput) as Throughput_Den,
		sum(OCA.navegaciones) as Session_time_Den,
		--sum(OCA.count_throughput) as Session_time_Den,
		sum(OCA.Throughput*OCA.count_throughput) as Throughput_Num,
		max(OCA.[Throughput Max]) as Throughput_Max,
		sum(OCA.Count_Throughput_3M) as Throughput_3M_Num,
		sum(OCA.Count_Throughput_1M) as Throughput_1M_Num,
		sum(0) as Throughput_128K_Num,
		sum(0) as Throughput_64K_Num,
		sum(0) as Throughput_384K_Num,
		--CAC 10/08/2017: thput de test sin error y con error
		sum(OCA.Count_Throughput_ALL) as Throughput_with_Error_Den,
		sum(OCA.Throughput_ALL*OCA.Count_Throughput_ALL) as Throughput_with_Error_Num,
		sum(0) as WEB_IP_ACCESS_TIME_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_DEN,
		sum(0) as WEB_HTTP_TRANSFER_TIME_NUM,
		sum(0) as WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_NUM,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(tel.[% GSM]*tel.[Count_%GSM]) as Radio_2G_use_Num,
		sum(tel.[% WCDMA]*tel.[Count_%WCDMA]) as Radio_3G_use_Num,
		sum(tel.[% LTE]*tel.[Count_%LTE]) as Radio_4G_use_Num,
		sum(OCA.navegaciones*(isnull(tel.[% GSM],0)+isnull(tel.[% WCDMA],0)+isnull(tel.[% LTE],0))) as Radio_use_Den,
		sum(tel.[Count_%GSM]) as Radio_2G_use_Den,
		sum(tel.[Count_%WCDMA]) as Radio_3G_use_Den,
		sum(tel.[Count_%LTE]) as Radio_4G_use_Den,

		sum(tel.[% U2100]*tel.[Count_%U2100]) as Radio_U2100_use_Num,
		sum(tel.[% U900]*tel.[Count_%U900]) as Radio_U900_use_Num,
		sum(tel.[% LTE2100]*tel.[Count_%LTE2100]) as Radio_LTE2100_use_Num,
		sum(tel.[% LTE2600]*tel.[Count_%LTE2600]) as Radio_LTE2600_use_Num,
		sum(tel.[% LTE1800]*tel.[Count_%LTE1800]) as Radio_LTE1800_use_Num,
		sum(tel.[% LTE800]*tel.[Count_%LTE800]) as Radio_LTE800_use_Num,
		sum(OCA.navegaciones*(isnull(tel.[% U2100],0)+isnull(tel.[% U900],0)+isnull(tel.[% LTE2100],0)+isnull(tel.[% LTE2600],0)+isnull(tel.[% LTE1800],0)+isnull(tel.[% LTE800],0))) as Radio_Band_Use_Den,
		sum(tel.[Count_%U2100]) as Radio_U2100_use_Den,
		sum(tel.[Count_%U900]) as Radio_U900_use_Den,
		sum(tel.[Count_%LTE2100]) as Radio_LTE2100_use_Den,
		sum(tel.[Count_%LTE2600]) as Radio_LTE2600_use_Den,
		sum(tel.[Count_%LTE1800]) as Radio_LTE1800_use_Den,
		sum(tel.[Count_%LTE800]) as Radio_LTE800_use_Den,

		-- Esta info en 3G, no tienen sentido en 4G_CA_Only:
		sum(0) as [3G_DualCarrier_use_Num],	sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],		sum(0) as [3G_DC_2100_use_Den],
		sum(0) as [3G_DC_900_use_Num],		sum(0) as [3G_DC_900_use_Den],
		sum(0) as [3G_NumCodes_use_Num],	sum(0) as [3G_NumCodes_use_Den],
		sum(0) as [3G_QPSK_use_Num],		sum(0) as [3G_16QAM_use_Num],
		sum(0) as [3G_64QAM_use_Num],		sum(0) as [3G_QPSK_use_Den],
		sum(0) as [3G_16QAM_use_Den],		sum(0) as [3G_64QAM_use_Den],
		sum(0) as [3G_%_SF22_Num],			sum(0) as [3G_%_SF22andSF42_Num],	sum(0) as [3G_%_SF4_Num],	sum(0) as [3G_%_SF42_Num],
		sum(0) as [3G_%_SF22_Den],			sum(0) as [3G_%_SF22andSF42_Den],	sum(0) as [3G_%_SF4_Den],	sum(0) as [3G_%_SF42_Den],
		sum(0) as [3G_%_TTI2ms_Num],		sum(0) as [3G_%_TTI2ms_Den],
		sum(0) as [RSCP_Lin_Num],			sum(0) as [EcI0_Lin_Num],			sum(0) as [RSCP_Lin_Den],		sum(0) as [EcI0_Lin_Den],	

		-- Performance -- Esta info en 3G, no tienen sentido en 4G_CA_Only:
		sum(0) as [3G_CQI],				sum(0) as [3G_DataStats_Den],
		sum(0) as CQI_U900_Num,			sum(0) as CQI_U900_Den,		sum(0) as CQI_U2100_Num,	sum(0) as CQI_U2100_Den,
		sum(0) as [HSPA_PCT_Num],		sum(0) as [HSPA+_PCT_Num],	sum(0) as [HSPA+_DC_PCT_Num],
		sum(0) as [HSPA_PCT_Den],		sum(0) as [HSPA+_PCT_Den],	sum(0) as [HSPA+_DC_PCT_Den],
		sum(0) as [UL_Inter_Lin_Num],	sum(0) as [UL_Inter_Lin_Den],	
	
		-- Performance LTE:
		sum(pfl.[Count_CQI_4G]*pfl.[CQI_4G]) as CQI_4G_Num,
		sum(pfl.Count_CQI_L800*pfl.CQI_L800) as CQI_L800_Num,
		sum(pfl.Count_CQI_L1800*pfl.CQI_L1800) as CQI_L1800_Num,
		sum(pfl.Count_CQI_L2100*pfl.CQI_L2100) as CQI_L2100_Num,
		sum(pfl.Count_CQI_L2600*pfl.CQI_L2600) as CQI_L2600_Num,
		sum(pfl.[Count_CQI_4G]) as CQI_4G_Den,
		sum(pfl.Count_CQI_L800) as CQI_L800_Den,
		sum(pfl.Count_CQI_L1800) as CQI_L1800_Den,
		sum(pfl.Count_CQI_L2100) as CQI_L2100_Den,
		sum(pfl.Count_CQI_L2600) as CQI_L2600_Den,

		sum(pfl.Count_LTE_5Mhz_SC *pfl.LTE_5Mhz_SC_PCT) as LTE_5Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_10Mhz_SC*pfl.LTE_10Mhz_SC_PCT) as LTE_10Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_15Mhz_SC*pfl.LTE_15Mhz_SC_PCT) as LTE_15Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_20Mhz_SC*pfl.LTE_20Mhz_SC_PCT) as LTE_20Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_15Mhz_CA*pfl.LTE_15Mhz_CA_PCT) as LTE_15Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_20Mhz_CA*pfl.LTE_20Mhz_CA_PCT) as LTE_20Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_25Mhz_CA*pfl.LTE_25Mhz_CA_PCT) as LTE_25Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_30Mhz_CA*pfl.LTE_30Mhz_CA_PCT) as LTE_30Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_35Mhz_CA*pfl.LTE_35Mhz_CA_PCT) as LTE_35Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_40Mhz_CA*pfl.LTE_40Mhz_CA_PCT) as LTE_40Mhz_CA_Use_Num,	
		sum(pfl.Count_LTE_5Mhz_SC) as LTE_5Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_10Mhz_SC) as LTE_10Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_15Mhz_SC) as LTE_15Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_20Mhz_SC) as LTE_20Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_15Mhz_CA) as LTE_15Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_20Mhz_CA) as LTE_20Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_25Mhz_CA) as LTE_25Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_30Mhz_CA) as LTE_30Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_35Mhz_CA) as LTE_35Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_40Mhz_CA) as LTE_40Mhz_CA_Use_Den,	

		sum((isnull(pfl.Count_LTE_5Mhz_SC,0) 
		 --    +isnull(pfl.Count_LTE_10Mhz_SC,0) +isnull(pfl.Count_LTE_15Mhz_SC,0) +isnull(pfl.Count_LTE_20Mhz_SC,0) +
		 --    isnull(pfl.Count_LTE_15Mhz_CA,0) +isnull(pfl.Count_LTE_20Mhz_CA,0) +isnull(pfl.Count_LTE_25Mhz_CA,0) +isnull(pfl.Count_LTE_30Mhz_CA,0) +
		 --    isnull(pfl.Count_LTE_35Mhz_CA,0) +isnull(pfl.Count_LTE_40Mhz_CA,0)
			)
			*(
			pfl.LTE_5Mhz_SC_PCT+pfl.LTE_10Mhz_SC_PCT+pfl.LTE_15Mhz_SC_PCT+pfl.LTE_20Mhz_SC_PCT+pfl.LTE_15Mhz_CA_PCT+
			pfl.LTE_20Mhz_CA_PCT+pfl.LTE_25Mhz_CA_PCT+pfl.LTE_30Mhz_CA_PCT+pfl.LTE_35Mhz_CA_PCT+pfl.LTE_40Mhz_CA_PCT
			)
			) as LTE_BW_use_den,

		sum(pfl.[ RBs]*pfl.[Count_RBs]) as [4G_RBs_use_Num],
		sum(pfl.[Count_RBs]) as [4G_RBs_use_Den],

		sum(pfl.[ % TM1]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM1_use_Num],
		sum(pfl.[ % TM2]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM2_use_Num],
		sum(pfl.[ % TM3]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM3_use_Num],
		sum(pfl.[ % TM4]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM4_use_Num],
		sum(pfl.[ % MIMO]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM5_use_Num],
		sum(pfl.[ % TM6]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM6_use_Num],
		sum(pfl.[ % TM7]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM7_use_Num],
		sum(0) as [4G_TM8_use_Num],
		sum(0) as [4G_TM9_use_Num],
		sum(pfl.[ % TM Invalid]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TMInvalid_use_Num],
		sum(pfl.[ % TM Unknown]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TMUnknown_use_Num],
		sum([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown]) as [4G_TM_Den],

		-- Technology LTE:
		sum(tel.[Count_%CA]*tel.[% CA]) as [4G_%CA_Num],
		sum(tel.[Count_%CA]) as [4G_%CA_Den],
		sum(0) as [4G_BPSK_Use_Num],
		sum((tel.QPSK/100.0)*tel.Count_QPSK) as [4G_QPSK_Use_Num],
		sum((tel.[16QAM]/100.0)*tel.Count_16QAM) as [4G_16QAM_Use_Num],
		sum((tel.[64QAM]/100.0)*tel.Count_64QAM) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],
		sum(tel.Count_QPSK) as [4G_QPSK_Use_Den],
		sum(tel.Count_16QAM) as [4G_16QAM_Use_Den],
		sum(tel.Count_64QAM) as [4G_64QAM_Use_Den],

		sum((isnull(pfl.Count_CQI_L800,0)+isnull(pfl.Count_CQI_L1800,0)+isnull(pfl.Count_CQI_L2100,0)+isnull(pfl.Count_CQI_L2600,0))*(isnull(tel.[64QAM]/100.0,0)+isnull(tel.[16QAM]/100.0,0)+isnull(tel.QPSK/100.0,0))) as [4G_stats_Den],
	
		sum(tel.[RSRP_Lin]*tel.[Count_RSRP_Lin]) as [RSRP_Lin_Num],
		sum(tel.[RSRQ_Lin]*tel.[Count_RSRQ_Lin]) as [RSRQ_Lin_Num],	
		sum(tel.[SINR_Lin]*tel.[Count_SINR_Lin]) as [SINR_Lin_Num],	
		sum(tel.[Count_RSRP_Lin]) as [RSRP_Lin_Den],	
		sum(tel.[Count_RSRQ_Lin]) as [RSRQ_Lin_Den],	
		sum(tel.[Count_SINR_Lin]) as [SINR_Lin_Den],
	
		-- New KPIs:
		sum(newk.[MIMO_CE_num]) as [MIMO_num],
		sum(newk.[RI1_CE_num]) as [RI1_num],
		sum(newk.[RI2_CE_num]) as [RI2_num],
		sum(newk.[MIMO_CE_den]) as [MIMO_den],
		sum(newk.[RI1_CE_den]) as [RI1_den],
		sum(newk.[RI2_CE_den]) as [RI2_den],
		sum(newk.Count_RBs_CE) as RBs_Allocated_Den,
		sum(newk.Count_RBs_CE*isnull(newk.[RBs CE],0)) as RBs_Allocated_Num,
		max(newk.[Max RBs CE]) as RBs_Allocated_Max,

		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:
		sum(OCA.[ 0-2Mbps_N ]) as [1_N],	sum(OCA.[ 2-4Mbps_N ]) as [2_N],	sum(OCA.[ 4-6Mbps_N ]) as [3_N],	sum(OCA.[ 6-8Mbps_N ]) as [4_N],	sum(OCA.[ 8-10Mbps_N ]) as [5_N],
		sum(OCA.[ 10-12Mbps_N ]) as [6_N],	sum(OCA.[ 12-14Mbps_N ]) as [7_N],	sum(OCA.[ 14-16Mbps_N ]) as [8_N],	sum(OCA.[ 16-18Mbps_N ]) as [9_N],	sum(OCA.[ 18-20Mbps_N ]) as [10_N],
		sum(OCA.[ 20-22Mbps_N ]) as [11_N],	sum(OCA.[ 22-24Mbps_N ]) as [12_N],	sum(OCA.[ 24-26Mbps_N ]) as [13_N],	sum(OCA.[ 26-28Mbps_N ]) as [14_N],	sum(OCA.[ 28-30Mbps_N ]) as [15_N],
		sum(OCA.[ 30-32Mbps_N ]) as [16_N],	sum(OCA.[ 32-34Mbps_N ]) as [17_N],	sum(OCA.[ 34-36Mbps_N ]) as [18_N],	sum(OCA.[ 36-38Mbps_N ]) as [19_N],	sum(OCA.[ 38-40Mbps_N ]) as [20_N],
		sum(OCA.[ 40-42Mbps_N ]) as [21_N],	sum(OCA.[ 42-44Mbps_N ]) as [22_N],	sum(OCA.[ 44-46Mbps_N ]) as [23_N],	sum(OCA.[ 46-48Mbps_N ]) as [24_N],	sum(OCA.[ 48-50Mbps_N ]) as [25_N],
		sum(OCA.[ 50-52Mbps_N ]) as [26_N],	sum(OCA.[ 52-54Mbps_N ]) as [27_N],	sum(OCA.[ 54-56Mbps_N ]) as [28_N],	sum(OCA.[ 56-58Mbps_N ]) as [29_N],	sum(OCA.[ 58-60Mbps_N ]) as [30_N],
		sum(OCA.[ 60-62Mbps_N ]) as [31_N],	sum(OCA.[ 62-64Mbps_N ]) as [32_N],	sum(OCA.[ 64-66Mbps_N ]) as [33_N],	sum(OCA.[ 66-68Mbps_N ]) as [34_N],	sum(OCA.[ 68-70Mbps_N ]) as [35_N],
		sum(OCA.[ 70-72Mbps_N ]) as [36_N],	sum(OCA.[ 72-74Mbps_N ]) as [37_N],	sum(OCA.[ 74-76Mbps_N ]) as [38_N],	sum(OCA.[ 76-78Mbps_N ]) as [39_N],	sum(OCA.[ 78-80Mbps_N ]) as [40_N],
		sum(OCA.[ 80-82Mbps_N ]) as [41_N],	sum(OCA.[ 82-84Mbps_N ]) as [42_N],	sum(OCA.[ 84-86Mbps_N ]) as [43_N],	sum(OCA.[ 86-88Mbps_N ]) as [44_N],	sum(OCA.[ 88-90Mbps_N ]) as [45_N],
		sum(OCA.[ 90-92Mbps_N ]) as [46_N],	sum(OCA.[ 92-94Mbps_N ]) as [47_N],	sum(OCA.[ 94-96Mbps_N ]) as [48_N],	sum(OCA.[ 96-98Mbps_N ]) as [49_N],	sum(OCA.[ 98-100Mbps_N ]) as [50_N],
		sum(OCA.[ >100Mbps_N]) as [51_N],
		null as [52_N],	null as [53_N],	null as [54_N],	null as [55_N],	null as [56_N],	null as [57_N],	null as [58_N],	null as [59_N],	null as [60_N],
		null as [61_N],	null as [62_N],	null as [63_N],	null as [64_N],	null as [65_N],	null as [66_N]
	
		--t.Region_VF as Region_Road_VF, t.Region_OSP as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,sum(OCA.[ 0-5Mbps]) as [1]			,sum(OCA.[ 5-10Mbps]) as [2]		,sum(OCA.[ 10-15Mbps]) as [3]		,sum(OCA.[ 15-20Mbps]) as [4]		,sum(OCA.[ 20-25Mbps]) as [5]
		,sum(OCA.[ 25-30Mbps]) as [6]		,sum(OCA.[ 30-35Mbps]) as [7]		,sum(OCA.[ 35-40Mbps]) as [8]		,sum(OCA.[ 40-45Mbps]) as [9]		,sum(OCA.[ 45-50Mbps]) as [10]
		,sum(OCA.[ 50-55Mbps]) as [11]		,sum(OCA.[ 55-60Mbps]) as [12]		,sum(OCA.[ 60-65Mbps]) as [13]		,sum(OCA.[ 65-70Mbps]) as [14]		,sum(OCA.[ 70-75Mbps]) as [15]
		,sum(OCA.[ 75-80Mbps]) as [16]		,sum(OCA.[ 80-85Mbps]) as [17]		,sum(OCA.[ 85-90Mbps]) as [18]		,sum(OCA.[ 90-95Mbps]) as [19]		,sum(OCA.[ 95-100Mbps]) as [20]
		,sum(OCA.[ 100-105Mbps]) as [21]	,sum(OCA.[ 105-110Mbps]) as [22]	,sum(OCA.[ 110-115Mbps]) as [23]	,sum(OCA.[ 115-120Mbps]) as [24]	,sum(OCA.[ 120-125Mbps]) as [25]
		,sum(OCA.[ 125-130Mbps]) as [26]	,sum(OCA.[ 130-135Mbps]) as [27]	,sum(OCA.[ 135-140Mbps]) as [28]	,sum(OCA.[ 140-145Mbps]) as [29]	,sum(OCA.[ 145-150Mbps]) as [30]
		,sum(OCA.[ >150Mbps]) as [31]
		,null as [32]	,null as [33]	,null as [34]	,null as [35]	,null as [36]	,null as [37]	,null as [38]	,null as [39]	,null as [40]	,null as [41],

		-- Parametros de configuracion:
		pfl.ASideDevice as ASideDevice, pfl.BSideDevice as BSideDevice, pfl.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from	[aggrData4G_ROAD].dbo.[lcc_aggr_sp_MDD_Data_DL_Thput_CE] t
				left outer join [aggrData4G_ROAD].[dbo].[lcc_aggr_sp_MDD_Data_DL_Performance_CE_LTE_CA_ONLY] pfl
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(pfl.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=pfl.mnc and t.Date_Reporting=pfl.Date_Reporting and t.entidad=pfl.entidad and t.Aggr_Type=pfl.Aggr_Type and t.Report_Type=pfl.Report_Type and t.meas_round=pfl.meas_round
				left outer join [aggrData4G_ROAD].[dbo].[lcc_aggr_sp_MDD_Data_DL_Technology_CE_LTE_CA_ONLY] tel
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(tel.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=tel.mnc and t.Date_Reporting=tel.Date_Reporting and t.entidad=tel.entidad and t.Aggr_Type=tel.Aggr_Type and t.Report_Type=tel.Report_Type and t.meas_round=tel.meas_round
				left outer join [aggrData4G_ROAD].[dbo].[lcc_aggr_sp_MDD_Data_NEW_KPIs_DL_LTE_CA_ONLY] newk
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(newk.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=newk.mnc and t.Date_Reporting=newk.Date_Reporting and t.entidad=newk.entidad and t.Aggr_Type=newk.Aggr_Type and t.Report_Type=newk.Report_Type and t.meas_round=newk.meas_round
				left outer join [aggrData4G_ROAD].[dbo].[lcc_aggr_sp_MDD_Data_DL_Thput_CE_LTE_CA_ONLY] OCA
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(OCA.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=OCA.mnc and t.Date_Reporting=OCA.Date_Reporting and t.entidad=OCA.entidad and t.Aggr_Type=OCA.Aggr_Type and t.Report_Type=OCA.Report_Type and t.meas_round=OCA.meas_round
				, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, t.mnc, t.meas_round, t.Date_Reporting, t.Week_Reporting, t.entidad, t.Report_Type, t.Aggr_Type,
		pfl.ASideDevice, pfl.BSideDevice, pfl.SWVersion--, t.Region_VF, t.Region_OSP

	-----------
	union all	-- 4G_CA_Only - CE_UL
	select  
		p.codigo_ine, case when  t.entidad like 'AVE-%' or  t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment, t.mnc, t.meas_round, t.Date_Reporting as meas_date, t.Week_Reporting as meas_week, 
		'4G_CA_Only' as meas_Tech, 'CE_UL' as Test_type, 'Uplink' as Direction,  t.entidad as vf_entity, t.Report_Type, t.Aggr_Type,
	
		-- General:
		sum(OCA.Subidas) as Num_tests,
		sum(OCA.[fallos de acceso]) as Failed,
		sum(OCA.[fallos de descarga]) as Dropped,
		sum(OCA.[SessionTime]*OCA.Subidas) as Session_time_Num,
		--sum(OCA.[Tiempo de subida]*OCA.count_throughput) as Session_time_Num,	-- SESSION_TIME de DL/UL, calculado como TRANSFER_TIME - se haría el cambio al calculo correcto en cambio de metodología para evitar salto de valor en QLIK.
		sum(OCA.count_throughput) as Throughput_Den,
		sum(OCA.Subidas) as Session_time_Den,
		--sum(OCA.count_throughput) as Session_time_Den,
		sum(OCA.Throughput*OCA.count_throughput) as Throughput_Num,
		max(OCA.[Throughput Max]) as Throughput_Max,
		sum(0) as Throughput_3M_Num,
		sum(OCA.Count_Throughput_1M) as Throughput_1M_Num,
		sum(0) as Throughput_128K_Num,
		sum(0) as Throughput_64K_Num,
		sum(0) as Throughput_384K_Num,
		--CAC 10/08/2017: thput de test sin error y con error
		sum(OCA.Count_Throughput_ALL) as Throughput_with_Error_Den,
		sum(OCA.Throughput_ALL*OCA.Count_Throughput_ALL) as Throughput_with_Error_Num,
		sum(0) as WEB_IP_ACCESS_TIME_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_DEN,
		sum(0) as WEB_HTTP_TRANSFER_TIME_NUM,
		sum(0) as WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_NUM,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(tel.[% GSM]*tel.[Count_%GSM]) as Radio_2G_use_Num,
		sum(tel.[% WCDMA]*tel.[Count_%WCDMA]) as Radio_3G_use_Num,
		sum(tel.[% LTE]*tel.[Count_%LTE]) as Radio_4G_use_Num,
		sum(OCA.subidas*(isnull(tel.[% GSM],0)+isnull(tel.[% WCDMA],0)+isnull(tel.[% LTE],0))) as Radio_use_Den,
		sum(tel.[Count_%GSM]) as Radio_2G_use_Den,
		sum(tel.[Count_%WCDMA]) as Radio_3G_use_Den,
		sum(tel.[Count_%LTE]) as Radio_4G_use_Den,

		sum(tel.[% U2100]*tel.[Count_%U2100]) as Radio_U2100_use_Num,
		sum(tel.[% U900]*tel.[Count_%U900]) as Radio_U900_use_Num,
		sum(tel.[% LTE2100]*tel.[Count_%LTE2100]) as Radio_LTE2100_use_Num,
		sum(tel.[% LTE2600]*tel.[Count_%LTE2600]) as Radio_LTE2600_use_Num,
		sum(tel.[% LTE1800]*tel.[Count_%LTE1800]) as Radio_LTE1800_use_Num,
		sum(tel.[% LTE800]*tel.[Count_%LTE800]) as Radio_LTE800_use_Num,
		sum(OCA.subidas*(isnull(tel.[% U2100],0)+isnull(tel.[% U900],0)+isnull(tel.[% LTE2100],0)+isnull(tel.[% LTE2600],0)+isnull(tel.[% LTE1800],0)+isnull(tel.[% LTE800],0))) as Radio_Band_Use_Den,
		sum(tel.[Count_%U2100]) as Radio_U2100_use_Den,
		sum(tel.[Count_%U900]) as Radio_U900_use_Den,
		sum(tel.[Count_%LTE2100]) as Radio_LTE2100_use_Den,
		sum(tel.[Count_%LTE2600]) as Radio_LTE2600_use_Den,
		sum(tel.[Count_%LTE1800]) as Radio_LTE1800_use_Den,
		sum(tel.[Count_%LTE800]) as Radio_LTE800_use_Den,

		-- Esta info en 3G, no tienen sentido en 4G_CA_Only
		sum(0) as [3G_DualCarrier_use_Num],	sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],		sum(0) as [3G_DC_2100_use_Den],
		sum(0) as [3G_DC_900_use_Num],		sum(0) as [3G_DC_900_use_Den],
		sum(0) as [3G_NumCodes_use_Num],	sum(0) as [3G_NumCodes_use_Den],
		sum(0) as [3G_QPSK_use_Num],		sum(0) as [3G_16QAM_use_Num],
		sum(0) as [3G_64QAM_use_Num],		sum(0) as [3G_QPSK_use_Den],
		sum(0) as [3G_16QAM_use_Den],		sum(0) as [3G_64QAM_use_Den],
		sum(0) as [3G_%_SF22_Num],			sum(0) as [3G_%_SF22andSF42_Num],	sum(0) as [3G_%_SF4_Num],	sum(0) as [3G_%_SF42_Num],
		sum(0) as [3G_%_SF22_Den],			sum(0) as [3G_%_SF22andSF42_Den],	sum(0) as [3G_%_SF4_Den],	sum(0) as [3G_%_SF42_Den],
		sum(0) as [3G_%_TTI2ms_Num],		sum(0) as [3G_%_TTI2ms_Den],
		sum(0) as [RSCP_Lin_Num],			sum(0) as [EcI0_Lin_Num],			sum(0) as [RSCP_Lin_Den],		sum(0) as [EcI0_Lin_Den],	

		-- Performance -- Esta info en 3G, no tienen sentido en 4G_CA_Only
		sum(0) as [3G_CQI],				sum(0) as [3G_DataStats_Den],
		sum(0) as CQI_U900_Num,			sum(0) as CQI_U900_Den,		sum(0) as CQI_U2100_Num,	sum(0) as CQI_U2100_Den,
		sum(0) as [HSPA_PCT_Num],		sum(0) as [HSPA+_PCT_Num],	sum(0) as [HSPA+_DC_PCT_Num],
		sum(0) as [HSPA_PCT_Den],		sum(0) as [HSPA+_PCT_Den],	sum(0) as [HSPA+_DC_PCT_Den],
		sum(0) as [UL_Inter_Lin_Num],	sum(0) as [UL_Inter_Lin_Den],	
	
		-- Performance LTE:
		sum(pfl.[Count_CQI_4G]*pfl.[ CQI]) as CQI_4G_Num,
		sum(pfl.Count_CQI_L800*pfl.CQI_L800) as CQI_L800_Num,
		sum(pfl.Count_CQI_L1800*pfl.CQI_L1800) as CQI_L1800_Num,
		sum(pfl.Count_CQI_L2100*pfl.CQI_L2100) as CQI_L2100_Num,
		sum(pfl.Count_CQI_L2600*pfl.CQI_L2600) as CQI_L2600_Num,
		sum(pfl.[Count_CQI_4G]) as CQI_4G_Den,
		sum(pfl.Count_CQI_L800) as CQI_L800_Den,
		sum(pfl.Count_CQI_L1800) as CQI_L1800_Den,
		sum(pfl.Count_CQI_L2100) as CQI_L2100_Den,
		sum(pfl.Count_CQI_L2600) as CQI_L2600_Den,

		sum(pfl.Count_LTE_5Mhz_SC *pfl.LTE_5Mhz_SC_PCT) as LTE_5Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_10Mhz_SC*pfl.LTE_10Mhz_SC_PCT) as LTE_10Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_15Mhz_SC*pfl.LTE_15Mhz_SC_PCT) as LTE_15Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_20Mhz_SC*pfl.LTE_20Mhz_SC_PCT) as LTE_20Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_CA_Use_Num,
		sum(0) as LTE_20Mhz_CA_Use_Num,
		sum(0) as LTE_25Mhz_CA_Use_Num,
		sum(0) as LTE_30Mhz_CA_Use_Num,
		sum(0) as LTE_35Mhz_CA_Use_Num,
		sum(0) as LTE_40Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_5Mhz_SC) as LTE_5Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_10Mhz_SC) as LTE_10Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_15Mhz_SC) as LTE_15Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_20Mhz_SC) as LTE_20Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_CA_Use_Den,
		sum(0) as LTE_20Mhz_CA_Use_Den,
		sum(0) as LTE_25Mhz_CA_Use_Den,
		sum(0) as LTE_30Mhz_CA_Use_Den,
		sum(0) as LTE_35Mhz_CA_Use_Den,
		sum(0) as LTE_40Mhz_CA_Use_Den,		

		sum((isnull(pfl.Count_LTE_5Mhz_SC,0) 
		 --    +isnull(pfl.Count_LTE_10Mhz_SC,0) +isnull(pfl.Count_LTE_15Mhz_SC,0) +isnull(pfl.Count_LTE_20Mhz_SC,0) +
		 --    isnull(pfl.Count_LTE_15Mhz_CA,0) +isnull(pfl.Count_LTE_20Mhz_CA,0) +isnull(pfl.Count_LTE_25Mhz_CA,0) +isnull(pfl.Count_LTE_30Mhz_CA,0) +
		 --    isnull(pfl.Count_LTE_35Mhz_CA,0) +isnull(pfl.Count_LTE_40Mhz_CA,0)
			)
			*(
			pfl.LTE_5Mhz_SC_PCT+pfl.LTE_10Mhz_SC_PCT+pfl.LTE_15Mhz_SC_PCT+pfl.LTE_20Mhz_SC_PCT)
			) as LTE_BW_use_den,
		sum(pfl.[ RBs]*pfl.[Count_RBs]) as [4G_RBs_use_Num],
		sum(pfl.[Count_RBs]) as [4G_RBs_use_Den],

		sum(pfl.[ % TM1]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM1_use_Num],
		sum(pfl.[ % TM2]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM2_use_Num],
		sum(pfl.[ % TM3]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM3_use_Num],
		sum(pfl.[ % TM4]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM4_use_Num],
		sum(pfl.[ % MIMO]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM5_use_Num],
		sum(pfl.[ % TM6]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM6_use_Num],
		sum(pfl.[ % TM7]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM7_use_Num],
		sum(pfl.[ % TM8]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM8_N],
		sum(pfl.[ % TM9]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM9_N],
		sum(pfl.[ % TM Invalid]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TMInvalid_use_Num],
		sum(0) as [4G_TMUnknown_use_Num],
		sum([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid]) as [4G_TM_Den],

		-- Technology LTE:
		sum(0) as [4G_%CA_Num],
		sum(0) as [4G_%CA_Den],
		sum((tel.[BPSK])*tel.Count_BPSK) as [4G_BPSK_Use_Num],
		sum((tel.[QPSK])*tel.Count_QPSK) as [4G_QPSK_Use_Num],
		sum((tel.[16QAM])*tel.Count_16QAM) as [4G_16QAM_Use_Num],
		sum(0) as [4G_64QAM_Use_Num],
		sum(tel.Count_BPSK) as [4G_BPSK_Use_Den],
		sum(tel.Count_QPSK) as [4G_QPSK_Use_Den],
		sum(tel.Count_16QAM) as [4G_16QAM_Use_Den],
		sum(0) as [4G_64QAM_Use_Den],

		sum((isnull(pfl.Count_CQI_L800,0)+isnull(pfl.Count_CQI_L1800,0)+isnull(pfl.Count_CQI_L2100,0)+isnull(pfl.Count_CQI_L2600,0))*(isnull(tel.[16QAM],0)+isnull(tel.QPSK,0))) as [4G_stats_Den],

		sum(tel.[RSRP_Lin]*tel.[Count_RSRP_Lin]) as [RSRP_Lin_Num],
		sum(tel.[RSRQ_Lin]*tel.[Count_RSRQ_Lin]) as [RSRQ_Lin_Num],	
		sum(tel.[SINR_Lin]*tel.[Count_SINR_Lin]) as [SINR_Lin_Num],	
		sum(tel.[Count_RSRP_Lin]) as [RSRP_Lin_Den],	
		sum(tel.[Count_RSRQ_Lin]) as [RSRQ_Lin_Den],	
		sum(tel.[Count_SINR_Lin]) as [SINR_Lin_Den],

		-- New KPIs:
		sum(newk.[MIMO_CE_num]) as [MIMO_num],
		sum(newk.[RI1_CE_num]) as [RI1_num],
		sum(newk.[RI2_CE_num]) as [RI2_num],
		sum(newk.[MIMO_CE_den]) as [MIMO_den],
		sum(newk.[RI1_CE_den]) as [RI1_den],
		sum(newk.[RI2_CE_den]) as [RI2_den],
		sum(newk.Count_RBs_CE) as RBs_Allocated_Den,
		sum(newk.Count_RBs_CE*isnull(newk.[RBs CE],0)) as RBs_Allocated_Num,
		max(newk.[Max RBs CE]) as RBs_Allocated_Max,

		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		sum(isnull(OCA.[ 0-0.5Mbps_N ],0)) as [1_N],	sum(isnull(OCA.[ 0.5-1Mbps_N ],0)) as [2_N],	sum(isnull(OCA.[ 1-1.5Mbps_N ],0)) as [3_N],	sum(isnull(OCA.[ 1.5-2Mbps_N ],0)) as [4_N],	sum(isnull(OCA.[ 2-2.5Mbps_N ],0)) as [5_N],
		sum(isnull(OCA.[ 2.5-3Mbps_N ],0)) as [6_N],	sum(isnull(OCA.[ 3-3.5Mbps_N ],0)) as [7_N],	sum(isnull(OCA.[ 3.5-4Mbps_N ],0)) as [8_N],	sum(isnull(OCA.[ 4-4.5Mbps_N ],0)) as [9_N],	sum(isnull(OCA.[ 4.5-5Mbps_N ],0)) as [10_N],
		sum(isnull(OCA.[ 5-5.5Mbps_N ],0)) as [11_N],	sum(isnull(OCA.[ 5.5-6Mbps_N ],0)) as [12_N],	sum(isnull(OCA.[ 6-6.5Mbps_N ],0)) as [13_N],	sum(isnull(OCA.[ 6.5-7Mbps_N ],0)) as [14_N],	sum(isnull(OCA.[ 7-7.5Mbps_N ],0)) as [15_N],	
		sum(isnull(OCA.[ 7.5-8Mbps_N ],0)) as [16_N],	sum(isnull(OCA.[ 8-8.5Mbps_N ],0)) as [17_N],	sum(isnull(OCA.[ 8.5-9Mbps_N ],0)) as [18_N],	sum(isnull(OCA.[ 9-9.5Mbps_N ],0)) as [19_N],	sum(isnull(OCA.[ 9.5-10Mbps_N ],0)) as [20_N],
		sum(isnull(OCA.[ 10-10.5Mbps_N ],0)) as [21_N],	sum(isnull(OCA.[ 10.5-11Mbps_N ],0)) as [22_N],	sum(isnull(OCA.[ 11-11.5Mbps_N ],0)) as [23_N],	sum(isnull(OCA.[ 11.5-12Mbps_N ],0)) as [24_N],	sum(isnull(OCA.[ 12-12.5Mbps_N ],0)) as [25_N],
		sum(isnull(OCA.[ 12.5-13Mbps_N ],0)) as [26_N],	sum(isnull(OCA.[ 13-13.5Mbps_N ],0)) as [27_N],	sum(isnull(OCA.[ 13.5-14Mbps_N ],0)) as [28_N],	sum(isnull(OCA.[ 14-14.5Mbps_N ],0)) as [29_N],	sum(isnull(OCA.[ 14.5-15Mbps_N ],0)) as [30_N],
		sum(isnull(OCA.[ 15-15.5Mbps_N ],0)) as [31_N],	sum(isnull(OCA.[ 15.5-16Mbps_N ],0)) as [32_N],	sum(isnull(OCA.[ 16-16.5Mbps_N ],0)) as [33_N],	sum(isnull(OCA.[ 16.5-17Mbps_N ],0)) as [34_N],	sum(isnull(OCA.[ 17-17.5Mbps_N ],0)) as [35_N],
		sum(isnull(OCA.[ 17.5-18Mbps_N ],0)) as [36_N],	sum(isnull(OCA.[ 18-18.5Mbps_N ],0)) as [37_N],	sum(isnull(OCA.[ 18.5-19Mbps_N ],0)) as [38_N],	sum(isnull(OCA.[ 19-19.5Mbps_N ],0)) as [39_N],	sum(isnull(OCA.[ 19.5-20Mbps_N ],0)) as [40_N],
		sum(isnull(OCA.[ 20-20.5Mbps_N ],0)) as [41_N],	sum(isnull(OCA.[ 20.5-21Mbps_N ],0)) as [42_N],	sum(isnull(OCA.[ 21-21.5Mbps_N ],0)) as [43_N],	sum(isnull(OCA.[ 21.5-22Mbps_N ],0)) as [44_N],	sum(isnull(OCA.[ 22-22.5Mbps_N ],0)) as [45_N],
		sum(isnull(OCA.[ 22.5-23Mbps_N ],0)) as [46_N],	sum(isnull(OCA.[ 23-23.5Mbps_N ],0)) as [47_N],	sum(isnull(OCA.[ 23.5-24Mbps_N ],0)) as [48_N],	sum(isnull(OCA.[ 24-24.5Mbps_N ],0)) as [49_N],	sum(isnull(OCA.[ 24.5-25Mbps_N ],0)) as [50_N],
		sum(isnull(OCA.[ >25Mbps_N],0)) as [51_N],
		sum(0) as [52_N],	sum(0) as [53_N],	sum(0) as [54_N],	sum(0) as [55_N],	sum(0) as [56_N],	sum(0) as [57_N],	sum(0) as [58_N],	sum(0) as [59_N],	
		sum(0) as [60_N],	sum(0) as [61_N],	sum(0) as [62_N],	sum(0) as [63_N],	sum(0) as [64_N],	sum(0) as [65_N],	sum(0) as [66_N]
	
		--null as Region_Road_VF, null as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,sum(isnull(OCA.[ 0-5Mbps],0)) as [1]		,sum(isnull(OCA.[ 5-10Mbps],0)) as [2]		,sum(isnull(OCA.[ 10-15Mbps],0)) as [3]		,sum(isnull(OCA.[ 15-20Mbps],0)) as [4]		,sum(isnull(OCA.[ 20-25Mbps],0)) as [5]
		,sum(isnull(OCA.[ 25-30Mbps],0)) as [6]		,sum(isnull(OCA.[ 30-35Mbps],0)) as [7]		,sum(isnull(OCA.[ 35-40Mbps],0)) as [8]		,sum(isnull(OCA.[ 40-45Mbps],0)) as [9]		,sum(isnull(OCA.[ 45-50Mbps],0)) as [10]
		,sum(isnull(OCA.[ >50Mbps],0)) as [11]	
		,sum(0) as [12]	,sum(0) as [13]	,sum(0) as [14]	,sum(0) as [15]	,sum(0) as [16]	,sum(0) as [17]	,sum(0) as [18]	,sum(0) as [19]	,sum(0) as [20]
		,sum(0) as [21]	,sum(0) as [22]	,sum(0) as [23]	,sum(0) as [24]	,sum(0) as [25]	,sum(0) as [26]	,sum(0) as [27]	,sum(0) as [28]	,sum(0) as [29]
		,sum(0) as [30]	,sum(0) as [31]	,sum(0) as [32]	,sum(0) as [33]	,sum(0) as [34]	,sum(0) as [35]	,sum(0) as [36]	,sum(0) as [37]	,sum(0) as [38]
		,sum(0) as [39]	,sum(0) as [40]	,sum(0) as [41],

		-- Parametros de configuracion:
		pfl.ASideDevice as ASideDevice, pfl.BSideDevice as BSideDevice, pfl.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from	[AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_UL_Thput_CE] t
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_UL_Performance_CE_LTE_CA_ONLY] pfl
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(pfl.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=pfl.mnc and t.Date_Reporting=pfl.Date_Reporting and t.entidad=pfl.entidad and t.Aggr_Type=pfl.Aggr_Type and t.Report_Type=pfl.Report_Type and t.meas_round=pfl.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_UL_Technology_CE_LTE_CA_ONLY] tel
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(tel.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=tel.mnc and t.Date_Reporting=tel.Date_Reporting and t.entidad=tel.entidad and t.Aggr_Type=tel.Aggr_Type and t.Report_Type=tel.Report_Type and t.meas_round=tel.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_NEW_KPIs_UL_LTE_CA_ONLY] newk
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(newk.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=newk.mnc and t.Date_Reporting=newk.Date_Reporting and t.entidad=newk.entidad and t.Aggr_Type=newk.Aggr_Type and t.Report_Type=newk.Report_Type and t.meas_round=newk.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_UL_Thput_CE_LTE_CA_ONLY] OCA
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(OCA.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=OCA.mnc and t.Date_Reporting=OCA.Date_Reporting and t.entidad=OCA.entidad and t.Aggr_Type=OCA.Aggr_Type and t.Report_Type=OCA.Report_Type and t.meas_round=OCA.meas_round
				, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, case when  t.entidad like 'AVE-%' or  t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end, t.mnc, t.meas_round, t.Date_Reporting, t.Week_Reporting, t.entidad, t.Report_Type, t.Aggr_Type,
		pfl.ASideDevice, pfl.BSideDevice, pfl.SWVersion--, t.Region_VF, t.Region_OSP
	
	-----------
	union all	-- Road 4G_CA_Only - CE_UL
	select  
		p.codigo_ine, 'Roads' vf_environment, t.mnc, t.meas_round, t.Date_Reporting as meas_date, t.Week_Reporting as meas_week, 
		'Road 4G_CA_Only' as meas_Tech, 'CE_UL' as Test_type, 'Uplink' as Direction,  t.entidad as vf_entity, t.Report_Type, t.Aggr_Type,
	
		-- General:
		sum(OCA.Subidas) as Num_tests,
		sum(OCA.[fallos de acceso]) as Failed,
		sum(OCA.[fallos de descarga]) as Dropped,
		sum(OCA.[SessionTime]*OCA.Subidas) as Session_time_Num,
		--sum(OCA.[Tiempo de subida]*OCA.count_throughput) as Session_time_Num,	-- SESSION_TIME de DL/UL, calculado como TRANSFER_TIME - se haría el cambio al calculo correcto en cambio de metodología para evitar salto de valor en QLIK.
		sum(OCA.count_throughput) as Throughput_Den,
		sum(OCA.Subidas) as Session_time_Den,
		--sum(OCA.count_throughput) as Session_time_Den,
		sum(OCA.Throughput*OCA.count_throughput) as Throughput_Num,
		max(OCA.[Throughput Max]) as Throughput_Max,
		sum(0) as Throughput_3M_Num,
		sum(OCA.Count_Throughput_1M) as Throughput_1M_Num,
		sum(0) as Throughput_128K_Num,
		sum(0) as Throughput_64K_Num,
		sum(0) as Throughput_384K_Num,
		--CAC 10/08/2017: thput de test sin error y con error
		sum(OCA.Count_Throughput_ALL) as Throughput_with_Error_Den,
		sum(OCA.Throughput_ALL*OCA.Count_Throughput_ALL) as Throughput_with_Error_Num,
		sum(0) as WEB_IP_ACCESS_TIME_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_DEN,
		sum(0) as WEB_HTTP_TRANSFER_TIME_NUM,
		sum(0) as WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_NUM,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(tel.[% GSM]*tel.[Count_%GSM]) as Radio_2G_use_Num,
		sum(tel.[% WCDMA]*tel.[Count_%WCDMA]) as Radio_3G_use_Num,
		sum(tel.[% LTE]*tel.[Count_%LTE]) as Radio_4G_use_Num,
		sum(OCA.subidas*(isnull(tel.[% GSM],0)+isnull(tel.[% WCDMA],0)+isnull(tel.[% LTE],0))) as Radio_use_Den,
		sum(tel.[Count_%GSM]) as Radio_2G_use_Den,
		sum(tel.[Count_%WCDMA]) as Radio_3G_use_Den,
		sum(tel.[Count_%LTE]) as Radio_4G_use_Den,

		sum(tel.[% U2100]*tel.[Count_%U2100]) as Radio_U2100_use_Num,
		sum(tel.[% U900]*tel.[Count_%U900]) as Radio_U900_use_Num,
		sum(tel.[% LTE2100]*tel.[Count_%LTE2100]) as Radio_LTE2100_use_Num,
		sum(tel.[% LTE2600]*tel.[Count_%LTE2600]) as Radio_LTE2600_use_Num,
		sum(tel.[% LTE1800]*tel.[Count_%LTE1800]) as Radio_LTE1800_use_Num,
		sum(tel.[% LTE800]*tel.[Count_%LTE800]) as Radio_LTE800_use_Num,
		sum(OCA.subidas*(isnull(tel.[% U2100],0)+isnull(tel.[% U900],0)+isnull(tel.[% LTE2100],0)+isnull(tel.[% LTE2600],0)+isnull(tel.[% LTE1800],0)+isnull(tel.[% LTE800],0))) as Radio_Band_Use_Den,
		sum(tel.[Count_%U2100]) as Radio_U2100_use_Den,
		sum(tel.[Count_%U900]) as Radio_U900_use_Den,
		sum(tel.[Count_%LTE2100]) as Radio_LTE2100_use_Den,
		sum(tel.[Count_%LTE2600]) as Radio_LTE2600_use_Den,
		sum(tel.[Count_%LTE1800]) as Radio_LTE1800_use_Den,
		sum(tel.[Count_%LTE800]) as Radio_LTE800_use_Den,

		-- Esta info en 3G, no tienen sentido en 4G_CA_Only
		sum(0) as [3G_DualCarrier_use_Num],	sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],		sum(0) as [3G_DC_2100_use_Den],
		sum(0) as [3G_DC_900_use_Num],		sum(0) as [3G_DC_900_use_Den],
		sum(0) as [3G_NumCodes_use_Num],	sum(0) as [3G_NumCodes_use_Den],
		sum(0) as [3G_QPSK_use_Num],		sum(0) as [3G_16QAM_use_Num],
		sum(0) as [3G_64QAM_use_Num],		sum(0) as [3G_QPSK_use_Den],
		sum(0) as [3G_16QAM_use_Den],		sum(0) as [3G_64QAM_use_Den],
		sum(0) as [3G_%_SF22_Num],			sum(0) as [3G_%_SF22andSF42_Num],	sum(0) as [3G_%_SF4_Num],	sum(0) as [3G_%_SF42_Num],
		sum(0) as [3G_%_SF22_Den],			sum(0) as [3G_%_SF22andSF42_Den],	sum(0) as [3G_%_SF4_Den],	sum(0) as [3G_%_SF42_Den],
		sum(0) as [3G_%_TTI2ms_Num],		sum(0) as [3G_%_TTI2ms_Den],
		sum(0) as [RSCP_Lin_Num],			sum(0) as [EcI0_Lin_Num],			sum(0) as [RSCP_Lin_Den],		sum(0) as [EcI0_Lin_Den],	

		-- Performance -- Esta info en 3G, no tienen sentido en 4G_CA_Only
		sum(0) as [3G_CQI],				sum(0) as [3G_DataStats_Den],
		sum(0) as CQI_U900_Num,			sum(0) as CQI_U900_Den,		sum(0) as CQI_U2100_Num,	sum(0) as CQI_U2100_Den,
		sum(0) as [HSPA_PCT_Num],		sum(0) as [HSPA+_PCT_Num],	sum(0) as [HSPA+_DC_PCT_Num],
		sum(0) as [HSPA_PCT_Den],		sum(0) as [HSPA+_PCT_Den],	sum(0) as [HSPA+_DC_PCT_Den],
		sum(0) as [UL_Inter_Lin_Num],	sum(0) as [UL_Inter_Lin_Den],	
	
		-- Performance LTE:
		sum(pfl.[Count_CQI_4G]*pfl.[ CQI]) as CQI_4G_Num,
		sum(pfl.Count_CQI_L800*pfl.CQI_L800) as CQI_L800_Num,
		sum(pfl.Count_CQI_L1800*pfl.CQI_L1800) as CQI_L1800_Num,
		sum(pfl.Count_CQI_L2100*pfl.CQI_L2100) as CQI_L2100_Num,
		sum(pfl.Count_CQI_L2600*pfl.CQI_L2600) as CQI_L2600_Num,
		sum(pfl.[Count_CQI_4G]) as CQI_4G_Den,
		sum(pfl.Count_CQI_L800) as CQI_L800_Den,
		sum(pfl.Count_CQI_L1800) as CQI_L1800_Den,
		sum(pfl.Count_CQI_L2100) as CQI_L2100_Den,
		sum(pfl.Count_CQI_L2600) as CQI_L2600_Den,

		sum(pfl.Count_LTE_5Mhz_SC *pfl.LTE_5Mhz_SC_PCT) as LTE_5Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_10Mhz_SC*pfl.LTE_10Mhz_SC_PCT) as LTE_10Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_15Mhz_SC*pfl.LTE_15Mhz_SC_PCT) as LTE_15Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_20Mhz_SC*pfl.LTE_20Mhz_SC_PCT) as LTE_20Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_CA_Use_Num,
		sum(0) as LTE_20Mhz_CA_Use_Num,
		sum(0) as LTE_25Mhz_CA_Use_Num,
		sum(0) as LTE_30Mhz_CA_Use_Num,
		sum(0) as LTE_35Mhz_CA_Use_Num,
		sum(0) as LTE_40Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_5Mhz_SC) as LTE_5Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_10Mhz_SC) as LTE_10Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_15Mhz_SC) as LTE_15Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_20Mhz_SC) as LTE_20Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_CA_Use_Den,
		sum(0) as LTE_20Mhz_CA_Use_Den,
		sum(0) as LTE_25Mhz_CA_Use_Den,
		sum(0) as LTE_30Mhz_CA_Use_Den,
		sum(0) as LTE_35Mhz_CA_Use_Den,
		sum(0) as LTE_40Mhz_CA_Use_Den,		

		sum((isnull(pfl.Count_LTE_5Mhz_SC,0) 
		 --    +isnull(pfl.Count_LTE_10Mhz_SC,0) +isnull(pfl.Count_LTE_15Mhz_SC,0) +isnull(pfl.Count_LTE_20Mhz_SC,0) +
		 --    isnull(pfl.Count_LTE_15Mhz_CA,0) +isnull(pfl.Count_LTE_20Mhz_CA,0) +isnull(pfl.Count_LTE_25Mhz_CA,0) +isnull(pfl.Count_LTE_30Mhz_CA,0) +
		 --    isnull(pfl.Count_LTE_35Mhz_CA,0) +isnull(pfl.Count_LTE_40Mhz_CA,0)
			)
			*(
			pfl.LTE_5Mhz_SC_PCT+pfl.LTE_10Mhz_SC_PCT+pfl.LTE_15Mhz_SC_PCT+pfl.LTE_20Mhz_SC_PCT)
			) as LTE_BW_use_den,
		sum(pfl.[ RBs]*pfl.[Count_RBs]) as [4G_RBs_use_Num],
		sum(pfl.[Count_RBs]) as [4G_RBs_use_Den],

		sum(pfl.[ % TM1]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM1_use_Num],
		sum(pfl.[ % TM2]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM2_use_Num],
		sum(pfl.[ % TM3]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM3_use_Num],
		sum(pfl.[ % TM4]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM4_use_Num],
		sum(pfl.[ % MIMO]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM5_use_Num],
		sum(pfl.[ % TM6]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM6_use_Num],
		sum(pfl.[ % TM7]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM7_use_Num],
		sum(pfl.[ % TM8]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM8_N],
		sum(pfl.[ % TM9]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM9_N],
		sum(pfl.[ % TM Invalid]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TMInvalid_use_Num],
		sum(0) as [4G_TMUnknown_use_Num],
		sum([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid]) as [4G_TM_Den],

		-- Technology LTE:
		sum(0) as [4G_%CA_Num],
		sum(0) as [4G_%CA_Den],
		sum((tel.[BPSK])*tel.Count_BPSK) as [4G_BPSK_Use_Num],
		sum((tel.[QPSK])*tel.Count_QPSK) as [4G_QPSK_Use_Num],
		sum((tel.[16QAM])*tel.Count_16QAM) as [4G_16QAM_Use_Num],
		sum(0) as [4G_64QAM_Use_Num],
		sum(tel.Count_BPSK) as [4G_BPSK_Use_Den],
		sum(tel.Count_QPSK) as [4G_QPSK_Use_Den],
		sum(tel.Count_16QAM) as [4G_16QAM_Use_Den],
		sum(0) as [4G_64QAM_Use_Den],

		sum((isnull(pfl.Count_CQI_L800,0)+isnull(pfl.Count_CQI_L1800,0)+isnull(pfl.Count_CQI_L2100,0)+isnull(pfl.Count_CQI_L2600,0))*(isnull(tel.[16QAM],0)+isnull(tel.QPSK,0))) as [4G_stats_Den],

		sum(tel.[RSRP_Lin]*tel.[Count_RSRP_Lin]) as [RSRP_Lin_Num],
		sum(tel.[RSRQ_Lin]*tel.[Count_RSRQ_Lin]) as [RSRQ_Lin_Num],	
		sum(tel.[SINR_Lin]*tel.[Count_SINR_Lin]) as [SINR_Lin_Num],	
		sum(tel.[Count_RSRP_Lin]) as [RSRP_Lin_Den],	
		sum(tel.[Count_RSRQ_Lin]) as [RSRQ_Lin_Den],	
		sum(tel.[Count_SINR_Lin]) as [SINR_Lin_Den],

		-- New KPIs:
		sum(newk.[MIMO_CE_num]) as [MIMO_num],
		sum(newk.[RI1_CE_num]) as [RI1_num],
		sum(newk.[RI2_CE_num]) as [RI2_num],
		sum(newk.[MIMO_CE_den]) as [MIMO_den],
		sum(newk.[RI1_CE_den]) as [RI1_den],
		sum(newk.[RI2_CE_den]) as [RI2_den],
		sum(newk.Count_RBs_CE) as RBs_Allocated_Den,
		sum(newk.Count_RBs_CE*isnull(newk.[RBs CE],0)) as RBs_Allocated_Num,
		max(newk.[Max RBs CE]) as RBs_Allocated_Max,

		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		sum(isnull(OCA.[ 0-0.5Mbps_N ],0)) as [1_N],	sum(isnull(OCA.[ 0.5-1Mbps_N ],0)) as [2_N],	sum(isnull(OCA.[ 1-1.5Mbps_N ],0)) as [3_N],	sum(isnull(OCA.[ 1.5-2Mbps_N ],0)) as [4_N],	sum(isnull(OCA.[ 2-2.5Mbps_N ],0)) as [5_N],
		sum(isnull(OCA.[ 2.5-3Mbps_N ],0)) as [6_N],	sum(isnull(OCA.[ 3-3.5Mbps_N ],0)) as [7_N],	sum(isnull(OCA.[ 3.5-4Mbps_N ],0)) as [8_N],	sum(isnull(OCA.[ 4-4.5Mbps_N ],0)) as [9_N],	sum(isnull(OCA.[ 4.5-5Mbps_N ],0)) as [10_N],
		sum(isnull(OCA.[ 5-5.5Mbps_N ],0)) as [11_N],	sum(isnull(OCA.[ 5.5-6Mbps_N ],0)) as [12_N],	sum(isnull(OCA.[ 6-6.5Mbps_N ],0)) as [13_N],	sum(isnull(OCA.[ 6.5-7Mbps_N ],0)) as [14_N],	sum(isnull(OCA.[ 7-7.5Mbps_N ],0)) as [15_N],	
		sum(isnull(OCA.[ 7.5-8Mbps_N ],0)) as [16_N],	sum(isnull(OCA.[ 8-8.5Mbps_N ],0)) as [17_N],	sum(isnull(OCA.[ 8.5-9Mbps_N ],0)) as [18_N],	sum(isnull(OCA.[ 9-9.5Mbps_N ],0)) as [19_N],	sum(isnull(OCA.[ 9.5-10Mbps_N ],0)) as [20_N],
		sum(isnull(OCA.[ 10-10.5Mbps_N ],0)) as [21_N],	sum(isnull(OCA.[ 10.5-11Mbps_N ],0)) as [22_N],	sum(isnull(OCA.[ 11-11.5Mbps_N ],0)) as [23_N],	sum(isnull(OCA.[ 11.5-12Mbps_N ],0)) as [24_N],	sum(isnull(OCA.[ 12-12.5Mbps_N ],0)) as [25_N],
		sum(isnull(OCA.[ 12.5-13Mbps_N ],0)) as [26_N],	sum(isnull(OCA.[ 13-13.5Mbps_N ],0)) as [27_N],	sum(isnull(OCA.[ 13.5-14Mbps_N ],0)) as [28_N],	sum(isnull(OCA.[ 14-14.5Mbps_N ],0)) as [29_N],	sum(isnull(OCA.[ 14.5-15Mbps_N ],0)) as [30_N],
		sum(isnull(OCA.[ 15-15.5Mbps_N ],0)) as [31_N],	sum(isnull(OCA.[ 15.5-16Mbps_N ],0)) as [32_N],	sum(isnull(OCA.[ 16-16.5Mbps_N ],0)) as [33_N],	sum(isnull(OCA.[ 16.5-17Mbps_N ],0)) as [34_N],	sum(isnull(OCA.[ 17-17.5Mbps_N ],0)) as [35_N],
		sum(isnull(OCA.[ 17.5-18Mbps_N ],0)) as [36_N],	sum(isnull(OCA.[ 18-18.5Mbps_N ],0)) as [37_N],	sum(isnull(OCA.[ 18.5-19Mbps_N ],0)) as [38_N],	sum(isnull(OCA.[ 19-19.5Mbps_N ],0)) as [39_N],	sum(isnull(OCA.[ 19.5-20Mbps_N ],0)) as [40_N],
		sum(isnull(OCA.[ 20-20.5Mbps_N ],0)) as [41_N],	sum(isnull(OCA.[ 20.5-21Mbps_N ],0)) as [42_N],	sum(isnull(OCA.[ 21-21.5Mbps_N ],0)) as [43_N],	sum(isnull(OCA.[ 21.5-22Mbps_N ],0)) as [44_N],	sum(isnull(OCA.[ 22-22.5Mbps_N ],0)) as [45_N],
		sum(isnull(OCA.[ 22.5-23Mbps_N ],0)) as [46_N],	sum(isnull(OCA.[ 23-23.5Mbps_N ],0)) as [47_N],	sum(isnull(OCA.[ 23.5-24Mbps_N ],0)) as [48_N],	sum(isnull(OCA.[ 24-24.5Mbps_N ],0)) as [49_N],	sum(isnull(OCA.[ 24.5-25Mbps_N ],0)) as [50_N],
		sum(isnull(OCA.[ >25Mbps_N],0)) as [51_N],
		sum(0) as [52_N],	sum(0) as [53_N],	sum(0) as [54_N],	sum(0) as [55_N],	sum(0) as [56_N],	sum(0) as [57_N],	sum(0) as [58_N],	sum(0) as [59_N],	
		sum(0) as [60_N],	sum(0) as [61_N],	sum(0) as [62_N],	sum(0) as [63_N],	sum(0) as [64_N],	sum(0) as [65_N],	sum(0) as [66_N]
	
		--t.Region_VF as Region_Road_VF, t.Region_OSP as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,sum(isnull(OCA.[ 0-5Mbps],0)) as [1]		,sum(isnull(OCA.[ 5-10Mbps],0)) as [2]		,sum(isnull(OCA.[ 10-15Mbps],0)) as [3]		,sum(isnull(OCA.[ 15-20Mbps],0)) as [4]		,sum(isnull(OCA.[ 20-25Mbps],0)) as [5]
		,sum(isnull(OCA.[ 25-30Mbps],0)) as [6]		,sum(isnull(OCA.[ 30-35Mbps],0)) as [7]		,sum(isnull(OCA.[ 35-40Mbps],0)) as [8]		,sum(isnull(OCA.[ 40-45Mbps],0)) as [9]		,sum(isnull(OCA.[ 45-50Mbps],0)) as [10]
		,sum(isnull(OCA.[ >50Mbps],0)) as [11]	
		,sum(0) as [12]	,sum(0) as [13]	,sum(0) as [14]	,sum(0) as [15]	,sum(0) as [16]	,sum(0) as [17]	,sum(0) as [18]	,sum(0) as [19]	,sum(0) as [20]
		,sum(0) as [21]	,sum(0) as [22]	,sum(0) as [23]	,sum(0) as [24]	,sum(0) as [25]	,sum(0) as [26]	,sum(0) as [27]	,sum(0) as [28]	,sum(0) as [29]
		,sum(0) as [30]	,sum(0) as [31]	,sum(0) as [32]	,sum(0) as [33]	,sum(0) as [34]	,sum(0) as [35]	,sum(0) as [36]	,sum(0) as [37]	,sum(0) as [38]
		,sum(0) as [39]	,sum(0) as [40]	,sum(0) as [41],

		-- Parametros de configuracion:
		pfl.ASideDevice as ASideDevice, pfl.BSideDevice as BSideDevice, pfl.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from	[aggrData4G_ROAD].dbo.[lcc_aggr_sp_MDD_Data_UL_Thput_CE] t
				left outer join [aggrData4G_ROAD].[dbo].[lcc_aggr_sp_MDD_Data_UL_Performance_CE_LTE_CA_ONLY] pfl
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(pfl.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=pfl.mnc and t.Date_Reporting=pfl.Date_Reporting and t.entidad=pfl.entidad and t.Aggr_Type=pfl.Aggr_Type and t.Report_Type=pfl.Report_Type and t.meas_round=pfl.meas_round
				left outer join [aggrData4G_ROAD].[dbo].[lcc_aggr_sp_MDD_Data_UL_Technology_CE_LTE_CA_ONLY] tel
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(tel.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=tel.mnc and t.Date_Reporting=tel.Date_Reporting and t.entidad=tel.entidad and t.Aggr_Type=tel.Aggr_Type and t.Report_Type=tel.Report_Type and t.meas_round=tel.meas_round
				left outer join [aggrData4G_ROAD].[dbo].[lcc_aggr_sp_MDD_Data_NEW_KPIs_UL_LTE_CA_ONLY] newk
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(newk.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=newk.mnc and t.Date_Reporting=newk.Date_Reporting and t.entidad=newk.entidad and t.Aggr_Type=newk.Aggr_Type and t.Report_Type=newk.Report_Type and t.meas_round=newk.meas_round
				left outer join [AGGRData4G_ROAD].[dbo].[lcc_aggr_sp_MDD_Data_UL_Thput_CE_LTE_CA_ONLY] OCA
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(OCA.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=OCA.mnc and t.Date_Reporting=OCA.Date_Reporting and t.entidad=OCA.entidad and t.Aggr_Type=OCA.Aggr_Type and t.Report_Type=OCA.Report_Type and t.meas_round=OCA.meas_round
				, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, t.mnc, t.meas_round, t.Date_Reporting, t.Week_Reporting, t.entidad, t.Report_Type, t.Aggr_Type,
		pfl.ASideDevice, pfl.BSideDevice, pfl.SWVersion--, t.Region_VF, t.Region_OSP

	-----------
	union all	-- 4G_CA_Only - NC_DL
	select  
		p.codigo_ine, case when  t.entidad like 'AVE-%' or  t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment, t.mnc, t.meas_round, t.Date_Reporting as meas_date, t.Week_Reporting as meas_week, 
		'4G_CA_Only' as meas_Tech, 'NC_DL' as Test_type, 'Downlink' as Direction,  t.entidad as vf_entity, t.Report_Type, t.Aggr_Type,
	
		-- General:
		sum(OCA.navegaciones) as Num_tests,
		sum(OCA.[fallos de acceso]) as Failed,
		sum(OCA.[fallos de descarga]) as Dropped,
		sum(0) as Session_time_Num,
		sum(OCA.count_throughput) as Throughput_Den,
		sum(0) as Session_time_Den,
		sum(OCA.Throughput*OCA.count_throughput) as Throughput_Num,
		max(OCA.[Throughput Max]) as Throughput_Max,
		sum(OCA.Count_Throughput_3M) as Throughput_3M_Num,
		sum(OCA.Count_Throughput_1M) as Throughput_1M_Num,
		sum(OCA.Count_Throughput_128k) as Throughput_128K_Num,
		sum(0) as Throughput_64K_Num,
		sum(OCA.Count_Throughput_384k) as Throughput_384K_Num,
		--CAC 10/08/2017: thput de test sin error y con error
		sum(OCA.Count_Throughput_ALL) as Throughput_with_Error_Den,
		sum(OCA.Throughput_ALL*OCA.Count_Throughput_ALL) as Throughput_with_Error_Num,
		sum(0) as WEB_IP_ACCESS_TIME_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_DEN,
		sum(0) as WEB_HTTP_TRANSFER_TIME_NUM,
		sum(0) as WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_NUM,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(tel.[% GSM]*tel.[Count_%GSM]) as Radio_2G_use_Num,
		sum(tel.[% WCDMA]*tel.[Count_%WCDMA]) as Radio_3G_use_Num,
		sum(tel.[% LTE]*tel.[Count_%LTE]) as Radio_4G_use_Num,
		sum(OCA.navegaciones*(isnull(tel.[% GSM],0)+isnull(tel.[% WCDMA],0)+isnull(tel.[% LTE],0))) as Radio_use_Den,
		sum(tel.[Count_%GSM]) as Radio_2G_use_Den,
		sum(tel.[Count_%WCDMA]) as Radio_3G_use_Den,
		sum(tel.[Count_%LTE]) as Radio_4G_use_Den,

		sum(tel.[% U2100]*tel.[Count_%U2100]) as Radio_U2100_use_Num,
		sum(tel.[% U900]*tel.[Count_%U900]) as Radio_U900_use_Num,
		sum(tel.[% LTE2100]*tel.[Count_%LTE2100]) as Radio_LTE2100_use_Num,
		sum(tel.[% LTE2600]*tel.[Count_%LTE2600]) as Radio_LTE2600_use_Num,
		sum(tel.[% LTE1800]*tel.[Count_%LTE1800]) as Radio_LTE1800_use_Num,
		sum(tel.[% LTE800]*tel.[Count_%LTE800]) as Radio_LTE800_use_Num,
		sum(OCA.navegaciones*(isnull(tel.[% U2100],0)+isnull(tel.[% U900],0)+isnull(tel.[% LTE2100],0)+isnull(tel.[% LTE2600],0)+isnull(tel.[% LTE1800],0)+isnull(tel.[% LTE800],0))) as Radio_Band_Use_Den,
		sum(tel.[Count_%U2100]) as Radio_U2100_use_Den,
		sum(tel.[Count_%U900]) as Radio_U900_use_Den,
		sum(tel.[Count_%LTE2100]) as Radio_LTE2100_use_Den,
		sum(tel.[Count_%LTE2600]) as Radio_LTE2600_use_Den,
		sum(tel.[Count_%LTE1800]) as Radio_LTE1800_use_Den,
		sum(tel.[Count_%LTE800]) as Radio_LTE800_use_Den,

		-- Esta info en 3G, no tienen sentido en 4G_CA_Only
		sum(0) as [3G_DualCarrier_use_Num],	sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],		sum(0) as [3G_DC_2100_use_Den],
		sum(0) as [3G_DC_900_use_Num],		sum(0) as [3G_DC_900_use_Den],
		sum(0) as [3G_NumCodes_use_Num],	sum(0) as [3G_NumCodes_use_Den],
		sum(0) as [3G_QPSK_use_Num],		sum(0) as [3G_16QAM_use_Num],
		sum(0) as [3G_64QAM_use_Num],		sum(0) as [3G_QPSK_use_Den],
		sum(0) as [3G_16QAM_use_Den],		sum(0) as [3G_64QAM_use_Den],
		sum(0) as [3G_%_SF22_Num],			sum(0) as [3G_%_SF22andSF42_Num],	sum(0) as [3G_%_SF4_Num],	sum(0) as [3G_%_SF42_Num],
		sum(0) as [3G_%_SF22_Den],			sum(0) as [3G_%_SF22andSF42_Den],	sum(0) as [3G_%_SF4_Den],	sum(0) as [3G_%_SF42_Den],
		sum(0) as [3G_%_TTI2ms_Num],		sum(0) as [3G_%_TTI2ms_Den],
		sum(0) as [RSCP_Lin_Num],			sum(0) as [EcI0_Lin_Num],			sum(0) as [RSCP_Lin_Den],		sum(0) as [EcI0_Lin_Den],	

		-- Performance -- Esta info en 3G, no tienen sentido en 4G_CA_Only
		sum(0) as [3G_CQI],				sum(0) as [3G_DataStats_Den],
		sum(0) as CQI_U900_Num,			sum(0) as CQI_U900_Den,		sum(0) as CQI_U2100_Num,	sum(0) as CQI_U2100_Den,
		sum(0) as [HSPA_PCT_Num],		sum(0) as [HSPA+_PCT_Num],	sum(0) as [HSPA+_DC_PCT_Num],
		sum(0) as [HSPA_PCT_Den],		sum(0) as [HSPA+_PCT_Den],	sum(0) as [HSPA+_DC_PCT_Den],
		sum(0) as [UL_Inter_Lin_Num],	sum(0) as [UL_Inter_Lin_Den],	
	
		-- Performance LTE:
		sum(pfl.[Count_CQI_4G]*pfl.[CQI_4G]) as CQI_4G_Num,
		sum(pfl.Count_CQI_L800*pfl.CQI_L800) as CQI_L800_Num,
		sum(pfl.Count_CQI_L1800*pfl.CQI_L1800) as CQI_L1800_Num,
		sum(pfl.Count_CQI_L2100*pfl.CQI_L2100) as CQI_L2100_Num,
		sum(pfl.Count_CQI_L2600*pfl.CQI_L2600) as CQI_L2600_Num,
		sum(pfl.[Count_CQI_4G]) as CQI_4G_Den,
		sum(pfl.Count_CQI_L800) as CQI_L800_Den,
		sum(pfl.Count_CQI_L1800) as CQI_L1800_Den,
		sum(pfl.Count_CQI_L2100) as CQI_L2100_Den,
		sum(pfl.Count_CQI_L2600) as CQI_L2600_Den,

		sum(pfl.Count_LTE_5Mhz_SC *pfl.LTE_5Mhz_SC_PCT) as LTE_5Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_10Mhz_SC*pfl.LTE_10Mhz_SC_PCT) as LTE_10Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_15Mhz_SC*pfl.LTE_15Mhz_SC_PCT) as LTE_15Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_20Mhz_SC*pfl.LTE_20Mhz_SC_PCT) as LTE_20Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_15Mhz_CA*pfl.LTE_15Mhz_CA_PCT) as LTE_15Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_20Mhz_CA*pfl.LTE_20Mhz_CA_PCT) as LTE_20Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_25Mhz_CA*pfl.LTE_25Mhz_CA_PCT) as LTE_25Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_30Mhz_CA*pfl.LTE_30Mhz_CA_PCT) as LTE_30Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_35Mhz_CA*pfl.LTE_35Mhz_CA_PCT) as LTE_35Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_40Mhz_CA*pfl.LTE_40Mhz_CA_PCT) as LTE_40Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_5Mhz_SC) as LTE_5Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_10Mhz_SC) as LTE_10Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_15Mhz_SC) as LTE_15Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_20Mhz_SC) as LTE_20Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_15Mhz_CA) as LTE_15Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_20Mhz_CA) as LTE_20Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_25Mhz_CA) as LTE_25Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_30Mhz_CA) as LTE_30Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_35Mhz_CA) as LTE_35Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_40Mhz_CA) as LTE_40Mhz_CA_Use_Den,	
			
		sum((isnull(pfl.Count_LTE_5Mhz_SC,0) 
		 --    +isnull(pfl.Count_LTE_10Mhz_SC,0) +isnull(pfl.Count_LTE_15Mhz_SC,0) +isnull(pfl.Count_LTE_20Mhz_SC,0) +
		 --    isnull(pfl.Count_LTE_15Mhz_CA,0) +isnull(pfl.Count_LTE_20Mhz_CA,0) +isnull(pfl.Count_LTE_25Mhz_CA,0) +isnull(pfl.Count_LTE_30Mhz_CA,0) +
		 --    isnull(pfl.Count_LTE_35Mhz_CA,0) +isnull(pfl.Count_LTE_40Mhz_CA,0)
			)
			*(
			pfl.LTE_5Mhz_SC_PCT+pfl.LTE_10Mhz_SC_PCT+pfl.LTE_15Mhz_SC_PCT+pfl.LTE_20Mhz_SC_PCT+pfl.LTE_15Mhz_CA_PCT+
			pfl.LTE_20Mhz_CA_PCT+pfl.LTE_25Mhz_CA_PCT+pfl.LTE_30Mhz_CA_PCT+pfl.LTE_35Mhz_CA_PCT+pfl.LTE_40Mhz_CA_PCT
			)) as LTE_BW_use_den,
		sum(pfl.[ RBs]*pfl.[Count_RBs]) as [4G_RBs_use_Num],
		sum(pfl.[Count_RBs]) as [4G_RBs_use_Den],

		sum(pfl.[ % TM1]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM1_use_Num],
		sum(pfl.[ % TM2]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM2_use_Num],
		sum(pfl.[ % TM3]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM3_use_Num],
		sum(pfl.[ % TM4]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM4_use_Num],
		sum(pfl.[ % MIMO]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM5_use_Num],
		sum(pfl.[ % TM6]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM6_use_Num],
		sum(pfl.[ % TM7]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM7_use_Num],
		sum(0) as [4G_TM8_use_Num],
		sum(0) as [4G_TM9_use_Num],
		sum(pfl.[ % TM Invalid]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TMInvalid_use_Num],
		sum(pfl.[ % TM Unknown]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TMUnknown_use_Num],
		sum([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown]) as [4G_TM_Den],

		-- Technology LTE:
		sum(tel.[Count_%CA]*tel.[% CA]) as [4G_%CA_Num],
		sum(tel.[Count_%CA]) as [4G_%CA_Den],
		sum(0) as [4G_BPSK_Use_Num],
		sum((tel.QPSK/100.0)*tel.Count_QPSK) as [4G_QPSK_Use_Num],
		sum((tel.[16QAM]/100.0)*tel.Count_16QAM) as [4G_16QAM_Use_Num],
		sum((tel.[64QAM]/100.0)*tel.Count_64QAM) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],
		sum(tel.Count_QPSK) as [4G_QPSK_Use_Den],
		sum(tel.Count_16QAM) as [4G_16QAM_Use_Den],
		sum(tel.Count_64QAM) as [4G_64QAM_Use_Den],
	
		sum((isnull(pfl.Count_CQI_L800,0)+isnull(pfl.Count_CQI_L1800,0)+isnull(pfl.Count_CQI_L2100,0)+isnull(pfl.Count_CQI_L2600,0))*(isnull(tel.[64QAM]/100.0,0)+isnull(tel.[16QAM]/100.0,0)+isnull(tel.QPSK/100.0,0))) as [4G_stats_Den],

		sum(tel.[RSRP_Lin]*tel.[Count_RSRP_Lin]) as [RSRP_Lin_Num],
		sum(tel.[RSRQ_Lin]*tel.[Count_RSRQ_Lin]) as [RSRQ_Lin_Num],	
		sum(tel.[SINR_Lin]*tel.[Count_SINR_Lin]) as [SINR_Lin_Num],	
		sum(tel.[Count_RSRP_Lin]) as [RSRP_Lin_Den],	
		sum(tel.[Count_RSRQ_Lin]) as [RSRQ_Lin_Den],	
		sum(tel.[Count_SINR_Lin]) as [SINR_Lin_Den],

		-- New KPIs:
		sum(newk.[MIMO_NC_num]) as [MIMO_num],
		sum(newk.[RI1_NC_num]) as [RI1_num],
		sum(newk.[RI2_NC_num]) as [RI2_num],

		sum(newk.[MIMO_NC_den]) as [MIMO_den],
		sum(newk.[RI1_NC_den]) as [RI1_den],
		sum(newk.[RI2_NC_den]) as [RI2_den],

		sum(newk.Count_RBs_NC) as RBs_Allocated_Den,
		sum(newk.Count_RBs_NC*isnull(newk.[RBs NC],0)) as RBs_Allocated_Num,
		max(newk.[Max RBs NC]) as RBs_Allocated_Max,

		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		sum(isnull(OCA.[ 0-3.5Mbps_N ],0)) as [1_N],		sum(isnull(OCA.[ 3.5-7Mbps_N ],0)) as [2_N],		sum(isnull(OCA.[ 7-10.5Mbps_N ],0)) as [3_N],		sum(isnull(OCA.[ 10.5-14Mbps_N ],0)) as [4_N],		sum(isnull(OCA.[ 14-17.5Mbps_N ],0)) as [5_N],
		sum(isnull(OCA.[ 17.5-21Mbps_N ],0)) as [6_N],		sum(isnull(OCA.[ 21-24.5Mbps_N ],0)) as [7_N],		sum(isnull(OCA.[ 24.5-28Mbps_N ],0)) as [8_N],		sum(isnull(OCA.[ 28-31.5Mbps_N ],0)) as [9_N],		sum(isnull(OCA.[ 31.5-35Mbps_N ],0)) as [10_N],
		sum(isnull(OCA.[ 35-38.5Mbps_N ],0)) as [11_N],		sum(isnull(OCA.[ 38.5-42Mbps_N ],0)) as [12_N],		sum(isnull(OCA.[ 42-45.5Mbps_N ],0)) as [13_N],		sum(isnull(OCA.[ 45.5-49Mbps_N ],0)) as [14_N],		sum(isnull(OCA.[ 49-52.5Mbps_N ],0)) as [15_N],
		sum(isnull(OCA.[ 52.5-56Mbps_N ],0)) as [16_N],		sum(isnull(OCA.[ 56-59.5Mbps_N ],0)) as [17_N],		sum(isnull(OCA.[ 59.5-63Mbps_N ],0)) as [18_N],		sum(isnull(OCA.[ 63-66.5Mbps_N ],0)) as [19_N],		sum(isnull(OCA.[ 66.5-70Mbps_N ],0)) as [20_N],
		sum(isnull(OCA.[ 70-73.5Mbps_N ],0)) as [21_N],		sum(isnull(OCA.[ 73.5-77Mbps_N ],0)) as [22_N],		sum(isnull(OCA.[ 77-80.5Mbps_N ],0)) as [23_N],		sum(isnull(OCA.[ 80.5-84Mbps_N ],0)) as [24_N],		sum(isnull(OCA.[ 84-87.5Mbps_N ],0)) as [25_N],
		sum(isnull(OCA.[ 87.5-91Mbps_N ],0)) as [26_N],		sum(isnull(OCA.[ 91-94.5Mbps_N ],0)) as [27_N],		sum(isnull(OCA.[ 94.5-98Mbps_N ],0)) as [28_N],		sum(isnull(OCA.[ 98-101.5Mbps_N ],0)) as [29_N],	sum(isnull(OCA.[ 101.5-105Mbps_N ],0)) as [30_N],
		sum(isnull(OCA.[ 105-108.5Mbps_N ],0)) as [31_N],	sum(isnull(OCA.[ 108.5-112Mbps_N ],0)) as [32_N],	sum(isnull(OCA.[ 112-115.5Mbps_N ],0)) as [33_N],	sum(isnull(OCA.[ 115.5-119Mbps_N ],0)) as [34_N],	sum(isnull(OCA.[ 119-122.5Mbps_N ],0)) as [35_N],
		sum(isnull(OCA.[ 122.5-126Mbps_N ],0)) as [36_N],	sum(isnull(OCA.[ 126-129.5Mbps_N ],0)) as [37_N],	sum(isnull(OCA.[ 129.5-133Mbps_N ],0)) as [38_N],	sum(isnull(OCA.[ 133-136.5Mbps_N ],0)) as [39_N],	sum(isnull(OCA.[ 136.5-140Mbps_N ],0)) as [40_N],
		sum(isnull(OCA.[ 140-143.5Mbps_N ],0)) as [41_N],	sum(isnull(OCA.[ 143.5-147Mbps_N ],0)) as [42_N],	sum(isnull(OCA.[ 147-150.5Mbps_N ],0)) as [43_N],	sum(isnull(OCA.[ 150.5-154Mbps_N ],0)) as [44_N],	sum(isnull(OCA.[ 154-157.5Mbps_N ],0)) as [45_N],
		sum(isnull(OCA.[ 157.5-161Mbps_N ],0)) as [46_N],	sum(isnull(OCA.[ 161-164.5Mbps_N ],0)) as [47_N],	sum(isnull(OCA.[ 164.5-168Mbps_N ],0)) as [48_N],	sum(isnull(OCA.[ 168-171.5Mbps_N ],0)) as [49_N],	sum(isnull(OCA.[ 171.5-175Mbps_N ],0)) as [50_N],
		sum(isnull(OCA.[ 175-178.5Mbps_N ],0)) as [51_N],	sum(isnull(OCA.[ 178.5-182Mbps_N ],0)) as [52_N],	sum(isnull(OCA.[ 182-185.5Mbps_N ],0)) as [53_N],	sum(isnull(OCA.[ 185.5-189Mbps_N ],0)) as [54_N],	sum(isnull(OCA.[ 189-192.5Mbps_N ],0)) as [55_N],
		sum(isnull(OCA.[ 192.5-196Mbps_N ],0)) as [56_N],	sum(isnull(OCA.[ >196Mbps_N ],0)) as [57_N],
		sum(0) as [58_N],	sum(0) as [59_N],	sum(0) as [60_N],	sum(0) as [61_N],	sum(0) as [62_N],	sum(0) as [63_N],	sum(0) as [64_N],	sum(0) as [65_N],	sum(0) as [66_N]
	
		--null as Region_Road_VF, null as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,sum(isnull(OCA.[ 0-5Mbps],0)) as [1]		,sum(isnull(OCA.[ 5-10Mbps],0)) as [2]		,sum(isnull(OCA.[ 10-15Mbps],0)) as [3]		,sum(isnull(OCA.[ 15-20Mbps],0)) as [4]		,sum(isnull(OCA.[ 20-25Mbps],0)) as [5]
		,sum(isnull(OCA.[ 25-30Mbps],0)) as [6]		,sum(isnull(OCA.[ 30-35Mbps],0)) as [7]		,sum(isnull(OCA.[ 35-40Mbps],0)) as [8]		,sum(isnull(OCA.[ 40-45Mbps],0)) as [9]		,sum(isnull(OCA.[ 45-50Mbps],0)) as [10]
		,sum(isnull(OCA.[ 50-55Mbps],0)) as [11]	,sum(isnull(OCA.[ 55-60Mbps],0)) as [12]	,sum(isnull(OCA.[ 60-65Mbps],0)) as [13]	,sum(isnull(OCA.[ 65-70Mbps],0)) as [14]	,sum(isnull(OCA.[ 70-75Mbps],0)) as [15]
		,sum(isnull(OCA.[ 75-80Mbps],0)) as [16]	,sum(isnull(OCA.[ 80-85Mbps],0)) as [17]	,sum(isnull(OCA.[ 85-90Mbps],0)) as [18]	,sum(isnull(OCA.[ 90-95Mbps],0)) as [19]	,sum(isnull(OCA.[ 95-100Mbps],0)) as [20]
		,sum(isnull(OCA.[ 100-105Mbps],0)) as [21]	,sum(isnull(OCA.[ 105-110Mbps],0)) as [22]	,sum(isnull(OCA.[ 110-115Mbps],0)) as [23]	,sum(isnull(OCA.[ 115-120Mbps],0)) as [24]	,sum(isnull(OCA.[ 120-125Mbps],0)) as [25]
		,sum(isnull(OCA.[ 125-130Mbps],0)) as [26]	,sum(isnull(OCA.[ 130-135Mbps],0)) as [27]	,sum(isnull(OCA.[ 135-140Mbps],0)) as [28]	,sum(isnull(OCA.[ 140-145Mbps],0)) as [29]	,sum(isnull(OCA.[ 145-150Mbps],0)) as [30]
		,sum(isnull(OCA.[ >150Mbps],0)) as [31]
		,sum(0) as [32]	,sum(0) as [33]	,sum(0) as [34]	,sum(0) as [35]	,sum(0) as [36]	,sum(0) as [37]	,sum(0) as [38]	,sum(0) as [39]	,sum(0) as [40]	,sum(0) as [41],

		-- Parametros de configuracion:
		pfl.ASideDevice as ASideDevice, pfl.BSideDevice as BSideDevice, pfl.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from	[AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_DL_Thput_NC] t
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_DL_Performance_NC_LTE_CA_ONLY] pfl
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(pfl.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=pfl.mnc and t.Date_Reporting=pfl.Date_Reporting and t.entidad=pfl.entidad and t.Aggr_Type=pfl.Aggr_Type and t.Report_Type=pfl.Report_Type and t.meas_round=pfl.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_DL_Technology_NC_LTE_CA_ONLY] tel
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(tel.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=tel.mnc and t.Date_Reporting=tel.Date_Reporting and t.entidad=tel.entidad and t.Aggr_Type=tel.Aggr_Type and t.Report_Type=tel.Report_Type and t.meas_round=tel.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_NEW_KPIs_DL_LTE_CA_ONLY] newk
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(newk.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=newk.mnc and t.Date_Reporting=newk.Date_Reporting and t.entidad=newk.entidad and t.Aggr_Type=newk.Aggr_Type and t.Report_Type=newk.Report_Type and t.meas_round=newk.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_DL_Thput_NC_LTE_CA_ONLY] OCA
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(OCA.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=OCA.mnc and t.Date_Reporting=OCA.Date_Reporting and t.entidad=OCA.entidad and t.Aggr_Type=OCA.Aggr_Type and t.Report_Type=OCA.Report_Type and t.meas_round=OCA.meas_round
				, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, case when  t.entidad like 'AVE-%' or  t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end, t.mnc, t.meas_round, t.Date_Reporting, t.Week_Reporting, t.entidad, t.Report_Type, t.Aggr_Type,
		pfl.ASideDevice, pfl.BSideDevice, pfl.SWVersion--, t.Region_VF, t.Region_OSP

	-----------
	union all	-- Road 4G_CA_Only - NC_DL
	select  
		p.codigo_ine, 'Roads' vf_environment, t.mnc, t.meas_round, t.Date_Reporting as meas_date, t.Week_Reporting as meas_week, 
		'Road 4G_CA_Only' as meas_Tech, 'NC_DL' as Test_type, 'Downlink' as Direction,  t.entidad as vf_entity, t.Report_Type, t.Aggr_Type,
	
		-- General:
		sum(OCA.navegaciones) as Num_tests,
		sum(OCA.[fallos de acceso]) as Failed,
		sum(OCA.[fallos de descarga]) as Dropped,
		sum(0) as Session_time_Num,
		sum(OCA.count_throughput) as Throughput_Den,
		sum(0) as Session_time_Den,
		sum(OCA.Throughput*OCA.count_throughput) as Throughput_Num,
		max(OCA.[Throughput Max]) as Throughput_Max,
		sum(OCA.Count_Throughput_3M) as Throughput_3M_Num,
		sum(OCA.Count_Throughput_1M) as Throughput_1M_Num,
		sum(OCA.Count_Throughput_128k) as Throughput_128K_Num,
		sum(0) as Throughput_64K_Num,
		sum(OCA.Count_Throughput_384k) as Throughput_384K_Num,
		--CAC 10/08/2017: thput de test sin error y con error
		sum(OCA.Count_Throughput_ALL) as Throughput_with_Error_Den,
		sum(OCA.Throughput_ALL*OCA.Count_Throughput_ALL) as Throughput_with_Error_Num,
		sum(0) as WEB_IP_ACCESS_TIME_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_DEN,
		sum(0) as WEB_HTTP_TRANSFER_TIME_NUM,
		sum(0) as WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_NUM,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(tel.[% GSM]*tel.[Count_%GSM]) as Radio_2G_use_Num,
		sum(tel.[% WCDMA]*tel.[Count_%WCDMA]) as Radio_3G_use_Num,
		sum(tel.[% LTE]*tel.[Count_%LTE]) as Radio_4G_use_Num,
		sum(OCA.navegaciones*(isnull(tel.[% GSM],0)+isnull(tel.[% WCDMA],0)+isnull(tel.[% LTE],0))) as Radio_use_Den,
		sum(tel.[Count_%GSM]) as Radio_2G_use_Den,
		sum(tel.[Count_%WCDMA]) as Radio_3G_use_Den,
		sum(tel.[Count_%LTE]) as Radio_4G_use_Den,

		sum(tel.[% U2100]*tel.[Count_%U2100]) as Radio_U2100_use_Num,
		sum(tel.[% U900]*tel.[Count_%U900]) as Radio_U900_use_Num,
		sum(tel.[% LTE2100]*tel.[Count_%LTE2100]) as Radio_LTE2100_use_Num,
		sum(tel.[% LTE2600]*tel.[Count_%LTE2600]) as Radio_LTE2600_use_Num,
		sum(tel.[% LTE1800]*tel.[Count_%LTE1800]) as Radio_LTE1800_use_Num,
		sum(tel.[% LTE800]*tel.[Count_%LTE800]) as Radio_LTE800_use_Num,
		sum(OCA.navegaciones*(isnull(tel.[% U2100],0)+isnull(tel.[% U900],0)+isnull(tel.[% LTE2100],0)+isnull(tel.[% LTE2600],0)+isnull(tel.[% LTE1800],0)+isnull(tel.[% LTE800],0))) as Radio_Band_Use_Den,
		sum(tel.[Count_%U2100]) as Radio_U2100_use_Den,
		sum(tel.[Count_%U900]) as Radio_U900_use_Den,
		sum(tel.[Count_%LTE2100]) as Radio_LTE2100_use_Den,
		sum(tel.[Count_%LTE2600]) as Radio_LTE2600_use_Den,
		sum(tel.[Count_%LTE1800]) as Radio_LTE1800_use_Den,
		sum(tel.[Count_%LTE800]) as Radio_LTE800_use_Den,

		-- Esta info en 3G, no tienen sentido en 4G_CA_Only
		sum(0) as [3G_DualCarrier_use_Num],	sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],		sum(0) as [3G_DC_2100_use_Den],
		sum(0) as [3G_DC_900_use_Num],		sum(0) as [3G_DC_900_use_Den],
		sum(0) as [3G_NumCodes_use_Num],	sum(0) as [3G_NumCodes_use_Den],
		sum(0) as [3G_QPSK_use_Num],		sum(0) as [3G_16QAM_use_Num],
		sum(0) as [3G_64QAM_use_Num],		sum(0) as [3G_QPSK_use_Den],
		sum(0) as [3G_16QAM_use_Den],		sum(0) as [3G_64QAM_use_Den],
		sum(0) as [3G_%_SF22_Num],			sum(0) as [3G_%_SF22andSF42_Num],	sum(0) as [3G_%_SF4_Num],	sum(0) as [3G_%_SF42_Num],
		sum(0) as [3G_%_SF22_Den],			sum(0) as [3G_%_SF22andSF42_Den],	sum(0) as [3G_%_SF4_Den],	sum(0) as [3G_%_SF42_Den],
		sum(0) as [3G_%_TTI2ms_Num],		sum(0) as [3G_%_TTI2ms_Den],
		sum(0) as [RSCP_Lin_Num],			sum(0) as [EcI0_Lin_Num],			sum(0) as [RSCP_Lin_Den],		sum(0) as [EcI0_Lin_Den],	

		-- Performance -- Esta info en 3G, no tienen sentido en 4G_CA_Only
		sum(0) as [3G_CQI],				sum(0) as [3G_DataStats_Den],
		sum(0) as CQI_U900_Num,			sum(0) as CQI_U900_Den,		sum(0) as CQI_U2100_Num,	sum(0) as CQI_U2100_Den,
		sum(0) as [HSPA_PCT_Num],		sum(0) as [HSPA+_PCT_Num],	sum(0) as [HSPA+_DC_PCT_Num],
		sum(0) as [HSPA_PCT_Den],		sum(0) as [HSPA+_PCT_Den],	sum(0) as [HSPA+_DC_PCT_Den],
		sum(0) as [UL_Inter_Lin_Num],	sum(0) as [UL_Inter_Lin_Den],	
	
		-- Performance LTE:
		sum(pfl.[Count_CQI_4G]*pfl.[CQI_4G]) as CQI_4G_Num,
		sum(pfl.Count_CQI_L800*pfl.CQI_L800) as CQI_L800_Num,
		sum(pfl.Count_CQI_L1800*pfl.CQI_L1800) as CQI_L1800_Num,
		sum(pfl.Count_CQI_L2100*pfl.CQI_L2100) as CQI_L2100_Num,
		sum(pfl.Count_CQI_L2600*pfl.CQI_L2600) as CQI_L2600_Num,
		sum(pfl.[Count_CQI_4G]) as CQI_4G_Den,
		sum(pfl.Count_CQI_L800) as CQI_L800_Den,
		sum(pfl.Count_CQI_L1800) as CQI_L1800_Den,
		sum(pfl.Count_CQI_L2100) as CQI_L2100_Den,
		sum(pfl.Count_CQI_L2600) as CQI_L2600_Den,

		sum(pfl.Count_LTE_5Mhz_SC *pfl.LTE_5Mhz_SC_PCT) as LTE_5Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_10Mhz_SC*pfl.LTE_10Mhz_SC_PCT) as LTE_10Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_15Mhz_SC*pfl.LTE_15Mhz_SC_PCT) as LTE_15Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_20Mhz_SC*pfl.LTE_20Mhz_SC_PCT) as LTE_20Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_15Mhz_CA*pfl.LTE_15Mhz_CA_PCT) as LTE_15Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_20Mhz_CA*pfl.LTE_20Mhz_CA_PCT) as LTE_20Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_25Mhz_CA*pfl.LTE_25Mhz_CA_PCT) as LTE_25Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_30Mhz_CA*pfl.LTE_30Mhz_CA_PCT) as LTE_30Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_35Mhz_CA*pfl.LTE_35Mhz_CA_PCT) as LTE_35Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_40Mhz_CA*pfl.LTE_40Mhz_CA_PCT) as LTE_40Mhz_CA_Use_Num,	
		sum(pfl.Count_LTE_5Mhz_SC) as LTE_5Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_10Mhz_SC) as LTE_10Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_15Mhz_SC) as LTE_15Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_20Mhz_SC) as LTE_20Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_15Mhz_CA) as LTE_15Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_20Mhz_CA) as LTE_20Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_25Mhz_CA) as LTE_25Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_30Mhz_CA) as LTE_30Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_35Mhz_CA) as LTE_35Mhz_CA_Use_Den,
		sum(pfl.Count_LTE_40Mhz_CA) as LTE_40Mhz_CA_Use_Den,	

		sum((isnull(pfl.Count_LTE_5Mhz_SC,0) 
		 --    +isnull(pfl.Count_LTE_10Mhz_SC,0) +isnull(pfl.Count_LTE_15Mhz_SC,0) +isnull(pfl.Count_LTE_20Mhz_SC,0) +
		 --    isnull(pfl.Count_LTE_15Mhz_CA,0) +isnull(pfl.Count_LTE_20Mhz_CA,0) +isnull(pfl.Count_LTE_25Mhz_CA,0) +isnull(pfl.Count_LTE_30Mhz_CA,0) +
		 --    isnull(pfl.Count_LTE_35Mhz_CA,0) +isnull(pfl.Count_LTE_40Mhz_CA,0)
			)
			*(
			pfl.LTE_5Mhz_SC_PCT+pfl.LTE_10Mhz_SC_PCT+pfl.LTE_15Mhz_SC_PCT+pfl.LTE_20Mhz_SC_PCT+pfl.LTE_15Mhz_CA_PCT+
			pfl.LTE_20Mhz_CA_PCT+pfl.LTE_25Mhz_CA_PCT+pfl.LTE_30Mhz_CA_PCT+pfl.LTE_35Mhz_CA_PCT+pfl.LTE_40Mhz_CA_PCT
			)) as LTE_BW_use_den,
		sum(pfl.[ RBs]*pfl.[Count_RBs]) as [4G_RBs_use_Num],
		sum(pfl.[Count_RBs]) as [4G_RBs_use_Den],

		sum(pfl.[ % TM1]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM1_use_Num],
		sum(pfl.[ % TM2]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM2_use_Num],
		sum(pfl.[ % TM3]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM3_use_Num],
		sum(pfl.[ % TM4]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM4_use_Num],
		sum(pfl.[ % MIMO]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM5_use_Num],
		sum(pfl.[ % TM6]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM6_use_Num],
		sum(pfl.[ % TM7]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TM7_use_Num],
		sum(0) as [4G_TM8_use_Num],
		sum(0) as [4G_TM9_use_Num],
		sum(pfl.[ % TM Invalid]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TMInvalid_use_Num],
		sum(pfl.[ % TM Unknown]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown])) as [4G_TMUnknown_use_Num],
		sum([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM_Invalid]+[Count_TM_Unknown]) as [4G_TM_Den],

		-- Technology LTE:
		sum(tel.[Count_%CA]*tel.[% CA]) as [4G_%CA_Num],
		sum(tel.[Count_%CA]) as [4G_%CA_Den],
		sum(0) as [4G_BPSK_Use_Num],
		sum((tel.QPSK/100.0)*tel.Count_QPSK) as [4G_QPSK_Use_Num],
		sum((tel.[16QAM]/100.0)*tel.Count_16QAM) as [4G_16QAM_Use_Num],
		sum((tel.[64QAM]/100.0)*tel.Count_64QAM) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],
		sum(tel.Count_QPSK) as [4G_QPSK_Use_Den],
		sum(tel.Count_16QAM) as [4G_16QAM_Use_Den],
		sum(tel.Count_64QAM) as [4G_64QAM_Use_Den],

		sum((isnull(pfl.Count_CQI_L800,0)+isnull(pfl.Count_CQI_L1800,0)+isnull(pfl.Count_CQI_L2100,0)+isnull(pfl.Count_CQI_L2600,0))*(isnull(tel.[64QAM]/100.0,0)+isnull(tel.[16QAM]/100.0,0)+isnull(tel.QPSK/100.0,0))) as [4G_stats_Den],

		sum(tel.[RSRP_Lin]*tel.[Count_RSRP_Lin]) as [RSRP_Lin_Num],
		sum(tel.[RSRQ_Lin]*tel.[Count_RSRQ_Lin]) as [RSRQ_Lin_Num],	
		sum(tel.[SINR_Lin]*tel.[Count_SINR_Lin]) as [SINR_Lin_Num],	
		sum(tel.[Count_RSRP_Lin]) as [RSRP_Lin_Den],	
		sum(tel.[Count_RSRQ_Lin]) as [RSRQ_Lin_Den],	
		sum(tel.[Count_SINR_Lin]) as [SINR_Lin_Den],

		-- New KPIs:
		sum(newk.[MIMO_NC_num]) as [MIMO_num],
		sum(newk.[RI1_NC_num]) as [RI1_num],
		sum(newk.[RI2_NC_num]) as [RI2_num],
		sum(newk.[MIMO_NC_den]) as [MIMO_den],
		sum(newk.[RI1_NC_den]) as [RI1_den],
		sum(newk.[RI2_NC_den]) as [RI2_den],
		sum(newk.Count_RBs_NC) as RBs_Allocated_Den,
		sum(newk.Count_RBs_NC*isnull(newk.[RBs NC],0)) as RBs_Allocated_Num,
		max(newk.[Max RBs NC]) as RBs_Allocated_Max,

		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		sum(isnull(OCA.[ 0-3.5Mbps_N ],0)) as [1_N],		sum(isnull(OCA.[ 3.5-7Mbps_N ],0)) as [2_N],		sum(isnull(OCA.[ 7-10.5Mbps_N ],0)) as [3_N],		sum(isnull(OCA.[ 10.5-14Mbps_N ],0)) as [4_N],		sum(isnull(OCA.[ 14-17.5Mbps_N ],0)) as [5_N],
		sum(isnull(OCA.[ 17.5-21Mbps_N ],0)) as [6_N],		sum(isnull(OCA.[ 21-24.5Mbps_N ],0)) as [7_N],		sum(isnull(OCA.[ 24.5-28Mbps_N ],0)) as [8_N],		sum(isnull(OCA.[ 28-31.5Mbps_N ],0)) as [9_N],		sum(isnull(OCA.[ 31.5-35Mbps_N ],0)) as [10_N],
		sum(isnull(OCA.[ 35-38.5Mbps_N ],0)) as [11_N],		sum(isnull(OCA.[ 38.5-42Mbps_N ],0)) as [12_N],		sum(isnull(OCA.[ 42-45.5Mbps_N ],0)) as [13_N],		sum(isnull(OCA.[ 45.5-49Mbps_N ],0)) as [14_N],		sum(isnull(OCA.[ 49-52.5Mbps_N ],0)) as [15_N],
		sum(isnull(OCA.[ 52.5-56Mbps_N ],0)) as [16_N],		sum(isnull(OCA.[ 56-59.5Mbps_N ],0)) as [17_N],		sum(isnull(OCA.[ 59.5-63Mbps_N ],0)) as [18_N],		sum(isnull(OCA.[ 63-66.5Mbps_N ],0)) as [19_N],		sum(isnull(OCA.[ 66.5-70Mbps_N ],0)) as [20_N],
		sum(isnull(OCA.[ 70-73.5Mbps_N ],0)) as [21_N],		sum(isnull(OCA.[ 73.5-77Mbps_N ],0)) as [22_N],		sum(isnull(OCA.[ 77-80.5Mbps_N ],0)) as [23_N],		sum(isnull(OCA.[ 80.5-84Mbps_N ],0)) as [24_N],		sum(isnull(OCA.[ 84-87.5Mbps_N ],0)) as [25_N],
		sum(isnull(OCA.[ 87.5-91Mbps_N ],0)) as [26_N],		sum(isnull(OCA.[ 91-94.5Mbps_N ],0)) as [27_N],		sum(isnull(OCA.[ 94.5-98Mbps_N ],0)) as [28_N],		sum(isnull(OCA.[ 98-101.5Mbps_N ],0)) as [29_N],	sum(isnull(OCA.[ 101.5-105Mbps_N ],0)) as [30_N],
		sum(isnull(OCA.[ 105-108.5Mbps_N ],0)) as [31_N],	sum(isnull(OCA.[ 108.5-112Mbps_N ],0)) as [32_N],	sum(isnull(OCA.[ 112-115.5Mbps_N ],0)) as [33_N],	sum(isnull(OCA.[ 115.5-119Mbps_N ],0)) as [34_N],	sum(isnull(OCA.[ 119-122.5Mbps_N ],0)) as [35_N],
		sum(isnull(OCA.[ 122.5-126Mbps_N ],0)) as [36_N],	sum(isnull(OCA.[ 126-129.5Mbps_N ],0)) as [37_N],	sum(isnull(OCA.[ 129.5-133Mbps_N ],0)) as [38_N],	sum(isnull(OCA.[ 133-136.5Mbps_N ],0)) as [39_N],	sum(isnull(OCA.[ 136.5-140Mbps_N ],0)) as [40_N],
		sum(isnull(OCA.[ 140-143.5Mbps_N ],0)) as [41_N],	sum(isnull(OCA.[ 143.5-147Mbps_N ],0)) as [42_N],	sum(isnull(OCA.[ 147-150.5Mbps_N ],0)) as [43_N],	sum(isnull(OCA.[ 150.5-154Mbps_N ],0)) as [44_N],	sum(isnull(OCA.[ 154-157.5Mbps_N ],0)) as [45_N],
		sum(isnull(OCA.[ 157.5-161Mbps_N ],0)) as [46_N],	sum(isnull(OCA.[ 161-164.5Mbps_N ],0)) as [47_N],	sum(isnull(OCA.[ 164.5-168Mbps_N ],0)) as [48_N],	sum(isnull(OCA.[ 168-171.5Mbps_N ],0)) as [49_N],	sum(isnull(OCA.[ 171.5-175Mbps_N ],0)) as [50_N],
		sum(isnull(OCA.[ 175-178.5Mbps_N ],0)) as [51_N],	sum(isnull(OCA.[ 178.5-182Mbps_N ],0)) as [52_N],	sum(isnull(OCA.[ 182-185.5Mbps_N ],0)) as [53_N],	sum(isnull(OCA.[ 185.5-189Mbps_N ],0)) as [54_N],	sum(isnull(OCA.[ 189-192.5Mbps_N ],0)) as [55_N],
		sum(isnull(OCA.[ 192.5-196Mbps_N ],0)) as [56_N],	sum(isnull(OCA.[ >196Mbps_N ],0)) as [57_N],
		sum(0) as [58_N],	sum(0) as [59_N],	sum(0) as [60_N],	sum(0) as [61_N],	sum(0) as [62_N],	sum(0) as [63_N],	sum(0) as [64_N],	sum(0) as [65_N],	sum(0) as [66_N]
	
		--t.Region_VF as Region_Road_VF, t.Region_OSP as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,sum(isnull(OCA.[ 0-5Mbps],0)) as [1]		,sum(isnull(OCA.[ 5-10Mbps],0)) as [2]		,sum(isnull(OCA.[ 10-15Mbps],0)) as [3]		,sum(isnull(OCA.[ 15-20Mbps],0)) as [4]		,sum(isnull(OCA.[ 20-25Mbps],0)) as [5]
		,sum(isnull(OCA.[ 25-30Mbps],0)) as [6]		,sum(isnull(OCA.[ 30-35Mbps],0)) as [7]		,sum(isnull(OCA.[ 35-40Mbps],0)) as [8]		,sum(isnull(OCA.[ 40-45Mbps],0)) as [9]		,sum(isnull(OCA.[ 45-50Mbps],0)) as [10]
		,sum(isnull(OCA.[ 50-55Mbps],0)) as [11]	,sum(isnull(OCA.[ 55-60Mbps],0)) as [12]	,sum(isnull(OCA.[ 60-65Mbps],0)) as [13]	,sum(isnull(OCA.[ 65-70Mbps],0)) as [14]	,sum(isnull(OCA.[ 70-75Mbps],0)) as [15]
		,sum(isnull(OCA.[ 75-80Mbps],0)) as [16]	,sum(isnull(OCA.[ 80-85Mbps],0)) as [17]	,sum(isnull(OCA.[ 85-90Mbps],0)) as [18]	,sum(isnull(OCA.[ 90-95Mbps],0)) as [19]	,sum(isnull(OCA.[ 95-100Mbps],0)) as [20]
		,sum(isnull(OCA.[ 100-105Mbps],0)) as [21]	,sum(isnull(OCA.[ 105-110Mbps],0)) as [22]	,sum(isnull(OCA.[ 110-115Mbps],0)) as [23]	,sum(isnull(OCA.[ 115-120Mbps],0)) as [24]	,sum(isnull(OCA.[ 120-125Mbps],0)) as [25]
		,sum(isnull(OCA.[ 125-130Mbps],0)) as [26]	,sum(isnull(OCA.[ 130-135Mbps],0)) as [27]	,sum(isnull(OCA.[ 135-140Mbps],0)) as [28]	,sum(isnull(OCA.[ 140-145Mbps],0)) as [29]	,sum(isnull(OCA.[ 145-150Mbps],0)) as [30]
		,sum(isnull(OCA.[ >150Mbps],0)) as [31]
		,sum(0) as [32]	,sum(0) as [33]	,sum(0) as [34]	,sum(0) as [35]	,sum(0) as [36]	,sum(0) as [37]	,sum(0) as [38]	,sum(0) as [39]	,sum(0) as [40]	,sum(0) as [41],

		-- Parametros de configuracion:
		pfl.ASideDevice as ASideDevice, pfl.BSideDevice as BSideDevice, pfl.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from	[aggrData4G_ROAD].dbo.[lcc_aggr_sp_MDD_Data_DL_Thput_NC] t
				left outer join [aggrData4G_ROAD].[dbo].[lcc_aggr_sp_MDD_Data_DL_Performance_NC_LTE_CA_ONLY] pfl
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(pfl.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=pfl.mnc and t.Date_Reporting=pfl.Date_Reporting and t.entidad=pfl.entidad and t.Aggr_Type=pfl.Aggr_Type and t.Report_Type=pfl.Report_Type and t.meas_round=pfl.meas_round
				left outer join [aggrData4G_ROAD].[dbo].[lcc_aggr_sp_MDD_Data_DL_Technology_NC_LTE_CA_ONLY] tel
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(tel.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=tel.mnc and t.Date_Reporting=tel.Date_Reporting and t.entidad=tel.entidad and t.Aggr_Type=tel.Aggr_Type and t.Report_Type=tel.Report_Type and t.meas_round=tel.meas_round
				left outer join [aggrData4G_ROAD].[dbo].[lcc_aggr_sp_MDD_Data_NEW_KPIs_DL_LTE_CA_ONLY] newk
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(newk.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=newk.mnc and t.Date_Reporting=newk.Date_Reporting and t.entidad=newk.entidad and t.Aggr_Type=newk.Aggr_Type and t.Report_Type=newk.Report_Type and t.meas_round=newk.meas_round
				left outer join [AGGRData4G_ROAD].[dbo].[lcc_aggr_sp_MDD_Data_DL_Thput_NC_LTE_CA_ONLY] OCA
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(OCA.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=OCA.mnc and t.Date_Reporting=OCA.Date_Reporting and t.entidad=OCA.entidad and t.Aggr_Type=OCA.Aggr_Type and t.Report_Type=OCA.Report_Type and t.meas_round=OCA.meas_round
				, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, t.mnc, t.meas_round, t.Date_Reporting, t.Week_Reporting, t.entidad, t.Report_Type, t.Aggr_Type,
		pfl.ASideDevice, pfl.BSideDevice, pfl.SWVersion--, t.Region_VF, t.Region_OSP

	-----------
	union all	-- 4G_CA_Only - NC_UL
	select  
		p.codigo_ine, case when  t.entidad like 'AVE-%' or  t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment, t.mnc, t.meas_round, t.Date_Reporting as meas_date, t.Week_Reporting as meas_week, 
		'4G_CA_Only' as meas_Tech, 'NC_UL' as Test_type, 'Uplink' as Direction,  t.entidad as vf_entity, t.Report_Type, t.Aggr_Type,
	
		-- General:
		sum(OCA.Subidas) as Num_tests,
		sum(OCA.[fallos de acceso]) as Failed,
		sum(OCA.[fallos de descarga]) as Dropped,
		sum(0) as Session_time_Num,
		sum(OCA.count_throughput) as Throughput_Den,
		sum(0) as Session_time_Den,
		sum(OCA.Throughput*OCA.count_throughput) as Throughput_Num,
		max(OCA.[Throughput Max]) as Throughput_Max,
		sum(0) as Throughput_3M_Num,
		sum(OCA.Count_Throughput_1M) as Throughput_1M_Num,
		sum(0) as Throughput_128K_Num,
		sum(OCA.Count_Throughput_64k) as Throughput_64K_Num,
		sum(OCA.Count_Throughput_384k) as Throughput_384K_Num,
		--CAC 10/08/2017: thput de test sin error y con error
		sum(OCA.Count_Throughput_ALL) as Throughput_with_Error_Den,
		sum(OCA.Throughput_ALL*OCA.Count_Throughput_ALL) as Throughput_with_Error_Num,
		sum(0) as WEB_IP_ACCESS_TIME_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_DEN,
		sum(0) as WEB_HTTP_TRANSFER_TIME_NUM,
		sum(0) as WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_NUM,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(tel.[% GSM]*tel.[Count_%GSM]) as Radio_2G_use_Num,
		sum(tel.[% WCDMA]*tel.[Count_%WCDMA]) as Radio_3G_use_Num,
		sum(tel.[% LTE]*tel.[Count_%LTE]) as Radio_4G_use_Num,
		sum(OCA.Subidas*(isnull(tel.[% GSM],0)+isnull(tel.[% WCDMA],0)+isnull(tel.[% LTE],0))) as Radio_use_Den,
		sum(tel.[Count_%GSM]) as Radio_2G_use_Den,
		sum(tel.[Count_%WCDMA]) as Radio_3G_use_Den,
		sum(tel.[Count_%LTE]) as Radio_4G_use_Den,

		sum(tel.[% U2100]*tel.[Count_%U2100]) as Radio_U2100_use_Num,
		sum(tel.[% U900]*tel.[Count_%U900]) as Radio_U900_use_Num,
		sum(tel.[% LTE2100]*tel.[Count_%LTE2100]) as Radio_LTE2100_use_Num,
		sum(tel.[% LTE2600]*tel.[Count_%LTE2600]) as Radio_LTE2600_use_Num,
		sum(tel.[% LTE1800]*tel.[Count_%LTE1800]) as Radio_LTE1800_use_Num,
		sum(tel.[% LTE800]*tel.[Count_%LTE800]) as Radio_LTE800_use_Num,
		sum(OCA.Subidas*(isnull(tel.[% U2100],0)+isnull(tel.[% U900],0)+isnull(tel.[% LTE2100],0)+isnull(tel.[% LTE2600],0)+isnull(tel.[% LTE1800],0)+isnull(tel.[% LTE800],0))) as Radio_Band_Use_Den,
		sum(tel.[Count_%U2100]) as Radio_U2100_use_Den,
		sum(tel.[Count_%U900]) as Radio_U900_use_Den,
		sum(tel.[Count_%LTE2100]) as Radio_LTE2100_use_Den,
		sum(tel.[Count_%LTE2600]) as Radio_LTE2600_use_Den,
		sum(tel.[Count_%LTE1800]) as Radio_LTE1800_use_Den,
		sum(tel.[Count_%LTE800]) as Radio_LTE800_use_Den,

		-- Esta info en 3G, no tienen sentido en 4G_CA_Only
		sum(0) as [3G_DualCarrier_use_Num],	sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],		sum(0) as [3G_DC_2100_use_Den],
		sum(0) as [3G_DC_900_use_Num],		sum(0) as [3G_DC_900_use_Den],
		sum(0) as [3G_NumCodes_use_Num],	sum(0) as [3G_NumCodes_use_Den],
		sum(0) as [3G_QPSK_use_Num],		sum(0) as [3G_16QAM_use_Num],
		sum(0) as [3G_64QAM_use_Num],		sum(0) as [3G_QPSK_use_Den],
		sum(0) as [3G_16QAM_use_Den],		sum(0) as [3G_64QAM_use_Den],
		sum(0) as [3G_%_SF22_Num],			sum(0) as [3G_%_SF22andSF42_Num],	sum(0) as [3G_%_SF4_Num],	sum(0) as [3G_%_SF42_Num],
		sum(0) as [3G_%_SF22_Den],			sum(0) as [3G_%_SF22andSF42_Den],	sum(0) as [3G_%_SF4_Den],	sum(0) as [3G_%_SF42_Den],
		sum(0) as [3G_%_TTI2ms_Num],		sum(0) as [3G_%_TTI2ms_Den],
		sum(0) as [RSCP_Lin_Num],			sum(0) as [EcI0_Lin_Num],			sum(0) as [RSCP_Lin_Den],		sum(0) as [EcI0_Lin_Den],	

		-- Performance -- Esta info en 3G, no tienen sentido en 4G_CA_Only
		sum(0) as [3G_CQI],				sum(0) as [3G_DataStats_Den],
		sum(0) as CQI_U900_Num,			sum(0) as CQI_U900_Den,		sum(0) as CQI_U2100_Num,	sum(0) as CQI_U2100_Den,
		sum(0) as [HSPA_PCT_Num],		sum(0) as [HSPA+_PCT_Num],	sum(0) as [HSPA+_DC_PCT_Num],
		sum(0) as [HSPA_PCT_Den],		sum(0) as [HSPA+_PCT_Den],	sum(0) as [HSPA+_DC_PCT_Den],
		sum(0) as [UL_Inter_Lin_Num],	sum(0) as [UL_Inter_Lin_Den],	
	
		-- Performance LTE:
		sum(pfl.[Count_CQI_4G]*pfl.[ CQI]) as CQI_4G_Num,
		sum(pfl.Count_CQI_L800*pfl.CQI_L800) as CQI_L800_Num,
		sum(pfl.Count_CQI_L1800*pfl.CQI_L1800) as CQI_L1800_Num,
		sum(pfl.Count_CQI_L2100*pfl.CQI_L2100) as CQI_L2100_Num,
		sum(pfl.Count_CQI_L2600*pfl.CQI_L2600) as CQI_L2600_Num,
		sum(pfl.[Count_CQI_4G]) as CQI_4G_Den,
		sum(pfl.Count_CQI_L800) as CQI_L800_Den,
		sum(pfl.Count_CQI_L1800) as CQI_L1800_Den,
		sum(pfl.Count_CQI_L2100) as CQI_L2100_Den,
		sum(pfl.Count_CQI_L2600) as CQI_L2600_Den,

		sum(pfl.Count_LTE_5Mhz_SC *pfl.LTE_5Mhz_SC_PCT) as LTE_5Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_10Mhz_SC*pfl.LTE_10Mhz_SC_PCT) as LTE_10Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_15Mhz_SC*pfl.LTE_15Mhz_SC_PCT) as LTE_15Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_20Mhz_SC*pfl.LTE_20Mhz_SC_PCT) as LTE_20Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_CA_Use_Num,
		sum(0) as LTE_20Mhz_CA_Use_Num,
		sum(0) as LTE_25Mhz_CA_Use_Num,
		sum(0) as LTE_30Mhz_CA_Use_Num,
		sum(0) as LTE_35Mhz_CA_Use_Num,
		sum(0) as LTE_40Mhz_CA_Use_Num,	
		sum(pfl.Count_LTE_5Mhz_SC) as LTE_5Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_10Mhz_SC) as LTE_10Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_15Mhz_SC) as LTE_15Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_20Mhz_SC) as LTE_20Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_CA_Use_Den,
		sum(0) as LTE_20Mhz_CA_Use_Den,
		sum(0) as LTE_25Mhz_CA_Use_Den,
		sum(0) as LTE_30Mhz_CA_Use_Den,
		sum(0) as LTE_35Mhz_CA_Use_Den,
		sum(0) as LTE_40Mhz_CA_Use_Den,

		sum((isnull(pfl.Count_LTE_5Mhz_SC,0) 
		 --    +isnull(pfl.Count_LTE_10Mhz_SC,0) +isnull(pfl.Count_LTE_15Mhz_SC,0) +isnull(pfl.Count_LTE_20Mhz_SC,0) +
		 --    isnull(pfl.Count_LTE_15Mhz_CA,0) +isnull(pfl.Count_LTE_20Mhz_CA,0) +isnull(pfl.Count_LTE_25Mhz_CA,0) +isnull(pfl.Count_LTE_30Mhz_CA,0) +
		 --    isnull(pfl.Count_LTE_35Mhz_CA,0) +isnull(pfl.Count_LTE_40Mhz_CA,0)
			)
			*(
			pfl.LTE_5Mhz_SC_PCT+pfl.LTE_10Mhz_SC_PCT+pfl.LTE_15Mhz_SC_PCT+pfl.LTE_20Mhz_SC_PCT)
			) as LTE_BW_use_den,	
		sum(pfl.[ RBs]*pfl.[Count_RBs]) as [4G_RBs_use_Num],
		sum(pfl.[Count_RBs]) as [4G_RBs_use_Den],

		sum(pfl.[ % TM1]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM1_use_Num],
		sum(pfl.[ % TM2]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM2_use_Num],
		sum(pfl.[ % TM3]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM3_use_Num],
		sum(pfl.[ % TM4]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM4_use_Num],
		sum(pfl.[ % MIMO]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM5_use_Num],
		sum(pfl.[ % TM6]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM6_use_Num],
		sum(pfl.[ % TM7]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM7_use_Num],
		sum(pfl.[ % TM8]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM8_N],
		sum(pfl.[ % TM9]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM9_N],
		sum(pfl.[ % TM Invalid]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TMInvalid_use_Num],
		sum(0) as [4G_TMUnknown_use_Num],
		sum([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid]) as [4G_TM_Den],

		-- Technology LTE:
		sum(0) as [4G_%CA_Num],
		sum(0) as [4G_%CA_Den],
		sum((tel.[BPSK])*tel.Count_BPSK) as [4G_BPSK_Use_Num],
		sum((tel.[QPSK])*tel.Count_QPSK) as [4G_QPSK_Use_Num],
		sum((tel.[16QAM])*tel.Count_16QAM) as [4G_16QAM_Use_Num],
		sum(0) as [4G_64QAM_Use_Num],
		sum(tel.Count_BPSK) as [4G_BPSK_Use_Den],
		sum(tel.Count_QPSK) as [4G_QPSK_Use_Den],
		sum(tel.Count_16QAM) as [4G_16QAM_Use_Den],
		sum(0) as [4G_64QAM_Use_Den],
	
		sum((isnull(pfl.Count_CQI_L800,0)+isnull(pfl.Count_CQI_L1800,0)+isnull(pfl.Count_CQI_L2100,0)+isnull(pfl.Count_CQI_L2600,0))*(isnull(tel.[16QAM],0)+isnull(tel.QPSK,0))) as [4G_stats_Den],

		sum(tel.[RSRP_Lin]*tel.[Count_RSRP_Lin]) as [RSRP_Lin_Num],
		sum(tel.[RSRQ_Lin]*tel.[Count_RSRQ_Lin]) as [RSRQ_Lin_Num],	
		sum(tel.[SINR_Lin]*tel.[Count_SINR_Lin]) as [SINR_Lin_Num],	
		sum(tel.[Count_RSRP_Lin]) as [RSRP_Lin_Den],	
		sum(tel.[Count_RSRQ_Lin]) as [RSRQ_Lin_Den],	
		sum(tel.[Count_SINR_Lin]) as [SINR_Lin_Den],

		-- New KPIs:
		sum(newk.[MIMO_NC_num]) as [MIMO_num],
		sum(newk.[RI1_NC_num]) as [RI1_num],
		sum(newk.[RI2_NC_num]) as [RI2_num],
		sum(newk.[MIMO_NC_den]) as [MIMO_den],
		sum(newk.[RI1_NC_den]) as [RI1_den],
		sum(newk.[RI2_NC_den]) as [RI2_den],
		sum(newk.Count_RBs_NC) as RBs_Allocated_Den,
		sum(newk.Count_RBs_NC*isnull(newk.[RBs NC],0)) as RBs_Allocated_Num,
		max(newk.[Max RBs NC]) as RBs_Allocated_Max,

		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		sum(isnull(OCA.[ 0-0.8Mbps_N ],0)) as [1_N],		sum(isnull(OCA.[ 0.8-1.6Mbps_N ],0)) as [2_N],		sum(isnull(OCA.[ 1.6-2.4Mbps_N ],0)) as [3_N],		sum(isnull(OCA.[ 2.4-3.2Mbps_N ],0)) as [4_N],		sum(isnull(OCA.[ 3.2-4Mbps_N ],0)) as [5_N],
		sum(isnull(OCA.[ 4-4.8Mbps_N ],0)) as [6_N],		sum(isnull(OCA.[ 4.8-5.6Mbps_N ],0)) as [7_N],		sum(isnull(OCA.[ 5.6-6.4Mbps_N ],0)) as [8_N],		sum(isnull(OCA.[ 6.4-7.2Mbps_N ],0)) as [9_N],		sum(isnull(OCA.[ 7.2-8Mbps_N ],0)) as [10_N],
		sum(isnull(OCA.[ 8-8.8Mbps_N ],0)) as [11_N],		sum(isnull(OCA.[ 8.8-9.6Mbps_N ],0)) as [12_N],	sum(isnull(OCA.[ 9.6-10.4Mbps_N ],0)) as [13_N],	sum(isnull(OCA.[ 10.4-11.2Mbps_N ],0)) as [14_N],	sum(isnull(OCA.[ 11.2-12Mbps_N ],0)) as [15_N],
		sum(isnull(OCA.[ 12-12.8Mbps_N ],0)) as [16_N],	sum(isnull(OCA.[ 12.8-13.6Mbps_N ],0)) as [17_N],	sum(isnull(OCA.[ 13.6-14.4Mbps_N ],0)) as [18_N],	sum(isnull(OCA.[ 14.4-15.2Mbps_N ],0)) as [19_N],	sum(isnull(OCA.[ 15.2-16Mbps_N ],0)) as [20_N],
		sum(isnull(OCA.[ 16-16.8Mbps_N ],0)) as [21_N],	sum(isnull(OCA.[ 16.8-17.6Mbps_N ],0)) as [22_N],	sum(isnull(OCA.[ 17.6-18.4Mbps_N ],0)) as [23_N],	sum(isnull(OCA.[ 18.4-19.2Mbps_N ],0)) as [24_N],	sum(isnull(OCA.[ 19.2-20Mbps_N ],0)) as [25_N],
		sum(isnull(OCA.[ 20-20.8Mbps_N ],0)) as [26_N],	sum(isnull(OCA.[ 20.8-21.6Mbps_N ],0)) as [27_N],	sum(isnull(OCA.[ 21.6-22.4Mbps_N ],0)) as [28_N],	sum(isnull(OCA.[ 22.4-23.2Mbps_N ],0)) as [29_N],	sum(isnull(OCA.[ 23.2-24Mbps_N ],0)) as [30_N],
		sum(isnull(OCA.[ 24-24.8Mbps_N ],0)) as [31_N],	sum(isnull(OCA.[ 24.8-25.6Mbps_N ],0)) as [32_N],	sum(isnull(OCA.[ 25.6-26.4Mbps_N ],0)) as [33_N],	sum(isnull(OCA.[ 26.4-27.2Mbps_N ],0)) as [34_N],	sum(isnull(OCA.[ 27.2-28Mbps_N ],0)) as [35_N],
		sum(isnull(OCA.[ 28-28.8Mbps_N ],0)) as [36_N],	sum(isnull(OCA.[ 28.8-29.6Mbps_N ],0)) as [37_N],	sum(isnull(OCA.[ 29.6-30.4Mbps_N ],0)) as [38_N],	sum(isnull(OCA.[ 30.4-31.2Mbps_N ],0)) as [39_N],	sum(isnull(OCA.[ 31.2-32Mbps_N ],0)) as [40_N],
		sum(isnull(OCA.[ 32-32.8Mbps_N ],0)) as [41_N],	sum(isnull(OCA.[ 32.8-33.6Mbps_N ],0)) as [42_N],	sum(isnull(OCA.[ 33.6-34.4Mbps_N ],0)) as [43_N],	sum(isnull(OCA.[ 34.4-35.2Mbps_N ],0)) as [44_N],	sum(isnull(OCA.[ 35.2-36Mbps_N ],0)) as [45_N],
		sum(isnull(OCA.[ 36-36.8Mbps_N ],0)) as [46_N],	sum(isnull(OCA.[ 36.8-37.6Mbps_N ],0)) as [47_N],	sum(isnull(OCA.[ 37.6-38.4Mbps_N ],0)) as [48_N],	sum(isnull(OCA.[ 38.4-39.2Mbps_N ],0)) as [49_N],	sum(isnull(OCA.[ 39.2-40Mbps_N ],0)) as [50_N],
		sum(isnull(OCA.[ 40-40.8Mbps_N ],0)) as [51_N],	sum(isnull(OCA.[ 40.8-41.6Mbps_N ],0)) as [52_N],	sum(isnull(OCA.[ 41.6-42.4Mbps_N ],0)) as [53_N],	sum(isnull(OCA.[ 42.4-43.2Mbps_N ],0)) as [54_N],	sum(isnull(OCA.[ 43.2-44Mbps_N ],0)) as [55_N],
		sum(isnull(OCA.[ 44-44.8Mbps_N ],0)) as [56_N],	sum(isnull(OCA.[ 44.8-45.6Mbps_N ],0)) as [57_N],	sum(isnull(OCA.[ 45.6-46.4Mbps_N ],0)) as [58_N],	sum(isnull(OCA.[ 46.4-47.2Mbps_N ],0)) as [59_N],	sum(isnull(OCA.[ 47.2-48Mbps_N ],0)) as [60_N],
		sum(isnull(OCA.[ 48-48.8Mbps_N ],0)) as [61_N],	sum(isnull(OCA.[ 48.8-49.6Mbps_N ],0)) as [62_N],	sum(isnull(OCA.[ 49.6-50.4Mbps_N ],0)) as [63_N],	sum(isnull(OCA.[ 50.4-51.2Mbps_N ],0)) as [64_N],	sum(isnull(OCA.[ 51.2-52Mbps_N ],0)) as [65_N],	
		sum(isnull(OCA.[ >52Mbps_N],0)) as [66_N]
	
		--null as Region_Road_VF, null as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,sum(isnull(OCA.[ 0-5Mbps],0)) as [1]		,sum(isnull(OCA.[ 5-10Mbps],0)) as [2]		,sum(isnull(OCA.[ 10-15Mbps],0)) as [3]		,sum(isnull(OCA.[ 15-20Mbps],0)) as [4]		,sum(isnull(OCA.[ 20-25Mbps],0)) as [5]
		,sum(isnull(OCA.[ 25-30Mbps],0)) as [6]		,sum(isnull(OCA.[ 30-35Mbps],0)) as [7]		,sum(isnull(OCA.[ 35-40Mbps],0)) as [8]		,sum(isnull(OCA.[ 40-45Mbps],0)) as [9]		,sum(isnull(OCA.[ 45-50Mbps],0)) as [10]
		,sum(isnull(OCA.[ >50Mbps],0)) as [11]	
		,sum(0) as [12]	,sum(0) as [13]	,sum(0) as [14]	,sum(0) as [15]	,sum(0) as [16]	,sum(0) as [17]	,sum(0) as [18]	,sum(0) as [19]	,sum(0) as [20]
		,sum(0) as [21]	,sum(0) as [22]	,sum(0) as [23]	,sum(0) as [24]	,sum(0) as [25]	,sum(0) as [26]	,sum(0) as [27]	,sum(0) as [28]	,sum(0) as [29]
		,sum(0) as [30]	,sum(0) as [31]	,sum(0) as [32]	,sum(0) as [33]	,sum(0) as [34]	,sum(0) as [35]	,sum(0) as [36]	,sum(0) as [37]	,sum(0) as [38]
		,sum(0) as [39]	,sum(0) as [40]	,sum(0) as [41],

		-- Parametros de configuracion:
		pfl.ASideDevice as ASideDevice, pfl.BSideDevice as BSideDevice, pfl.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from	[AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_UL_Thput_NC] t
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_UL_Performance_NC_LTE_CA_ONLY]  pfl
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(pfl.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=pfl.mnc and t.Date_Reporting=pfl.Date_Reporting and t.entidad=pfl.entidad and t.Aggr_Type=pfl.Aggr_Type and t.Report_Type=pfl.Report_Type and t.meas_round=pfl.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_UL_Technology_NC_LTE_CA_ONLY]  tel
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(tel.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=tel.mnc and t.Date_Reporting=tel.Date_Reporting and t.entidad=tel.entidad and t.Aggr_Type=tel.Aggr_Type and t.Report_Type=tel.Report_Type and t.meas_round=tel.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_NEW_KPIs_UL_LTE_CA_ONLY]  newk
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(newk.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=newk.mnc and t.Date_Reporting=newk.Date_Reporting and t.entidad=newk.entidad and t.Aggr_Type=newk.Aggr_Type and t.Report_Type=newk.Report_Type and t.meas_round=newk.meas_round
				left outer join [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_UL_Thput_NC_LTE_CA_ONLY] OCA
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(OCA.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=OCA.mnc and t.Date_Reporting=OCA.Date_Reporting and t.entidad=OCA.entidad and t.Aggr_Type=OCA.Aggr_Type and t.Report_Type=OCA.Report_Type and t.meas_round=OCA.meas_round
				, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, case when  t.entidad like 'AVE-%' or  t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end, t.mnc, t.meas_round, t.Date_Reporting, t.Week_Reporting, t.entidad, t.Report_Type, t.Aggr_Type,
		pfl.ASideDevice, pfl.BSideDevice, pfl.SWVersion--, t.Region_VF, t.Region_OSP

	-----------
	union all	-- Road 4G_CA_Only - NC_UL	
	select  
		p.codigo_ine, 'Roads' vf_environment, t.mnc, t.meas_round, t.Date_Reporting as meas_date, t.Week_Reporting as meas_week, 
		'Road 4G_CA_Only' as meas_Tech, 'NC_UL' as Test_type, 'Uplink' as Direction,  t.entidad as vf_entity, t.Report_Type, t.Aggr_Type,
	
		-- General:
		sum(OCA.Subidas) as Num_tests,
		sum(OCA.[fallos de acceso]) as Failed,
		sum(OCA.[fallos de descarga]) as Dropped,
		sum(0) as Session_time_Num,
		sum(OCA.count_throughput) as Throughput_Den,
		sum(0) as Session_time_Den,
		sum(OCA.Throughput*OCA.count_throughput) as Throughput_Num,
		max(OCA.[Throughput Max]) as Throughput_Max,
		sum(0) as Throughput_3M_Num,
		sum(OCA.Count_Throughput_1M) as Throughput_1M_Num,
		sum(0) as Throughput_128K_Num,
		sum(OCA.Count_Throughput_64k) as Throughput_64K_Num,
		sum(OCA.Count_Throughput_384k) as Throughput_384K_Num,
		--CAC 10/08/2017: thput de test sin error y con error
		sum(OCA.Count_Throughput_ALL) as Throughput_with_Error_Den,
		sum(OCA.Throughput_ALL*OCA.Count_Throughput_ALL) as Throughput_with_Error_Num,
		sum(0) as WEB_IP_ACCESS_TIME_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_DEN,
		sum(0) as WEB_HTTP_TRANSFER_TIME_NUM,
		sum(0) as WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_NUM,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(tel.[% GSM]*tel.[Count_%GSM]) as Radio_2G_use_Num,
		sum(tel.[% WCDMA]*tel.[Count_%WCDMA]) as Radio_3G_use_Num,
		sum(tel.[% LTE]*tel.[Count_%LTE]) as Radio_4G_use_Num,
		sum(OCA.Subidas*(isnull(tel.[% GSM],0)+isnull(tel.[% WCDMA],0)+isnull(tel.[% LTE],0))) as Radio_use_Den,
		sum(tel.[Count_%GSM]) as Radio_2G_use_Den,
		sum(tel.[Count_%WCDMA]) as Radio_3G_use_Den,
		sum(tel.[Count_%LTE]) as Radio_4G_use_Den,

		sum(tel.[% U2100]*tel.[Count_%U2100]) as Radio_U2100_use_Num,
		sum(tel.[% U900]*tel.[Count_%U900]) as Radio_U900_use_Num,
		sum(tel.[% LTE2100]*tel.[Count_%LTE2100]) as Radio_LTE2100_use_Num,
		sum(tel.[% LTE2600]*tel.[Count_%LTE2600]) as Radio_LTE2600_use_Num,
		sum(tel.[% LTE1800]*tel.[Count_%LTE1800]) as Radio_LTE1800_use_Num,
		sum(tel.[% LTE800]*tel.[Count_%LTE800]) as Radio_LTE800_use_Num,
		sum(OCA.Subidas*(isnull(tel.[% U2100],0)+isnull(tel.[% U900],0)+isnull(tel.[% LTE2100],0)+isnull(tel.[% LTE2600],0)+isnull(tel.[% LTE1800],0)+isnull(tel.[% LTE800],0))) as Radio_Band_Use_Den,
		sum(tel.[Count_%U2100]) as Radio_U2100_use_Den,
		sum(tel.[Count_%U900]) as Radio_U900_use_Den,
		sum(tel.[Count_%LTE2100]) as Radio_LTE2100_use_Den,
		sum(tel.[Count_%LTE2600]) as Radio_LTE2600_use_Den,
		sum(tel.[Count_%LTE1800]) as Radio_LTE1800_use_Den,
		sum(tel.[Count_%LTE800]) as Radio_LTE800_use_Den,

		-- Esta info en 3G, no tienen sentido en 4G_CA_Only
		sum(0) as [3G_DualCarrier_use_Num],	sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],		sum(0) as [3G_DC_2100_use_Den],
		sum(0) as [3G_DC_900_use_Num],		sum(0) as [3G_DC_900_use_Den],
		sum(0) as [3G_NumCodes_use_Num],	sum(0) as [3G_NumCodes_use_Den],
		sum(0) as [3G_QPSK_use_Num],		sum(0) as [3G_16QAM_use_Num],
		sum(0) as [3G_64QAM_use_Num],		sum(0) as [3G_QPSK_use_Den],
		sum(0) as [3G_16QAM_use_Den],		sum(0) as [3G_64QAM_use_Den],
		sum(0) as [3G_%_SF22_Num],			sum(0) as [3G_%_SF22andSF42_Num],	sum(0) as [3G_%_SF4_Num],	sum(0) as [3G_%_SF42_Num],
		sum(0) as [3G_%_SF22_Den],			sum(0) as [3G_%_SF22andSF42_Den],	sum(0) as [3G_%_SF4_Den],	sum(0) as [3G_%_SF42_Den],
		sum(0) as [3G_%_TTI2ms_Num],		sum(0) as [3G_%_TTI2ms_Den],
		sum(0) as [RSCP_Lin_Num],			sum(0) as [EcI0_Lin_Num],			sum(0) as [RSCP_Lin_Den],		sum(0) as [EcI0_Lin_Den],	

		-- Performance -- Esta info en 3G, no tienen sentido en 4G_CA_Only
		sum(0) as [3G_CQI],				sum(0) as [3G_DataStats_Den],
		sum(0) as CQI_U900_Num,			sum(0) as CQI_U900_Den,		sum(0) as CQI_U2100_Num,	sum(0) as CQI_U2100_Den,
		sum(0) as [HSPA_PCT_Num],		sum(0) as [HSPA+_PCT_Num],	sum(0) as [HSPA+_DC_PCT_Num],
		sum(0) as [HSPA_PCT_Den],		sum(0) as [HSPA+_PCT_Den],	sum(0) as [HSPA+_DC_PCT_Den],
		sum(0) as [UL_Inter_Lin_Num],	sum(0) as [UL_Inter_Lin_Den],	
	
		-- Performance LTE:
		sum(pfl.[Count_CQI_4G]*pfl.[ CQI]) as CQI_4G_Num,
		sum(pfl.Count_CQI_L800*pfl.CQI_L800) as CQI_L800_Num,
		sum(pfl.Count_CQI_L1800*pfl.CQI_L1800) as CQI_L1800_Num,
		sum(pfl.Count_CQI_L2100*pfl.CQI_L2100) as CQI_L2100_Num,
		sum(pfl.Count_CQI_L2600*pfl.CQI_L2600) as CQI_L2600_Num,
		sum(pfl.[Count_CQI_4G]) as CQI_4G_Den,
		sum(pfl.Count_CQI_L800) as CQI_L800_Den,
		sum(pfl.Count_CQI_L1800) as CQI_L1800_Den,
		sum(pfl.Count_CQI_L2100) as CQI_L2100_Den,
		sum(pfl.Count_CQI_L2600) as CQI_L2600_Den,

		sum(pfl.Count_LTE_5Mhz_SC *pfl.LTE_5Mhz_SC_PCT) as LTE_5Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_10Mhz_SC*pfl.LTE_10Mhz_SC_PCT) as LTE_10Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_15Mhz_SC*pfl.LTE_15Mhz_SC_PCT) as LTE_15Mhz_SC_Use_Num,
		sum(pfl.Count_LTE_20Mhz_SC*pfl.LTE_20Mhz_SC_PCT) as LTE_20Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_CA_Use_Num,
		sum(0) as LTE_20Mhz_CA_Use_Num,
		sum(0) as LTE_25Mhz_CA_Use_Num,
		sum(0) as LTE_30Mhz_CA_Use_Num,
		sum(0) as LTE_35Mhz_CA_Use_Num,
		sum(0) as LTE_40Mhz_CA_Use_Num,
		sum(pfl.Count_LTE_5Mhz_SC) as LTE_5Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_10Mhz_SC) as LTE_10Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_15Mhz_SC) as LTE_15Mhz_SC_Use_Den,
		sum(pfl.Count_LTE_20Mhz_SC) as LTE_20Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_CA_Use_Den,
		sum(0) as LTE_20Mhz_CA_Use_Den,
		sum(0) as LTE_25Mhz_CA_Use_Den,
		sum(0) as LTE_30Mhz_CA_Use_Den,
		sum(0) as LTE_35Mhz_CA_Use_Den,
		sum(0) as LTE_40Mhz_CA_Use_Den,

		sum((isnull(pfl.Count_LTE_5Mhz_SC,0) 
		 --    +isnull(pfl.Count_LTE_10Mhz_SC,0) +isnull(pfl.Count_LTE_15Mhz_SC,0) +isnull(pfl.Count_LTE_20Mhz_SC,0) +
		 --    isnull(pfl.Count_LTE_15Mhz_CA,0) +isnull(pfl.Count_LTE_20Mhz_CA,0) +isnull(pfl.Count_LTE_25Mhz_CA,0) +isnull(pfl.Count_LTE_30Mhz_CA,0) +
		 --    isnull(pfl.Count_LTE_35Mhz_CA,0) +isnull(pfl.Count_LTE_40Mhz_CA,0)
			)
			*(
			pfl.LTE_5Mhz_SC_PCT+pfl.LTE_10Mhz_SC_PCT+pfl.LTE_15Mhz_SC_PCT+pfl.LTE_20Mhz_SC_PCT)
			) as LTE_BW_use_den,	
		sum(pfl.[ RBs]*pfl.[Count_RBs]) as [4G_RBs_use_Num],
		sum(pfl.[Count_RBs]) as [4G_RBs_use_Den],

		sum(pfl.[ % TM1]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM1_use_Num],
		sum(pfl.[ % TM2]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM2_use_Num],
		sum(pfl.[ % TM3]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM3_use_Num],
		sum(pfl.[ % TM4]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM4_use_Num],
		sum(pfl.[ % MIMO]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM5_use_Num],
		sum(pfl.[ % TM6]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM6_use_Num],
		sum(pfl.[ % TM7]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM7_use_Num],
		sum(pfl.[ % TM8]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM8_N],
		sum(pfl.[ % TM9]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TM9_N],
		sum(pfl.[ % TM Invalid]*([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid])) as [4G_TMInvalid_use_Num],
		sum(0) as [4G_TMUnknown_use_Num],
		sum([Count_TM1]+[Count_TM2]+[Count_TM3]+[Count_TM4]+[Count_TM5]+[Count_TM6]+[Count_TM7]+[Count_TM8]+[Count_TM9]+[Count_TM_Invalid]) as [4G_TM_Den],

		-- Technology LTE:
		sum(0) as [4G_%CA_Num],
		sum(0) as [4G_%CA_Den],
		sum((tel.[BPSK])*tel.Count_BPSK) as [4G_BPSK_Use_Num],
		sum((tel.[QPSK])*tel.Count_QPSK) as [4G_QPSK_Use_Num],
		sum((tel.[16QAM])*tel.Count_16QAM) as [4G_16QAM_Use_Num],
		sum(0) as [4G_64QAM_Use_Num],
		sum(tel.Count_BPSK) as [4G_BPSK_Use_Den],
		sum(tel.Count_QPSK) as [4G_QPSK_Use_Den],
		sum(tel.Count_16QAM) as [4G_16QAM_Use_Den],
		sum(0) as [4G_64QAM_Use_Den],

		sum((isnull(pfl.Count_CQI_L800,0)+isnull(pfl.Count_CQI_L1800,0)+isnull(pfl.Count_CQI_L2100,0)+isnull(pfl.Count_CQI_L2600,0))*(isnull(tel.[16QAM],0)+isnull(tel.QPSK,0))) as [4G_stats_Den],
	
		sum(tel.[RSRP_Lin]*tel.[Count_RSRP_Lin]) as [RSRP_Lin_Num],
		sum(tel.[RSRQ_Lin]*tel.[Count_RSRQ_Lin]) as [RSRQ_Lin_Num],	
		sum(tel.[SINR_Lin]*tel.[Count_SINR_Lin]) as [SINR_Lin_Num],	
		sum(tel.[Count_RSRP_Lin]) as [RSRP_Lin_Den],	
		sum(tel.[Count_RSRQ_Lin]) as [RSRQ_Lin_Den],	
		sum(tel.[Count_SINR_Lin]) as [SINR_Lin_Den],

		-- New KPIs:
		sum(newk.[MIMO_NC_num]) as [MIMO_num],
		sum(newk.[RI1_NC_num]) as [RI1_num],
		sum(newk.[RI2_NC_num]) as [RI2_num],
		sum(newk.[MIMO_NC_den]) as [MIMO_den],
		sum(newk.[RI1_NC_den]) as [RI1_den],
		sum(newk.[RI2_NC_den]) as [RI2_den],
		sum(newk.Count_RBs_NC) as RBs_Allocated_Den,
		sum(newk.Count_RBs_NC*isnull(newk.[RBs NC],0)) as RBs_Allocated_Num,
		max(newk.[Max RBs NC]) as RBs_Allocated_Max,

		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		sum(isnull(OCA.[ 0-0.8Mbps_N ],0)) as [1_N],		sum(isnull(OCA.[ 0.8-1.6Mbps_N ],0)) as [2_N],		sum(isnull(OCA.[ 1.6-2.4Mbps_N ],0)) as [3_N],		sum(isnull(OCA.[ 2.4-3.2Mbps_N ],0)) as [4_N],		sum(isnull(OCA.[ 3.2-4Mbps_N ],0)) as [5_N],
		sum(isnull(OCA.[ 4-4.8Mbps_N ],0)) as [6_N],		sum(isnull(OCA.[ 4.8-5.6Mbps_N ],0)) as [7_N],		sum(isnull(OCA.[ 5.6-6.4Mbps_N ],0)) as [8_N],		sum(isnull(OCA.[ 6.4-7.2Mbps_N ],0)) as [9_N],		sum(isnull(OCA.[ 7.2-8Mbps_N ],0)) as [10_N],
		sum(isnull(OCA.[ 8-8.8Mbps_N ],0)) as [11_N],		sum(isnull(OCA.[ 8.8-9.6Mbps_N ],0)) as [12_N],	sum(isnull(OCA.[ 9.6-10.4Mbps_N ],0)) as [13_N],	sum(isnull(OCA.[ 10.4-11.2Mbps_N ],0)) as [14_N],	sum(isnull(OCA.[ 11.2-12Mbps_N ],0)) as [15_N],
		sum(isnull(OCA.[ 12-12.8Mbps_N ],0)) as [16_N],	sum(isnull(OCA.[ 12.8-13.6Mbps_N ],0)) as [17_N],	sum(isnull(OCA.[ 13.6-14.4Mbps_N ],0)) as [18_N],	sum(isnull(OCA.[ 14.4-15.2Mbps_N ],0)) as [19_N],	sum(isnull(OCA.[ 15.2-16Mbps_N ],0)) as [20_N],
		sum(isnull(OCA.[ 16-16.8Mbps_N ],0)) as [21_N],	sum(isnull(OCA.[ 16.8-17.6Mbps_N ],0)) as [22_N],	sum(isnull(OCA.[ 17.6-18.4Mbps_N ],0)) as [23_N],	sum(isnull(OCA.[ 18.4-19.2Mbps_N ],0)) as [24_N],	sum(isnull(OCA.[ 19.2-20Mbps_N ],0)) as [25_N],
		sum(isnull(OCA.[ 20-20.8Mbps_N ],0)) as [26_N],	sum(isnull(OCA.[ 20.8-21.6Mbps_N ],0)) as [27_N],	sum(isnull(OCA.[ 21.6-22.4Mbps_N ],0)) as [28_N],	sum(isnull(OCA.[ 22.4-23.2Mbps_N ],0)) as [29_N],	sum(isnull(OCA.[ 23.2-24Mbps_N ],0)) as [30_N],
		sum(isnull(OCA.[ 24-24.8Mbps_N ],0)) as [31_N],	sum(isnull(OCA.[ 24.8-25.6Mbps_N ],0)) as [32_N],	sum(isnull(OCA.[ 25.6-26.4Mbps_N ],0)) as [33_N],	sum(isnull(OCA.[ 26.4-27.2Mbps_N ],0)) as [34_N],	sum(isnull(OCA.[ 27.2-28Mbps_N ],0)) as [35_N],
		sum(isnull(OCA.[ 28-28.8Mbps_N ],0)) as [36_N],	sum(isnull(OCA.[ 28.8-29.6Mbps_N ],0)) as [37_N],	sum(isnull(OCA.[ 29.6-30.4Mbps_N ],0)) as [38_N],	sum(isnull(OCA.[ 30.4-31.2Mbps_N ],0)) as [39_N],	sum(isnull(OCA.[ 31.2-32Mbps_N ],0)) as [40_N],
		sum(isnull(OCA.[ 32-32.8Mbps_N ],0)) as [41_N],	sum(isnull(OCA.[ 32.8-33.6Mbps_N ],0)) as [42_N],	sum(isnull(OCA.[ 33.6-34.4Mbps_N ],0)) as [43_N],	sum(isnull(OCA.[ 34.4-35.2Mbps_N ],0)) as [44_N],	sum(isnull(OCA.[ 35.2-36Mbps_N ],0)) as [45_N],
		sum(isnull(OCA.[ 36-36.8Mbps_N ],0)) as [46_N],	sum(isnull(OCA.[ 36.8-37.6Mbps_N ],0)) as [47_N],	sum(isnull(OCA.[ 37.6-38.4Mbps_N ],0)) as [48_N],	sum(isnull(OCA.[ 38.4-39.2Mbps_N ],0)) as [49_N],	sum(isnull(OCA.[ 39.2-40Mbps_N ],0)) as [50_N],
		sum(isnull(OCA.[ 40-40.8Mbps_N ],0)) as [51_N],	sum(isnull(OCA.[ 40.8-41.6Mbps_N ],0)) as [52_N],	sum(isnull(OCA.[ 41.6-42.4Mbps_N ],0)) as [53_N],	sum(isnull(OCA.[ 42.4-43.2Mbps_N ],0)) as [54_N],	sum(isnull(OCA.[ 43.2-44Mbps_N ],0)) as [55_N],
		sum(isnull(OCA.[ 44-44.8Mbps_N ],0)) as [56_N],	sum(isnull(OCA.[ 44.8-45.6Mbps_N ],0)) as [57_N],	sum(isnull(OCA.[ 45.6-46.4Mbps_N ],0)) as [58_N],	sum(isnull(OCA.[ 46.4-47.2Mbps_N ],0)) as [59_N],	sum(isnull(OCA.[ 47.2-48Mbps_N ],0)) as [60_N],
		sum(isnull(OCA.[ 48-48.8Mbps_N ],0)) as [61_N],	sum(isnull(OCA.[ 48.8-49.6Mbps_N ],0)) as [62_N],	sum(isnull(OCA.[ 49.6-50.4Mbps_N ],0)) as [63_N],	sum(isnull(OCA.[ 50.4-51.2Mbps_N ],0)) as [64_N],	sum(isnull(OCA.[ 51.2-52Mbps_N ],0)) as [65_N],	
		sum(isnull(OCA.[ >52Mbps_N],0)) as [66_N]
	
		--t.Region_VF as Region_Road_VF, t.Region_OSP as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,sum(isnull(OCA.[ 0-5Mbps],0)) as [1]		,sum(isnull(OCA.[ 5-10Mbps],0)) as [2]		,sum(isnull(OCA.[ 10-15Mbps],0)) as [3]		,sum(isnull(OCA.[ 15-20Mbps],0)) as [4]		,sum(isnull(OCA.[ 20-25Mbps],0)) as [5]
		,sum(isnull(OCA.[ 25-30Mbps],0)) as [6]		,sum(isnull(OCA.[ 30-35Mbps],0)) as [7]		,sum(isnull(OCA.[ 35-40Mbps],0)) as [8]		,sum(isnull(OCA.[ 40-45Mbps],0)) as [9]		,sum(isnull(OCA.[ 45-50Mbps],0)) as [10]
		,sum(isnull(OCA.[ >50Mbps],0)) as [11]	
		,sum(0) as [12]	,sum(0) as [13]	,sum(0) as [14]	,sum(0) as [15]	,sum(0) as [16]	,sum(0) as [17]	,sum(0) as [18]	,sum(0) as [19]	,sum(0) as [20]
		,sum(0) as [21]	,sum(0) as [22]	,sum(0) as [23]	,sum(0) as [24]	,sum(0) as [25]	,sum(0) as [26]	,sum(0) as [27]	,sum(0) as [28]	,sum(0) as [29]
		,sum(0) as [30]	,sum(0) as [31]	,sum(0) as [32]	,sum(0) as [33]	,sum(0) as [34]	,sum(0) as [35]	,sum(0) as [36]	,sum(0) as [37]	,sum(0) as [38]
		,sum(0) as [39]	,sum(0) as [40]	,sum(0) as [41],

		-- Parametros de configuracion:
		pfl.ASideDevice as ASideDevice, pfl.BSideDevice as BSideDevice, pfl.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from	[aggrData4G_ROAD].dbo.[lcc_aggr_sp_MDD_Data_UL_Thput_NC] t
				left outer join [aggrData4G_ROAD].[dbo].[lcc_aggr_sp_MDD_Data_UL_Performance_NC_LTE_CA_ONLY] pfl
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(pfl.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=pfl.mnc and t.Date_Reporting=pfl.Date_Reporting and t.entidad=pfl.entidad and t.Aggr_Type=pfl.Aggr_Type and t.Report_Type=pfl.Report_Type and t.meas_round=pfl.meas_round
				left outer join [aggrData4G_ROAD].[dbo].[lcc_aggr_sp_MDD_Data_UL_Technology_NC_LTE_CA_ONLY] tel
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(tel.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=tel.mnc and t.Date_Reporting=tel.Date_Reporting and t.entidad=tel.entidad and t.Aggr_Type=tel.Aggr_Type and t.Report_Type=tel.Report_Type and t.meas_round=tel.meas_round
				left outer join [aggrData4G_ROAD].[dbo].[lcc_aggr_sp_MDD_Data_NEW_KPIs_UL_LTE_CA_ONLY] newk
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(newk.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=newk.mnc and t.Date_Reporting=newk.Date_Reporting and t.entidad=newk.entidad and t.Aggr_Type=newk.Aggr_Type and t.Report_Type=newk.Report_Type and t.meas_round=newk.meas_round
				left outer join [AGGRData4G_ROAD].[dbo].[lcc_aggr_sp_MDD_Data_UL_Thput_NC_LTE_CA_ONLY] OCA
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(OCA.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=OCA.mnc and t.Date_Reporting=OCA.Date_Reporting and t.entidad=OCA.entidad and t.Aggr_Type=OCA.Aggr_Type and t.Report_Type=OCA.Report_Type and t.meas_round=OCA.meas_round
				, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, t.mnc, t.meas_round, t.Date_Reporting, t.Week_Reporting, t.entidad, t.Report_Type, t.Aggr_Type,
		pfl.ASideDevice, pfl.BSideDevice, pfl.SWVersion--, t.Region_VF, t.Region_OSP

	-------------
	-- 4G_CA_Only WEB
	insert into _RI_Data_e	
	select  
		p.codigo_ine, case when  t.entidad like 'AVE-%' or  t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment,  t.mnc,  t.meas_round,  t.Date_Reporting as meas_date,  t.Week_Reporting as meas_week, 
		'4G_CA_Only' as meas_Tech, 'WEB HTTP' as Test_type, 'Downlink' as Direction,  t.entidad as vf_entity,  t.Report_Type,  t.Aggr_Type,
		
		-- General:
		sum(W4G.Navegaciones) as Num_tests,
		sum(W4G.[Fallos de acceso]) as Failed,
		sum(W4G.[Navegaciones fallidas]) as Dropped,
		sum(cast(W4G.[Session Time] as float)*W4G.[Count_SessionTime]) as Session_time_Num,
		sum(0) as Throughput_Den,
		sum(W4G.[Count_SessionTime]) as Session_time_Den,
		sum(0) as Throughput_Num,
		max(0) as Throughput_Max,
		sum(0) as Throughput_3M_Num,
		sum(0) as Throughput_1M_Num,
		sum(0) as Throughput_128K_Num,
		sum(0) as Throughput_64K_Num,
		sum(0) as Throughput_384K_Num,
		--CAC 10/08/2017: thput de test sin error y con error
		sum(0) as Throughput_with_Error_Den,
		sum(0) as Throughput_with_Error_Num,
		sum(cast(W4G.[IP Service Setup Time] as float)*W4G.[Count_IPServiceSetupTime]) as WEB_IP_ACCESS_TIME_NUM,
		sum(W4G.[Count_IPServiceSetupTime]) as WEB_IP_ACCESS_TIME_DEN,
		sum(cast(W4G.[Transfer Time] as float)*W4G.[Count_TransferTime]) as WEB_HTTP_TRANSFER_TIME_NUM,
		sum(W4G.[Count_TransferTime]) as WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_NUM,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(0) as Radio_2G_use_Num,
		sum(0) as Radio_3G_use_Num,
		sum(0) as Radio_4G_use_Num,
		sum(0) as Radio_use_Den,
		sum(0) as Radio_2G_use_Den,
		sum(0) as Radio_3G_use_Den,
		sum(0) as Radio_4G_use_Den,

		sum(0) as Radio_U2100_use_Num,
		sum(0) as Radio_U900_use_Num,
		sum(0) as Radio_LTE2100_use_Num,
		sum(0) as Radio_LTE2600_use_Num,
		sum(0) as Radio_LTE1800_use_Num,
		sum(0) as Radio_LTE800_use_Num,
		sum(0) as Radio_Band_Use_Den,
		sum(0) as Radio_U2100_use_Den,
		sum(0) as Radio_U900_use_Den,
		sum(0) as Radio_LTE2100_use_Den,
		sum(0) as Radio_LTE2600_use_Den,
		sum(0) as Radio_LTE1800_use_Den,
		sum(0) as Radio_LTE800_use_Den,

		sum(0) as [3G_DualCarrier_use_Num],
		sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],
		sum(0) as [3G_DC_2100_use_Den],
		sum(0) as [3G_DC_900_use_Num],
		sum(0) as [3G_DC_900_use_Den],

		sum(0) as [3G_NumCodes_use_Num],
		sum(0) as [3G_NumCodes_use_Den],
		sum(0) as [3G_QPSK_use_Num],
		sum(0) as [3G_16QAM_use_Num],
		sum(0) as [3G_64QAM_use_Num],
		sum(0) as [3G_QPSK_use_Den],
		sum(0) as [3G_16QAM_use_Den],
		sum(0) as [3G_64QAM_use_Den],

		sum(0) as [3G_%_SF22_Num],
		sum(0) as [3G_%_SF22andSF42_Num],
		sum(0) as [3G_%_SF4_Num],
		sum(0) as [3G_%_SF42_Num],
		sum(0) as [3G_%_SF22_Den],
		sum(0) as [3G_%_SF22andSF42_Den],
		sum(0) as [3G_%_SF4_Den],
		sum(0) as [3G_%_SF42_Den],
		sum(0) as [3G_%_TTI2ms_Num],
		sum(0) as [3G_%_TTI2ms_Den],	
	
		sum(0) as [RSCP_Lin_Num],
		sum(0) as [EcI0_Lin_Num],	
		sum(0) as [RSCP_Lin_Den],	
		sum(0) as [EcI0_Lin_Den],
	
		-- Performance:
		sum(0) as [3G_CQI],
		sum(0) as [3G_DataStats_Den],
		Sum(0) as CQI_U900_Num,
		sum(0) as CQI_U900_Den,
		Sum(0) as CQI_U2100_Num,
		sum(0) as CQI_U2100_Den,

		sum(0) as [HSPA_PCT_Num],
		sum(0) as [HSPA+_PCT_Num],
		sum(0) as [HSPA+_DC_PCT_Num],
		sum(0) as [HSPA_PCT_Den],
		sum(0) as [HSPA+_PCT_Den],
		sum(0) as [HSPA+_DC_PCT_Den],

		sum(0) as [UL_Inter_Lin_Num],
		sum(0) as [UL_Inter_Lin_Den],	
	
		-- Performance LTE:
		sum(0) as CQI_4G_Num,
		sum(0) as CQI_L800_Num,
		sum(0) as CQI_L1800_Num,
		sum(0) as CQI_L2100_Num,
		sum(0) as CQI_L2600_Num,
		sum(0) as CQI_4G_Den,
		sum(0) as CQI_L800_Den,
		sum(0) as CQI_L1800_Den,
		sum(0) as CQI_L2100_Den,
		sum(0) as CQI_L2600_Den,

		sum(0) as LTE_5Mhz_SC_Use_Num,
		sum(0) as LTE_10Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_SC_Use_Num,
		sum(0) as LTE_20Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_CA_Use_Num,
		sum(0) as LTE_20Mhz_CA_Use_Num,
		sum(0) as LTE_25Mhz_CA_Use_Num,
		sum(0) as LTE_30Mhz_CA_Use_Num,
		sum(0) as LTE_35Mhz_CA_Use_Num,
		sum(0) as LTE_40Mhz_CA_Use_Num,
		sum(0) as LTE_5Mhz_SC_Use_Den,
		sum(0) as LTE_10Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_SC_Use_Den,
		sum(0) as LTE_20Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_CA_Use_Den,
		sum(0) as LTE_20Mhz_CA_Use_Den,
		sum(0) as LTE_25Mhz_CA_Use_Den,
		sum(0) as LTE_30Mhz_CA_Use_Den,
		sum(0) as LTE_35Mhz_CA_Use_Den,
		sum(0) as LTE_40Mhz_CA_Use_Den,
		
		sum(0) as LTE_BW_use_den,	
		sum(0) as [4G_RBs_use_Num],
		sum(0) as [4G_RBs_use_Den],

		sum(0) as [4G_TM1_use_Num],
		sum(0) as [4G_TM2_use_Num],
		sum(0) as [4G_TM3_use_Num],
		sum(0) as [4G_TM4_use_Num],
		sum(0) as [4G_TM5_use_Num],
		sum(0) as [4G_TM6_use_Num],
		sum(0) as [4G_TM7_use_Num],
		sum(0) as [4G_TM8_use_Num],
		sum(0) as [4G_TM9_use_Num],
		sum(0) as [4G_TMInvalid_use_Num],
		sum(0) as [4G_TMUnknown_use_Num],
		sum(0) as [4G_TM_Den],
	
		-- Technology LTE:
		sum(0) as [4G_%CA_Num],
		sum(0) as [4G_%CA_Den],
		sum(0) as [4G_BPSK_Use_Num],
		sum(0) as [4G_QPSK_Use_Num],
		sum(0) as [4G_16QAM_Use_Num],
		sum(0) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],
		sum(0) as [4G_QPSK_Use_Den],
		sum(0) as [4G_16QAM_Use_Den],
		sum(0) as [4G_64QAM_Use_Den],

		sum(0) as [4G_stats_Den],
		sum(0) as [RSRP_Lin_Num],
		sum(0) as [RSRQ_Lin_Num],
		sum(0) as [SINR_Lin_Num],			
		sum(0) as [RSRP_Lin_Den],
		sum(0) as [RSRQ_Lin_Den],
		sum(0) as [SINR_Lin_Den],		

		--New KPIs:
		sum(0) as [MIMO_num],
		sum(0) as [RI1_num],
		sum(0) as [RI2_num],
		sum(0) as [MIMO_den],
		sum(0) as [RI1_den],
		sum(0) as [RI2_den],
		sum(0) as RBs_Allocated_Den,
		sum(0) as RBs_Allocated_Num,
		max(0) as RBs_Allocated_Max,

		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		null as [1_N],	null as [2_N],	null as [3_N],	null as [4_N],	null as [5_N],	null as [6_N],	null as [7_N],	null as [8_N],	null as [9_N],	null as [10_N],
		null as [11_N],	null as [12_N],	null as [13_N],	null as [14_N],	null as [15_N],	null as [16_N],	null as [17_N],	null as [18_N],	null as [19_N],	null as [20_N],
		null as [21_N],	null as [22_N],	null as [23_N],	null as [24_N],	null as [25_N],	null as [26_N],	null as [27_N],	null as [28_N],	null as [29_N],	null as [30_N],
		null as [31_N],	null as [32_N],	null as [33_N],	null as [34_N],	null as [35_N],	null as [36_N],	null as [37_N],	null as [38_N],	null as [39_N],	null as [40_N],
		null as [41_N],	null as [42_N],	null as [43_N],	null as [44_N],	null as [45_N],	null as [46_N],	null as [47_N],	null as [48_N],	null as [49_N],	null as [50_N],
		null as [51_N],	null as [52_N],	null as [53_N],	null as [54_N],	null as [55_N],	null as [56_N],	null as [57_N],	null as [58_N],	null as [59_N],	null as [60_N],
		null as [61_N],	null as [62_N],	null as [63_N],	null as [64_N],	null as [65_N],	null as [66_N]
	
		--null as Region_Road_VF, null as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,null as [1]	,null as [2]	,null as [3]	,null as [4]	,null as [5]	,null as [6]	,null as [7]	,null as [8]	,null as [9]	,null as [10]
		,null as [11]	,null as [12]	,null as [13]	,null as [14]	,null as [15]	,null as [16]	,null as [17]	,null as [18]	,null as [19]	,null as [20]
		,null as [21]	,null as [22]	,null as [23]	,null as [24]	,null as [25]	,null as [26]	,null as [27]	,null as [28]	,null as [29]	,null as [30]
		,null as [31]	,null as [32]	,null as [33]	,null as [34]	,null as [35]	,null as [36]	,null as [37]	,null as [38]	,null as [39]	,null as [40]
		,null as [41],

		-- Parametros de configuracion:
		t.ASideDevice as ASideDevice, t.BSideDevice as BSideDevice, t.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_Web] t
		left outer join [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_Web_CA_ONLY] W4G on (isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(W4G.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=W4G.mnc and t.Date_Reporting=W4G.Date_Reporting and t.entidad=W4G.entidad and t.Aggr_Type=W4G.Aggr_Type and t.Report_Type=W4G.Report_Type and t.meas_round=W4G.meas_round)
		, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, case when  t.entidad like 'AVE-%' or  t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end,  t.mnc,  t.meas_round,  t.Date_Reporting,  t.Week_Reporting,  t.entidad,  t.Report_Type,  t.Aggr_Type,
		t.ASideDevice, t.BSideDevice, t.SWVersion--, t.Region_VF, t.Region_OSP

	-----------
	union all	-- WEB Road 4G_CA_Only
	select  
		p.codigo_ine, 'Roads' vf_environment,  t.mnc,  t.meas_round,  t.Date_Reporting as meas_date,  t.Week_Reporting as meas_week, 
		'Road 4G_CA_Only' as meas_Tech, 'WEB HTTP' as Test_type, 'Downlink' as Direction,  t.entidad as vf_entity,  t.Report_Type,  t.Aggr_Type,
		
		-- General:
		sum(W4G.Navegaciones) as Num_tests,
		sum(W4G.[Fallos de acceso]) as Failed,
		sum(W4G.[Navegaciones fallidas]) as Dropped,
		sum(cast(W4G.[Session Time] as float)*W4G.[Count_SessionTime]) as Session_time_Num,
		sum(0) as Throughput_Den,
		sum(W4G.[Count_SessionTime]) as Session_time_Den,
		sum(0) as Throughput_Num,
		max(0) as Throughput_Max,
		sum(0) as Throughput_3M_Num,
		sum(0) as Throughput_1M_Num,
		sum(0) as Throughput_128K_Num,
		sum(0) as Throughput_64K_Num,
		sum(0) as Throughput_384K_Num,
		--CAC 10/08/2017: thput de test sin error y con error
		sum(0) as Throughput_with_Error_Den,
		sum(0) as Throughput_with_Error_Num,
		sum(cast(W4G.[IP Service Setup Time] as float)*W4G.[Count_IPServiceSetupTime]) as WEB_IP_ACCESS_TIME_NUM,
		sum(W4G.[Count_IPServiceSetupTime]) as WEB_IP_ACCESS_TIME_DEN,
		sum(cast(W4G.[Transfer Time] as float)*W4G.[Count_TransferTime]) as WEB_HTTP_TRANSFER_TIME_NUM,
		sum(W4G.[Count_TransferTime]) as WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_NUM,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(0) as Radio_2G_use_Num,
		sum(0) as Radio_3G_use_Num,
		sum(0) as Radio_4G_use_Num,
		sum(0) as Radio_use_Den,
		sum(0) as Radio_2G_use_Den,
		sum(0) as Radio_3G_use_Den,
		sum(0) as Radio_4G_use_Den,

		sum(0) as Radio_U2100_use_Num,
		sum(0) as Radio_U900_use_Num,
		sum(0) as Radio_LTE2100_use_Num,
		sum(0) as Radio_LTE2600_use_Num,
		sum(0) as Radio_LTE1800_use_Num,
		sum(0) as Radio_LTE800_use_Num,
		sum(0) as Radio_Band_Use_Den,
		sum(0) as Radio_U2100_use_Den,
		sum(0) as Radio_U900_use_Den,
		sum(0) as Radio_LTE2100_use_Den,
		sum(0) as Radio_LTE2600_use_Den,
		sum(0) as Radio_LTE1800_use_Den,
		sum(0) as Radio_LTE800_use_Den,

		sum(0) as [3G_DualCarrier_use_Num],
		sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],
		sum(0) as [3G_DC_2100_use_Den],
		sum(0) as [3G_DC_900_use_Num],
		sum(0) as [3G_DC_900_use_Den],

		sum(0) as [3G_NumCodes_use_Num],
		sum(0) as [3G_NumCodes_use_Den],
		sum(0) as [3G_QPSK_use_Num],
		sum(0) as [3G_16QAM_use_Num],
		sum(0) as [3G_64QAM_use_Num],
		sum(0) as [3G_QPSK_use_Den],
		sum(0) as [3G_16QAM_use_Den],
		sum(0) as [3G_64QAM_use_Den],

		sum(0) as [3G_%_SF22_Num],
		sum(0) as [3G_%_SF22andSF42_Num],
		sum(0) as [3G_%_SF4_Num],
		sum(0) as [3G_%_SF42_Num],
		sum(0) as [3G_%_SF22_Den],
		sum(0) as [3G_%_SF22andSF42_Den],
		sum(0) as [3G_%_SF4_Den],
		sum(0) as [3G_%_SF42_Den],
		sum(0) as [3G_%_TTI2ms_Num],
		sum(0) as [3G_%_TTI2ms_Den],	
	
		sum(0) as [RSCP_Lin_Num],
		sum(0) as [EcI0_Lin_Num],	
		sum(0) as [RSCP_Lin_Den],	
		sum(0) as [EcI0_Lin_Den],
		
		-- Performance:
		sum(0) as [3G_CQI],
		sum(0) as [3G_DataStats_Den],
		Sum(0) as CQI_U900_Num,
		sum(0) as CQI_U900_Den,
		Sum(0) as CQI_U2100_Num,
		sum(0) as CQI_U2100_Den,

		sum(0) as [HSPA_PCT_Num],
		sum(0) as [HSPA+_PCT_Num],
		sum(0) as [HSPA+_DC_PCT_Num],
		sum(0) as [HSPA_PCT_Den],
		sum(0) as [HSPA+_PCT_Den],
		sum(0) as [HSPA+_DC_PCT_Den],

		sum(0) as [UL_Inter_Lin_Num],
		sum(0) as [UL_Inter_Lin_Den],
	
		-- Performance LTE:
		sum(0) as CQI_4G_Num,
		sum(0) as CQI_L800_Num,
		sum(0) as CQI_L1800_Num,
		sum(0) as CQI_L2100_Num,
		sum(0) as CQI_L2600_Num,
		sum(0) as CQI_4G_Den,
		sum(0) as CQI_L800_Den,
		sum(0) as CQI_L1800_Den,
		sum(0) as CQI_L2100_Den,
		sum(0) as CQI_L2600_Den,

		sum(0) as LTE_5Mhz_SC_Use_Num,
		sum(0) as LTE_10Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_SC_Use_Num,
		sum(0) as LTE_20Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_CA_Use_Num,
		sum(0) as LTE_20Mhz_CA_Use_Num,
		sum(0) as LTE_25Mhz_CA_Use_Num,
		sum(0) as LTE_30Mhz_CA_Use_Num,
		sum(0) as LTE_35Mhz_CA_Use_Num,
		sum(0) as LTE_40Mhz_CA_Use_Num,	
		sum(0) as LTE_5Mhz_SC_Use_Den,
		sum(0) as LTE_10Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_SC_Use_Den,
		sum(0) as LTE_20Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_CA_Use_Den,
		sum(0) as LTE_20Mhz_CA_Use_Den,
		sum(0) as LTE_25Mhz_CA_Use_Den,
		sum(0) as LTE_30Mhz_CA_Use_Den,
		sum(0) as LTE_35Mhz_CA_Use_Den,
		sum(0) as LTE_40Mhz_CA_Use_Den,

		sum(0) as LTE_BW_use_den,	
		sum(0) as [4G_RBs_use_Num],
		sum(0) as [4G_RBs_use_Den],

		sum(0) as [4G_TM1_use_Num],
		sum(0) as [4G_TM2_use_Num],
		sum(0) as [4G_TM3_use_Num],
		sum(0) as [4G_TM4_use_Num],
		sum(0) as [4G_TM5_use_Num],
		sum(0) as [4G_TM6_use_Num],
		sum(0) as [4G_TM7_use_Num],
		sum(0) as [4G_TM8_use_Num],
		sum(0) as [4G_TM9_use_Num],
		sum(0) as [4G_TMInvalid_use_Num],
		sum(0) as [4G_TMUnknown_use_Num],
		sum(0) as [4G_TM_Den],
	
		-- Technology LTE:
		sum(0) as [4G_%CA_Num],
		sum(0) as [4G_%CA_Den],
		sum(0) as [4G_BPSK_Use_Num],
		sum(0) as [4G_QPSK_Use_Num],
		sum(0) as [4G_16QAM_Use_Num],
		sum(0) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],
		sum(0) as [4G_QPSK_Use_Den],
		sum(0) as [4G_16QAM_Use_Den],
		sum(0) as [4G_64QAM_Use_Den],

		sum(0) as [4G_stats_Den],
		sum(0) as [RSRP_Lin_Num],
		sum(0) as [RSRQ_Lin_Num],
		sum(0) as [SINR_Lin_Num],			
		sum(0) as [RSRP_Lin_Den],
		sum(0) as [RSRQ_Lin_Den],
		sum(0) as [SINR_Lin_Den],		

		--New KPIs:
		sum(0) as [MIMO_num],
		sum(0) as [RI1_num],
		sum(0) as [RI2_num],
		sum(0) as [MIMO_den],
		sum(0) as [RI1_den],
		sum(0) as [RI2_den],
		sum(0) as RBs_Allocated_Den,
		sum(0) as RBs_Allocated_Num,
		max(0) as RBs_Allocated_Max,

		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		sum(0) as [1_N],	sum(0) as [2_N],	sum(0) as [3_N],	sum(0) as [4_N],	sum(0) as [5_N],	sum(0) as [6_N],	sum(0) as [7_N],	sum(0) as [8_N],	sum(0) as [9_N],	sum(0) as [10_N],
		sum(0) as [11_N],	sum(0) as [12_N],	sum(0) as [13_N],	sum(0) as [14_N],	sum(0) as [15_N],	sum(0) as [16_N],	sum(0) as [17_N],	sum(0) as [18_N],	sum(0) as [19_N],	sum(0) as [20_N],
		sum(0) as [21_N],	sum(0) as [22_N],	sum(0) as [23_N],	sum(0) as [24_N],	sum(0) as [25_N],	sum(0) as [26_N],	sum(0) as [27_N],	sum(0) as [28_N],	sum(0) as [29_N],	sum(0) as [30_N],
		sum(0) as [31_N],	sum(0) as [32_N],	sum(0) as [33_N],	sum(0) as [34_N],	sum(0) as [35_N],	sum(0) as [36_N],	sum(0) as [37_N],	sum(0) as [38_N],	sum(0) as [39_N],	sum(0) as [40_N],
		sum(0) as [41_N],	sum(0) as [42_N],	sum(0) as [43_N],	sum(0) as [44_N],	sum(0) as [45_N],	sum(0) as [46_N],	sum(0) as [47_N],	sum(0) as [48_N],	sum(0) as [49_N],	sum(0) as [50_N],
		sum(0) as [51_N],	sum(0) as [52_N],	sum(0) as [53_N],	sum(0) as [54_N],	sum(0) as [55_N],	sum(0) as [56_N],	sum(0) as [57_N],	sum(0) as [58_N],	sum(0) as [59_N],	sum(0) as [60_N],
		sum(0) as [61_N],	sum(0) as [62_N],	sum(0) as [63_N],	sum(0) as [64_N],	sum(0) as [65_N],	sum(0) as [66_N]
	
		--t.Region_VF as Region_Road_VF, t.Region_OSP as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,sum(0) as [1]	,sum(0) as [2]	,sum(0) as [3]	,sum(0) as [4]	,sum(0) as [5]	,sum(0) as [6]	,sum(0) as [7]	,sum(0) as [8]	,sum(0) as [9]	,sum(0) as [10]
		,sum(0) as [11]	,sum(0) as [12]	,sum(0) as [13]	,sum(0) as [14]	,sum(0) as [15]	,sum(0) as [16]	,sum(0) as [17]	,sum(0) as [18]	,sum(0) as [19]	,sum(0) as [20]
		,sum(0) as [21]	,sum(0) as [22]	,sum(0) as [23]	,sum(0) as [24]	,sum(0) as [25]	,sum(0) as [26]	,sum(0) as [27]	,sum(0) as [28]	,sum(0) as [29]	,sum(0) as [30]
		,sum(0) as [31]	,sum(0) as [32]	,sum(0) as [33]	,sum(0) as [34]	,sum(0) as [35]	,sum(0) as [36]	,sum(0) as [37]	,sum(0) as [38]	,sum(0) as [39]	,sum(0) as [40]
		,sum(0) as [41],

		-- Parametros de configuracion:
		t.ASideDevice as ASideDevice, t.BSideDevice as BSideDevice, t.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from [aggrData4G_ROAD].dbo.[lcc_aggr_sp_MDD_Data_Web] t
			left outer join [aggrData4G_ROAD].dbo.[lcc_aggr_sp_MDD_Data_Web_CA_ONLY] W4G on (isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(W4G.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=W4G.mnc and t.Date_Reporting=W4G.Date_Reporting and t.entidad=W4G.entidad and t.Aggr_Type=W4G.Aggr_Type and t.Report_Type=W4G.Report_Type and t.meas_round=W4G.meas_round)
		, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine,  t.mnc,  t.meas_round,  t.Date_Reporting,  t.Week_Reporting,  t.entidad,  t.Report_Type,  t.Aggr_Type,
		t.ASideDevice, t.BSideDevice, t.SWVersion--, t.Region_VF, t.Region_OSP

	-----------
	union all	-- WEB HTTPS 4G_CA_Only
	select  
		p.codigo_ine, case when  t.entidad like 'AVE-%' or  t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment,  t.mnc,  t.meas_round,  t.Date_Reporting as meas_date,  t.Week_Reporting as meas_week, 
		'4G_CA_Only' as meas_Tech, 'WEB HTTPS' as Test_type, 'Downlink' as Direction,  t.entidad as vf_entity,  t.Report_Type,  t.Aggr_Type,
		
		-- General:
		sum(W4G.[Navegaciones HTTPS]) as Num_tests,
		sum(W4G.[Fallos de acceso HTTPS]) as Failed,
		sum(W4G.[Navegaciones fallidas HTTPS]) as Dropped,
		sum(cast(W4G.[Session Time HTTPS] as float)*W4G.[Count_SessionTime HTTPS]) as Session_time_Num,
		sum(0) as Throughput_Den,
		sum(W4G.[Count_SessionTime HTTPS]) as Session_time_Den,
		sum(0) as Throughput_Num,
		max(0) as Throughput_Max,
		sum(0) as Throughput_3M_Num,
		sum(0) as Throughput_1M_Num,
		sum(0) as Throughput_128K_Num,
		sum(0) as Throughput_64K_Num,
		sum(0) as Throughput_384K_Num,
		--CAC 10/08/2017: thput de test sin error y con error
		sum(0) as Throughput_with_Error_Den,
		sum(0) as Throughput_with_Error_Num,
		sum(0) as WEB_IP_ACCESS_TIME_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_DEN,
		sum(0) as WEB_HTTP_TRANSFER_TIME_NUM,
		sum(0) as WEB_HTTP_TRANSFER_TIME_DEN,
		sum(cast(W4G.[IP Service Setup Time HTTPS] as float)*W4G.[Count_IPServiceSetupTime HTTPS]) as WEB_IP_ACCESS_TIME_HTTPS_NUM,
		sum(W4G.[Count_IPServiceSetupTime HTTPS]) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(cast(W4G.[Transfer Time HTTPS] as float)*W4G.[Count_TransferTime HTTPS]) as WEB_TRANSFER_TIME_HTTPS_NUM,
		sum(W4G.[Count_TransferTime HTTPS]) as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(0) as Radio_2G_use_Num,
		sum(0) as Radio_3G_use_Num,
		sum(0) as Radio_4G_use_Num,
		sum(0) as Radio_use_Den,
		sum(0) as Radio_2G_use_Den,
		sum(0) as Radio_3G_use_Den,
		sum(0) as Radio_4G_use_Den,

		sum(0) as Radio_U2100_use_Num,
		sum(0) as Radio_U900_use_Num,
		sum(0) as Radio_LTE2100_use_Num,
		sum(0) as Radio_LTE2600_use_Num,
		sum(0) as Radio_LTE1800_use_Num,
		sum(0) as Radio_LTE800_use_Num,
		sum(0) as Radio_Band_Use_Den,
		sum(0) as Radio_U2100_use_Den,
		sum(0) as Radio_U900_use_Den,
		sum(0) as Radio_LTE2100_use_Den,
		sum(0) as Radio_LTE2600_use_Den,
		sum(0) as Radio_LTE1800_use_Den,
		sum(0) as Radio_LTE800_use_Den,

		sum(0) as [3G_DualCarrier_use_Num],
		sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],
		sum(0) as [3G_DC_2100_use_Den],
		sum(0) as [3G_DC_900_use_Num],
		sum(0) as [3G_DC_900_use_Den],

		sum(0) as [3G_NumCodes_use_Num],
		sum(0) as [3G_NumCodes_use_Den],
		sum(0) as [3G_QPSK_use_Num],
		sum(0) as [3G_16QAM_use_Num],
		sum(0) as [3G_64QAM_use_Num],
		sum(0) as [3G_QPSK_use_Den],
		sum(0) as [3G_16QAM_use_Den],
		sum(0) as [3G_64QAM_use_Den],

		sum(0) as [3G_%_SF22_Num],
		sum(0) as [3G_%_SF22andSF42_Num],
		sum(0) as [3G_%_SF4_Num],
		sum(0) as [3G_%_SF42_Num],
		sum(0) as [3G_%_SF22_Den],
		sum(0) as [3G_%_SF22andSF42_Den],
		sum(0) as [3G_%_SF4_Den],
		sum(0) as [3G_%_SF42_Den],
		sum(0) as [3G_%_TTI2ms_Num],
		sum(0) as [3G_%_TTI2ms_Den],	
	
		sum(0) as [RSCP_Lin_Num],
		sum(0) as [EcI0_Lin_Num],	
		sum(0) as [RSCP_Lin_Den],	
		sum(0) as [EcI0_Lin_Den],
		
		-- Performance:
		sum(0) as [3G_CQI],
		sum(0) as [3G_DataStats_Den],
		Sum(0) as CQI_U900_Num,
		sum(0) as CQI_U900_Den,
		Sum(0) as CQI_U2100_Num,
		sum(0) as CQI_U2100_Den,

		sum(0) as [HSPA_PCT_Num],
		sum(0) as [HSPA+_PCT_Num],
		sum(0) as [HSPA+_DC_PCT_Num],
		sum(0) as [HSPA_PCT_Den],
		sum(0) as [HSPA+_PCT_Den],
		sum(0) as [HSPA+_DC_PCT_Den],

		sum(0) as [UL_Inter_Lin_Num],
		sum(0) as [UL_Inter_Lin_Den],
	
		-- Performance LTE:
		sum(0) as CQI_4G_Num,
		sum(0) as CQI_L800_Num,
		sum(0) as CQI_L1800_Num,
		sum(0) as CQI_L2100_Num,
		sum(0) as CQI_L2600_Num,
		sum(0) as CQI_4G_Den,
		sum(0) as CQI_L800_Den,
		sum(0) as CQI_L1800_Den,
		sum(0) as CQI_L2100_Den,
		sum(0) as CQI_L2600_Den,

		sum(0) as LTE_5Mhz_SC_Use_Num,
		sum(0) as LTE_10Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_SC_Use_Num,
		sum(0) as LTE_20Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_CA_Use_Num,
		sum(0) as LTE_20Mhz_CA_Use_Num,
		sum(0) as LTE_25Mhz_CA_Use_Num,
		sum(0) as LTE_30Mhz_CA_Use_Num,
		sum(0) as LTE_35Mhz_CA_Use_Num,
		sum(0) as LTE_40Mhz_CA_Use_Num,	
		sum(0) as LTE_5Mhz_SC_Use_Den,
		sum(0) as LTE_10Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_SC_Use_Den,
		sum(0) as LTE_20Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_CA_Use_Den,
		sum(0) as LTE_20Mhz_CA_Use_Den,
		sum(0) as LTE_25Mhz_CA_Use_Den,
		sum(0) as LTE_30Mhz_CA_Use_Den,
		sum(0) as LTE_35Mhz_CA_Use_Den,
		sum(0) as LTE_40Mhz_CA_Use_Den,

		sum(0) as LTE_BW_use_den,	
		sum(0) as [4G_RBs_use_Num],
		sum(0) as [4G_RBs_use_Den],

		sum(0) as [4G_TM1_use_Num],
		sum(0) as [4G_TM2_use_Num],
		sum(0) as [4G_TM3_use_Num],
		sum(0) as [4G_TM4_use_Num],
		sum(0) as [4G_TM5_use_Num],
		sum(0) as [4G_TM6_use_Num],
		sum(0) as [4G_TM7_use_Num],
		sum(0) as [4G_TM8_use_Num],
		sum(0) as [4G_TM9_use_Num],
		sum(0) as [4G_TMInvalid_use_Num],
		sum(0) as [4G_TMUnknown_use_Num],
		sum(0) as [4G_TM_Den],

		-- Technology LTE:
		sum(0) as [4G_%CA_Num],
		sum(0) as [4G_%CA_Den],
		sum(0) as [4G_BPSK_Use_Num],
		sum(0) as [4G_QPSK_Use_Num],
		sum(0) as [4G_16QAM_Use_Num],
		sum(0) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],
		sum(0) as [4G_QPSK_Use_Den],
		sum(0) as [4G_16QAM_Use_Den],
		sum(0) as [4G_64QAM_Use_Den],

		sum(0) as [4G_stats_Den],
		sum(0) as [RSRP_Lin_Num],
		sum(0) as [RSRQ_Lin_Num],
		sum(0) as [SINR_Lin_Num],			
		sum(0) as [RSRP_Lin_Den],
		sum(0) as [RSRQ_Lin_Den],
		sum(0) as [SINR_Lin_Den],		

		--New KPIs:
		sum(0) as [MIMO_num],
		sum(0) as [RI1_num],
		sum(0) as [RI2_num],
		sum(0) as [MIMO_den],
		sum(0) as [RI1_den],
		sum(0) as [RI2_den],
		sum(0) as RBs_Allocated_Den,
		sum(0) as RBs_Allocated_Num,
		max(0) as RBs_Allocated_Max,

		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		sum(0) as [1_N],	sum(0) as [2_N],	sum(0) as [3_N],	sum(0) as [4_N],	sum(0) as [5_N],	sum(0) as [6_N],	sum(0) as [7_N],	sum(0) as [8_N],	sum(0) as [9_N],	sum(0) as [10_N],
		sum(0) as [11_N],	sum(0) as [12_N],	sum(0) as [13_N],	sum(0) as [14_N],	sum(0) as [15_N],	sum(0) as [16_N],	sum(0) as [17_N],	sum(0) as [18_N],	sum(0) as [19_N],	sum(0) as [20_N],
		sum(0) as [21_N],	sum(0) as [22_N],	sum(0) as [23_N],	sum(0) as [24_N],	sum(0) as [25_N],	sum(0) as [26_N],	sum(0) as [27_N],	sum(0) as [28_N],	sum(0) as [29_N],	sum(0) as [30_N],
		sum(0) as [31_N],	sum(0) as [32_N],	sum(0) as [33_N],	sum(0) as [34_N],	sum(0) as [35_N],	sum(0) as [36_N],	sum(0) as [37_N],	sum(0) as [38_N],	sum(0) as [39_N],	sum(0) as [40_N],
		sum(0) as [41_N],	sum(0) as [42_N],	sum(0) as [43_N],	sum(0) as [44_N],	sum(0) as [45_N],	sum(0) as [46_N],	sum(0) as [47_N],	sum(0) as [48_N],	sum(0) as [49_N],	sum(0) as [50_N],
		sum(0) as [51_N],	sum(0) as [52_N],	sum(0) as [53_N],	sum(0) as [54_N],	sum(0) as [55_N],	sum(0) as [56_N],	sum(0) as [57_N],	sum(0) as [58_N],	sum(0) as [59_N],	sum(0) as [60_N],
		sum(0) as [61_N],	sum(0) as [62_N],	sum(0) as [63_N],	sum(0) as [64_N],	sum(0) as [65_N],	sum(0) as [66_N]
	
		--null as Region_Road_VF, null as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,sum(0) as [1]	,sum(0) as [2]	,sum(0) as [3]	,sum(0) as [4]	,sum(0) as [5]	,sum(0) as [6]	,sum(0) as [7]	,sum(0) as [8]	,sum(0) as [9]	,sum(0) as [10]
		,sum(0) as [11]	,sum(0) as [12]	,sum(0) as [13]	,sum(0) as [14]	,sum(0) as [15]	,sum(0) as [16]	,sum(0) as [17]	,sum(0) as [18]	,sum(0) as [19]	,sum(0) as [20]
		,sum(0) as [21]	,sum(0) as [22]	,sum(0) as [23]	,sum(0) as [24]	,sum(0) as [25]	,sum(0) as [26]	,sum(0) as [27]	,sum(0) as [28]	,sum(0) as [29]	,sum(0) as [30]
		,sum(0) as [31]	,sum(0) as [32]	,sum(0) as [33]	,sum(0) as [34]	,sum(0) as [35]	,sum(0) as [36]	,sum(0) as [37]	,sum(0) as [38]	,sum(0) as [39]	,sum(0) as [40]
		,sum(0) as [41],

		-- Parametros de configuracion:
		t.ASideDevice as ASideDevice, t.BSideDevice as BSideDevice, t.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_Web] t
			left outer join  [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_Web_CA_ONLY] W4G on (isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(W4G.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=W4G.mnc and t.Date_Reporting=W4G.Date_Reporting and t.entidad=W4G.entidad and t.Aggr_Type=W4G.Aggr_Type and t.Report_Type=W4G.Report_Type and t.meas_round=W4G.meas_round)
		, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, case when  t.entidad like 'AVE-%' or  t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end,  t.mnc,  t.meas_round,  t.Date_Reporting,  t.Week_Reporting,  t.entidad,  t.Report_Type,  t.Aggr_Type,
		t.ASideDevice, t.BSideDevice, t.SWVersion--, t.Region_VF, t.Region_OSP
	
	-----------
	union all	-- WEB HTTPS Road 4G_CA_Only
	select  
		p.codigo_ine, 'Roads' vf_environment,  t.mnc,  t.meas_round,  t.Date_Reporting as meas_date,  t.Week_Reporting as meas_week, 
		'Road 4G_CA_Only' as meas_Tech, 'WEB HTTPS' as Test_type, 'Downlink' as Direction,  t.entidad as vf_entity,  t.Report_Type,  t.Aggr_Type,
		
		-- General:
		sum(W4G.[Navegaciones HTTPS]) as Num_tests,
		sum(W4G.[Fallos de acceso HTTPS]) as Failed,
		sum(W4G.[Navegaciones fallidas HTTPS]) as Dropped,
		sum(cast(W4G.[Session Time HTTPS] as float)*W4G.[Count_SessionTime HTTPS]) as Session_time_Num,
		sum(0) as Throughput_Den,
		sum(W4G.[Count_SessionTime HTTPS]) as Session_time_Den,
		sum(0) as Throughput_Num,
		max(0) as Throughput_Max,
		sum(0) as Throughput_3M_Num,
		sum(0) as Throughput_1M_Num,
		sum(0) as Throughput_128K_Num,
		sum(0) as Throughput_64K_Num,
		sum(0) as Throughput_384K_Num,
		--CAC 10/08/2017: thput de test sin error y con error
		sum(0) as Throughput_with_Error_Den,
		sum(0) as Throughput_with_Error_Num,
		sum(0) as WEB_IP_ACCESS_TIME_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_DEN,
		sum(0) as WEB_HTTP_TRANSFER_TIME_NUM,
		sum(0) as WEB_HTTP_TRANSFER_TIME_DEN,
		sum(cast(W4G.[IP Service Setup Time HTTPS] as float)*W4G.[Count_IPServiceSetupTime HTTPS]) as WEB_IP_ACCESS_TIME_HTTPS_NUM,
		sum(W4G.[Count_IPServiceSetupTime HTTPS]) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(cast(W4G.[Transfer Time HTTPS] as float)*W4G.[Count_TransferTime HTTPS]) as WEB_TRANSFER_TIME_HTTPS_NUM,
		sum(W4G.[Count_TransferTime HTTPS]) as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(0) as Radio_2G_use_Num,
		sum(0) as Radio_3G_use_Num,
		sum(0) as Radio_4G_use_Num,
		sum(0) as Radio_use_Den,
		sum(0) as Radio_2G_use_Den,
		sum(0) as Radio_3G_use_Den,
		sum(0) as Radio_4G_use_Den,

		sum(0) as Radio_U2100_use_Num,
		sum(0) as Radio_U900_use_Num,
		sum(0) as Radio_LTE2100_use_Num,
		sum(0) as Radio_LTE2600_use_Num,
		sum(0) as Radio_LTE1800_use_Num,
		sum(0) as Radio_LTE800_use_Num,
		sum(0) as Radio_Band_Use_Den,
		sum(0) as Radio_U2100_use_Den,
		sum(0) as Radio_U900_use_Den,
		sum(0) as Radio_LTE2100_use_Den,
		sum(0) as Radio_LTE2600_use_Den,
		sum(0) as Radio_LTE1800_use_Den,
		sum(0) as Radio_LTE800_use_Den,

		sum(0) as [3G_DualCarrier_use_Num],
		sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],
		sum(0) as [3G_DC_2100_use_Den],
		sum(0) as [3G_DC_900_use_Num],
		sum(0) as [3G_DC_900_use_Den],

		sum(0) as [3G_NumCodes_use_Num],
		sum(0) as [3G_NumCodes_use_Den],
		sum(0) as [3G_QPSK_use_Num],
		sum(0) as [3G_16QAM_use_Num],
		sum(0) as [3G_64QAM_use_Num],
		sum(0) as [3G_QPSK_use_Den],
		sum(0) as [3G_16QAM_use_Den],
		sum(0) as [3G_64QAM_use_Den],

		sum(0) as [3G_%_SF22_Num],
		sum(0) as [3G_%_SF22andSF42_Num],
		sum(0) as [3G_%_SF4_Num],
		sum(0) as [3G_%_SF42_Num],
		sum(0) as [3G_%_SF22_Den],
		sum(0) as [3G_%_SF22andSF42_Den],
		sum(0) as [3G_%_SF4_Den],
		sum(0) as [3G_%_SF42_Den],
		sum(0) as [3G_%_TTI2ms_Num],
		sum(0) as [3G_%_TTI2ms_Den],	
	
		sum(0) as [RSCP_Lin_Num],
		sum(0) as [EcI0_Lin_Num],	
		sum(0) as [RSCP_Lin_Den],	
		sum(0) as [EcI0_Lin_Den],
		
		-- Performance:
		sum(0) as [3G_CQI],
		sum(0) as [3G_DataStats_Den],
		Sum(0) as CQI_U900_Num,
		sum(0) as CQI_U900_Den,
		Sum(0) as CQI_U2100_Num,
		sum(0) as CQI_U2100_Den,

		sum(0) as [HSPA_PCT_Num],
		sum(0) as [HSPA+_PCT_Num],
		sum(0) as [HSPA+_DC_PCT_Num],
		sum(0) as [HSPA_PCT_Den],
		sum(0) as [HSPA+_PCT_Den],
		sum(0) as [HSPA+_DC_PCT_Den],

		sum(0) as [UL_Inter_Lin_Num],
		sum(0) as [UL_Inter_Lin_Den],
	
		-- Performance LTE:
		sum(0) as CQI_4G_Num,
		sum(0) as CQI_L800_Num,
		sum(0) as CQI_L1800_Num,
		sum(0) as CQI_L2100_Num,
		sum(0) as CQI_L2600_Num,
		sum(0) as CQI_4G_Den,
		sum(0) as CQI_L800_Den,
		sum(0) as CQI_L1800_Den,
		sum(0) as CQI_L2100_Den,
		sum(0) as CQI_L2600_Den,

		sum(0) as LTE_5Mhz_SC_Use_Num,
		sum(0) as LTE_10Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_SC_Use_Num,
		sum(0) as LTE_20Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_CA_Use_Num,
		sum(0) as LTE_20Mhz_CA_Use_Num,
		sum(0) as LTE_25Mhz_CA_Use_Num,
		sum(0) as LTE_30Mhz_CA_Use_Num,
		sum(0) as LTE_35Mhz_CA_Use_Num,
		sum(0) as LTE_40Mhz_CA_Use_Num,	
		sum(0) as LTE_5Mhz_SC_Use_Den,
		sum(0) as LTE_10Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_SC_Use_Den,
		sum(0) as LTE_20Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_CA_Use_Den,
		sum(0) as LTE_20Mhz_CA_Use_Den,
		sum(0) as LTE_25Mhz_CA_Use_Den,
		sum(0) as LTE_30Mhz_CA_Use_Den,
		sum(0) as LTE_35Mhz_CA_Use_Den,
		sum(0) as LTE_40Mhz_CA_Use_Den,

		sum(0) as LTE_BW_use_den,	
		sum(0) as [4G_RBs_use_Num],
		sum(0) as [4G_RBs_use_Den],

		sum(0) as [4G_TM1_use_Num],
		sum(0) as [4G_TM2_use_Num],
		sum(0) as [4G_TM3_use_Num],
		sum(0) as [4G_TM4_use_Num],
		sum(0) as [4G_TM5_use_Num],
		sum(0) as [4G_TM6_use_Num],
		sum(0) as [4G_TM7_use_Num],
		sum(0) as [4G_TM8_use_Num],
		sum(0) as [4G_TM9_use_Num],
		sum(0) as [4G_TMInvalid_use_Num],
		sum(0) as [4G_TMUnknown_use_Num],
		sum(0) as [4G_TM_Den],

		-- Technology LTE:
		sum(0) as [4G_%CA_Num],
		sum(0) as [4G_%CA_Den],
		sum(0) as [4G_BPSK_Use_Num],
		sum(0) as [4G_QPSK_Use_Num],
		sum(0) as [4G_16QAM_Use_Num],
		sum(0) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],
		sum(0) as [4G_QPSK_Use_Den],
		sum(0) as [4G_16QAM_Use_Den],
		sum(0) as [4G_64QAM_Use_Den],

		sum(0) as [4G_stats_Den],
		sum(0) as [RSRP_Lin_Num],
		sum(0) as [RSRQ_Lin_Num],
		sum(0) as [SINR_Lin_Num],			
		sum(0) as [RSRP_Lin_Den],
		sum(0) as [RSRQ_Lin_Den],
		sum(0) as [SINR_Lin_Den],		

		--New KPIs:
		sum(0) as [MIMO_num],
		sum(0) as [RI1_num],
		sum(0) as [RI2_num],
		sum(0) as [MIMO_den],
		sum(0) as [RI1_den],
		sum(0) as [RI2_den],
		sum(0) as RBs_Allocated_Den,
		sum(0) as RBs_Allocated_Num,
		max(0) as RBs_Allocated_Max,

		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		sum(0) as [1_N],	sum(0) as [2_N],	sum(0) as [3_N],	sum(0) as [4_N],	sum(0) as [5_N],	sum(0) as [6_N],	sum(0) as [7_N],	sum(0) as [8_N],	sum(0) as [9_N],	sum(0) as [10_N],
		sum(0) as [11_N],	sum(0) as [12_N],	sum(0) as [13_N],	sum(0) as [14_N],	sum(0) as [15_N],	sum(0) as [16_N],	sum(0) as [17_N],	sum(0) as [18_N],	sum(0) as [19_N],	sum(0) as [20_N],
		sum(0) as [21_N],	sum(0) as [22_N],	sum(0) as [23_N],	sum(0) as [24_N],	sum(0) as [25_N],	sum(0) as [26_N],	sum(0) as [27_N],	sum(0) as [28_N],	sum(0) as [29_N],	sum(0) as [30_N],
		sum(0) as [31_N],	sum(0) as [32_N],	sum(0) as [33_N],	sum(0) as [34_N],	sum(0) as [35_N],	sum(0) as [36_N],	sum(0) as [37_N],	sum(0) as [38_N],	sum(0) as [39_N],	sum(0) as [40_N],
		sum(0) as [41_N],	sum(0) as [42_N],	sum(0) as [43_N],	sum(0) as [44_N],	sum(0) as [45_N],	sum(0) as [46_N],	sum(0) as [47_N],	sum(0) as [48_N],	sum(0) as [49_N],	sum(0) as [50_N],
		sum(0) as [51_N],	sum(0) as [52_N],	sum(0) as [53_N],	sum(0) as [54_N],	sum(0) as [55_N],	sum(0) as [56_N],	sum(0) as [57_N],	sum(0) as [58_N],	sum(0) as [59_N],	sum(0) as [60_N],
		sum(0) as [61_N],	sum(0) as [62_N],	sum(0) as [63_N],	sum(0) as [64_N],	sum(0) as [65_N],	sum(0) as [66_N]
	
		--t.Region_VF as Region_Road_VF, t.Region_OSP as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,sum(0) as [1]	,sum(0) as [2]	,sum(0) as [3]	,sum(0) as [4]	,sum(0) as [5]	,sum(0) as [6]	,sum(0) as [7]	,sum(0) as [8]	,sum(0) as [9]	,sum(0) as [10]
		,sum(0) as [11]	,sum(0) as [12]	,sum(0) as [13]	,sum(0) as [14]	,sum(0) as [15]	,sum(0) as [16]	,sum(0) as [17]	,sum(0) as [18]	,sum(0) as [19]	,sum(0) as [20]
		,sum(0) as [21]	,sum(0) as [22]	,sum(0) as [23]	,sum(0) as [24]	,sum(0) as [25]	,sum(0) as [26]	,sum(0) as [27]	,sum(0) as [28]	,sum(0) as [29]	,sum(0) as [30]
		,sum(0) as [31]	,sum(0) as [32]	,sum(0) as [33]	,sum(0) as [34]	,sum(0) as [35]	,sum(0) as [36]	,sum(0) as [37]	,sum(0) as [38]	,sum(0) as [39]	,sum(0) as [40]
		,sum(0) as [41],

		-- Parametros de configuracion:
		t.ASideDevice as ASideDevice, t.BSideDevice as BSideDevice, t.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from [aggrData4G_ROAD].dbo.[lcc_aggr_sp_MDD_Data_Web] t
			left outer join [aggrData4G_ROAD].dbo.[lcc_aggr_sp_MDD_Data_Web_CA_ONLY] W4G on (isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(W4G.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=W4G.mnc and t.Date_Reporting=W4G.Date_Reporting and t.entidad=W4G.entidad and t.Aggr_Type=W4G.Aggr_Type and t.Report_Type=W4G.Report_Type and t.meas_round=W4G.meas_round)
		, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine,  t.mnc,  t.meas_round,  t.Date_Reporting,  t.Week_Reporting,  t.entidad,  t.Report_Type,  t.Aggr_Type,
		t.ASideDevice, t.BSideDevice, t.SWVersion--, t.Region_VF, t.Region_OSP

	-----------
	union all	-- WEB Public 4G_CA_Only
	select  
		p.codigo_ine, case when  t.entidad like 'AVE-%' or  t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment,  t.mnc,  t.meas_round,  t.Date_Reporting as meas_date,  t.Week_Reporting as meas_week, 
		'4G_CA_Only' as meas_Tech, 'WEB Public' as Test_type, 'Downlink' as Direction,   t.entidad as vf_entity,  t.Report_Type,  t.Aggr_Type,
		
		-- General:
		sum(W4G.[Navegaciones Public]) as Num_tests,
		sum(W4G.[Fallos de acceso public]) as Failed,
		sum(W4G.[Navegaciones fallidas public]) as Dropped,
		sum(cast(W4G.[Session Time public] as float)*W4G.[Count_SessionTime public]) as Session_time_Num,
		sum(0) as Throughput_Den,
		sum(W4G.[Count_SessionTime public]) as Session_time_Den,
		sum(0) as Throughput_Num,
		max(0) as Throughput_Max,
		sum(0) as Throughput_3M_Num,
		sum(0) as Throughput_1M_Num,
		sum(0) as Throughput_128K_Num,
		sum(0) as Throughput_64K_Num,
		sum(0) as Throughput_384K_Num,
		--CAC 10/08/2017: thput de test sin error y con error
		sum(0) as Throughput_with_Error_Den,
		sum(0) as Throughput_with_Error_Num,
		sum(0) as WEB_IP_ACCESS_TIME_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_DEN,
		sum(0) as WEB_HTTP_TRANSFER_TIME_NUM,
		sum(0) as WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_NUM,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(cast(W4G.[IP Service Setup Time Public] as float)*W4G.[Count_IPServiceSetupTime Public]) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,
		sum(W4G.[Count_IPServiceSetupTime Public]) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(cast(W4G.[Transfer Time Public] as float)*W4G.[Count_TransferTime Public]) as WEB_TRANSFER_TIME_PUBLIC_NUM,
		sum(W4G.[Count_TransferTime Public]) as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(0) as Radio_2G_use_Num,
		sum(0) as Radio_3G_use_Num,
		sum(0) as Radio_4G_use_Num,
		sum(0) as Radio_use_Den,
		sum(0) as Radio_2G_use_Den,
		sum(0) as Radio_3G_use_Den,
		sum(0) as Radio_4G_use_Den,

		sum(0) as Radio_U2100_use_Num,
		sum(0) as Radio_U900_use_Num,
		sum(0) as Radio_LTE2100_use_Num,
		sum(0) as Radio_LTE2600_use_Num,
		sum(0) as Radio_LTE1800_use_Num,
		sum(0) as Radio_LTE800_use_Num,
		sum(0) as Radio_Band_Use_Den,
		sum(0) as Radio_U2100_use_Den,
		sum(0) as Radio_U900_use_Den,
		sum(0) as Radio_LTE2100_use_Den,
		sum(0) as Radio_LTE2600_use_Den,
		sum(0) as Radio_LTE1800_use_Den,
		sum(0) as Radio_LTE800_use_Den,

		sum(0) as [3G_DualCarrier_use_Num],
		sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],
		sum(0) as [3G_DC_2100_use_Den],
		sum(0) as [3G_DC_900_use_Num],
		sum(0) as [3G_DC_900_use_Den],

		sum(0) as [3G_NumCodes_use_Num],
		sum(0) as [3G_NumCodes_use_Den],
		sum(0) as [3G_QPSK_use_Num],
		sum(0) as [3G_16QAM_use_Num],
		sum(0) as [3G_64QAM_use_Num],
		sum(0) as [3G_QPSK_use_Den],
		sum(0) as [3G_16QAM_use_Den],
		sum(0) as [3G_64QAM_use_Den],

		sum(0) as [3G_%_SF22_Num],
		sum(0) as [3G_%_SF22andSF42_Num],
		sum(0) as [3G_%_SF4_Num],
		sum(0) as [3G_%_SF42_Num],
		sum(0) as [3G_%_SF22_Den],
		sum(0) as [3G_%_SF22andSF42_Den],
		sum(0) as [3G_%_SF4_Den],
		sum(0) as [3G_%_SF42_Den],
		sum(0) as [3G_%_TTI2ms_Num],
		sum(0) as [3G_%_TTI2ms_Den],	
	
		sum(0) as [RSCP_Lin_Num],
		sum(0) as [EcI0_Lin_Num],	
		sum(0) as [RSCP_Lin_Den],	
		sum(0) as [EcI0_Lin_Den],
		
		-- Performance:
		sum(0) as [3G_CQI],
		sum(0) as [3G_DataStats_Den],
		Sum(0) as CQI_U900_Num,
		sum(0) as CQI_U900_Den,
		Sum(0) as CQI_U2100_Num,
		sum(0) as CQI_U2100_Den,

		sum(0) as [HSPA_PCT_Num],
		sum(0) as [HSPA+_PCT_Num],
		sum(0) as [HSPA+_DC_PCT_Num],
		sum(0) as [HSPA_PCT_Den],
		sum(0) as [HSPA+_PCT_Den],
		sum(0) as [HSPA+_DC_PCT_Den],

		sum(0) as [UL_Inter_Lin_Num],
		sum(0) as [UL_Inter_Lin_Den],
	
		-- Performance LTE:
		sum(0) as CQI_4G_Num,
		sum(0) as CQI_L800_Num,
		sum(0) as CQI_L1800_Num,
		sum(0) as CQI_L2100_Num,
		sum(0) as CQI_L2600_Num,
		sum(0) as CQI_4G_Den,
		sum(0) as CQI_L800_Den,
		sum(0) as CQI_L1800_Den,
		sum(0) as CQI_L2100_Den,
		sum(0) as CQI_L2600_Den,

		sum(0) as LTE_5Mhz_SC_Use_Num,
		sum(0) as LTE_10Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_SC_Use_Num,
		sum(0) as LTE_20Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_CA_Use_Num,
		sum(0) as LTE_20Mhz_CA_Use_Num,
		sum(0) as LTE_25Mhz_CA_Use_Num,
		sum(0) as LTE_30Mhz_CA_Use_Num,
		sum(0) as LTE_35Mhz_CA_Use_Num,
		sum(0) as LTE_40Mhz_CA_Use_Num,	
		sum(0) as LTE_5Mhz_SC_Use_Den,
		sum(0) as LTE_10Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_SC_Use_Den,
		sum(0) as LTE_20Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_CA_Use_Den,
		sum(0) as LTE_20Mhz_CA_Use_Den,
		sum(0) as LTE_25Mhz_CA_Use_Den,
		sum(0) as LTE_30Mhz_CA_Use_Den,
		sum(0) as LTE_35Mhz_CA_Use_Den,
		sum(0) as LTE_40Mhz_CA_Use_Den,

		sum(0) as LTE_BW_use_den,	
		sum(0) as [4G_RBs_use_Num],
		sum(0) as [4G_RBs_use_Den],

		sum(0) as [4G_TM1_use_Num],
		sum(0) as [4G_TM2_use_Num],
		sum(0) as [4G_TM3_use_Num],
		sum(0) as [4G_TM4_use_Num],
		sum(0) as [4G_TM5_use_Num],
		sum(0) as [4G_TM6_use_Num],
		sum(0) as [4G_TM7_use_Num],
		sum(0) as [4G_TM8_use_Num],
		sum(0) as [4G_TM9_use_Num],
		sum(0) as [4G_TMInvalid_use_Num],
		sum(0) as [4G_TMUnknown_use_Num],
		sum(0) as [4G_TM_Den],

		-- Technology LTE:
		sum(0) as [4G_%CA_Num],
		sum(0) as [4G_%CA_Den],
		sum(0) as [4G_BPSK_Use_Num],
		sum(0) as [4G_QPSK_Use_Num],
		sum(0) as [4G_16QAM_Use_Num],
		sum(0) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],
		sum(0) as [4G_QPSK_Use_Den],
		sum(0) as [4G_16QAM_Use_Den],
		sum(0) as [4G_64QAM_Use_Den],

		sum(0) as [4G_stats_Den],
		sum(0) as [RSRP_Lin_Num],
		sum(0) as [RSRQ_Lin_Num],
		sum(0) as [SINR_Lin_Num],			
		sum(0) as [RSRP_Lin_Den],
		sum(0) as [RSRQ_Lin_Den],
		sum(0) as [SINR_Lin_Den],		

		--New KPIs:
		sum(0) as [MIMO_num],
		sum(0) as [RI1_num],
		sum(0) as [RI2_num],
		sum(0) as [MIMO_den],
		sum(0) as [RI1_den],
		sum(0) as [RI2_den],
		sum(0) as RBs_Allocated_Den,
		sum(0) as RBs_Allocated_Num,
		max(0) as RBs_Allocated_Max,

		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		sum(0) as [1_N],	sum(0) as [2_N],	sum(0) as [3_N],	sum(0) as [4_N],	sum(0) as [5_N],	sum(0) as [6_N],	sum(0) as [7_N],	sum(0) as [8_N],	sum(0) as [9_N],	sum(0) as [10_N],
		sum(0) as [11_N],	sum(0) as [12_N],	sum(0) as [13_N],	sum(0) as [14_N],	sum(0) as [15_N],	sum(0) as [16_N],	sum(0) as [17_N],	sum(0) as [18_N],	sum(0) as [19_N],	sum(0) as [20_N],
		sum(0) as [21_N],	sum(0) as [22_N],	sum(0) as [23_N],	sum(0) as [24_N],	sum(0) as [25_N],	sum(0) as [26_N],	sum(0) as [27_N],	sum(0) as [28_N],	sum(0) as [29_N],	sum(0) as [30_N],
		sum(0) as [31_N],	sum(0) as [32_N],	sum(0) as [33_N],	sum(0) as [34_N],	sum(0) as [35_N],	sum(0) as [36_N],	sum(0) as [37_N],	sum(0) as [38_N],	sum(0) as [39_N],	sum(0) as [40_N],
		sum(0) as [41_N],	sum(0) as [42_N],	sum(0) as [43_N],	sum(0) as [44_N],	sum(0) as [45_N],	sum(0) as [46_N],	sum(0) as [47_N],	sum(0) as [48_N],	sum(0) as [49_N],	sum(0) as [50_N],
		sum(0) as [51_N],	sum(0) as [52_N],	sum(0) as [53_N],	sum(0) as [54_N],	sum(0) as [55_N],	sum(0) as [56_N],	sum(0) as [57_N],	sum(0) as [58_N],	sum(0) as [59_N],	sum(0) as [60_N],
		sum(0) as [61_N],	sum(0) as [62_N],	sum(0) as [63_N],	sum(0) as [64_N],	sum(0) as [65_N],	sum(0) as [66_N]
	
		--null as Region_Road_VF, null as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,sum(0) as [1]	,sum(0) as [2]	,sum(0) as [3]	,sum(0) as [4]	,sum(0) as [5]	,sum(0) as [6]	,sum(0) as [7]	,sum(0) as [8]	,sum(0) as [9]	,sum(0) as [10]
		,sum(0) as [11]	,sum(0) as [12]	,sum(0) as [13]	,sum(0) as [14]	,sum(0) as [15]	,sum(0) as [16]	,sum(0) as [17]	,sum(0) as [18]	,sum(0) as [19]	,sum(0) as [20]
		,sum(0) as [21]	,sum(0) as [22]	,sum(0) as [23]	,sum(0) as [24]	,sum(0) as [25]	,sum(0) as [26]	,sum(0) as [27]	,sum(0) as [28]	,sum(0) as [29]	,sum(0) as [30]
		,sum(0) as [31]	,sum(0) as [32]	,sum(0) as [33]	,sum(0) as [34]	,sum(0) as [35]	,sum(0) as [36]	,sum(0) as [37]	,sum(0) as [38]	,sum(0) as [39]	,sum(0) as [40]
		,sum(0) as [41],

		-- Parametros de configuracion:
		t.ASideDevice as ASideDevice, t.BSideDevice as BSideDevice, t.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_Web] t
			left outer join [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_Web_CA_ONLY] W4G on (isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(W4G.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=W4G.mnc and t.Date_Reporting=W4G.Date_Reporting and t.entidad=W4G.entidad and t.Aggr_Type=W4G.Aggr_Type and t.Report_Type=W4G.Report_Type and t.meas_round=W4G.meas_round)
		, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, case when  t.entidad like 'AVE-%' or  t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end,  t.mnc,  t.meas_round,  t.Date_Reporting,  t.Week_Reporting,  t.entidad,  t.Report_Type,  t.Aggr_Type,
		t.ASideDevice, t.BSideDevice, t.SWVersion--, t.Region_VF, t.Region_OSP

	-----------
	union all	-- WEB Public Road 4G_CA_Only
	select  
		p.codigo_ine, 'Roads' vf_environment,  t.mnc,  t.meas_round,  t.Date_Reporting as meas_date,  t.Week_Reporting as meas_week, 
		'Road 4G_CA_Only' as meas_Tech, 'WEB Public' as Test_type, 'Downlink' as Direction,  t.entidad as vf_entity,  t.Report_Type,  t.Aggr_Type,
		
		-- General:
		sum(W4G.[Navegaciones Public]) as Num_tests,
		sum(W4G.[Fallos de acceso public]) as Failed,
		sum(W4G.[Navegaciones fallidas public]) as Dropped,
		sum(cast(W4G.[Session Time public] as float)*W4G.[Count_SessionTime public]) as Session_time_Num,
		sum(0) as Throughput_Den,
		sum(W4G.[Count_SessionTime public]) as Session_time_Den,
		sum(0) as Throughput_Num,
		max(0) as Throughput_Max,
		sum(0) as Throughput_3M_Num,
		sum(0) as Throughput_1M_Num,
		sum(0) as Throughput_128K_Num,
		sum(0) as Throughput_64K_Num,
		sum(0) as Throughput_384K_Num,
		--CAC 10/08/2017: thput de test sin error y con error
		sum(0) as Throughput_with_Error_Den,
		sum(0) as Throughput_with_Error_Num,
		sum(0) as WEB_IP_ACCESS_TIME_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_DEN,
		sum(0) as WEB_HTTP_TRANSFER_TIME_NUM,
		sum(0) as WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_NUM,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(cast(W4G.[IP Service Setup Time Public] as float)*W4G.[Count_IPServiceSetupTime Public]) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,
		sum(W4G.[Count_IPServiceSetupTime Public]) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(cast(W4G.[Transfer Time Public] as float)*W4G.[Count_TransferTime Public]) as WEB_TRANSFER_TIME_PUBLIC_NUM,
		sum(W4G.[Count_TransferTime Public]) as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(0) as Radio_2G_use_Num,
		sum(0) as Radio_3G_use_Num,
		sum(0) as Radio_4G_use_Num,
		sum(0) as Radio_use_Den,
		sum(0) as Radio_2G_use_Den,
		sum(0) as Radio_3G_use_Den,
		sum(0) as Radio_4G_use_Den,

		sum(0) as Radio_U2100_use_Num,
		sum(0) as Radio_U900_use_Num,
		sum(0) as Radio_LTE2100_use_Num,
		sum(0) as Radio_LTE2600_use_Num,
		sum(0) as Radio_LTE1800_use_Num,
		sum(0) as Radio_LTE800_use_Num,
		sum(0) as Radio_Band_Use_Den,
		sum(0) as Radio_U2100_use_Den,
		sum(0) as Radio_U900_use_Den,
		sum(0) as Radio_LTE2100_use_Den,
		sum(0) as Radio_LTE2600_use_Den,
		sum(0) as Radio_LTE1800_use_Den,
		sum(0) as Radio_LTE800_use_Den,

		sum(0) as [3G_DualCarrier_use_Num],
		sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],
		sum(0) as [3G_DC_2100_use_Den],
		sum(0) as [3G_DC_900_use_Num],
		sum(0) as [3G_DC_900_use_Den],

		sum(0) as [3G_NumCodes_use_Num],
		sum(0) as [3G_NumCodes_use_Den],
		sum(0) as [3G_QPSK_use_Num],
		sum(0) as [3G_16QAM_use_Num],
		sum(0) as [3G_64QAM_use_Num],
		sum(0) as [3G_QPSK_use_Den],
		sum(0) as [3G_16QAM_use_Den],
		sum(0) as [3G_64QAM_use_Den],

		sum(0) as [3G_%_SF22_Num],
		sum(0) as [3G_%_SF22andSF42_Num],
		sum(0) as [3G_%_SF4_Num],
		sum(0) as [3G_%_SF42_Num],
		sum(0) as [3G_%_SF22_Den],
		sum(0) as [3G_%_SF22andSF42_Den],
		sum(0) as [3G_%_SF4_Den],
		sum(0) as [3G_%_SF42_Den],
		sum(0) as [3G_%_TTI2ms_Num],
		sum(0) as [3G_%_TTI2ms_Den],	
	
		sum(0) as [RSCP_Lin_Num],
		sum(0) as [EcI0_Lin_Num],	
		sum(0) as [RSCP_Lin_Den],	
		sum(0) as [EcI0_Lin_Den],
		
		-- Performance:
		sum(0) as [3G_CQI],
		sum(0) as [3G_DataStats_Den],
		Sum(0) as CQI_U900_Num,
		sum(0) as CQI_U900_Den,
		Sum(0) as CQI_U2100_Num,
		sum(0) as CQI_U2100_Den,

		sum(0) as [HSPA_PCT_Num],
		sum(0) as [HSPA+_PCT_Num],
		sum(0) as [HSPA+_DC_PCT_Num],
		sum(0) as [HSPA_PCT_Den],
		sum(0) as [HSPA+_PCT_Den],
		sum(0) as [HSPA+_DC_PCT_Den],

		sum(0) as [UL_Inter_Lin_Num],
		sum(0) as [UL_Inter_Lin_Den],
	
		-- Performance LTE:
		sum(0) as CQI_4G_Num,
		sum(0) as CQI_L800_Num,
		sum(0) as CQI_L1800_Num,
		sum(0) as CQI_L2100_Num,
		sum(0) as CQI_L2600_Num,
		sum(0) as CQI_4G_Den,
		sum(0) as CQI_L800_Den,
		sum(0) as CQI_L1800_Den,
		sum(0) as CQI_L2100_Den,
		sum(0) as CQI_L2600_Den,

		sum(0) as LTE_5Mhz_SC_Use_Num,
		sum(0) as LTE_10Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_SC_Use_Num,
		sum(0) as LTE_20Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_CA_Use_Num,
		sum(0) as LTE_20Mhz_CA_Use_Num,
		sum(0) as LTE_25Mhz_CA_Use_Num,
		sum(0) as LTE_30Mhz_CA_Use_Num,
		sum(0) as LTE_35Mhz_CA_Use_Num,
		sum(0) as LTE_40Mhz_CA_Use_Num,
		sum(0) as LTE_5Mhz_SC_Use_Den,
		sum(0) as LTE_10Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_SC_Use_Den,
		sum(0) as LTE_20Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_CA_Use_Den,
		sum(0) as LTE_20Mhz_CA_Use_Den,
		sum(0) as LTE_25Mhz_CA_Use_Den,
		sum(0) as LTE_30Mhz_CA_Use_Den,
		sum(0) as LTE_35Mhz_CA_Use_Den,
		sum(0) as LTE_40Mhz_CA_Use_Den,
		
		sum(0) as LTE_BW_use_den,	
		sum(0) as [4G_RBs_use_Num],
		sum(0) as [4G_RBs_use_Den],

		sum(0) as [4G_TM1_use_Num],
		sum(0) as [4G_TM2_use_Num],
		sum(0) as [4G_TM3_use_Num],
		sum(0) as [4G_TM4_use_Num],
		sum(0) as [4G_TM5_use_Num],
		sum(0) as [4G_TM6_use_Num],
		sum(0) as [4G_TM7_use_Num],
		sum(0) as [4G_TM8_use_Num],
		sum(0) as [4G_TM9_use_Num],
		sum(0) as [4G_TMInvalid_use_Num],
		sum(0) as [4G_TMUnknown_use_Num],
		sum(0) as [4G_TM_Den],

		-- Technology LTE:
		sum(0) as [4G_%CA_Num],
		sum(0) as [4G_%CA_Den],
		sum(0) as [4G_BPSK_Use_Num],
		sum(0) as [4G_QPSK_Use_Num],
		sum(0) as [4G_16QAM_Use_Num],
		sum(0) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],
		sum(0) as [4G_QPSK_Use_Den],
		sum(0) as [4G_16QAM_Use_Den],
		sum(0) as [4G_64QAM_Use_Den],

		sum(0) as [4G_stats_Den],
		sum(0) as [RSRP_Lin_Num],
		sum(0) as [RSRQ_Lin_Num],
		sum(0) as [SINR_Lin_Num],			
		sum(0) as [RSRP_Lin_Den],
		sum(0) as [RSRQ_Lin_Den],
		sum(0) as [SINR_Lin_Den],		

		--New KPIs:
		sum(0) as [MIMO_num],
		sum(0) as [RI1_num],
		sum(0) as [RI2_num],
		sum(0) as [MIMO_den],
		sum(0) as [RI1_den],
		sum(0) as [RI2_den],
		sum(0) as RBs_Allocated_Den,
		sum(0) as RBs_Allocated_Num,
		max(0) as RBs_Allocated_Max,

		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		sum(0) as [1_N],	sum(0) as [2_N],	sum(0) as [3_N],	sum(0) as [4_N],	sum(0) as [5_N],	sum(0) as [6_N],	sum(0) as [7_N],	sum(0) as [8_N],	sum(0) as [9_N],	sum(0) as [10_N],
		sum(0) as [11_N],	sum(0) as [12_N],	sum(0) as [13_N],	sum(0) as [14_N],	sum(0) as [15_N],	sum(0) as [16_N],	sum(0) as [17_N],	sum(0) as [18_N],	sum(0) as [19_N],	sum(0) as [20_N],
		sum(0) as [21_N],	sum(0) as [22_N],	sum(0) as [23_N],	sum(0) as [24_N],	sum(0) as [25_N],	sum(0) as [26_N],	sum(0) as [27_N],	sum(0) as [28_N],	sum(0) as [29_N],	sum(0) as [30_N],
		sum(0) as [31_N],	sum(0) as [32_N],	sum(0) as [33_N],	sum(0) as [34_N],	sum(0) as [35_N],	sum(0) as [36_N],	sum(0) as [37_N],	sum(0) as [38_N],	sum(0) as [39_N],	sum(0) as [40_N],
		sum(0) as [41_N],	sum(0) as [42_N],	sum(0) as [43_N],	sum(0) as [44_N],	sum(0) as [45_N],	sum(0) as [46_N],	sum(0) as [47_N],	sum(0) as [48_N],	sum(0) as [49_N],	sum(0) as [50_N],
		sum(0) as [51_N],	sum(0) as [52_N],	sum(0) as [53_N],	sum(0) as [54_N],	sum(0) as [55_N],	sum(0) as [56_N],	sum(0) as [57_N],	sum(0) as [58_N],	sum(0) as [59_N],	sum(0) as [60_N],
		sum(0) as [61_N],	sum(0) as [62_N],	sum(0) as [63_N],	sum(0) as [64_N],	sum(0) as [65_N],	sum(0) as [66_N]
	
		--t.Region_VF as Region_Road_VF, t.Region_OSP as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,sum(0) as [1]	,sum(0) as [2]	,sum(0) as [3]	,sum(0) as [4]	,sum(0) as [5]	,sum(0) as [6]	,sum(0) as [7]	,sum(0) as [8]	,sum(0) as [9]	,sum(0) as [10]
		,sum(0) as [11]	,sum(0) as [12]	,sum(0) as [13]	,sum(0) as [14]	,sum(0) as [15]	,sum(0) as [16]	,sum(0) as [17]	,sum(0) as [18]	,sum(0) as [19]	,sum(0) as [20]
		,sum(0) as [21]	,sum(0) as [22]	,sum(0) as [23]	,sum(0) as [24]	,sum(0) as [25]	,sum(0) as [26]	,sum(0) as [27]	,sum(0) as [28]	,sum(0) as [29]	,sum(0) as [30]
		,sum(0) as [31]	,sum(0) as [32]	,sum(0) as [33]	,sum(0) as [34]	,sum(0) as [35]	,sum(0) as [36]	,sum(0) as [37]	,sum(0) as [38]	,sum(0) as [39]	,sum(0) as [40]
		,sum(0) as [41],

		-- Parametros de configuracion:
		t.ASideDevice as ASideDevice, t.BSideDevice as BSideDevice, t.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from [aggrData4G_ROAD].dbo.[lcc_aggr_sp_MDD_Data_Web] t
			left outer join [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_Web_CA_ONLY] W4G on (isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(W4G.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=W4G.mnc and t.Date_Reporting=W4G.Date_Reporting and t.entidad=W4G.entidad and t.Aggr_Type=W4G.Aggr_Type and t.Report_Type=W4G.Report_Type and t.meas_round=W4G.meas_round)
		, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine,  t.mnc,  t.meas_round,  t.Date_Reporting,  t.Week_Reporting,  t.entidad,  t.Report_Type,  t.Aggr_Type,
		t.ASideDevice, t.BSideDevice, t.SWVersion--, t.Region_VF, t.Region_OSP
	
	-------------
	-- 4G_CA_Only YTB SD	
	insert into _RI_Data_e	
	select  
		p.codigo_ine, case when  t.entidad like 'AVE-%' or  t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment, t.mnc, t.meas_round, t.Date_Reporting as meas_date, t.Week_Reporting as meas_week, 
		'4G_CA_Only' as meas_Tech, 'Youtube SD' as Test_type, 'Downlink' as Direction,  t.entidad as vf_entity, t.Report_Type, t.Aggr_Type,
		
		-- General:
		sum(YTB4G.Reproducciones) as Num_tests,
		sum(YTB4G.Fails) as Failed,
		sum(YTB4G.reproducciones- YTB4G.fails- YTB4G.[Successful video download]) as Dropped,
		sum(0) as Session_time_Num,
		sum(0) as Throughput_Den,
		sum(0) as Session_time_Den,
		sum(0) as Throughput_Num,
		max(0) as Throughput_Max,
		sum(0) as Throughput_3M_Num,
		sum(0) as Throughput_1M_Num,
		sum(0) as Throughput_128K_Num,
		sum(0) as Throughput_64K_Num,
		sum(0) as Throughput_384K_Num,
		--CAC 10/08/2017: thput de test sin error y con error
		sum(0) as Throughput_with_Error_Den,
		sum(0) as Throughput_with_Error_Num,
		sum(0) as WEB_IP_ACCESS_TIME_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_DEN,
		sum(0) as WEB_HTTP_TRANSFER_TIME_NUM,
		sum(0) as WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_NUM,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,
	
		-- Technology:
		sum(0) as Radio_2G_use_Num,
		sum(0) as Radio_3G_use_Num,
		sum(0) as Radio_4G_use_Num,
		sum(0) as Radio_use_Den,
		sum(0) as Radio_2G_use_Den,
		sum(0) as Radio_3G_use_Den,
		sum(0) as Radio_4G_use_Den,

		sum(0) as Radio_U2100_use_Num,
		sum(0) as Radio_U900_use_Num,
		sum(0) as Radio_LTE2100_use_Num,
		sum(0) as Radio_LTE2600_use_Num,
		sum(0) as Radio_LTE1800_use_Num,
		sum(0) as Radio_LTE800_use_Num,
		sum(0) as Radio_Band_Use_Den,
		sum(0) as Radio_U2100_use_Den,
		sum(0) as Radio_U900_use_Den,
		sum(0) as Radio_LTE2100_use_Den,
		sum(0) as Radio_LTE2600_use_Den,
		sum(0) as Radio_LTE1800_use_Den,
		sum(0) as Radio_LTE800_use_Den,

		sum(0) as [3G_DualCarrier_use_Num],
		sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],
		sum(0) as [3G_DC_2100_use_Den],
		sum(0) as [3G_DC_900_use_Num],
		sum(0) as [3G_DC_900_use_Den],

		sum(0) as [3G_NumCodes_use_Num],
		sum(0) as [3G_NumCodes_use_Den],
		sum(0) as [3G_QPSK_use_Num],
		sum(0) as [3G_16QAM_use_Num],
		sum(0) as [3G_64QAM_use_Num],
		sum(0) as [3G_QPSK_use_Den],
		sum(0) as [3G_16QAM_use_Den],
		sum(0) as [3G_64QAM_use_Den],

		sum(0) as [3G_%_SF22_Num],
		sum(0) as [3G_%_SF22andSF42_Num],
		sum(0) as [3G_%_SF4_Num],
		sum(0) as [3G_%_SF42_Num],
		sum(0) as [3G_%_SF22_Den],
		sum(0) as [3G_%_SF22andSF42_Den],
		sum(0) as [3G_%_SF4_Den],
		sum(0) as [3G_%_SF42_Den],
		sum(0) as [3G_%_TTI2ms_Num],
		sum(0) as [3G_%_TTI2ms_Den],	
	
		sum(0) as [RSCP_Lin_Num],
		sum(0) as [EcI0_Lin_Num],	
		sum(0) as [RSCP_Lin_Den],	
		sum(0) as [EcI0_Lin_Den],
		
		-- Performance:
		sum(0) as [3G_CQI],
		sum(0) as [3G_DataStats_Den],
		Sum(0) as CQI_U900_Num,
		sum(0) as CQI_U900_Den,
		Sum(0) as CQI_U2100_Num,
		sum(0) as CQI_U2100_Den,

		sum(0) as [HSPA_PCT_Num],
		sum(0) as [HSPA+_PCT_Num],
		sum(0) as [HSPA+_DC_PCT_Num],
		sum(0) as [HSPA_PCT_Den],
		sum(0) as [HSPA+_PCT_Den],
		sum(0) as [HSPA+_DC_PCT_Den],

		sum(0) as [UL_Inter_Lin_Num],
		sum(0) as [UL_Inter_Lin_Den],
	
		-- Performance LTE:
		sum(0) as CQI_4G_Num,
		sum(0) as CQI_L800_Num,
		sum(0) as CQI_L1800_Num,
		sum(0) as CQI_L2100_Num,
		sum(0) as CQI_L2600_Num,
		sum(0) as CQI_4G_Den,
		sum(0) as CQI_L800_Den,
		sum(0) as CQI_L1800_Den,
		sum(0) as CQI_L2100_Den,
		sum(0) as CQI_L2600_Den,

		sum(0) as LTE_5Mhz_SC_Use_Num,
		sum(0) as LTE_10Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_SC_Use_Num,
		sum(0) as LTE_20Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_CA_Use_Num,
		sum(0) as LTE_20Mhz_CA_Use_Num,
		sum(0) as LTE_25Mhz_CA_Use_Num,
		sum(0) as LTE_30Mhz_CA_Use_Num,
		sum(0) as LTE_35Mhz_CA_Use_Num,
		sum(0) as LTE_40Mhz_CA_Use_Num,	
		sum(0) as LTE_5Mhz_SC_Use_Den,
		sum(0) as LTE_10Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_SC_Use_Den,
		sum(0) as LTE_20Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_CA_Use_Den,
		sum(0) as LTE_20Mhz_CA_Use_Den,
		sum(0) as LTE_25Mhz_CA_Use_Den,
		sum(0) as LTE_30Mhz_CA_Use_Den,
		sum(0) as LTE_35Mhz_CA_Use_Den,
		sum(0) as LTE_40Mhz_CA_Use_Den,

		sum(0) as LTE_BW_use_den,	
		sum(0) as [4G_RBs_use_Num],
		sum(0) as [4G_RBs_use_Den],

		sum(0) as [4G_TM1_use_Num],
		sum(0) as [4G_TM2_use_Num],
		sum(0) as [4G_TM3_use_Num],
		sum(0) as [4G_TM4_use_Num],
		sum(0) as [4G_TM5_use_Num],
		sum(0) as [4G_TM6_use_Num],
		sum(0) as [4G_TM7_use_Num],
		sum(0) as [4G_TM8_use_Num],
		sum(0) as [4G_TM9_use_Num],
		sum(0) as [4G_TMInvalid_use_Num],
		sum(0) as [4G_TMUnknown_use_Num],
		sum(0) as [4G_TM_Den],

		-- Technology LTE:
		sum(0) as [4G_%CA_Num],
		sum(0) as [4G_%CA_Den],
		sum(0) as [4G_BPSK_Use_Num],
		sum(0) as [4G_QPSK_Use_Num],
		sum(0) as [4G_16QAM_Use_Num],
		sum(0) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],
		sum(0) as [4G_QPSK_Use_Den],
		sum(0) as [4G_16QAM_Use_Den],
		sum(0) as [4G_64QAM_Use_Den],

		sum(0) as [4G_stats_Den],
		sum(0) as [RSRP_Lin_Num],
		sum(0) as [RSRQ_Lin_Num],
		sum(0) as [SINR_Lin_Num],			
		sum(0) as [RSRP_Lin_Den],
		sum(0) as [RSRQ_Lin_Den],
		sum(0) as [SINR_Lin_Den],		

		--New KPIs:
		sum(0) as [MIMO_num],
		sum(0) as [RI1_num],
		sum(0) as [RI2_num],
		sum(0) as [MIMO_den],
		sum(0) as [RI1_den],
		sum(0) as [RI2_den],
		sum(0) as RBs_Allocated_Den,
		sum(0) as RBs_Allocated_Num,
		max(0) as RBs_Allocated_Max,

		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		sum(0) as [1_N],	sum(0) as [2_N],	sum(0) as [3_N],	sum(0) as [4_N],	sum(0) as [5_N],	sum(0) as [6_N],	sum(0) as [7_N],	sum(0) as [8_N],	sum(0) as [9_N],	sum(0) as [10_N],
		sum(0) as [11_N],	sum(0) as [12_N],	sum(0) as [13_N],	sum(0) as [14_N],	sum(0) as [15_N],	sum(0) as [16_N],	sum(0) as [17_N],	sum(0) as [18_N],	sum(0) as [19_N],	sum(0) as [20_N],
		sum(0) as [21_N],	sum(0) as [22_N],	sum(0) as [23_N],	sum(0) as [24_N],	sum(0) as [25_N],	sum(0) as [26_N],	sum(0) as [27_N],	sum(0) as [28_N],	sum(0) as [29_N],	sum(0) as [30_N],
		sum(0) as [31_N],	sum(0) as [32_N],	sum(0) as [33_N],	sum(0) as [34_N],	sum(0) as [35_N],	sum(0) as [36_N],	sum(0) as [37_N],	sum(0) as [38_N],	sum(0) as [39_N],	sum(0) as [40_N],
		sum(0) as [41_N],	sum(0) as [42_N],	sum(0) as [43_N],	sum(0) as [44_N],	sum(0) as [45_N],	sum(0) as [46_N],	sum(0) as [47_N],	sum(0) as [48_N],	sum(0) as [49_N],	sum(0) as [50_N],
		sum(0) as [51_N],	sum(0) as [52_N],	sum(0) as [53_N],	sum(0) as [54_N],	sum(0) as [55_N],	sum(0) as [56_N],	sum(0) as [57_N],	sum(0) as [58_N],	sum(0) as [59_N],	sum(0) as [60_N],
		sum(0) as [61_N],	sum(0) as [62_N],	sum(0) as [63_N],	sum(0) as [64_N],	sum(0) as [65_N],	sum(0) as [66_N]
	
		--null as Region_Road_VF, null as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,sum(0) as [1]	,sum(0) as [2]	,sum(0) as [3]	,sum(0) as [4]	,sum(0) as [5]	,sum(0) as [6]	,sum(0) as [7]	,sum(0) as [8]	,sum(0) as [9]	,sum(0) as [10]
		,sum(0) as [11]	,sum(0) as [12]	,sum(0) as [13]	,sum(0) as [14]	,sum(0) as [15]	,sum(0) as [16]	,sum(0) as [17]	,sum(0) as [18]	,sum(0) as [19]	,sum(0) as [20]
		,sum(0) as [21]	,sum(0) as [22]	,sum(0) as [23]	,sum(0) as [24]	,sum(0) as [25]	,sum(0) as [26]	,sum(0) as [27]	,sum(0) as [28]	,sum(0) as [29]	,sum(0) as [30]
		,sum(0) as [31]	,sum(0) as [32]	,sum(0) as [33]	,sum(0) as [34]	,sum(0) as [35]	,sum(0) as [36]	,sum(0) as [37]	,sum(0) as [38]	,sum(0) as [39]	,sum(0) as [40]
		,sum(0) as [41],

		-- Parametros de configuracion:
		t.ASideDevice as ASideDevice, t.BSideDevice as BSideDevice, t.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_Youtube] t
			left outer join [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_Youtube_CA_ONLY] YTB4G on (isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(YTB4G.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=YTB4G.mnc and t.Date_Reporting=YTB4G.Date_Reporting and t.entidad=YTB4G.entidad and t.Aggr_Type=YTB4G.Aggr_Type and t.Report_Type=YTB4G.Report_Type and t.meas_round=YTB4G.meas_round)
		, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, case when  t.entidad like 'AVE-%' or  t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end, t.mnc, t.meas_round, t.Date_Reporting, t.Week_Reporting, t.entidad, t.Report_Type, t.Aggr_Type,
		t.ASideDevice, t.BSideDevice, t.SWVersion--, t.Region_VF, t.Region_OSP

	-----------
	union all	-- YTB SD Road 4G_CA_Only
	select  
		p.codigo_ine, 'Roads' vf_environment,  t.mnc,  t.meas_round,  t.Date_Reporting as meas_date,  t.Week_Reporting as meas_week, 
		'Road 4G_CA_Only' as meas_Tech, 'Youtube SD' as Test_type, 'Downlink' as Direction,  t.entidad as vf_entity, t.Report_Type, t.Aggr_Type,
		
		-- General:
		sum(YTB4G.Reproducciones) as Num_tests,
		sum(YTB4G.Fails) as Failed,
		sum(YTB4G.[reproducciones] - YTB4G.[fails] - YTB4G.[Successful video download]) as Dropped,
		sum(0) as Session_time_Num,
		sum(0) as Throughput_Den,
		sum(0) as Session_time_Den,
		sum(0) as Throughput_Num,
		max(0) as Throughput_Max,
		sum(0) as Throughput_3M_Num,
		sum(0) as Throughput_1M_Num,
		sum(0) as Throughput_128K_Num,
		sum(0) as Throughput_64K_Num,
		sum(0) as Throughput_384K_Num,
		--CAC 10/08/2017: thput de test sin error y con error
		sum(0) as Throughput_with_Error_Den,
		sum(0) as Throughput_with_Error_Num,
		sum(0) as WEB_IP_ACCESS_TIME_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_DEN,
		sum(0) as WEB_HTTP_TRANSFER_TIME_NUM,
		sum(0) as WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_NUM,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,
	
		-- Technology:
		sum(0) as Radio_2G_use_Num,
		sum(0) as Radio_3G_use_Num,
		sum(0) as Radio_4G_use_Num,
		sum(0) as Radio_use_Den,
		sum(0) as Radio_2G_use_Den,
		sum(0) as Radio_3G_use_Den,
		sum(0) as Radio_4G_use_Den,

		sum(0) as Radio_U2100_use_Num,
		sum(0) as Radio_U900_use_Num,
		sum(0) as Radio_LTE2100_use_Num,
		sum(0) as Radio_LTE2600_use_Num,
		sum(0) as Radio_LTE1800_use_Num,
		sum(0) as Radio_LTE800_use_Num,
		sum(0) as Radio_Band_Use_Den,
		sum(0) as Radio_U2100_use_Den,
		sum(0) as Radio_U900_use_Den,
		sum(0) as Radio_LTE2100_use_Den,
		sum(0) as Radio_LTE2600_use_Den,
		sum(0) as Radio_LTE1800_use_Den,
		sum(0) as Radio_LTE800_use_Den,

		sum(0) as [3G_DualCarrier_use_Num],
		sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],
		sum(0) as [3G_DC_2100_use_Den],
		sum(0) as [3G_DC_900_use_Num],
		sum(0) as [3G_DC_900_use_Den],

		sum(0) as [3G_NumCodes_use_Num],
		sum(0) as [3G_NumCodes_use_Den],
		sum(0) as [3G_QPSK_use_Num],
		sum(0) as [3G_16QAM_use_Num],
		sum(0) as [3G_64QAM_use_Num],
		sum(0) as [3G_QPSK_use_Den],
		sum(0) as [3G_16QAM_use_Den],
		sum(0) as [3G_64QAM_use_Den],

		sum(0) as [3G_%_SF22_Num],
		sum(0) as [3G_%_SF22andSF42_Num],
		sum(0) as [3G_%_SF4_Num],
		sum(0) as [3G_%_SF42_Num],
		sum(0) as [3G_%_SF22_Den],
		sum(0) as [3G_%_SF22andSF42_Den],
		sum(0) as [3G_%_SF4_Den],
		sum(0) as [3G_%_SF42_Den],
		sum(0) as [3G_%_TTI2ms_Num],
		sum(0) as [3G_%_TTI2ms_Den],	
	
		sum(0) as [RSCP_Lin_Num],
		sum(0) as [EcI0_Lin_Num],	
		sum(0) as [RSCP_Lin_Den],	
		sum(0) as [EcI0_Lin_Den],
		
		-- Performance:
		sum(0) as [3G_CQI],
		sum(0) as [3G_DataStats_Den],
		Sum(0) as CQI_U900_Num,
		sum(0) as CQI_U900_Den,
		Sum(0) as CQI_U2100_Num,
		sum(0) as CQI_U2100_Den,

		sum(0) as [HSPA_PCT_Num],
		sum(0) as [HSPA+_PCT_Num],
		sum(0) as [HSPA+_DC_PCT_Num],
		sum(0) as [HSPA_PCT_Den],
		sum(0) as [HSPA+_PCT_Den],
		sum(0) as [HSPA+_DC_PCT_Den],

		sum(0) as [UL_Inter_Lin_Num],
		sum(0) as [UL_Inter_Lin_Den],
	
		-- Performance LTE:
		sum(0) as CQI_4G_Num,
		sum(0) as CQI_L800_Num,
		sum(0) as CQI_L1800_Num,
		sum(0) as CQI_L2100_Num,
		sum(0) as CQI_L2600_Num,
		sum(0) as CQI_4G_Den,
		sum(0) as CQI_L800_Den,
		sum(0) as CQI_L1800_Den,
		sum(0) as CQI_L2100_Den,
		sum(0) as CQI_L2600_Den,

		sum(0) as LTE_5Mhz_SC_Use_Num,
		sum(0) as LTE_10Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_SC_Use_Num,
		sum(0) as LTE_20Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_CA_Use_Num,
		sum(0) as LTE_20Mhz_CA_Use_Num,
		sum(0) as LTE_25Mhz_CA_Use_Num,
		sum(0) as LTE_30Mhz_CA_Use_Num,
		sum(0) as LTE_35Mhz_CA_Use_Num,
		sum(0) as LTE_40Mhz_CA_Use_Num,	
		sum(0) as LTE_5Mhz_SC_Use_Den,
		sum(0) as LTE_10Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_SC_Use_Den,
		sum(0) as LTE_20Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_CA_Use_Den,
		sum(0) as LTE_20Mhz_CA_Use_Den,
		sum(0) as LTE_25Mhz_CA_Use_Den,
		sum(0) as LTE_30Mhz_CA_Use_Den,
		sum(0) as LTE_35Mhz_CA_Use_Den,
		sum(0) as LTE_40Mhz_CA_Use_Den,

		sum(0) as LTE_BW_use_den,	
		sum(0) as [4G_RBs_use_Num],
		sum(0) as [4G_RBs_use_Den],

		sum(0) as [4G_TM1_use_Num],
		sum(0) as [4G_TM2_use_Num],
		sum(0) as [4G_TM3_use_Num],
		sum(0) as [4G_TM4_use_Num],
		sum(0) as [4G_TM5_use_Num],
		sum(0) as [4G_TM6_use_Num],
		sum(0) as [4G_TM7_use_Num],
		sum(0) as [4G_TM8_use_Num],
		sum(0) as [4G_TM9_use_Num],
		sum(0) as [4G_TMInvalid_use_Num],
		sum(0) as [4G_TMUnknown_use_Num],
		sum(0) as [4G_TM_Den],

		-- Technology LTE:
		sum(0) as [4G_%CA_Num],
		sum(0) as [4G_%CA_Den],
		sum(0) as [4G_BPSK_Use_Num],
		sum(0) as [4G_QPSK_Use_Num],
		sum(0) as [4G_16QAM_Use_Num],
		sum(0) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],
		sum(0) as [4G_QPSK_Use_Den],
		sum(0) as [4G_16QAM_Use_Den],
		sum(0) as [4G_64QAM_Use_Den],

		sum(0) as [4G_stats_Den],
		sum(0) as [RSRP_Lin_Num],
		sum(0) as [RSRQ_Lin_Num],
		sum(0) as [SINR_Lin_Num],			
		sum(0) as [RSRP_Lin_Den],
		sum(0) as [RSRQ_Lin_Den],
		sum(0) as [SINR_Lin_Den],		

		--New KPIs:
		sum(0) as [MIMO_num],
		sum(0) as [RI1_num],
		sum(0) as [RI2_num],
		sum(0) as [MIMO_den],
		sum(0) as [RI1_den],
		sum(0) as [RI2_den],
		sum(0) as RBs_Allocated_Den,
		sum(0) as RBs_Allocated_Num,
		max(0) as RBs_Allocated_Max,

		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		sum(0) as [1_N],	sum(0) as [2_N],	sum(0) as [3_N],	sum(0) as [4_N],	sum(0) as [5_N],	sum(0) as [6_N],	sum(0) as [7_N],	sum(0) as [8_N],	sum(0) as [9_N],	sum(0) as [10_N],
		sum(0) as [11_N],	sum(0) as [12_N],	sum(0) as [13_N],	sum(0) as [14_N],	sum(0) as [15_N],	sum(0) as [16_N],	sum(0) as [17_N],	sum(0) as [18_N],	sum(0) as [19_N],	sum(0) as [20_N],
		sum(0) as [21_N],	sum(0) as [22_N],	sum(0) as [23_N],	sum(0) as [24_N],	sum(0) as [25_N],	sum(0) as [26_N],	sum(0) as [27_N],	sum(0) as [28_N],	sum(0) as [29_N],	sum(0) as [30_N],
		sum(0) as [31_N],	sum(0) as [32_N],	sum(0) as [33_N],	sum(0) as [34_N],	sum(0) as [35_N],	sum(0) as [36_N],	sum(0) as [37_N],	sum(0) as [38_N],	sum(0) as [39_N],	sum(0) as [40_N],
		sum(0) as [41_N],	sum(0) as [42_N],	sum(0) as [43_N],	sum(0) as [44_N],	sum(0) as [45_N],	sum(0) as [46_N],	sum(0) as [47_N],	sum(0) as [48_N],	sum(0) as [49_N],	sum(0) as [50_N],
		sum(0) as [51_N],	sum(0) as [52_N],	sum(0) as [53_N],	sum(0) as [54_N],	sum(0) as [55_N],	sum(0) as [56_N],	sum(0) as [57_N],	sum(0) as [58_N],	sum(0) as [59_N],	sum(0) as [60_N],
		sum(0) as [61_N],	sum(0) as [62_N],	sum(0) as [63_N],	sum(0) as [64_N],	sum(0) as [65_N],	sum(0) as [66_N]
	
		--t.Region_VF as Region_Road_VF, t.Region_OSP as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,sum(0) as [1]	,sum(0) as [2]	,sum(0) as [3]	,sum(0) as [4]	,sum(0) as [5]	,sum(0) as [6]	,sum(0) as [7]	,sum(0) as [8]	,sum(0) as [9]	,sum(0) as [10]
		,sum(0) as [11]	,sum(0) as [12]	,sum(0) as [13]	,sum(0) as [14]	,sum(0) as [15]	,sum(0) as [16]	,sum(0) as [17]	,sum(0) as [18]	,sum(0) as [19]	,sum(0) as [20]
		,sum(0) as [21]	,sum(0) as [22]	,sum(0) as [23]	,sum(0) as [24]	,sum(0) as [25]	,sum(0) as [26]	,sum(0) as [27]	,sum(0) as [28]	,sum(0) as [29]	,sum(0) as [30]
		,sum(0) as [31]	,sum(0) as [32]	,sum(0) as [33]	,sum(0) as [34]	,sum(0) as [35]	,sum(0) as [36]	,sum(0) as [37]	,sum(0) as [38]	,sum(0) as [39]	,sum(0) as [40]
		,sum(0) as [41],

		-- Parametros de configuracion:
		t.ASideDevice as ASideDevice, t.BSideDevice as BSideDevice, t.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from [aggrData4G_ROAD].dbo.[lcc_aggr_sp_MDD_Data_Youtube] t
			left outer join [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_Youtube_CA_ONLY] YTB4G on (isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(YTB4G.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=YTB4G.mnc and t.Date_Reporting=YTB4G.Date_Reporting and t.entidad=YTB4G.entidad and t.Aggr_Type=YTB4G.Aggr_Type and t.Report_Type=YTB4G.Report_Type and t.meas_round=YTB4G.meas_round)
		, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, t.mnc, t.meas_round, t.Date_Reporting, t.Week_Reporting, t.entidad, t.Report_Type, t.Aggr_Type,
		t.ASideDevice, t.BSideDevice, t.SWVersion --, t.Region_VF, t.Region_OSP

	-------------
	-- 4G_CA_Only YTB HD	
	insert into _RI_Data_e	
	select  
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment, t.mnc, t.meas_round, t.Date_Reporting as meas_date,t.Week_Reporting as meas_week, 
		'4G_CA_Only' as meas_Tech, 'Youtube HD' as Test_type, 'Downlink' as Direction, t.entidad as vf_entity, t.Report_Type, t.Aggr_Type,
		
		-- General:
		sum(YTB4G.Reproducciones) as Num_tests,
		sum(YTB4G.Fails) as Failed,
		sum(YTB4G.[reproducciones] - YTB4G.[fails] - YTB4G.[Successful video download]) as Dropped,
		sum(0) as Session_time_Num,
		sum(0) as Throughput_Den,
		sum(0) as Session_time_Den,
		sum(0) as Throughput_Num,
		max(0) as Throughput_Max,
		sum(0) as Throughput_3M_Num,
		sum(0) as Throughput_1M_Num,
		sum(0) as Throughput_128K_Num,
		sum(0) as Throughput_64K_Num,
		sum(0) as Throughput_384K_Num,
		--CAC 10/08/2017: thput de test sin error y con error
		sum(0) as Throughput_with_Error_Den,
		sum(0) as Throughput_with_Error_Num,
		sum(0) as WEB_IP_ACCESS_TIME_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_DEN,
		sum(0) as WEB_HTTP_TRANSFER_TIME_NUM,
		sum(0) as WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_NUM,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,
	
		-- Technology:
		sum(0) as Radio_2G_use_Num,
		sum(0) as Radio_3G_use_Num,
		sum(0) as Radio_4G_use_Num,
		sum(0) as Radio_use_Den,
		sum(0) as Radio_2G_use_Den,
		sum(0) as Radio_3G_use_Den,
		sum(0) as Radio_4G_use_Den,

		sum(0) as Radio_U2100_use_Num,
		sum(0) as Radio_U900_use_Num,
		sum(0) as Radio_LTE2100_use_Num,
		sum(0) as Radio_LTE2600_use_Num,
		sum(0) as Radio_LTE1800_use_Num,
		sum(0) as Radio_LTE800_use_Num,
		sum(0) as Radio_Band_Use_Den,
		sum(0) as Radio_U2100_use_Den,
		sum(0) as Radio_U900_use_Den,
		sum(0) as Radio_LTE2100_use_Den,
		sum(0) as Radio_LTE2600_use_Den,
		sum(0) as Radio_LTE1800_use_Den,
		sum(0) as Radio_LTE800_use_Den,

		sum(0) as [3G_DualCarrier_use_Num],
		sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],
		sum(0) as [3G_DC_2100_use_Den],
		sum(0) as [3G_DC_900_use_Num],
		sum(0) as [3G_DC_900_use_Den],

		sum(0) as [3G_NumCodes_use_Num],
		sum(0) as [3G_NumCodes_use_Den],
		sum(0) as [3G_QPSK_use_Num],
		sum(0) as [3G_16QAM_use_Num],
		sum(0) as [3G_64QAM_use_Num],
		sum(0) as [3G_QPSK_use_Den],
		sum(0) as [3G_16QAM_use_Den],
		sum(0) as [3G_64QAM_use_Den],

		sum(0) as [3G_%_SF22_Num],
		sum(0) as [3G_%_SF22andSF42_Num],
		sum(0) as [3G_%_SF4_Num],
		sum(0) as [3G_%_SF42_Num],
		sum(0) as [3G_%_SF22_Den],
		sum(0) as [3G_%_SF22andSF42_Den],
		sum(0) as [3G_%_SF4_Den],
		sum(0) as [3G_%_SF42_Den],
		sum(0) as [3G_%_TTI2ms_Num],
		sum(0) as [3G_%_TTI2ms_Den],	
	
		sum(0) as [RSCP_Lin_Num],
		sum(0) as [EcI0_Lin_Num],	
		sum(0) as [RSCP_Lin_Den],	
		sum(0) as [EcI0_Lin_Den],
		
		-- Performance:
		sum(0) as [3G_CQI],
		sum(0) as [3G_DataStats_Den],
		Sum(0) as CQI_U900_Num,
		sum(0) as CQI_U900_Den,
		Sum(0) as CQI_U2100_Num,
		sum(0) as CQI_U2100_Den,

		sum(0) as [HSPA_PCT_Num],
		sum(0) as [HSPA+_PCT_Num],
		sum(0) as [HSPA+_DC_PCT_Num],
		sum(0) as [HSPA_PCT_Den],
		sum(0) as [HSPA+_PCT_Den],
		sum(0) as [HSPA+_DC_PCT_Den],

		sum(0) as [UL_Inter_Lin_Num],
		sum(0) as [UL_Inter_Lin_Den],
	
		-- Performance LTE:
		sum(0) as CQI_4G_Num,
		sum(0) as CQI_L800_Num,
		sum(0) as CQI_L1800_Num,
		sum(0) as CQI_L2100_Num,
		sum(0) as CQI_L2600_Num,
		sum(0) as CQI_4G_Den,
		sum(0) as CQI_L800_Den,
		sum(0) as CQI_L1800_Den,
		sum(0) as CQI_L2100_Den,
		sum(0) as CQI_L2600_Den,

		sum(0) as LTE_5Mhz_SC_Use_Num,
		sum(0) as LTE_10Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_SC_Use_Num,
		sum(0) as LTE_20Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_CA_Use_Num,
		sum(0) as LTE_20Mhz_CA_Use_Num,
		sum(0) as LTE_25Mhz_CA_Use_Num,
		sum(0) as LTE_30Mhz_CA_Use_Num,
		sum(0) as LTE_35Mhz_CA_Use_Num,
		sum(0) as LTE_40Mhz_CA_Use_Num,	
		sum(0) as LTE_5Mhz_SC_Use_Den,
		sum(0) as LTE_10Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_SC_Use_Den,
		sum(0) as LTE_20Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_CA_Use_Den,
		sum(0) as LTE_20Mhz_CA_Use_Den,
		sum(0) as LTE_25Mhz_CA_Use_Den,
		sum(0) as LTE_30Mhz_CA_Use_Den,
		sum(0) as LTE_35Mhz_CA_Use_Den,
		sum(0) as LTE_40Mhz_CA_Use_Den,

		sum(0) as LTE_BW_use_den,
		sum(0) as [4G_RBs_use_Num],
		sum(0) as [4G_RBs_use_Den],

		sum(0) as [4G_TM1_use_Num],
		sum(0) as [4G_TM2_use_Num],
		sum(0) as [4G_TM3_use_Num],
		sum(0) as [4G_TM4_use_Num],
		sum(0) as [4G_TM5_use_Num],
		sum(0) as [4G_TM6_use_Num],
		sum(0) as [4G_TM7_use_Num],
		sum(0) as [4G_TM8_use_Num],
		sum(0) as [4G_TM9_use_Num],
		sum(0) as [4G_TMInvalid_use_Num],
		sum(0) as [4G_TMUnknown_use_Num],
		sum(0) as [4G_TM_Den],

		-- Technology LTE:
		sum(0) as [4G_%CA_Num],
		sum(0) as [4G_%CA_Den],
		sum(0) as [4G_BPSK_Use_Num],
		sum(0) as [4G_QPSK_Use_Num],
		sum(0) as [4G_16QAM_Use_Num],
		sum(0) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],
		sum(0) as [4G_QPSK_Use_Den],
		sum(0) as [4G_16QAM_Use_Den],
		sum(0) as [4G_64QAM_Use_Den],

		sum(0) as [4G_stats_Den],
		sum(0) as [RSRP_Lin_Num],
		sum(0) as [RSRQ_Lin_Num],
		sum(0) as [SINR_Lin_Num],			
		sum(0) as [RSRP_Lin_Den],
		sum(0) as [RSRQ_Lin_Den],
		sum(0) as [SINR_Lin_Den],		

		--New KPIs:
		sum(0) as [MIMO_num],
		sum(0) as [RI1_num],
		sum(0) as [RI2_num],
		sum(0) as [MIMO_den],
		sum(0) as [RI1_den],
		sum(0) as [RI2_den],
		sum(0) as RBs_Allocated_Den,
		sum(0) as RBs_Allocated_Num,
		max(0) as RBs_Allocated_Max,

		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		sum(0) as [1_N],	sum(0) as [2_N],	sum(0) as [3_N],	sum(0) as [4_N],	sum(0) as [5_N],	sum(0) as [6_N],	sum(0) as [7_N],	sum(0) as [8_N],	sum(0) as [9_N],	sum(0) as [10_N],
		sum(0) as [11_N],	sum(0) as [12_N],	sum(0) as [13_N],	sum(0) as [14_N],	sum(0) as [15_N],	sum(0) as [16_N],	sum(0) as [17_N],	sum(0) as [18_N],	sum(0) as [19_N],	sum(0) as [20_N],
		sum(0) as [21_N],	sum(0) as [22_N],	sum(0) as [23_N],	sum(0) as [24_N],	sum(0) as [25_N],	sum(0) as [26_N],	sum(0) as [27_N],	sum(0) as [28_N],	sum(0) as [29_N],	sum(0) as [30_N],
		sum(0) as [31_N],	sum(0) as [32_N],	sum(0) as [33_N],	sum(0) as [34_N],	sum(0) as [35_N],	sum(0) as [36_N],	sum(0) as [37_N],	sum(0) as [38_N],	sum(0) as [39_N],	sum(0) as [40_N],
		sum(0) as [41_N],	sum(0) as [42_N],	sum(0) as [43_N],	sum(0) as [44_N],	sum(0) as [45_N],	sum(0) as [46_N],	sum(0) as [47_N],	sum(0) as [48_N],	sum(0) as [49_N],	sum(0) as [50_N],
		sum(0) as [51_N],	sum(0) as [52_N],	sum(0) as [53_N],	sum(0) as [54_N],	sum(0) as [55_N],	sum(0) as [56_N],	sum(0) as [57_N],	sum(0) as [58_N],	sum(0) as [59_N],	sum(0) as [60_N],
		sum(0) as [61_N],	sum(0) as [62_N],	sum(0) as [63_N],	sum(0) as [64_N],	sum(0) as [65_N],	sum(0) as [66_N]
	
		--null as Region_Road_VF, null as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,sum(0) as [1]	,sum(0) as [2]	,sum(0) as [3]	,sum(0) as [4]	,sum(0) as [5]	,sum(0) as [6]	,sum(0) as [7]	,sum(0) as [8]	,sum(0) as [9]	,sum(0) as [10]
		,sum(0) as [11]	,sum(0) as [12]	,sum(0) as [13]	,sum(0) as [14]	,sum(0) as [15]	,sum(0) as [16]	,sum(0) as [17]	,sum(0) as [18]	,sum(0) as [19]	,sum(0) as [20]
		,sum(0) as [21]	,sum(0) as [22]	,sum(0) as [23]	,sum(0) as [24]	,sum(0) as [25]	,sum(0) as [26]	,sum(0) as [27]	,sum(0) as [28]	,sum(0) as [29]	,sum(0) as [30]
		,sum(0) as [31]	,sum(0) as [32]	,sum(0) as [33]	,sum(0) as [34]	,sum(0) as [35]	,sum(0) as [36]	,sum(0) as [37]	,sum(0) as [38]	,sum(0) as [39]	,sum(0) as [40]
		,sum(0) as [41],

		-- Parametros de configuracion:
		t.ASideDevice as ASideDevice, t.BSideDevice as BSideDevice, t.SWVersion as SWVersion, 
		max(t.Youtube_Version) as YTB_Version, max(t.url) as YTB_URL	

	from [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_Youtube_HD] t
			left outer join [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_Youtube_HD_CA_ONLY] YTB4G on (isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(YTB4G.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=YTB4G.mnc and t.Date_Reporting=YTB4G.Date_Reporting and t.entidad=YTB4G.entidad and t.Aggr_Type=YTB4G.Aggr_Type and t.Report_Type=YTB4G.Report_Type and t.meas_round=YTB4G.meas_round)		
		, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end, t.mnc, t.meas_round, t.Date_Reporting, t.Week_Reporting, t.entidad, t.Report_Type, t.Aggr_Type,
		t.ASideDevice, t.BSideDevice, t.SWVersion--, t.Youtube_Version, t.url--, t.Region_VF, t.Region_OSP

	-----------
	union all	-- YTB HD Road 4G_CA_Only
	select  
		p.codigo_ine, 'Roads' vf_environment, t.mnc, t.meas_round, t.Date_Reporting as meas_date, t.Week_Reporting as meas_week, 
		'Road 4G_CA_Only' as meas_Tech, 'Youtube HD' as Test_type, 'Downlink' as Direction, t.entidad as vf_entity, t.Report_Type, t.Aggr_Type,
		
		-- General:
		sum(YTB4G.Reproducciones) as Num_tests,
		sum(YTB4G.Fails) as Failed,
		sum(YTB4G.[reproducciones] - YTB4G.[fails] - YTB4G.[Successful video download]) as Dropped,
		sum(0) as Session_time_Num,
		sum(0) as Throughput_Den,
		sum(0) as Session_time_Den,
		sum(0) as Throughput_Num,
		max(0) as Throughput_Max,
		sum(0) as Throughput_3M_Num,
		sum(0) as Throughput_1M_Num,
		sum(0) as Throughput_128K_Num,
		sum(0) as Throughput_64K_Num,
		sum(0) as Throughput_384K_Num,
		--CAC 10/08/2017: thput de test sin error y con error
		sum(0) as Throughput_with_Error_Den,
		sum(0) as Throughput_with_Error_Num,
		sum(0) as WEB_IP_ACCESS_TIME_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_DEN,
		sum(0) as WEB_HTTP_TRANSFER_TIME_NUM,
		sum(0) as WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_NUM,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,
	
		-- Technology:
		sum(0) as Radio_2G_use_Num,
		sum(0) as Radio_3G_use_Num,
		sum(0) as Radio_4G_use_Num,
		sum(0) as Radio_use_Den,
		sum(0) as Radio_2G_use_Den,
		sum(0) as Radio_3G_use_Den,
		sum(0) as Radio_4G_use_Den,

		sum(0) as Radio_U2100_use_Num,
		sum(0) as Radio_U900_use_Num,
		sum(0) as Radio_LTE2100_use_Num,
		sum(0) as Radio_LTE2600_use_Num,
		sum(0) as Radio_LTE1800_use_Num,
		sum(0) as Radio_LTE800_use_Num,
		sum(0) as Radio_Band_Use_Den,
		sum(0) as Radio_U2100_use_Den,
		sum(0) as Radio_U900_use_Den,
		sum(0) as Radio_LTE2100_use_Den,
		sum(0) as Radio_LTE2600_use_Den,
		sum(0) as Radio_LTE1800_use_Den,
		sum(0) as Radio_LTE800_use_Den,

		sum(0) as [3G_DualCarrier_use_Num],
		sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],
		sum(0) as [3G_DC_2100_use_Den],
		sum(0) as [3G_DC_900_use_Num],
		sum(0) as [3G_DC_900_use_Den],

		sum(0) as [3G_NumCodes_use_Num],
		sum(0) as [3G_NumCodes_use_Den],
		sum(0) as [3G_QPSK_use_Num],
		sum(0) as [3G_16QAM_use_Num],
		sum(0) as [3G_64QAM_use_Num],
		sum(0) as [3G_QPSK_use_Den],
		sum(0) as [3G_16QAM_use_Den],
		sum(0) as [3G_64QAM_use_Den],

		sum(0) as [3G_%_SF22_Num],
		sum(0) as [3G_%_SF22andSF42_Num],
		sum(0) as [3G_%_SF4_Num],
		sum(0) as [3G_%_SF42_Num],
		sum(0) as [3G_%_SF22_Den],
		sum(0) as [3G_%_SF22andSF42_Den],
		sum(0) as [3G_%_SF4_Den],
		sum(0) as [3G_%_SF42_Den],
		sum(0) as [3G_%_TTI2ms_Num],
		sum(0) as [3G_%_TTI2ms_Den],	
	
		sum(0) as [RSCP_Lin_Num],
		sum(0) as [EcI0_Lin_Num],	
		sum(0) as [RSCP_Lin_Den],	
		sum(0) as [EcI0_Lin_Den],
		
		-- Performance:
		sum(0) as [3G_CQI],
		sum(0) as [3G_DataStats_Den],
		Sum(0) as CQI_U900_Num,
		sum(0) as CQI_U900_Den,
		Sum(0) as CQI_U2100_Num,
		sum(0) as CQI_U2100_Den,

		sum(0) as [HSPA_PCT_Num],
		sum(0) as [HSPA+_PCT_Num],
		sum(0) as [HSPA+_DC_PCT_Num],
		sum(0) as [HSPA_PCT_Den],
		sum(0) as [HSPA+_PCT_Den],
		sum(0) as [HSPA+_DC_PCT_Den],

		sum(0) as [UL_Inter_Lin_Num],
		sum(0) as [UL_Inter_Lin_Den],
	
		-- Performance LTE:
		sum(0) as CQI_4G_Num,
		sum(0) as CQI_L800_Num,
		sum(0) as CQI_L1800_Num,
		sum(0) as CQI_L2100_Num,
		sum(0) as CQI_L2600_Num,
		sum(0) as CQI_4G_Den,
		sum(0) as CQI_L800_Den,
		sum(0) as CQI_L1800_Den,
		sum(0) as CQI_L2100_Den,
		sum(0) as CQI_L2600_Den,

		sum(0) as LTE_5Mhz_SC_Use_Num,
		sum(0) as LTE_10Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_SC_Use_Num,
		sum(0) as LTE_20Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_CA_Use_Num,
		sum(0) as LTE_20Mhz_CA_Use_Num,
		sum(0) as LTE_25Mhz_CA_Use_Num,
		sum(0) as LTE_30Mhz_CA_Use_Num,
		sum(0) as LTE_35Mhz_CA_Use_Num,
		sum(0) as LTE_40Mhz_CA_Use_Num,	
		sum(0) as LTE_5Mhz_SC_Use_Den,
		sum(0) as LTE_10Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_SC_Use_Den,
		sum(0) as LTE_20Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_CA_Use_Den,
		sum(0) as LTE_20Mhz_CA_Use_Den,
		sum(0) as LTE_25Mhz_CA_Use_Den,
		sum(0) as LTE_30Mhz_CA_Use_Den,
		sum(0) as LTE_35Mhz_CA_Use_Den,
		sum(0) as LTE_40Mhz_CA_Use_Den,

		sum(0) as LTE_BW_use_den,	
		sum(0) as [4G_RBs_use_Num],
		sum(0) as [4G_RBs_use_Den],

		sum(0) as [4G_TM1_use_Num],
		sum(0) as [4G_TM2_use_Num],
		sum(0) as [4G_TM3_use_Num],
		sum(0) as [4G_TM4_use_Num],
		sum(0) as [4G_TM5_use_Num],
		sum(0) as [4G_TM6_use_Num],
		sum(0) as [4G_TM7_use_Num],
		sum(0) as [4G_TM8_use_Num],
		sum(0) as [4G_TM9_use_Num],
		sum(0) as [4G_TMInvalid_use_Num],
		sum(0) as [4G_TMUnknown_use_Num],
		sum(0) as [4G_TM_Den],

		-- Technology LTE:
		sum(0) as [4G_%CA_Num],
		sum(0) as [4G_%CA_Den],
		sum(0) as [4G_BPSK_Use_Num],
		sum(0) as [4G_QPSK_Use_Num],
		sum(0) as [4G_16QAM_Use_Num],
		sum(0) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],
		sum(0) as [4G_QPSK_Use_Den],
		sum(0) as [4G_16QAM_Use_Den],
		sum(0) as [4G_64QAM_Use_Den],

		sum(0) as [4G_stats_Den],
		sum(0) as [RSRP_Lin_Num],
		sum(0) as [RSRQ_Lin_Num],
		sum(0) as [SINR_Lin_Num],			
		sum(0) as [RSRP_Lin_Den],
		sum(0) as [RSRQ_Lin_Den],
		sum(0) as [SINR_Lin_Den],		

		--New KPIs:
		sum(0) as [MIMO_num],
		sum(0) as [RI1_num],
		sum(0) as [RI2_num],
		sum(0) as [MIMO_den],
		sum(0) as [RI1_den],
		sum(0) as [RI2_den],
		sum(0) as RBs_Allocated_Den,
		sum(0) as RBs_Allocated_Num,
		max(0) as RBs_Allocated_Max,

		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		sum(0) as [1_N],	sum(0) as [2_N],	sum(0) as [3_N],	sum(0) as [4_N],	sum(0) as [5_N],	sum(0) as [6_N],	sum(0) as [7_N],	sum(0) as [8_N],	sum(0) as [9_N],	sum(0) as [10_N],
		sum(0) as [11_N],	sum(0) as [12_N],	sum(0) as [13_N],	sum(0) as [14_N],	sum(0) as [15_N],	sum(0) as [16_N],	sum(0) as [17_N],	sum(0) as [18_N],	sum(0) as [19_N],	sum(0) as [20_N],
		sum(0) as [21_N],	sum(0) as [22_N],	sum(0) as [23_N],	sum(0) as [24_N],	sum(0) as [25_N],	sum(0) as [26_N],	sum(0) as [27_N],	sum(0) as [28_N],	sum(0) as [29_N],	sum(0) as [30_N],
		sum(0) as [31_N],	sum(0) as [32_N],	sum(0) as [33_N],	sum(0) as [34_N],	sum(0) as [35_N],	sum(0) as [36_N],	sum(0) as [37_N],	sum(0) as [38_N],	sum(0) as [39_N],	sum(0) as [40_N],
		sum(0) as [41_N],	sum(0) as [42_N],	sum(0) as [43_N],	sum(0) as [44_N],	sum(0) as [45_N],	sum(0) as [46_N],	sum(0) as [47_N],	sum(0) as [48_N],	sum(0) as [49_N],	sum(0) as [50_N],
		sum(0) as [51_N],	sum(0) as [52_N],	sum(0) as [53_N],	sum(0) as [54_N],	sum(0) as [55_N],	sum(0) as [56_N],	sum(0) as [57_N],	sum(0) as [58_N],	sum(0) as [59_N],	sum(0) as [60_N],
		sum(0) as [61_N],	sum(0) as [62_N],	sum(0) as [63_N],	sum(0) as [64_N],	sum(0) as [65_N],	sum(0) as [66_N]
	
		--t.Region_VF as Region_Road_VF, t.Region_OSP as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,sum(0) as [1]	,sum(0) as [2]	,sum(0) as [3]	,sum(0) as [4]	,sum(0) as [5]	,sum(0) as [6]	,sum(0) as [7]	,sum(0) as [8]	,sum(0) as [9]	,sum(0) as [10]
		,sum(0) as [11]	,sum(0) as [12]	,sum(0) as [13]	,sum(0) as [14]	,sum(0) as [15]	,sum(0) as [16]	,sum(0) as [17]	,sum(0) as [18]	,sum(0) as [19]	,sum(0) as [20]
		,sum(0) as [21]	,sum(0) as [22]	,sum(0) as [23]	,sum(0) as [24]	,sum(0) as [25]	,sum(0) as [26]	,sum(0) as [27]	,sum(0) as [28]	,sum(0) as [29]	,sum(0) as [30]
		,sum(0) as [31]	,sum(0) as [32]	,sum(0) as [33]	,sum(0) as [34]	,sum(0) as [35]	,sum(0) as [36]	,sum(0) as [37]	,sum(0) as [38]	,sum(0) as [39]	,sum(0) as [40]
		,sum(0) as [41],

		-- Parametros de configuracion:
		t.ASideDevice as ASideDevice, t.BSideDevice as BSideDevice, t.SWVersion as SWVersion, 
		max(t.Youtube_Version) as YTB_Version, max(t.url) as YTB_URL	

	from [aggrData4G_ROAD].dbo.[lcc_aggr_sp_MDD_Data_Youtube_HD] t
			left outer join [aggrData4G_ROAD].dbo.[lcc_aggr_sp_MDD_Data_Youtube_HD_CA_ONLY] YTB4G on (isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(YTB4G.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=YTB4G.mnc and t.Date_Reporting=YTB4G.Date_Reporting and t.entidad=YTB4G.entidad and t.Aggr_Type=YTB4G.Aggr_Type and t.Report_Type=YTB4G.Report_Type and t.meas_round=YTB4G.meas_round)		
		, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, t.mnc, t.meas_round, t.Date_Reporting, t.Week_Reporting, t.entidad, t.Report_Type,t.Aggr_Type,
		t.ASideDevice, t.BSideDevice, t.SWVersion--, t.Youtube_Version, t.url	--, t.Region_VF, t.Region_OSP

	-------------
	insert into [dbo].[_RI_Data_Ejecucion]
	select 'Fin 1.6. Insert Estadisticos 4G_CA_Only y 4G_CA_Only_Roads - DL/UL/WEB/YTB', getdate()


	print '1.7. Insert Estadisticos 3GOnly_3G, 3GOnly_4G y Road 3GOnly - DL/UL/WEB/YTB'

	insert into _RI_Data_e 
	select  
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment,t.mnc,t.meas_round,t.Date_Reporting as meas_date,t.Week_Reporting as meas_week, 
		'3GOnly_3G' as meas_Tech, 'CE_DL' as Test_type, 'Downlink' as Direction, t.entidad as vf_entity,t.Report_Type,t.Aggr_Type,
	
		-- General:
		sum(t.navegaciones) as Num_tests,
		sum(t.[fallos de acceso]) as Failed,
		sum(t.[fallos de descarga]) as Dropped,
		sum(t.[SessionTime]*t.navegaciones) as Session_time_Num,
		--sum(t.[tiempo de descarga]*t.count_throughput) as Session_time_Num,	-- SESSION_TIME de DL/UL, calculado como TRANSFER_TIME - se haría el cambio al calculo correcto en cambio de metodología para evitar salto de valor en QLIK.
		sum(t.count_throughput) as Throughput_Den,
		sum(t.navegaciones) as Session_time_Den,
		--sum(t.count_throughput) as Session_time_Den,
		sum(t.Throughput*t.count_throughput) as Throughput_Num,
		max(t.[Throughput Max]) as Throughput_Max,
		sum(t.Count_Throughput_3M) as Throughput_3M_Num,
		sum(t.Count_Throughput_1M) as Throughput_1M_Num,
		sum(0) as Throughput_128K_Num,
		sum(0) as Throughput_64K_Num,
		sum(0) as Throughput_384K_Num,
		--CAC 10/08/2017: thput de test sin error y con error
		sum(t.Count_Throughput_ALL) as Throughput_with_Error_Den,
		sum(t.Throughput_ALL*t.Count_Throughput_ALL) as Throughput_with_Error_Num,

		sum(0) as WEB_IP_ACCESS_TIME_NUM,			sum(0) as WEB_IP_ACCESS_TIME_DEN,	
		sum(0) as WEB_HTTP_TRANSFER_TIME_NUM,		sum(0) as WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_NUM,		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_NUM,		sum(0) as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,	sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(tel.[% GSM]*tel.[Count_%GSM]) as Radio_2G_use_Num,
		sum(tel.[% WCDMA]*tel.[Count_%WCDMA]) as Radio_3G_use_Num,
		sum(tel.[% LTE]*tel.[Count_%LTE]) as Radio_4G_use_Num,
		sum(t.navegaciones*(isnull(tel.[% GSM],0)+isnull(tel.[% WCDMA],0)+isnull(tel.[% LTE],0))) as Radio_use_Den,				-- Se usaria solo en NoCA_Device
		sum(tel.[Count_%GSM]) as Radio_2G_use_Den,
		sum(tel.[Count_%WCDMA]) as Radio_3G_use_Den,
		sum(tel.[Count_%LTE]) as Radio_4G_use_Den,

		sum(tel.[% U2100]*tel.[Count_%U2100]) as Radio_U2100_use_Num,
		sum(tel.[% U900]*tel.[Count_%U900]) as Radio_U900_use_Num,
		sum(tel.[% LTE2100]*tel.[Count_%LTE2100]) as Radio_LTE2100_use_Num,
		sum(tel.[% LTE2600]*tel.[Count_%LTE2600]) as Radio_LTE2600_use_Num,
		sum(tel.[% LTE1800]*tel.[Count_%LTE1800]) as Radio_LTE1800_use_Num,
		sum(tel.[% LTE800]*tel.[Count_%LTE800]) as Radio_LTE800_use_Num,
		sum(t.navegaciones*(isnull(tel.[% U2100],0)+isnull(tel.[% U900],0)+isnull(tel.[% LTE2100],0)+
							isnull(tel.[% LTE2600],0)+isnull(tel.[% LTE1800],0)+isnull(tel.[% LTE800],0))) as Radio_Band_Use_Den,	-- Se usaria solo en NoCA_Device
		sum(tel.[Count_%U2100]) as Radio_U2100_use_Den,
		sum(tel.[Count_%U900]) as Radio_U900_use_Den,
		sum(tel.[Count_%LTE2100]) as Radio_LTE2100_use_Den,
		sum(tel.[Count_%LTE2600]) as Radio_LTE2600_use_Den,
		sum(tel.[Count_%LTE1800]) as Radio_LTE1800_use_Den,
		sum(tel.[Count_%LTE800]) as Radio_LTE800_use_Den,

		-- Solo en DL:
		sum(tel.[% Dual Carrier]*tel.[Count_Dual_Carrier]) as [3G_DualCarrier_use_Num],	sum(tel.[Count_Dual_Carrier]) as [3G_DualCarrier_use_Den],
		sum(tel.[%DC_U2100]*tel.[Count_DC_U2100]) as [3G_DC_2100_use_Num],				sum(tel.[Count_DC_U2100]) as [3G_DC_2100_use_Den],
		sum(tel.[%DC_U900]*tel.[Count_DC_U900]) as [3G_DC_900_use_Num],					sum(tel.[Count_DC_U900]) as [3G_DC_900_use_Den],

		sum(tel.[Num Codes]*tel.[Count_Num_Codes]) as [3G_NumCodes_use_Num],
		sum(tel.[Count_Num_Codes]) as [3G_NumCodes_use_Den],

		sum(tel.[QPSK]*tel.[Count_QPSK]) as [3G_QPSK_use_Num],
		sum(tel.[16QAM]*tel.[Count_16QAM]) as [3G_16QAM_use_Num],
		sum(tel.[64QAM]*tel.[Count_64QAM]) as [3G_64QAM_use_Num],
		sum(tel.[Count_QPSK]) as [3G_QPSK_use_Den],
		sum(tel.[Count_16QAM]) as [3G_16QAM_use_Den],
		sum(tel.[Count_64QAM]) as [3G_64QAM_use_Den],

		-- Solo en UL:
		sum(0) as [3G_%_SF22_Num],		sum(0) as [3G_%_SF22andSF42_Num],		sum(0) as [3G_%_SF4_Num],		sum(0) as [3G_%_SF42_Num],
		sum(0) as [3G_%_SF22_Den],		sum(0) as [3G_%_SF22andSF42_Den],		sum(0) as [3G_%_SF4_Den],		sum(0) as [3G_%_SF42_Den],
		sum(0) as [3G_%_TTI2ms_Num],	sum(0) as [3G_%_TTI2ms_Den],

		-- Ambos:
		sum(tel.[RSCP_Lin]*tel.[Count_RSCP_Lin]) as [RSCP_Lin_Num],
		sum(tel.[EcI0_Lin]*tel.[Count_EcI0_Lin]) as [EcI0_Lin_Num],	
		sum(tel.[Count_RSCP_Lin]) as [RSCP_Lin_Den],	
		sum(tel.[Count_EcI0_Lin]) as [EcI0_Lin_Den],	

		-- Performance:
		-- Solo en DL:
		sum(pfl.CQI*(isnull(pfl.count_cqi_u2100,0)+isnull(pfl.count_cqi_u900,0))) [3G_CQI],
		sum((isnull(pfl.count_cqi_u2100,0)+isnull(pfl.count_cqi_u900,0))) as [3G_DataStats_Den],
		Sum(pfl.CQI_U900*isnull(pfl.count_cqi_u900,0)) as CQI_U900_Num,
		sum(isnull(pfl.count_cqi_u900,0)) as CQI_U900_Den,
		Sum(pfl.CQI_U2100*isnull(pfl.count_cqi_u2100,0)) as CQI_U2100_Num,
		sum(isnull(pfl.count_cqi_u2100,0)) as CQI_U2100_Den,

		-- Ambos:
		sum(pfl.[HSPA_PCT]*pfl.[Count_HSPA]) as [HSPA_PCT_Num],
		sum(pfl.[HSPA+_PCT]*pfl.[Count_HSPA+]) as [HSPA+_PCT_Num],
		sum(pfl.[HSPA+_DC_PCT]*pfl.[Count_HSPA+_DC]) as [HSPA+_DC_PCT_Num],
		sum(pfl.[Count_HSPA]) as [HSPA_PCT_Den],
		sum(pfl.[Count_HSPA+]) as [HSPA+_PCT_Den],
		sum(pfl.[Count_HSPA+_DC]) as [HSPA+_DC_PCT_Den],

		sum(pfl.[UL_Inter_Lin]*pfl.[Count_UL_Inter]) as [UL_Inter_Lin_Num],
		sum(pfl.[Count_UL_Inter]) as [UL_Inter_Lin_Den],	
		
		-- Performance LTE:
		sum(0) as CQI_4G_Num,		sum(0) as CQI_L800_Num,		sum(0) as CQI_L1800_Num,		sum(0) as CQI_L2100_Num,		sum(0) as CQI_L2600_Num,
		sum(0) as CQI_4G_Den,		sum(0) as CQI_L800_Den,		sum(0) as CQI_L1800_Den,		sum(0) as CQI_L2100_Den,		sum(0) as CQI_L2600_Den,

		sum(0) as LTE_5Mhz_SC_Use_Num,	sum(0) as LTE_10Mhz_SC_Use_Num,	sum(0) as LTE_15Mhz_SC_Use_Num,	sum(0) as LTE_20Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_CA_Use_Num,	sum(0) as LTE_20Mhz_CA_Use_Num,	sum(0) as LTE_25Mhz_CA_Use_Num,	sum(0) as LTE_30Mhz_CA_Use_Num,	sum(0) as LTE_35Mhz_CA_Use_Num,	sum(0) as LTE_40Mhz_CA_Use_Num,	
		sum(0) as LTE_5Mhz_SC_Use_Den,	sum(0) as LTE_10Mhz_SC_Use_Den,	sum(0) as LTE_15Mhz_SC_Use_Den,	sum(0) as LTE_20Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_CA_Use_Den,	sum(0) as LTE_20Mhz_CA_Use_Den,	sum(0) as LTE_25Mhz_CA_Use_Den,	sum(0) as LTE_30Mhz_CA_Use_Den,	sum(0) as LTE_35Mhz_CA_Use_Den,	sum(0) as LTE_40Mhz_CA_Use_Den,	

		sum(0) as LTE_BW_use_den,	sum(0) as [4G_RBs_use_Num],	sum(0) as [4G_RBs_use_Den],
	
		sum(0) as [4G_TM1_use_Num],			sum(0) as [4G_TM2_use_Num],			sum(0) as [4G_TM3_use_Num],		sum(0) as [4G_TM4_use_Num],		sum(0) as [4G_TM5_use_Num],
		sum(0) as [4G_TM6_use_Num],			sum(0) as [4G_TM7_use_Num],			sum(0) as [4G_TM8_use_Num],		sum(0) as [4G_TM9_use_Num],
		sum(0) as [4G_TMInvalid_use_Num],	sum(0) as [4G_TMUnknown_use_Num],
		sum(0) as [4G_TM_Den],

		-- Technology LTE:
		sum(0) as [4G_%CA_Num],			sum(0) as [4G_%CA_Den],	
		sum(0) as [4G_BPSK_Use_Num],	sum(0) as [4G_QPSK_Use_Num],	sum(0) as [4G_16QAM_Use_Num],    sum(0) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],	sum(0) as [4G_QPSK_Use_Den],	sum(0) as [4G_16QAM_Use_Den],    sum(0) as [4G_64QAM_Use_Den],

		sum(0) as [4G_stats_Den],

		sum(0) as [RSRP_Lin_Num],	sum(0) as [RSRQ_Lin_Num],	sum(0) as [SINR_Lin_Num],			
		sum(0) as [RSRP_Lin_Den],	sum(0) as [RSRQ_Lin_Den],	sum(0) as [SINR_Lin_Den],			

		--New KPIs:
		sum(0) as [MIMO_num],	sum(0) as [RI1_num],	sum(0) as [RI2_num],
		sum(0) as [MIMO_den],	sum(0) as [RI1_den],	sum(0) as [RI2_den],
		sum(0) as RBs_Allocated_Den,	sum(0) as RBs_Allocated_Num,	max(0) as RBs_Allocated_Max,

		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:
		sum(t.[ 0-0.75Mbps_N ]) as [1_N],		sum(t.[ 0.75-1.5Mbps_N ]) as [2_N],		sum(t.[ 1.5-2.25Mbps_N ]) as [3_N],
		sum(t.[ 2.25-3Mbps_N ]) as [4_N],		sum(t.[ 3-3.75Mbps_N ]) as [5_N],		sum(t.[ 3.75-4.5Mbps_N ]) as [6_N],
		sum(t.[ 4.5-5.25Mbps_N ]) as [7_N],		sum(t.[ 5.25-6Mbps_N ]) as [8_N],		sum(t.[ 6-6.75Mbps_N ]) as [9_N],
		sum(t.[ 6.75-7.5Mbps_N ]) as [10_N],	sum(t.[ 7.5-8.25Mbps_N ]) as [11_N],	sum(t.[ 8.25-9Mbps_N ]) as [12_N],
		sum(t.[ 9-9.75Mbps_N ]) as [13_N],		sum(t.[ 9.75-10.5Mbps_N ]) as [14_N],	sum(t.[ 10.5-11.25Mbps_N ]) as [15_N],
		sum(t.[ 11.25-12Mbps_N ]) as [16_N],	sum(t.[ 12-12.75Mbps_N ]) as [17_N],	sum(t.[ 12.75-13.5Mbps_N ]) as [18_N],
		sum(t.[ 13.5-14.25Mbps_N ]) as [19_N],	sum(t.[ 14.25-15Mbps_N ]) as [20_N],	sum(t.[ 15-15.75Mbps_N ]) as [21_N],
		sum(t.[ 15.75-16.5Mbps_N ]) as [22_N],	sum(t.[ 16.5-17.25Mbps_N ]) as [23_N],	sum(t.[ 17.25-18Mbps_N ]) as [24_N],
		sum(t.[ 18-18.75Mbps_N ]) as [25_N],	sum(t.[ 18.75-19.5Mbps_N ]) as [26_N],	sum(t.[ 19.5-20.25Mbps_N ]) as [27_N],
		sum(t.[ 20.25-21Mbps_N ]) as [28_N],	sum(t.[ 21-21.75Mbps_N ]) as [29_N],	sum(t.[ 21.75-22.5Mbps_N ]) as [30_N],
		sum(t.[ 22.5-23.25Mbps_N ]) as [31_N],	sum(t.[ 23.25-24Mbps_N ]) as [32_N],	sum(t.[ 24-24.75Mbps_N ]) as [33_N],
		sum(t.[ 24.75-25.5Mbps_N ]) as [34_N],	sum(t.[ 25.5-26.25Mbps_N ]) as [35_N],	sum(t.[ 26.25-27Mbps_N ]) as [36_N],
		sum(t.[ 27-27.75Mbps_N ]) as [37_N],	sum(t.[ 27.75-28.5Mbps_N ]) as [38_N],	sum(t.[ 28.5-29.25Mbps_N ]) as [39_N],
		sum(t.[ 29.25-30Mbps_N ]) as [40_N],	sum(t.[ 30-30.75Mbps_N ]) as [41_N],	sum(t.[ 30.75-31.5Mbps_N ]) as [42_N],
		sum(t.[ 31.5-32.25Mbps_N ]) as [43_N],	sum(t.[ 32.25-33Mbps_N ]) as [44_N],	sum(t.[ >33Mbps_N]) as [45_N],
		null as [46_N],	null as [47_N],	null as [48_N],	null as [49_N],	null as [50_N],	null as [51_N],	null as [52_N],	null as [53_N],	null as [54_N],	null as [55_N],
		null as [56_N],	null as [57_N],	null as [58_N],	null as [59_N],	null as [60_N],	null as [61_N],	null as [62_N],	null as [63_N],	null as [64_N],	null as [65_N],
		null as [66_N]
	
		--null as Region_Road_VF, null as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,sum(t.[ 0-1Mbps]) as [1]		,sum(t.[ 1-2Mbps]) as [2]		,sum(t.[ 2-3Mbps]) as [3]		,sum(t.[ 3-4Mbps]) as [4]		,sum(t.[ 4-5Mbps]) as [5]
		,sum(t.[ 5-6Mbps]) as [6]		,sum(t.[ 6-7Mbps]) as [7]		,sum(t.[ 7-8Mbps]) as [8]		,sum(t.[ 8-9Mbps]) as [9]		,sum(t.[ 9-10Mbps]) as [10]
		,sum(t.[ 10-11Mbps]) as [11]	,sum(t.[ 11-12Mbps]) as [12]	,sum(t.[ 12-13Mbps]) as [13]	,sum(t.[ 13-14Mbps]) as [14]	,sum(t.[ 14-15Mbps]) as [15]
		,sum(t.[ 15-16Mbps]) as [16]	,sum(t.[ 16-17Mbps]) as [17]	,sum(t.[ 17-18Mbps]) as [18]	,sum(t.[ 18-19Mbps]) as [19]	,sum(t.[ 19-20Mbps]) as [20]
		,sum(t.[ 20-21Mbps]) as [21]	,sum(t.[ 21-22Mbps]) as [22]	,sum(t.[ 22-23Mbps]) as [23]	,sum(t.[ 23-24Mbps]) as [24]	,sum(t.[ 24-25Mbps]) as [25]
		,sum(t.[ 25-26Mbps]) as [26]	,sum(t.[ 26-27Mbps]) as [27]	,sum(t.[ 27-28Mbps]) as [28]	,sum(t.[ 28-29Mbps]) as [29]	,sum(t.[ 29-30Mbps]) as [30]
		,sum(t.[ 30-31Mbps]) as [31]	,sum(t.[ 31-32Mbps]) as [32]	,sum(t.[ >32Mbps]) as [33]
		,null as [34]	,null as [35]	,null as [36]	,null as [37]	,null as [38]	,null as [39]	,null as [40]	,null as [41],

		-- Parametros de configuracion:
		pfl.ASideDevice as ASideDevice, pfl.BSideDevice as BSideDevice, pfl.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from	[AGGRData3G].dbo.[lcc_aggr_sp_MDD_Data_DL_Thput_CE] t
				left outer join [AGGRData3G].[dbo].[lcc_aggr_sp_MDD_Data_DL_Performance_CE_3G] pfl
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(pfl.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=pfl.mnc and t.Date_Reporting=pfl.Date_Reporting and t.entidad=pfl.entidad and t.Aggr_Type=pfl.Aggr_Type and t.Report_Type=pfl.Report_Type and t.meas_round=pfl.meas_round 
				left outer join [AGGRData3G].[dbo].[lcc_aggr_sp_MDD_Data_DL_Technology_CE_3G] tel
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(tel.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=tel.mnc and t.Date_Reporting=tel.Date_Reporting and t.entidad=tel.entidad and t.Aggr_Type=tel.Aggr_Type and t.Report_Type=tel.Report_Type and t.meas_round=tel.meas_round
			, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end,
		t.mnc,t.meas_round,t.Date_Reporting,t.Week_Reporting,t.entidad,t.Report_Type,t.Aggr_Type,
		pfl.ASideDevice, pfl.BSideDevice, pfl.SWVersion--, t.Region_VF, t.Region_OSP

	-------------	
	union all 
	select   
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment,t.mnc,t.meas_round,t.Date_Reporting as meas_date,t.Week_Reporting as meas_week, 
		'3GOnly_3G' as meas_Tech, 'NC_DL' as Test_type, 'Downlink' as Direction, t.entidad as vf_entity,t.Report_Type,t.Aggr_Type,
		
		-- General:
		sum(t.navegaciones) as Num_tests,
		sum(t.[fallos de acceso]) as Failed,
		sum(t.[fallos de descarga]) as Dropped,
		sum(0) as Session_time_Num,
		sum(t.count_throughput) as Throughput_Den,
		sum(0) as Session_time_Den,
		sum(t.Throughput*t.count_throughput) as Throughput_Num,
		max(t.[Throughput Max]) as Throughput_Max,
		sum(t.Count_Throughput_3M) as Throughput_3M_Num,
		sum(t.Count_Throughput_1M) as Throughput_1M_Num,
		sum(t.Count_Throughput_128k) as Throughput_128K_Num,
		sum(0) as Throughput_64K_Num,
		sum(t.Count_Throughput_384k) as Throughput_384K_Num,
		--CAC 10/08/2017: thput de test sin error y con error
		sum(t.Count_Throughput_ALL) as Throughput_with_Error_Den,
		sum(t.Throughput_ALL*t.Count_Throughput_ALL) as Throughput_with_Error_Num,

		sum(0) as WEB_IP_ACCESS_TIME_NUM,			sum(0) as WEB_IP_ACCESS_TIME_DEN,	
		sum(0) as WEB_HTTP_TRANSFER_TIME_NUM,		sum(0) as WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_NUM,		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_NUM,		sum(0) as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,	sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(tel.[% GSM]*tel.[Count_%GSM]) as Radio_2G_use_Num,
		sum(tel.[% WCDMA]*tel.[Count_%WCDMA]) as Radio_3G_use_Num,
		sum(tel.[% LTE]*tel.[Count_%LTE]) as Radio_4G_use_Num,
		sum(t.navegaciones*(isnull(tel.[% GSM],0)+isnull(tel.[% WCDMA],0)+isnull(tel.[% LTE],0))) as Radio_use_Den,				-- Se usaria solo en NoCA_Device
		sum(tel.[Count_%GSM]) as Radio_2G_use_Den,
		sum(tel.[Count_%WCDMA]) as Radio_3G_use_Den,
		sum(tel.[Count_%LTE]) as Radio_4G_use_Den,

		sum(tel.[% U2100]*tel.[Count_%U2100]) as Radio_U2100_use_Num,
		sum(tel.[% U900]*tel.[Count_%U900]) as Radio_U900_use_Num,
		sum(tel.[% LTE2100]*tel.[Count_%LTE2100]) as Radio_LTE2100_use_Num,
		sum(tel.[% LTE2600]*tel.[Count_%LTE2600]) as Radio_LTE2600_use_Num,
		sum(tel.[% LTE1800]*tel.[Count_%LTE1800]) as Radio_LTE1800_use_Num,
		sum(tel.[% LTE800]*tel.[Count_%LTE800]) as Radio_LTE800_use_Num,
		sum(t.navegaciones*(isnull(tel.[% U2100],0)+isnull(tel.[% U900],0)+isnull(tel.[% LTE2100],0)+
							isnull(tel.[% LTE2600],0)+isnull(tel.[% LTE1800],0)+isnull(tel.[% LTE800],0))) as Radio_Band_Use_Den,	-- Se usaria solo en NoCA_Device
		sum(tel.[Count_%U2100]) as Radio_U2100_use_Den,
		sum(tel.[Count_%U900]) as Radio_U900_use_Den,
		sum(tel.[Count_%LTE2100]) as Radio_LTE2100_use_Den,
		sum(tel.[Count_%LTE2600]) as Radio_LTE2600_use_Den,
		sum(tel.[Count_%LTE1800]) as Radio_LTE1800_use_Den,
		sum(tel.[Count_%LTE800]) as Radio_LTE800_use_Den,

		-- Solo en DL:
		sum(tel.[% Dual Carrier]*tel.[Count_Dual_Carrier]) as [3G_DualCarrier_use_Num],	sum(tel.[Count_Dual_Carrier]) as [3G_DualCarrier_use_Den],
		sum(tel.[%DC_U2100]*tel.[Count_DC_U2100]) as [3G_DC_2100_use_Num],				sum(tel.[Count_DC_U2100]) as [3G_DC_2100_use_Den],
		sum(tel.[%DC_U900]*tel.[Count_DC_U900]) as [3G_DC_2100_use_Num],					sum(tel.[Count_DC_U900]) as [3G_DC_2100_use_Den],

		sum(tel.[Num Codes]*tel.[Count_Num_Codes]) as [3G_NumCodes_use_Num],
		sum(tel.[Count_Num_Codes]) as [3G_NumCodes_use_Den],

		sum(tel.[QPSK]*tel.[Count_QPSK]) as [3G_QPSK_use_Num],
		sum(tel.[16QAM]*tel.[Count_16QAM]) as [3G_16QAM_use_Num],
		sum(tel.[64QAM]*tel.[Count_64QAM]) as [3G_64QAM_use_Num],
		sum(tel.[Count_QPSK]) as [3G_QPSK_use_Den],
		sum(tel.[Count_16QAM]) as [3G_16QAM_use_Den],
		sum(tel.[Count_64QAM]) as [3G_64QAM_use_Den],

		-- Solo en UL:
		sum(0) as [3G_%_SF22_Num],		sum(0) as [3G_%_SF22andSF42_Num],		sum(0) as [3G_%_SF4_Num],		sum(0) as [3G_%_SF42_Num],
		sum(0) as [3G_%_SF22_Den],		sum(0) as [3G_%_SF22andSF42_Den],		sum(0) as [3G_%_SF4_Den],		sum(0) as [3G_%_SF42_Den],
		sum(0) as [3G_%_TTI2ms_Num],	sum(0) as [3G_%_TTI2ms_Den],

		-- Ambos:
		sum(tel.[RSCP_Lin]*tel.[Count_RSCP_Lin]) as [RSCP_Lin_Num],
		sum(tel.[EcI0_Lin]*tel.[Count_EcI0_Lin]) as [EcI0_Lin_Num],	
		sum(tel.[Count_RSCP_Lin]) as [RSCP_Lin_Den],	
		sum(tel.[Count_EcI0_Lin]) as [EcI0_Lin_Den],	

		-- Performance:
		-- Solo en DL:
		sum(pfl.CQI*(isnull(pfl.count_cqi_u2100,0)+isnull(pfl.count_cqi_u900,0))) [3G_CQI],
		sum((isnull(pfl.count_cqi_u2100,0)+isnull(pfl.count_cqi_u900,0))) as [3G_DataStats_Den],
		Sum(pfl.CQI_U900*isnull(pfl.count_cqi_u900,0)) as CQI_U900_Num,
		sum(isnull(pfl.count_cqi_u900,0)) as CQI_U900_Den,
		Sum(pfl.CQI_U2100*isnull(pfl.count_cqi_u2100,0)) as CQI_U2100_Num,
		sum(isnull(pfl.count_cqi_u2100,0)) as CQI_U2100_Den,

		-- Ambos:
		sum(pfl.[HSPA_PCT]*pfl.[Count_HSPA]) as [HSPA_PCT_Num],
		sum(pfl.[HSPA+_PCT]*pfl.[Count_HSPA+]) as [HSPA+_PCT_Num],
		sum(pfl.[HSPA+_DC_PCT]*pfl.[Count_HSPA+_DC]) as [HSPA+_DC_PCT_Num],
		sum(pfl.[Count_HSPA]) as [HSPA_PCT_Den],
		sum(pfl.[Count_HSPA+]) as [HSPA+_PCT_Den],
		sum(pfl.[Count_HSPA+_DC]) as [HSPA+_DC_PCT_Den],

		sum(pfl.[UL_Inter_Lin]*pfl.[Count_UL_Inter]) as [UL_Inter_Lin_Num],
		sum(pfl.[Count_UL_Inter]) as [UL_Inter_Lin_Den],	
	
		-- Performance LTE:
		sum(0) as CQI_4G_Num,		sum(0) as CQI_L800_Num,		sum(0) as CQI_L1800_Num,		sum(0) as CQI_L2100_Num,		sum(0) as CQI_L2600_Num,
		sum(0) as CQI_4G_Den,		sum(0) as CQI_L800_Den,		sum(0) as CQI_L1800_Den,		sum(0) as CQI_L2100_Den,		sum(0) as CQI_L2600_Den,

		sum(0) as LTE_5Mhz_SC_Use_Num,	sum(0) as LTE_10Mhz_SC_Use_Num,	sum(0) as LTE_15Mhz_SC_Use_Num,	sum(0) as LTE_20Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_CA_Use_Num,	sum(0) as LTE_20Mhz_CA_Use_Num,	sum(0) as LTE_25Mhz_CA_Use_Num,	sum(0) as LTE_30Mhz_CA_Use_Num,	sum(0) as LTE_35Mhz_CA_Use_Num,	sum(0) as LTE_40Mhz_CA_Use_Num,	
		sum(0) as LTE_5Mhz_SC_Use_Den,	sum(0) as LTE_10Mhz_SC_Use_Den,	sum(0) as LTE_15Mhz_SC_Use_Den,	sum(0) as LTE_20Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_CA_Use_Den,	sum(0) as LTE_20Mhz_CA_Use_Den,	sum(0) as LTE_25Mhz_CA_Use_Den,	sum(0) as LTE_30Mhz_CA_Use_Den,	sum(0) as LTE_35Mhz_CA_Use_Den,	sum(0) as LTE_40Mhz_CA_Use_Den,	

		sum(0) as LTE_BW_use_den,	sum(0) as [4G_RBs_use_Num],	sum(0) as [4G_RBs_use_Den],
	
		sum(0) as [4G_TM1_use_Num],			sum(0) as [4G_TM2_use_Num],			sum(0) as [4G_TM3_use_Num],		sum(0) as [4G_TM4_use_Num],		sum(0) as [4G_TM5_use_Num],
		sum(0) as [4G_TM6_use_Num],			sum(0) as [4G_TM7_use_Num],			sum(0) as [4G_TM8_use_Num],		sum(0) as [4G_TM9_use_Num],
		sum(0) as [4G_TMInvalid_use_Num],	sum(0) as [4G_TMUnknown_use_Num],
		sum(0) as [4G_TM_Den],

		-- Technology LTE:
		sum(0) as [4G_%CA_Num],			sum(0) as [4G_%CA_Den],	
		sum(0) as [4G_BPSK_Use_Num],	sum(0) as [4G_QPSK_Use_Num],	sum(0) as [4G_16QAM_Use_Num],    sum(0) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],	sum(0) as [4G_QPSK_Use_Den],	sum(0) as [4G_16QAM_Use_Den],    sum(0) as [4G_64QAM_Use_Den],

		sum(0) as [4G_stats_Den],

		sum(0) as [RSRP_Lin_Num],	sum(0) as [RSRQ_Lin_Num],	sum(0) as [SINR_Lin_Num],			
		sum(0) as [RSRP_Lin_Den],	sum(0) as [RSRQ_Lin_Den],	sum(0) as [SINR_Lin_Den],			

		--New KPIs:
		sum(0) as [MIMO_num],	sum(0) as [RI1_num],	sum(0) as [RI2_num],
		sum(0) as [MIMO_den],	sum(0) as [RI1_den],	sum(0) as [RI2_den],
		sum(0) as RBs_Allocated_Den,	sum(0) as RBs_Allocated_Num,	max(0) as RBs_Allocated_Max,

		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		sum(t.[ 0-0.75Mbps_N ]) as [1_N],		sum(t.[ 0.75-1.5Mbps_N ]) as [2_N],		sum(t.[ 1.5-2.25Mbps_N ]) as [3_N],		sum(t.[ 2.25-3Mbps_N ]) as [4_N],		sum(t.[ 3-3.75Mbps_N ]) as [5_N],
		sum(t.[ 3.75-4.5Mbps_N ]) as [6_N],		sum(t.[ 4.5-5.25Mbps_N ]) as [7_N],		sum(t.[ 5.25-6Mbps_N ]) as [8_N],		sum(t.[ 6-6.75Mbps_N ]) as [9_N],		sum(t.[ 6.75-7.5Mbps_N ]) as [10_N],
		sum(t.[ 7.5-8.25Mbps_N ]) as [11_N],	sum(t.[ 8.25-9Mbps_N ]) as [12_N],		sum(t.[ 9-9.75Mbps_N ]) as [13_N],		sum(t.[ 9.75-10.5Mbps_N ]) as [14_N],	sum(t.[ 10.5-11.25Mbps_N ]) as [15_N],
		sum(t.[ 11.25-12Mbps_N ]) as [16_N],	sum(t.[ 12-12.75Mbps_N ]) as [17_N],	sum(t.[ 12.75-13.5Mbps_N ]) as [18_N],	sum(t.[ 13.5-14.25Mbps_N ]) as [19_N],	sum(t.[ 14.25-15Mbps_N ]) as [20_N],
		sum(t.[ 15-15.75Mbps_N ]) as [21_N],	sum(t.[ 15.75-16.5Mbps_N ]) as [22_N],	sum(t.[ 16.5-17.25Mbps_N ]) as [23_N],	sum(t.[ 17.25-18Mbps_N ]) as [24_N],	sum(t.[ 18-18.75Mbps_N ]) as [25_N],
		sum(t.[ 18.75-19.5Mbps_N ]) as [26_N],	sum(t.[ 19.5-20.25Mbps_N ]) as [27_N],	sum(t.[ 20.25-21Mbps_N ]) as [28_N],	sum(t.[ 21-21.75Mbps_N ]) as [29_N],	sum(t.[ 21.75-22.5Mbps_N ]) as [30_N],
		sum(t.[ 22.5-23.25Mbps_N ]) as [31_N],	sum(t.[ 23.25-24Mbps_N ]) as [32_N],	sum(t.[ 24-24.75Mbps_N ]) as [33_N],	sum(t.[ 24.75-25.5Mbps_N ]) as [34_N],	sum(t.[ 25.5-26.25Mbps_N ]) as [35_N],
		sum(t.[ 26.25-27Mbps_N ]) as [36_N],	sum(t.[ 27-27.75Mbps_N ]) as [37_N],	sum(t.[ 27.75-28.5Mbps_N ]) as [38_N],	sum(t.[ 28.5-29.25Mbps_N ]) as [39_N],	sum(t.[ 29.25-30Mbps_N ]) as [40_N],
		sum(t.[ 30-30.75Mbps_N ]) as [41_N],	sum(t.[ 30.75-31.5Mbps_N ]) as [42_N],	sum(t.[ 31.5-32.25Mbps_N ]) as [43_N],	sum(t.[ 32.25-33Mbps_N ]) as [44_N],	sum(t.[ >33Mbps_N ]) as [45_N],
		null as [46_N],	null as [47_N],	null as [48_N],	null as [49_N],	null as [50_N],	null as [51_N],	null as [52_N],	null as [53_N],	null as [54_N],	null as [55_N],	null as [56_N],	null as [57_N],	null as [58_N],	null as [59_N],	null as [60_N],
		null as [61_N],	null as [62_N],	null as [63_N],	null as [64_N],	null as [65_N],	null as [66_N]
	
		--null as Region_Road_VF, null as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,sum(t.[ 0-1Mbps]) as [1]		,sum(t.[ 1-2Mbps]) as [2]		,sum(t.[ 2-3Mbps]) as [3]		,sum(t.[ 3-4Mbps]) as [4]		,sum(t.[ 4-5Mbps]) as [5]
		,sum(t.[ 5-6Mbps]) as [6]		,sum(t.[ 6-7Mbps]) as [7]		,sum(t.[ 7-8Mbps]) as [8]		,sum(t.[ 8-9Mbps]) as [9]		,sum(t.[ 9-10Mbps]) as [10]
		,sum(t.[ 10-11Mbps]) as [11]	,sum(t.[ 11-12Mbps]) as [12]	,sum(t.[ 12-13Mbps]) as [13]	,sum(t.[ 13-14Mbps]) as [14]	,sum(t.[ 14-15Mbps]) as [15]
		,sum(t.[ 15-16Mbps]) as [16]	,sum(t.[ 16-17Mbps]) as [17]	,sum(t.[ 17-18Mbps]) as [18]	,sum(t.[ 18-19Mbps]) as [19]	,sum(t.[ 19-20Mbps]) as [20]
		,sum(t.[ 20-21Mbps]) as [21]	,sum(t.[ 21-22Mbps]) as [22]	,sum(t.[ 22-23Mbps]) as [23]	,sum(t.[ 23-24Mbps]) as [24]	,sum(t.[ 24-25Mbps]) as [25]
		,sum(t.[ 25-26Mbps]) as [26]	,sum(t.[ 26-27Mbps]) as [27]	,sum(t.[ 27-28Mbps]) as [28]	,sum(t.[ 28-29Mbps]) as [29]	,sum(t.[ 29-30Mbps]) as [30]
		,sum(t.[ 30-31Mbps]) as [31]	,sum(t.[ 31-32Mbps]) as [32]	,sum(t.[ >32Mbps]) as [33]	
		,null as [34]	,null as [35]	,null as [36]	,null as [37]	,null as [38]	,null as [39]	,null as [40]	,null as [41],

		-- Parametros de configuracion:
		pfl.ASideDevice as ASideDevice, pfl.BSideDevice as BSideDevice, pfl.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from	[AGGRData3G].dbo.[lcc_aggr_sp_MDD_Data_DL_Thput_NC] t
				left outer join [AGGRData3G].[dbo].[lcc_aggr_sp_MDD_Data_DL_Performance_NC_3G] pfl
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(pfl.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=pfl.mnc and t.Date_Reporting=pfl.Date_Reporting and t.entidad=pfl.entidad and t.Aggr_Type=pfl.Aggr_Type and t.Report_Type=pfl.Report_Type and t.meas_round=pfl.meas_round
				left outer join  [AGGRData3G].[dbo].[lcc_aggr_sp_MDD_Data_DL_Technology_NC_3G] tel
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(tel.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=tel.mnc and t.Date_Reporting=tel.Date_Reporting and t.entidad=tel.entidad and t.Aggr_Type=tel.Aggr_Type and t.Report_Type=tel.Report_Type and t.meas_round=tel.meas_round
				, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end,
		t.mnc,t.meas_round,t.Date_Reporting,t.Week_Reporting,t.entidad,t.Report_Type,t.Aggr_Type,
		pfl.ASideDevice, pfl.BSideDevice, pfl.SWVersion--, t.Region_VF, t.Region_OSP

	-------------
	union all 
	select   
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment,t.mnc,t.meas_round,t.Date_Reporting as meas_date,t.Week_Reporting as meas_week, 
		'3GOnly_3G' as meas_Tech, 'CE_UL' as Test_type, 'Uplink' as Direction, t.entidad as vf_entity,t.Report_Type,t.Aggr_Type,
	
		-- General:
		sum(t.Subidas) as Num_tests,
		sum(t.[fallos de acceso]) as Failed,
		sum(t.[fallos de descarga]) as Dropped,
		sum(t.[SessionTime]*t.Subidas) as Session_time_Num,
		--sum(t.[Tiempo de subida]*t.count_throughput) as Session_time_Num,	-- SESSION_TIME de DL/UL, calculado como TRANSFER_TIME - se haría el cambio al calculo correcto en cambio de metodología para evitar salto de valor en QLIK.
		sum(t.count_throughput) as Throughput_Den,
		sum(t.Subidas) as Session_time_Den,
		--sum(t.count_throughput) as Session_time_Den,
		sum(t.Throughput*t.count_throughput) as Throughput_Num,
		max(t.[Throughput Max]) as Throughput_Max,
		sum(0) as Throughput_3M_Num,
		sum(t.Count_Throughput_1M) as Throughput_1M_Num,
		sum(0) as Throughput_128K_Num,
		sum(0) as Throughput_64K_Num,
		sum(0) as Throughput_384K_Num,
		--CAC 10/08/2017: thput de test sin error y con error
		sum(t.Count_Throughput_ALL) as Throughput_with_Error_Den,
		sum(t.Throughput_ALL*t.Count_Throughput_ALL) as Throughput_with_Error_Num,

		sum(0) as WEB_IP_ACCESS_TIME_NUM,			sum(0) as WEB_IP_ACCESS_TIME_DEN,	
		sum(0) as WEB_HTTP_TRANSFER_TIME_NUM,		sum(0) as WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_NUM,		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_NUM,		sum(0) as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,	sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(tel.[% GSM]*tel.[Count_%GSM]) as Radio_2G_use_Num,
		sum(tel.[% WCDMA]*tel.[Count_%WCDMA]) as Radio_3G_use_Num,
		sum(tel.[% LTE]*tel.[Count_%LTE]) as Radio_4G_use_Num,
		sum(t.subidas*(isnull(tel.[% GSM],0)+isnull(tel.[% WCDMA],0)+isnull(tel.[% LTE],0))) as Radio_use_Den,					-- Se usaria solo en NoCA_Device
		sum(tel.[Count_%GSM]) as Radio_2G_use_Den,
		sum(tel.[Count_%WCDMA]) as Radio_3G_use_Den,
		sum(tel.[Count_%LTE]) as Radio_4G_use_Den,

		sum(tel.[% U2100]*tel.[Count_%U2100]) as Radio_U2100_use_Num,
		sum(tel.[% U900]*tel.[Count_%U900]) as Radio_U900_use_Num,
		sum(tel.[% LTE2100]*tel.[Count_%LTE2100]) as Radio_LTE2100_use_Num,
		sum(tel.[% LTE2600]*tel.[Count_%LTE2600]) as Radio_LTE2600_use_Num,
		sum(tel.[% LTE1800]*tel.[Count_%LTE1800]) as Radio_LTE1800_use_Num,
		sum(tel.[% LTE800]*tel.[Count_%LTE800]) as Radio_LTE800_use_Num,
		sum(t.subidas*(isnull(tel.[% U2100],0)+isnull(tel.[% U900],0)+isnull(tel.[% LTE2100],0)+
						isnull(tel.[% LTE2600],0)+isnull(tel.[% LTE1800],0)+isnull(tel.[% LTE800],0))) as Radio_Band_Use_Den,	-- Se usaria solo en NoCA_Device
		sum(tel.[Count_%U2100]) as Radio_U2100_use_Den,
		sum(tel.[Count_%U900]) as Radio_U900_use_Den,
		sum(tel.[Count_%LTE2100]) as Radio_LTE2100_use_Den,
		sum(tel.[Count_%LTE2600]) as Radio_LTE2600_use_Den,
		sum(tel.[Count_%LTE1800]) as Radio_LTE1800_use_Den,
		sum(tel.[Count_%LTE800]) as Radio_LTE800_use_Den,

		-- Solo en DL:
		sum(0) as [3G_DualCarrier_use_Num],		sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],			sum(0) as [3G_DC_2100_use_Den],
		sum(0) as [3G_DC_900_use_Num],			sum(0) as [3G_DC_900_use_Den],

		sum(0) as [3G_NumCodes_use_Num],	sum(0) as [3G_NumCodes_use_Den],
		sum(0) as [3G_QPSK_use_Num],		sum(0) as [3G_16QAM_use_Num],	sum(0) as [3G_64QAM_use_Num],
		sum(0) as [3G_QPSK_use_Den],		sum(0) as [3G_16QAM_use_Den],	sum(0) as [3G_64QAM_use_Den],

		-- Solo en UL:
		sum((tel.[% SF22]/100.0)*tel.[Count_%_SF22]) as [3G_%_SF22_Num],
		sum((tel.[% SF22andSF42]/100.0)*tel.[Count_%_SF22andSF42]) as [3G_%_SF22andSF42_Num],
		sum((tel.[% SF4]/100.0)*tel.[Count_%SF4]) as [3G_%_SF4_Num],
		sum((tel.[% SF42]/100.0)*tel.[Count_%_SF42]) as [3G_%_SF42_Num],
		sum(tel.[Count_%_SF22]) as [3G_%_SF22_Den],
		sum(tel.[Count_%_SF22andSF42]) as [3G_%_SF22andSF42_Den],
		sum(tel.[Count_%SF4]) as [3G_%_SF4_Den],
		sum(tel.[Count_%_SF42]) as [3G_%_SF42_Den],
		sum(tel.[% TTI 2ms_float]*tel.[Count_%TTI_2ms]) as [3G_%_TTI2ms_Num],
		sum(tel.[Count_%TTI_2ms]) as [3G_%_TTI2ms_Den],

		-- Ambos:
		sum(tel.[RSCP_Lin]*tel.[Count_RSCP_Lin]) as [RSCP_Lin_Num],
		sum(tel.[EcI0_Lin]*tel.[Count_EcI0_Lin]) as [EcI0_Lin_Num],	
		sum(tel.[Count_RSCP_Lin]) as [RSCP_Lin_Den],	
		sum(tel.[Count_EcI0_Lin]) as [EcI0_Lin_Den],	
			
		-- Performance:
		-- Solo DL:
		sum(0) as [3G_CQI],			sum(0) as [3G_DataStats_Den],
		Sum(0) as CQI_U900_Num,		sum(0) as CQI_U900_Den,
		Sum(0) as CQI_U2100_Num,	sum(0) as CQI_U2100_Den,

		-- Ambos:
		sum(pfl.[HSPA_PCT]*pfl.[Count_HSPA]) as [HSPA_PCT_Num],
		sum(pfl.[HSPA+_PCT]*pfl.[Count_HSPA+]) as [HSPA+_PCT_Num],
		sum(pfl.[HSPA+_DC_PCT]*pfl.[Count_HSPA+_DC]) as [HSPA+_DC_PCT_Num],
		sum(pfl.[Count_HSPA]) as [HSPA_PCT_Den],
		sum(pfl.[Count_HSPA+]) as [HSPA+_PCT_Den],
		sum(pfl.[Count_HSPA+_DC]) as [HSPA+_DC_PCT_Den],

		sum(pfl.[UL_Inter_Lin]*pfl.[Count_UL_Inter]) as [UL_Inter_Lin_Num],
		sum(pfl.[Count_UL_Inter]) as [UL_Inter_Lin_Den],	
	
		-- Performance LTE:
		sum(0) as CQI_4G_Num,		sum(0) as CQI_L800_Num,		sum(0) as CQI_L1800_Num,		sum(0) as CQI_L2100_Num,		sum(0) as CQI_L2600_Num,
		sum(0) as CQI_4G_Den,		sum(0) as CQI_L800_Den,		sum(0) as CQI_L1800_Den,		sum(0) as CQI_L2100_Den,		sum(0) as CQI_L2600_Den,

		sum(0) as LTE_5Mhz_SC_Use_Num,	sum(0) as LTE_10Mhz_SC_Use_Num,	sum(0) as LTE_15Mhz_SC_Use_Num,	sum(0) as LTE_20Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_CA_Use_Num,	sum(0) as LTE_20Mhz_CA_Use_Num,	sum(0) as LTE_25Mhz_CA_Use_Num,	sum(0) as LTE_30Mhz_CA_Use_Num,	sum(0) as LTE_35Mhz_CA_Use_Num,	sum(0) as LTE_40Mhz_CA_Use_Num,	
		sum(0) as LTE_5Mhz_SC_Use_Den,	sum(0) as LTE_10Mhz_SC_Use_Den,	sum(0) as LTE_15Mhz_SC_Use_Den,	sum(0) as LTE_20Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_CA_Use_Den,	sum(0) as LTE_20Mhz_CA_Use_Den,	sum(0) as LTE_25Mhz_CA_Use_Den,	sum(0) as LTE_30Mhz_CA_Use_Den,	sum(0) as LTE_35Mhz_CA_Use_Den,	sum(0) as LTE_40Mhz_CA_Use_Den,	

		sum(0) as LTE_BW_use_den,	sum(0) as [4G_RBs_use_Num],	sum(0) as [4G_RBs_use_Den],
	
		sum(0) as [4G_TM1_use_Num],			sum(0) as [4G_TM2_use_Num],			sum(0) as [4G_TM3_use_Num],		sum(0) as [4G_TM4_use_Num],		sum(0) as [4G_TM5_use_Num],
		sum(0) as [4G_TM6_use_Num],			sum(0) as [4G_TM7_use_Num],			sum(0) as [4G_TM8_use_Num],		sum(0) as [4G_TM9_use_Num],
		sum(0) as [4G_TMInvalid_use_Num],	sum(0) as [4G_TMUnknown_use_Num],
		sum(0) as [4G_TM_Den],

		-- Technology LTE:
		sum(0) as [4G_%CA_Num],			sum(0) as [4G_%CA_Den],	
		sum(0) as [4G_BPSK_Use_Num],	sum(0) as [4G_QPSK_Use_Num],	sum(0) as [4G_16QAM_Use_Num],    sum(0) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],	sum(0) as [4G_QPSK_Use_Den],	sum(0) as [4G_16QAM_Use_Den],    sum(0) as [4G_64QAM_Use_Den],

		sum(0) as [4G_stats_Den],

		sum(0) as [RSRP_Lin_Num],	sum(0) as [RSRQ_Lin_Num],	sum(0) as [SINR_Lin_Num],			
		sum(0) as [RSRP_Lin_Den],	sum(0) as [RSRQ_Lin_Den],	sum(0) as [SINR_Lin_Den],			

		--New KPIs:
		sum(0) as [MIMO_num],	sum(0) as [RI1_num],	sum(0) as [RI2_num],
		sum(0) as [MIMO_den],	sum(0) as [RI1_den],	sum(0) as [RI2_den],
		sum(0) as RBs_Allocated_Den,	sum(0) as RBs_Allocated_Num,	max(0) as RBs_Allocated_Max,

		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:
		sum(t.[ 0-0.25Mbps_N ]) as [1_N],		sum(t.[ 0.25-0.5Mbps_N ]) as [2_N],	sum(t.[ 0.5-0.75Mbps_N ]) as [3_N],	sum(t.[ 0.75-1Mbps_N ]) as [4_N],		sum(t.[ 1-1.25Mbps_N ]) as [5_N],
		sum(t.[ 1.25-1.5Mbps_N ]) as [6_N],	sum(t.[ 1.5-1.75Mbps_N ]) as [7_N],	sum(t.[ 1.75-2Mbps_N ]) as [8_N],		sum(t.[ 2-2.25Mbps_N ]) as [9_N],		sum(t.[ 2.25-2.5Mbps_N ]) as [10_N],
		sum(t.[ 2.5-2.75Mbps_N ]) as [11_N],	sum(t.[ 2.75-3Mbps_N ]) as [12_N],	sum(t.[ 3-3.25Mbps_N ]) as [13_N],	sum(t.[ 3.25-3.5Mbps_N ]) as [14_N],	sum(t.[ 3.5-3.75Mbps_N ]) as [15_N],
		sum(t.[ 3.75-4Mbps_N ]) as [16_N],	sum(t.[ 4-4.25Mbps_N ]) as [17_N],	sum(t.[ 4.25-4.5Mbps_N ]) as [18_N],	sum(t.[ 4.5-4.75Mbps_N ]) as [19_N],	sum(t.[ 4.75-5Mbps_N ]) as [20_N],
		sum(t.[ >5Mbps_N ]) as [21_N],
		null as [22_N],	null as [23_N],	null as [24_N],	null as [25_N],	null as [26_N],	null as [27_N],	null as [28_N],	null as [29_N],	null as [30_N],
		null as [31_N],	null as [32_N],	null as [33_N],	null as [34_N],	null as [35_N],	null as [36_N],	null as [37_N],	null as [38_N],	null as [39_N],
		null as [40_N],	null as [41_N],	null as [42_N],	null as [43_N],	null as [44_N],	null as [45_N],	null as [46_N],	null as [47_N],	null as [48_N],
		null as [49_N],	null as [50_N],	null as [51_N],	null as [52_N],	null as [53_N],	null as [54_N],	null as [55_N],	null as [56_N],	null as [57_N],
		null as [58_N],	null as [59_N],	null as [60_N],	null as [61_N],	null as [62_N],	null as [63_N],	null as [64_N],	null as [65_N],	null as [66_N]
	
		--null as Region_Road_VF, null as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,sum(t.[ 0-0.5Mbps]) as [1]		,sum(t.[ 0.5-1Mbps]) as [2]		,sum(t.[ 1-1.5Mbps]) as [3]		,sum(t.[ 1.5-2Mbps]) as [4]		,sum(t.[ 2-2.5Mbps]) as [5]
		,sum(t.[ 2.5-3Mbps]) as [6]		,sum(t.[ 3-3.5Mbps]) as [7]		,sum(t.[ 3.5-4Mbps]) as [8]		,sum(t.[ 4-4.5Mbps]) as [9]		,sum(t.[ 4.5-5Mbps]) as [10]
		,sum(t.[ >5Mbps]) as [11]
		,null as [12]	,null as [13]	,null as [14]	,null as [15]	,null as [16]	,null as [17]	,null as [18]	,null as [19]	,null as [20]
		,null as [21]	,null as [22]	,null as [23]	,null as [24]	,null as [25]	,null as [26]	,null as [27]	,null as [28]	,null as [29]
		,null as [30]	,null as [31]	,null as [32]	,null as [33]	,null as [34]	,null as [35]	,null as [36]	,null as [37]	,null as [38]
		,null as [39]	,null as [40]	,null as [41],

		-- Parametros de configuracion:
		pfl.ASideDevice as ASideDevice, pfl.BSideDevice as BSideDevice, pfl.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from	[AGGRData3G].dbo.[lcc_aggr_sp_MDD_Data_UL_Thput_CE] t
				left outer join [AGGRData3G].[dbo].[lcc_aggr_sp_MDD_Data_UL_Performance_CE_3G] pfl
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(pfl.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=pfl.mnc and t.Date_Reporting=pfl.Date_Reporting and t.entidad=pfl.entidad and t.Aggr_Type=pfl.Aggr_Type and t.Report_Type=pfl.Report_Type and t.meas_round=pfl.meas_round
				left outer join  [AGGRData3G].[dbo].[lcc_aggr_sp_MDD_Data_UL_Technology_CE_3G] tel
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(tel.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=tel.mnc and t.Date_Reporting=tel.Date_Reporting and t.entidad=tel.entidad and t.Aggr_Type=tel.Aggr_Type and t.Report_Type=tel.Report_Type and t.meas_round=tel.meas_round
				, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end,
		t.mnc,t.meas_round,t.Date_Reporting,t.Week_Reporting,t.entidad,t.Report_Type,t.Aggr_Type,
		pfl.ASideDevice, pfl.BSideDevice, pfl.SWVersion--, t.Region_VF, t.Region_OSP

	-------------
	union all 
	select   
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment,t.mnc,t.meas_round,t.Date_Reporting as meas_date,t.Week_Reporting as meas_week, 
		'3GOnly_3G' as meas_Tech, 'NC_UL' as Test_type, 'Uplink' as Direction, t.entidad as vf_entity,t.Report_Type,t.Aggr_Type,
	
		-- General:
		sum(t.Subidas) as Num_tests,
		sum(t.[fallos de acceso]) as Failed,
		sum(t.[fallos de descarga]) as Dropped,
		sum(0) as Session_time_Num,
		sum(t.count_throughput) as Throughput_Den,
		sum(0) as Session_time_Den,
		sum(t.Throughput*t.count_throughput) as Throughput_Num,
		max(t.[Throughput Max]) as Throughput_Max,
		sum(0) as Throughput_3M_Num,
		sum(t.Count_Throughput_1M) as Throughput_1M_Num,
		sum(0) as Throughput_128K_Num,
		sum(t.Count_Throughput_64k) as Throughput_64K_Num,
		sum(t.Count_Throughput_384k) as Throughput_384K_Num,
		--CAC 10/08/2017: thput de test sin error y con error
		sum(t.Count_Throughput_ALL) as Throughput_with_Error_Den,
		sum(t.Throughput_ALL*t.Count_Throughput_ALL) as Throughput_with_Error_Num,

		sum(0) as WEB_IP_ACCESS_TIME_NUM,			sum(0) as WEB_IP_ACCESS_TIME_DEN,	
		sum(0) as WEB_HTTP_TRANSFER_TIME_NUM,		sum(0) as WEB_HTTP_TRANSFER_TIME_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_NUM,		sum(0) as WEB_IP_ACCESS_TIME_HTTPS_DEN,
		sum(0) as WEB_TRANSFER_TIME_HTTPS_NUM,		sum(0) as WEB_TRANSFER_TIME_HTTPS_DEN,
		sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_NUM,	sum(0) as WEB_IP_ACCESS_TIME_PUBLIC_DEN,
		sum(0) as WEB_TRANSFER_TIME_PUBLIC_NUM,		sum(0) as WEB_TRANSFER_TIME_PUBLIC_DEN,

		-- Technology:
		sum(tel.[% GSM]*tel.[Count_%GSM]) as Radio_2G_use_Num,
		sum(tel.[% WCDMA]*tel.[Count_%WCDMA]) as Radio_3G_use_Num,
		sum(tel.[% LTE]*tel.[Count_%LTE]) as Radio_4G_use_Num,
		sum(t.Subidas*(isnull(tel.[% GSM],0)+isnull(tel.[% WCDMA],0)+isnull(tel.[% LTE],0))) as Radio_use_Den,						-- Se usaria solo en NoCA_Device
		sum(tel.[Count_%GSM]) as Radio_2G_use_Den,
		sum(tel.[Count_%WCDMA]) as Radio_3G_use_Den,
		sum(tel.[Count_%LTE]) as Radio_4G_use_Den,

		sum(tel.[% U2100]*tel.[Count_%U2100]) as Radio_U2100_use_Num,
		sum(tel.[% U900]*tel.[Count_%U900]) as Radio_U900_use_Num,
		sum(tel.[% LTE2100]*tel.[Count_%LTE2100]) as Radio_LTE2100_use_Num,
		sum(tel.[% LTE2600]*tel.[Count_%LTE2600]) as Radio_LTE2600_use_Num,
		sum(tel.[% LTE1800]*tel.[Count_%LTE1800]) as Radio_LTE1800_use_Num,
		sum(tel.[% LTE800]*tel.[Count_%LTE800]) as Radio_LTE800_use_Num,
		sum(t.Subidas*(isnull(tel.[% U2100],0)+isnull(tel.[% U900],0)+isnull(tel.[% LTE2100],0)+
						isnull(tel.[% LTE2600],0)+isnull(tel.[% LTE1800],0)+isnull(tel.[% LTE800],0))) as Radio_Band_Use_Den,		-- Se usaria solo en NoCA_Device
		sum(tel.[Count_%U2100]) as Radio_U2100_use_Den,
		sum(tel.[Count_%U900]) as Radio_U900_use_Den,
		sum(tel.[Count_%LTE2100]) as Radio_LTE2100_use_Den,
		sum(tel.[Count_%LTE2600]) as Radio_LTE2600_use_Den,
		sum(tel.[Count_%LTE1800]) as Radio_LTE1800_use_Den,
		sum(tel.[Count_%LTE800]) as Radio_LTE800_use_Den,

		-- Solo en DL:
		sum(0) as [3G_DualCarrier_use_Num],		sum(0) as [3G_DualCarrier_use_Den],
		sum(0) as [3G_DC_2100_use_Num],			sum(0) as [3G_DC_2100_use_Den],
		sum(0) as [3G_DC_900_use_Num],			sum(0) as [3G_DC_900_use_Den],

		sum(0) as [3G_NumCodes_use_Num],	sum(0) as [3G_NumCodes_use_Den],
		sum(0) as [3G_QPSK_use_Num],		sum(0) as [3G_16QAM_use_Num],	sum(0) as [3G_64QAM_use_Num],
		sum(0) as [3G_QPSK_use_Den],		sum(0) as [3G_16QAM_use_Den],	sum(0) as [3G_64QAM_use_Den],

		-- Solo en UL:
		sum((tel.[% SF22]/100.0)*tel.[Count_%_SF22]) as [3G_%_SF22_Num],
		sum((tel.[% SF22andSF42]/100.0)*tel.[Count_%_SF22andSF42]) as [3G_%_SF22andSF42_Num],
		sum((tel.[% SF4]/100.0)*tel.[Count_%SF4]) as [3G_%_SF4_Num],
		sum((tel.[% SF42]/100.0)*tel.[Count_%_SF42]) as [3G_%_SF42_Num],
		sum(tel.[Count_%_SF22]) as [3G_%_SF22_Den],
		sum(tel.[Count_%_SF22andSF42]) as [3G_%_SF22andSF42_Den],
		sum(tel.[Count_%SF4]) as [3G_%_SF4_Den],
		sum(tel.[Count_%_SF42]) as [3G_%_SF42_Den],
		sum(1.0*tel.[% TTI 2ms_float]*tel.[Count_%TTI_2ms]) as [3G_%_TTI2ms_Num],
		sum(tel.[Count_%TTI_2ms]) as [3G_%_TTI2ms_Den],	
	
		sum(tel.[RSCP_Lin]*tel.[Count_RSCP_Lin]) as [RSCP_Lin_Num],
		sum(tel.[EcI0_Lin]*tel.[Count_EcI0_Lin]) as [EcI0_Lin_Num],	
		sum(tel.[Count_RSCP_Lin]) as [RSCP_Lin_Den],	
		sum(tel.[Count_EcI0_Lin]) as [EcI0_Lin_Den],
			
		-- Performance:
		-- Solo DL:
		sum(0) as [3G_CQI],			sum(0) as [3G_DataStats_Den],
		Sum(0) as CQI_U900_Num,		sum(0) as CQI_U900_Den,
		Sum(0) as CQI_U2100_Num,	sum(0) as CQI_U2100_Den,

		-- Ambos:
		sum(pfl.[HSPA_PCT]*pfl.[Count_HSPA]) as [HSPA_PCT_Num],
		sum(pfl.[HSPA+_PCT]*pfl.[Count_HSPA+]) as [HSPA+_PCT_Num],
		sum(pfl.[HSPA+_DC_PCT]*pfl.[Count_HSPA+_DC]) as [HSPA+_DC_PCT_Num],
		sum(pfl.[Count_HSPA]) as [HSPA_PCT_Den],
		sum(pfl.[Count_HSPA+]) as [HSPA+_PCT_Den],
		sum(pfl.[Count_HSPA+_DC]) as [HSPA+_DC_PCT_Den],

		sum(pfl.[UL_Inter_Lin]*pfl.[Count_UL_Inter]) as [UL_Inter_Lin_Num],
		sum(pfl.[Count_UL_Inter]) as [UL_Inter_Lin_Den],	
	
		-- Performance LTE:
		sum(0) as CQI_4G_Num,		sum(0) as CQI_L800_Num,		sum(0) as CQI_L1800_Num,		sum(0) as CQI_L2100_Num,		sum(0) as CQI_L2600_Num,
		sum(0) as CQI_4G_Den,		sum(0) as CQI_L800_Den,		sum(0) as CQI_L1800_Den,		sum(0) as CQI_L2100_Den,		sum(0) as CQI_L2600_Den,

		sum(0) as LTE_5Mhz_SC_Use_Num,	sum(0) as LTE_10Mhz_SC_Use_Num,	sum(0) as LTE_15Mhz_SC_Use_Num,	sum(0) as LTE_20Mhz_SC_Use_Num,
		sum(0) as LTE_15Mhz_CA_Use_Num,	sum(0) as LTE_20Mhz_CA_Use_Num,	sum(0) as LTE_25Mhz_CA_Use_Num,	sum(0) as LTE_30Mhz_CA_Use_Num,	sum(0) as LTE_35Mhz_CA_Use_Num,	sum(0) as LTE_40Mhz_CA_Use_Num,	
		sum(0) as LTE_5Mhz_SC_Use_Den,	sum(0) as LTE_10Mhz_SC_Use_Den,	sum(0) as LTE_15Mhz_SC_Use_Den,	sum(0) as LTE_20Mhz_SC_Use_Den,
		sum(0) as LTE_15Mhz_CA_Use_Den,	sum(0) as LTE_20Mhz_CA_Use_Den,	sum(0) as LTE_25Mhz_CA_Use_Den,	sum(0) as LTE_30Mhz_CA_Use_Den,	sum(0) as LTE_35Mhz_CA_Use_Den,	sum(0) as LTE_40Mhz_CA_Use_Den,	

		sum(0) as LTE_BW_use_den,	sum(0) as [4G_RBs_use_Num],	sum(0) as [4G_RBs_use_Den],
	
		sum(0) as [4G_TM1_use_Num],			sum(0) as [4G_TM2_use_Num],			sum(0) as [4G_TM3_use_Num],		sum(0) as [4G_TM4_use_Num],		sum(0) as [4G_TM5_use_Num],
		sum(0) as [4G_TM6_use_Num],			sum(0) as [4G_TM7_use_Num],			sum(0) as [4G_TM8_use_Num],		sum(0) as [4G_TM9_use_Num],
		sum(0) as [4G_TMInvalid_use_Num],	sum(0) as [4G_TMUnknown_use_Num],
		sum(0) as [4G_TM_Den],

		-- Technology LTE:
		sum(0) as [4G_%CA_Num],			sum(0) as [4G_%CA_Den],	
		sum(0) as [4G_BPSK_Use_Num],	sum(0) as [4G_QPSK_Use_Num],	sum(0) as [4G_16QAM_Use_Num],    sum(0) as [4G_64QAM_Use_Num],
		sum(0) as [4G_BPSK_Use_Den],	sum(0) as [4G_QPSK_Use_Den],	sum(0) as [4G_16QAM_Use_Den],    sum(0) as [4G_64QAM_Use_Den],

		sum(0) as [4G_stats_Den],

		sum(0) as [RSRP_Lin_Num],	sum(0) as [RSRQ_Lin_Num],	sum(0) as [SINR_Lin_Num],			
		sum(0) as [RSRP_Lin_Den],	sum(0) as [RSRQ_Lin_Den],	sum(0) as [SINR_Lin_Den],			

		--New KPIs:
		sum(0) as [MIMO_num],	sum(0) as [RI1_num],	sum(0) as [RI2_num],
		sum(0) as [MIMO_den],	sum(0) as [RI1_den],	sum(0) as [RI2_den],
		sum(0) as RBs_Allocated_Den,	sum(0) as RBs_Allocated_Num,	max(0) as RBs_Allocated_Max,

		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		sum(t.[ 0-0.25Mbps_N ]) as [1_N],		sum(t.[ 0.25-0.5Mbps_N ]) as [2_N],	sum(t.[ 0.5-0.75Mbps_N ]) as [3_N],	sum(t.[ 0.75-1Mbps_N ]) as [4_N],		sum(t.[ 1-1.25Mbps_N ]) as [5_N],
		sum(t.[ 1.25-1.5Mbps_N ]) as [6_N],	sum(t.[ 1.5-1.75Mbps_N ]) as [7_N],	sum(t.[ 1.75-2Mbps_N ]) as [8_N],		sum(t.[ 2-2.25Mbps_N ]) as [9_N],		sum(t.[ 2.25-2.5Mbps_N ]) as [10_N],
		sum(t.[ 2.5-2.75Mbps_N ]) as [11_N],	sum(t.[ 2.75-3Mbps_N ]) as [12_N],	sum(t.[ 3-3.25Mbps_N ]) as [13_N],	sum(t.[ 3.25-3.5Mbps_N ]) as [14_N],	sum(t.[ 3.5-3.75Mbps_N ]) as [15_N],
		sum(t.[ 3.75-4Mbps_N ]) as [16_N],	sum(t.[ 4-4.25Mbps_N ]) as [17_N],	sum(t.[ 4.25-4.5Mbps_N ]) as [18_N],	sum(t.[ 4.5-4.75Mbps_N ]) as [19_N],	sum(t.[ 4.75-5Mbps_N ]) as [20_N],
		sum(t.[ >5Mbps_N ]) as [21_N],
		null as [22_N],	null as [23_N],	null as [24_N],	null as [25_N],	null as [26_N],	null as [27_N],	null as [28_N],	null as [29_N],	null as [30_N],	null as [31_N],	null as [32_N],	null as [33_N],	null as [34_N],	null as [35_N],
		null as [36_N],	null as [37_N],	null as [38_N],	null as [39_N],	null as [40_N],	null as [41_N],	null as [42_N],	null as [43_N],	null as [44_N],	null as [45_N],	null as [46_N],	null as [47_N],	null as [48_N],	null as [49_N],
		null as [50_N],	null as [51_N],	null as [52_N],	null as [53_N],	null as [54_N],	null as [55_N],	null as [56_N],	null as [57_N],	null as [58_N],	null as [59_N],	null as [60_N],	null as [61_N],	null as [62_N],	null as [63_N],
		null as [64_N],	null as [65_N],	null as [66_N]
	
		--null as Region_Road_VF, null as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,sum(t.[ 0-0.5Mbps]) as [1]		,sum(t.[ 0.5-1Mbps]) as [2]		,sum(t.[ 1-1.5Mbps]) as [3]		,sum(t.[ 1.5-2Mbps]) as [4]		,sum(t.[ 2-2.5Mbps]) as [5]
		,sum(t.[ 2.5-3Mbps]) as [6]		,sum(t.[ 3-3.5Mbps]) as [7]		,sum(t.[ 3.5-4Mbps]) as [8]		,sum(t.[ 4-4.5Mbps]) as [9]		,sum(t.[ 4.5-5Mbps]) as [10]
		,sum(t.[ >5Mbps]) as [11]
		,null as [12]	,null as [13]	,null as [14]	,null as [15]	,null as [16]	,null as [17]	,null as [18]	,null as [19]	,null as [20]
		,null as [21]	,null as [22]	,null as [23]	,null as [24]	,null as [25]	,null as [26]	,null as [27]	,null as [28]	,null as [29]
		,null as [30]	,null as [31]	,null as [32]	,null as [33]	,null as [34]	,null as [35]	,null as [36]	,null as [37]	,null as [38]
		,null as [39]	,null as [40]	,null as [41],

		-- Parametros de configuracion:
		pfl.ASideDevice as ASideDevice, pfl.BSideDevice as BSideDevice, pfl.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from	[AGGRData3G].dbo.[lcc_aggr_sp_MDD_Data_UL_Thput_NC] t
				left outer join [AGGRData3G].[dbo].[lcc_aggr_sp_MDD_Data_UL_Performance_NC_3G] pfl
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(pfl.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=pfl.mnc and t.Date_Reporting=pfl.Date_Reporting and t.entidad=pfl.entidad and t.Aggr_Type=pfl.Aggr_Type and t.Report_Type=pfl.Report_Type and t.meas_round=pfl.meas_round
				left outer join  [AGGRData3G].[dbo].[lcc_aggr_sp_MDD_Data_UL_Technology_NC_3G] tel
				on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(tel.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=tel.mnc and t.Date_Reporting=tel.Date_Reporting and t.entidad=tel.entidad and t.Aggr_Type=tel.Aggr_Type and t.Report_Type=tel.Report_Type and t.meas_round=tel.meas_round 
				, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end,t.mnc,t.meas_round,t.Date_Reporting,t.Week_Reporting,t.entidad,t.Report_Type,t.Aggr_Type,
		pfl.ASideDevice, pfl.BSideDevice, pfl.SWVersion--, t.Region_VF, t.Region_OSP



	-------------
	insert into [dbo].[_RI_Data_Ejecucion]
	select 'Fin 1.7. Insert Estadisticos 3GOnly_3G, 3GOnly_4G y Road 3GOnly - DL/UL/WEB/YTB', getdate()

			

	--------------------------------------------------------------------------
	-- (2) Latencia	----------------------------------------------------------
	--------------------------------------------------------------------------
	print '2. Insert Latencia: 3G, 4G, 4GOnly y 4G_CA_Only y ROADs' 	
	-------------
	insert into _RI_Data_l
	select  
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment,mnc,meas_round,Date_Reporting as meas_date,Week_Reporting as meas_week, 
		'3G' as meas_Tech, 'Ping' as Test_type, 'RTT' as Direction, entidad as vf_entity,t.Report_Type,t.Aggr_Type, 
		Methodology as Methodology,

		sum(rtt*pings) as Latency_Num,
		sum(pings) as Latency_Den,

		-- Ranges - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:
		sum(t.[ 0-5Ms]) as [1],			sum(t.[ 5-10Ms]) as [2],		sum(t.[ 10-15Ms]) as [3],		sum(t.[ 15-20Ms]) as [4],		sum(t.[ 20-25Ms]) as [5],
		sum(t.[ 25-30Ms]) as [6],		sum(t.[ 30-35Ms]) as [7],		sum(t.[ 35-40Ms]) as [8],		sum(t.[ 40-45Ms]) as [9],		sum(t.[ 45-50Ms]) as [10],
		sum(t.[ 50-55Ms]) as [11],		sum(t.[ 55-60Ms]) as [12],		sum(t.[ 60-65Ms]) as [13],		sum(t.[ 65-70Ms]) as [14],		sum(t.[ 70-75Ms]) as [15],
		sum(t.[ 75-80Ms]) as [16],		sum(t.[ 80-85Ms]) as [17],		sum(t.[ 85-90Ms]) as [18],		sum(t.[ 90-95Ms]) as [19],		sum(t.[ 95-100Ms]) as [20],
		sum(t.[ 100-105Ms]) as [21],	sum(t.[ 105-110Ms]) as [22],	sum(t.[ 110-115Ms]) as [23],	sum(t.[ 115-120Ms]) as [24],	sum(t.[ 120-125Ms]) as [25],
		sum(t.[ 125-130Ms]) as [26],	sum(t.[ 130-135Ms]) as [27],	sum(t.[ 135-140Ms]) as [28],	sum(t.[ 140-145Ms]) as [29],	sum(t.[ 145-150Ms]) as [30],
		sum(t.[ 150-155Ms]) as [31],	sum(t.[ 155-160Ms]) as [32],	sum(t.[ 160-165Ms]) as [33],	sum(t.[ 165-170Ms]) as [34],	sum(t.[ 170-175Ms]) as [35],
		sum(t.[ 175-180Ms]) as [36],	sum(t.[ 180-185Ms]) as [37],	sum(t.[ 185-190Ms]) as [38],	sum(t.[ 190-195Ms]) as [39],	sum(t.[ 195-200Ms]) as [40],
		sum(t.[ >200Ms]) as [41],

		--null as Region_Road_VF, null as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP,

		-- Parametros de configuracion:
		t.ASideDevice as ASideDevice, t.BSideDevice as BSideDevice, t.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL
	
	from [AGGRData3G].dbo.[lcc_aggr_sp_MDD_Data_Ping] t, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end,mnc,meas_round,Date_Reporting,Week_Reporting,t.entidad,t.Report_Type,t.Aggr_Type
		,Methodology, t.ASideDevice, t.BSideDevice, t.SWVersion--, t.Region_VF, t.Region_OSP

	-------------
	union all
	select  
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment,mnc,meas_round,Date_Reporting as meas_date,Week_Reporting as meas_week, 
		'4G' as meas_Tech, 'Ping' as Test_type, 'RTT' as Direction, entidad as vf_entity,t.Report_Type,t.Aggr_Type,
		Methodology as Methodology,

		sum(rtt*pings) as Latency_Num,
		sum(pings) as Latency_Den,

		-- Ranges - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:
		sum(t.[ 0-5Ms]) as [1],			sum(t.[ 5-10Ms]) as [2],		sum(t.[ 10-15Ms]) as [3],		sum(t.[ 15-20Ms]) as [4],		sum(t.[ 20-25Ms]) as [5],
		sum(t.[ 25-30Ms]) as [6],		sum(t.[ 30-35Ms]) as [7],		sum(t.[ 35-40Ms]) as [8],		sum(t.[ 40-45Ms]) as [9],		sum(t.[ 45-50Ms]) as [10],
		sum(t.[ 50-55Ms]) as [11],		sum(t.[ 55-60Ms]) as [12],		sum(t.[ 60-65Ms]) as [13],		sum(t.[ 65-70Ms]) as [14],		sum(t.[ 70-75Ms]) as [15],
		sum(t.[ 75-80Ms]) as [16],		sum(t.[ 80-85Ms]) as [17],		sum(t.[ 85-90Ms]) as [18],		sum(t.[ 90-95Ms]) as [19],		sum(t.[ 95-100Ms]) as [20],
		sum(t.[ 100-105Ms]) as [21],	sum(t.[ 105-110Ms]) as [22],	sum(t.[ 110-115Ms]) as [23],	sum(t.[ 115-120Ms]) as [24],	sum(t.[ 120-125Ms]) as [25],
		sum(t.[ 125-130Ms]) as [26],	sum(t.[ 130-135Ms]) as [27],	sum(t.[ 135-140Ms]) as [28],	sum(t.[ 140-145Ms]) as [29],	sum(t.[ 145-150Ms]) as [30],
		sum(t.[ 150-155Ms]) as [31],	sum(t.[ 155-160Ms]) as [32],	sum(t.[ 160-165Ms]) as [33],	sum(t.[ 165-170Ms]) as [34],	sum(t.[ 170-175Ms]) as [35],
		sum(t.[ 175-180Ms]) as [36],	sum(t.[ 180-185Ms]) as [37],	sum(t.[ 185-190Ms]) as [38],	sum(t.[ 190-195Ms]) as [39],	sum(t.[ 195-200Ms]) as [40],
		sum(t.[ >200Ms]) as [41],

		--null as Region_Road_VF, null as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP,

		-- Parametros de configuracion:
		t.ASideDevice as ASideDevice, t.BSideDevice as BSideDevice, t.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL
	
	from [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_Ping] t, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end,mnc,meas_round,Date_Reporting,Week_Reporting,t.entidad,t.Report_Type,t.Aggr_Type
		,Methodology, t.ASideDevice, t.BSideDevice, t.SWVersion--, t.Region_VF, t.Region_OSP

	union all
	select  
		p.codigo_ine, 'Roads' vf_environment,mnc,meas_round,Date_Reporting as meas_date,Week_Reporting as meas_week, 
		'Road 4G' as meas_Tech, 'Ping' as Test_type, 'RTT' as Direction, entidad as vf_entity,t.Report_Type,t.Aggr_Type,
		Methodology as Methodology,

		sum(rtt*pings) as Latency_Num,
		sum(pings) as Latency_Den,

		-- Ranges - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:
		sum(t.[ 0-5Ms]) as [1],			sum(t.[ 5-10Ms]) as [2],		sum(t.[ 10-15Ms]) as [3],		sum(t.[ 15-20Ms]) as [4],		sum(t.[ 20-25Ms]) as [5],
		sum(t.[ 25-30Ms]) as [6],		sum(t.[ 30-35Ms]) as [7],		sum(t.[ 35-40Ms]) as [8],		sum(t.[ 40-45Ms]) as [9],		sum(t.[ 45-50Ms]) as [10],
		sum(t.[ 50-55Ms]) as [11],		sum(t.[ 55-60Ms]) as [12],		sum(t.[ 60-65Ms]) as [13],		sum(t.[ 65-70Ms]) as [14],		sum(t.[ 70-75Ms]) as [15],
		sum(t.[ 75-80Ms]) as [16],		sum(t.[ 80-85Ms]) as [17],		sum(t.[ 85-90Ms]) as [18],		sum(t.[ 90-95Ms]) as [19],		sum(t.[ 95-100Ms]) as [20],
		sum(t.[ 100-105Ms]) as [21],	sum(t.[ 105-110Ms]) as [22],	sum(t.[ 110-115Ms]) as [23],	sum(t.[ 115-120Ms]) as [24],	sum(t.[ 120-125Ms]) as [25],
		sum(t.[ 125-130Ms]) as [26],	sum(t.[ 130-135Ms]) as [27],	sum(t.[ 135-140Ms]) as [28],	sum(t.[ 140-145Ms]) as [29],	sum(t.[ 145-150Ms]) as [30],
		sum(t.[ 150-155Ms]) as [31],	sum(t.[ 155-160Ms]) as [32],	sum(t.[ 160-165Ms]) as [33],	sum(t.[ 165-170Ms]) as [34],	sum(t.[ 170-175Ms]) as [35],
		sum(t.[ 175-180Ms]) as [36],	sum(t.[ 180-185Ms]) as [37],	sum(t.[ 185-190Ms]) as [38],	sum(t.[ 190-195Ms]) as [39],	sum(t.[ 195-200Ms]) as [40],
		sum(t.[ >200Ms]) as [41],

		--t.Region_VF as Region_Road_VF, t.Region_OSP as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP,

		-- Parametros de configuracion:
		t.ASideDevice as ASideDevice, t.BSideDevice as BSideDevice, t.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL
	
	from [aggrData4G_ROAD].dbo.[lcc_aggr_sp_MDD_Data_Ping] t, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, mnc, meas_round, Date_Reporting, Week_Reporting, t.entidad, t.Report_Type, t.Aggr_Type, Methodology,
		t.ASideDevice, t.BSideDevice, t.SWVersion--, t.Region_VF, t.Region_OSP

	-------------------------------------
	-- 2.1) Latencia	4GOnly	
	-------------------------------------
	insert into _RI_Data_l
	select  
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment, t.mnc, t.meas_round, t.Date_Reporting as meas_date, t.Week_Reporting as meas_week, 
		'4GOnly' as meas_Tech, 'Ping' as Test_type, 'RTT' as Direction, t.entidad as vf_entity, t.Report_Type, t.Aggr_Type, 
		t.Methodology as Methodology,
	
		sum(P4G.rtt*P4G.pings) as Latency_Num,
		sum(P4G.pings) as Latency_Den,

		-- Ranges - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:
		sum(isnull(P4G.[ 0-5Ms],0)) as [1],			sum(isnull(P4G.[ 5-10Ms],0)) as [2],		sum(isnull(P4G.[ 10-15Ms],0)) as [3],		sum(isnull(P4G.[ 15-20Ms],0)) as [4],		sum(isnull(P4G.[ 20-25Ms],0)) as [5],
		sum(isnull(P4G.[ 25-30Ms],0)) as [6],		sum(isnull(P4G.[ 30-35Ms],0)) as [7],		sum(isnull(P4G.[ 35-40Ms],0)) as [8],		sum(isnull(P4G.[ 40-45Ms],0)) as [9],		sum(isnull(P4G.[ 45-50Ms],0)) as [10],
		sum(isnull(P4G.[ 50-55Ms],0)) as [11],		sum(isnull(P4G.[ 55-60Ms],0)) as [12],		sum(isnull(P4G.[ 60-65Ms],0)) as [13],		sum(isnull(P4G.[ 65-70Ms],0)) as [14],		sum(isnull(P4G.[ 70-75Ms],0)) as [15],
		sum(isnull(P4G.[ 75-80Ms],0)) as [16],		sum(isnull(P4G.[ 80-85Ms],0)) as [17],		sum(isnull(P4G.[ 85-90Ms],0)) as [18],		sum(isnull(P4G.[ 90-95Ms],0)) as [19],		sum(isnull(P4G.[ 95-100Ms],0)) as [20],
		sum(isnull(P4G.[ 100-105Ms],0)) as [21],	sum(isnull(P4G.[ 105-110Ms],0)) as [22],	sum(isnull(P4G.[ 110-115Ms],0)) as [23],	sum(isnull(P4G.[ 115-120Ms],0)) as [24],	sum(isnull(P4G.[ 120-125Ms],0)) as [25],
		sum(isnull(P4G.[ 125-130Ms],0)) as [26],	sum(isnull(P4G.[ 130-135Ms],0)) as [27],	sum(isnull(P4G.[ 135-140Ms],0)) as [28],	sum(isnull(P4G.[ 140-145Ms],0)) as [29],	sum(isnull(P4G.[ 145-150Ms],0)) as [30],
		sum(isnull(P4G.[ 150-155Ms],0)) as [31],	sum(isnull(P4G.[ 155-160Ms],0)) as [32],	sum(isnull(P4G.[ 160-165Ms],0)) as [33],	sum(isnull(P4G.[ 165-170Ms],0)) as [34],	sum(isnull(P4G.[ 170-175Ms],0)) as [35],
		sum(isnull(P4G.[ 175-180Ms],0)) as [36],	sum(isnull(P4G.[ 180-185Ms],0)) as [37],	sum(isnull(P4G.[ 185-190Ms],0)) as [38],	sum(isnull(P4G.[ 190-195Ms],0)) as [39],	sum(isnull(P4G.[ 195-200Ms],0)) as [40],
		sum(isnull(P4G.[ >200Ms],0)) as [41],
	
		--null as Region_Road_VF, null as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP,

		-- Parametros de configuracion:
		t.ASideDevice as ASideDevice, t.BSideDevice as BSideDevice, t.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_Ping] t
		left outer join [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_Ping_4G] P4G on (isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(P4G.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=P4G.mnc and t.Date_Reporting=P4G.Date_Reporting and t.entidad=P4G.entidad and t.Aggr_Type=P4G.Aggr_Type and t.Report_Type=P4G.Report_Type and t.meas_round=P4G.meas_round)
		, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end,t.mnc,t.meas_round,t.Date_Reporting,t.Week_Reporting,t.entidad,t.Report_Type,t.Aggr_Type
		,t.Methodology, t.ASideDevice, t.BSideDevice, t.SWVersion--, t.Region_VF, t.Region_OSP		

	-------------
	union all
	select  
		p.codigo_ine, 'Roads' vf_environment, t.mnc, t.meas_round, t.Date_Reporting as meas_date, t.Week_Reporting as meas_week, 
		'Road 4GOnly' as meas_Tech, 'Ping' as Test_type, 'RTT' as Direction, t.entidad as vf_entity, t.Report_Type, t.Aggr_Type,
		t.Methodology as Methodology,
		
		sum(P4G.rtt*P4G.pings) as Latency_Num,
		sum(P4G.pings) as Latency_Den,

		-- Ranges - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:
		sum(isnull(P4G.[ 0-5Ms],0)) as [1],			sum(isnull(P4G.[ 5-10Ms],0)) as [2],		sum(isnull(P4G.[ 10-15Ms],0)) as [3],		sum(isnull(P4G.[ 15-20Ms],0)) as [4],		sum(isnull(P4G.[ 20-25Ms],0)) as [5],
		sum(isnull(P4G.[ 25-30Ms],0)) as [6],		sum(isnull(P4G.[ 30-35Ms],0)) as [7],		sum(isnull(P4G.[ 35-40Ms],0)) as [8],		sum(isnull(P4G.[ 40-45Ms],0)) as [9],		sum(isnull(P4G.[ 45-50Ms],0)) as [10],
		sum(isnull(P4G.[ 50-55Ms],0)) as [11],		sum(isnull(P4G.[ 55-60Ms],0)) as [12],		sum(isnull(P4G.[ 60-65Ms],0)) as [13],		sum(isnull(P4G.[ 65-70Ms],0)) as [14],		sum(isnull(P4G.[ 70-75Ms],0)) as [15],
		sum(isnull(P4G.[ 75-80Ms],0)) as [16],		sum(isnull(P4G.[ 80-85Ms],0)) as [17],		sum(isnull(P4G.[ 85-90Ms],0)) as [18],		sum(isnull(P4G.[ 90-95Ms],0)) as [19],		sum(isnull(P4G.[ 95-100Ms],0)) as [20],
		sum(isnull(P4G.[ 100-105Ms],0)) as [21],	sum(isnull(P4G.[ 105-110Ms],0)) as [22],	sum(isnull(P4G.[ 110-115Ms],0)) as [23],	sum(isnull(P4G.[ 115-120Ms],0)) as [24],	sum(isnull(P4G.[ 120-125Ms],0)) as [25],
		sum(isnull(P4G.[ 125-130Ms],0)) as [26],	sum(isnull(P4G.[ 130-135Ms],0)) as [27],	sum(isnull(P4G.[ 135-140Ms],0)) as [28],	sum(isnull(P4G.[ 140-145Ms],0)) as [29],	sum(isnull(P4G.[ 145-150Ms],0)) as [30],
		sum(isnull(P4G.[ 150-155Ms],0)) as [31],	sum(isnull(P4G.[ 155-160Ms],0)) as [32],	sum(isnull(P4G.[ 160-165Ms],0)) as [33],	sum(isnull(P4G.[ 165-170Ms],0)) as [34],	sum(isnull(P4G.[ 170-175Ms],0)) as [35],
		sum(isnull(P4G.[ 175-180Ms],0)) as [36],	sum(isnull(P4G.[ 180-185Ms],0)) as [37],	sum(isnull(P4G.[ 185-190Ms],0)) as [38],	sum(isnull(P4G.[ 190-195Ms],0)) as [39],	sum(isnull(P4G.[ 195-200Ms],0)) as [40],
		sum(isnull(P4G.[ >200Ms],0)) as [41],
	
		--t.Region_VF as Region_Road_VF, t.Region_OSP as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP,

		-- Parametros de configuracion:
		t.ASideDevice as ASideDevice, t.BSideDevice as BSideDevice, t.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from [aggrData4G_ROAD].dbo.[lcc_aggr_sp_MDD_Data_Ping] t
		left outer join [aggrData4G_ROAD].dbo.[lcc_aggr_sp_MDD_Data_Ping_4G] P4G on (isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(P4G.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=P4G.mnc and t.Date_Reporting=P4G.Date_Reporting and t.entidad=P4G.entidad and t.Aggr_Type=P4G.Aggr_Type and t.Report_Type=P4G.Report_Type and t.meas_round=P4G.meas_round)
		, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, t.mnc, t.meas_round, t.Date_Reporting, t.Week_Reporting, t.entidad, t.Report_Type, t.Aggr_Type, t.Methodology,
		t.ASideDevice, t.BSideDevice, t.SWVersion--, t.Region_VF, t.Region_OSP

	

	-------------------------------------
	-- 2.2) Latencia	4G_CA_Only
	-------------------------------------
	insert into _RI_Data_l
	select  
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment, t.mnc, t.meas_round, t.Date_Reporting as meas_date, t.Week_Reporting as meas_week, 
		'4G_CA_Only' as meas_Tech, 'Ping' as Test_type, 'RTT' as Direction, t.entidad as vf_entity, t.Report_Type, t.Aggr_Type,
		t.Methodology as Methodology,
	
		sum(PCA.rtt*PCA.pings) as Latency_Num,
		sum(PCA.pings) as Latency_Den,

		-- Ranges - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:
		sum(isnull(PCA.[ 0-5Ms],0)) as [1],			sum(isnull(PCA.[ 5-10Ms],0)) as [2],		sum(isnull(PCA.[ 10-15Ms],0)) as [3],		sum(isnull(PCA.[ 15-20Ms],0)) as [4],		sum(isnull(PCA.[ 20-25Ms],0)) as [5],
		sum(isnull(PCA.[ 25-30Ms],0)) as [6],		sum(isnull(PCA.[ 30-35Ms],0)) as [7],		sum(isnull(PCA.[ 35-40Ms],0)) as [8],		sum(isnull(PCA.[ 40-45Ms],0)) as [9],		sum(isnull(PCA.[ 45-50Ms],0)) as [10],
		sum(isnull(PCA.[ 50-55Ms],0)) as [11],		sum(isnull(PCA.[ 55-60Ms],0)) as [12],		sum(isnull(PCA.[ 60-65Ms],0)) as [13],		sum(isnull(PCA.[ 65-70Ms],0)) as [14],		sum(isnull(PCA.[ 70-75Ms],0)) as [15],
		sum(isnull(PCA.[ 75-80Ms],0)) as [16],		sum(isnull(PCA.[ 80-85Ms],0)) as [17],		sum(isnull(PCA.[ 85-90Ms],0)) as [18],		sum(isnull(PCA.[ 90-95Ms],0)) as [19],		sum(isnull(PCA.[ 95-100Ms],0)) as [20],
		sum(isnull(PCA.[ 100-105Ms],0)) as [21],	sum(isnull(PCA.[ 105-110Ms],0)) as [22],	sum(isnull(PCA.[ 110-115Ms],0)) as [23],	sum(isnull(PCA.[ 115-120Ms],0)) as [24],	sum(isnull(PCA.[ 120-125Ms],0)) as [25],
		sum(isnull(PCA.[ 125-130Ms],0)) as [26],	sum(isnull(PCA.[ 130-135Ms],0)) as [27],	sum(isnull(PCA.[ 135-140Ms],0)) as [28],	sum(isnull(PCA.[ 140-145Ms],0)) as [29],	sum(isnull(PCA.[ 145-150Ms],0)) as [30],
		sum(isnull(PCA.[ 150-155Ms],0)) as [31],	sum(isnull(PCA.[ 155-160Ms],0)) as [32],	sum(isnull(PCA.[ 160-165Ms],0)) as [33],	sum(isnull(PCA.[ 165-170Ms],0)) as [34],	sum(isnull(PCA.[ 170-175Ms],0)) as [35],
		sum(isnull(PCA.[ 175-180Ms],0)) as [36],	sum(isnull(PCA.[ 180-185Ms],0)) as [37],	sum(isnull(PCA.[ 185-190Ms],0)) as [38],	sum(isnull(PCA.[ 190-195Ms],0)) as [39],	sum(isnull(PCA.[ 195-200Ms],0)) as [40],
		sum(isnull(PCA.[ >200Ms],0)) as [41],
	
		--null as Region_Road_VF, null as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP,

		-- Parametros de configuracion:
		t.ASideDevice as ASideDevice, t.BSideDevice as BSideDevice, t.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_Ping] t
		left outer join [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_Ping_CA_ONLY] PCA on (isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(PCA.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=PCA.mnc and t.Date_Reporting=PCA.Date_Reporting and t.entidad=PCA.entidad and t.Aggr_Type=PCA.Aggr_Type and t.Report_Type=PCA.Report_Type and t.meas_round=PCA.meas_round)
		, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end, t.mnc, t.meas_round, t.Date_Reporting, t.Week_Reporting, t.entidad, t.Report_Type, t.Aggr_Type
		,t.Methodology, t.ASideDevice, t.BSideDevice, t.SWVersion--, t.Region_VF, t.Region_OSP

	-------------------
	union all
	select  
		p.codigo_ine, 'Roads' vf_environment, t.mnc, t.meas_round, t.Date_Reporting as meas_date, t.Week_Reporting as meas_week, 
		'Road 4G_CA_Only' as meas_Tech, 'Ping' as Test_type, 'RTT' as Direction, t.entidad as vf_entity, t.Report_Type, t.Aggr_Type,
		t.Methodology as Methodology,
	
		sum(PCA.rtt*PCA.pings) as Latency_Num,
		sum(PCA.pings) as Latency_Den,

		-- Ranges - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:
		sum(isnull(PCA.[ 0-5Ms],0)) as [1],			sum(isnull(PCA.[ 5-10Ms],0)) as [2],		sum(isnull(PCA.[ 10-15Ms],0)) as [3],		sum(isnull(PCA.[ 15-20Ms],0)) as [4],		sum(isnull(PCA.[ 20-25Ms],0)) as [5],
		sum(isnull(PCA.[ 25-30Ms],0)) as [6],		sum(isnull(PCA.[ 30-35Ms],0)) as [7],		sum(isnull(PCA.[ 35-40Ms],0)) as [8],		sum(isnull(PCA.[ 40-45Ms],0)) as [9],		sum(isnull(PCA.[ 45-50Ms],0)) as [10],
		sum(isnull(PCA.[ 50-55Ms],0)) as [11],		sum(isnull(PCA.[ 55-60Ms],0)) as [12],		sum(isnull(PCA.[ 60-65Ms],0)) as [13],		sum(isnull(PCA.[ 65-70Ms],0)) as [14],		sum(isnull(PCA.[ 70-75Ms],0)) as [15],
		sum(isnull(PCA.[ 75-80Ms],0)) as [16],		sum(isnull(PCA.[ 80-85Ms],0)) as [17],		sum(isnull(PCA.[ 85-90Ms],0)) as [18],		sum(isnull(PCA.[ 90-95Ms],0)) as [19],		sum(isnull(PCA.[ 95-100Ms],0)) as [20],
		sum(isnull(PCA.[ 100-105Ms],0)) as [21],	sum(isnull(PCA.[ 105-110Ms],0)) as [22],	sum(isnull(PCA.[ 110-115Ms],0)) as [23],	sum(isnull(PCA.[ 115-120Ms],0)) as [24],	sum(isnull(PCA.[ 120-125Ms],0)) as [25],
		sum(isnull(PCA.[ 125-130Ms],0)) as [26],	sum(isnull(PCA.[ 130-135Ms],0)) as [27],	sum(isnull(PCA.[ 135-140Ms],0)) as [28],	sum(isnull(PCA.[ 140-145Ms],0)) as [29],	sum(isnull(PCA.[ 145-150Ms],0)) as [30],
		sum(isnull(PCA.[ 150-155Ms],0)) as [31],	sum(isnull(PCA.[ 155-160Ms],0)) as [32],	sum(isnull(PCA.[ 160-165Ms],0)) as [33],	sum(isnull(PCA.[ 165-170Ms],0)) as [34],	sum(isnull(PCA.[ 170-175Ms],0)) as [35],
		sum(isnull(PCA.[ 175-180Ms],0)) as [36],	sum(isnull(PCA.[ 180-185Ms],0)) as [37],	sum(isnull(PCA.[ 185-190Ms],0)) as [38],	sum(isnull(PCA.[ 190-195Ms],0)) as [39],	sum(isnull(PCA.[ 195-200Ms],0)) as [40],
		sum(isnull(PCA.[ >200Ms],0)) as [41],
	
		--t.Region_VF as Region_Road_VF, t.Region_OSP as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP,

		-- Parametros de configuracion:
		t.ASideDevice as ASideDevice, t.BSideDevice as BSideDevice, t.SWVersion as SWVersion, 
		null as YTB_Version, null as YTB_URL

	from [aggrData4G_ROAD].dbo.[lcc_aggr_sp_MDD_Data_Ping] t
		left outer join [aggrData4G_ROAD].dbo.[lcc_aggr_sp_MDD_Data_Ping_CA_ONLY] PCA on (isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(PCA.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=PCA.mnc and t.Date_Reporting=PCA.Date_Reporting and t.entidad=PCA.entidad and t.Aggr_Type=PCA.Aggr_Type and t.Report_Type=PCA.Report_Type and t.meas_round=PCA.meas_round)
		, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, t.mnc, t.meas_round, t.Date_Reporting, t.Week_Reporting, t.entidad, t.Report_Type, t.Aggr_Type, t.Methodology--, t.Region_VF, t.Region_OSP
		, t.ASideDevice, t.BSideDevice, t.SWVersion

	-------------
	insert into [dbo].[_RI_Data_Ejecucion]
	select 'Fin 2. Insert Latencia: 3G, 4G, 4GOnly y 4G_CA_Only y ROADs', getdate()


	--------------------------------------------------------------------------
	-- (3) Video Streaming SD ------------------------------------------------
	--------------------------------------------------------------------------	
	print '3. Insert Video Streaming SD: 3G, 4G, 4GOnly y 4G_CA_Only y ROADs' 	
	-------------
	insert into _RI_Data_y
	select  
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment,mnc,meas_round,Date_Reporting as meas_date,Week_Reporting as meas_week, 
		'3G' as meas_Tech, 'Youtube SD' as Test_type, 'Downlink' as Direction, entidad as vf_entity,t.Report_Type,t.Aggr_Type,
	
		sum(t.[Time To First Image]*(t.Reproducciones-t.Fails)) as Avg_Video_StarTime_Num,
		sum((t.Reproducciones-t.Fails)) as avg_Video_startTime_Den,
		sum(t.ReproduccionesSinInt) as Reproductions_WO_Interruptions,
		sum(t.Reproducciones) as Reproductions_WO_Interruptions_Den,
		sum(0) as B4,
		sum(0) as [ReproduccionesHD],
		sum(0) as [Successful video download],
		sum(0) as [Reproducciones],
		sum(0) as YTB_video_resolution_num,
		sum(0) as YTB_video_resolution_den,
		sum(0) as YTB_video_mos_num,
		sum(0) as YTB_video_mos_den,
		null as YTB_URL,
		sum(0) as [YTB_1st_Resolution_Num],
		sum(0) as [YTB_1st_Resolution_Den],
		sum(0) as [YTB_2nd_Resolution_Num],
		sum(0) as [YTB_2nd_Resolution_Den],
		sum(0) as [YTB_FirstChangeFromInit_Num],
		sum(0) as [YTB_FirstChangeFromInit_Den],
		sum(0) as [YTB_initialResolution_Num],
		sum(0) as [YTB_initialResolution_Den],
		sum(0) as [YTB_finalResolution_Num],
		sum(0) as [YTB_finalResolution_Den],
		sum(0) as [YTB_video_resolution_144p_Num],
		sum(0) as [YTB_video_resolution_144p_Den],
		sum(0) as [YTB_video_mos_144p_Num],
		sum(0) as [YTB_video_mos_144p_Den],
		sum(0) as [YTB_video_resolution_%144p_Num],
		sum(0) as [YTB_video_resolution_%144p_Den],
		sum(0) as [YTB_video_resolution_240p_Num],
		sum(0) as [YTB_video_resolution_240p_Den],
		sum(0) as [YTB_video_mos_240p_Num],
		sum(0) as [YTB_video_mos_240p_Den],
		sum(0) as [YTB_video_resolution_%240p_Num],
		sum(0) as [YTB_video_resolution_%240p_Den],
		sum(0) as [YTB_video_resolution_360p_Num],
		sum(0) as [YTB_video_resolution_360p_Den],
		sum(0) as [YTB_video_mos_360p_Num],
		sum(0) as [YTB_video_mos_360p_Den],
		sum(0) as [YTB_video_resolution_%360p_Num],
		sum(0) as [YTB_video_resolution_%360p_Den],
		sum(0) as [YTB_video_resolution_480p_Num],
		sum(0) as [YTB_video_resolution_480p_Den],
		sum(0) as [YTB_video_mos_480p_Num],
		sum(0) as [YTB_video_mos_480p_Den],
		sum(0) as [YTB_video_resolution_%480p_Num],
		sum(0) as [YTB_video_resolution_%480p_Den],
		sum(0) as [YTB_video_resolution_720p_Num],
		sum(0) as [YTB_video_resolution_720p_Den],
		sum(0) as [YTB_video_mos_720p_Num],
		sum(0) as [YTB_video_mos_720p_Den],
		sum(0) as [YTB_video_resolution_%720p_Num],
		sum(0) as [YTB_video_resolution_%720p_Den],
		sum(0) as [YTB_video_resolution_1080p_Num],
		sum(0) as [YTB_video_resolution_1080p_Den],
		sum(0) as [YTB_video_mos_1080p_Num],
		sum(0) as [YTB_video_mos_1080p_Den],
		sum(0) as [YTB_video_resolution_%1080p_Num],
		sum(0) as [YTB_video_resolution_%1080p_Den],

		sum(0) as Avg_Video_StarTime_Num_Video1, sum(0) as avg_Video_startTime_Den_Video1, sum(0) as Reproductions_WO_Interruptions_Video1, sum(0) as Reproductions_WO_Interruptions_Den_Video1,
		sum(0) as B4_Video1, sum(0) as [ReproduccionesHD_Video1], sum(0) as [Successful video download_Video1], sum(0) as [Reproducciones_Video1], sum(0) as [Fails_Video1], sum(0) as YTB_video_resolution_num_Video1,
		sum(0) as YTB_video_resolution_den_Video1, sum(0) as YTB_video_mos_num_Video1, sum(0) as YTB_video_mos_den_Video1, null   as [YTB_url_Video1], sum(0) as [YTB_1st_Resolution_Num_Video1],
		sum(0) as [YTB_1st_Resolution_Den_Video1], sum(0) as [YTB_2nd_Resolution_Num_Video1], sum(0) as [YTB_2nd_Resolution_Den_Video1], sum(0) as [YTB_FirstChangeFromInit_Num_Video1],
		sum(0) as [YTB_FirstChangeFromInit_Den_Video1], sum(0) as [YTB_initialResolution_Num_Video1], sum(0) as [YTB_initialResolution_Den_Video1], sum(0) as [YTB_finalResolution_Num_Video1],
		sum(0) as [YTB_finalResolution_Den_Video1], sum(0) as [YTB_video_resolution_144p_Num_Video1], sum(0) as [YTB_video_resolution_144p_Den_Video1], sum(0) as [YTB_video_mos_144p_Num_Video1],
		sum(0) as [YTB_video_mos_144p_Den_Video1],sum(0) as [YTB_video_resolution_%144p_Num_Video1],sum(0) as [YTB_video_resolution_%144p_Den_Video1],sum(0) as [YTB_video_resolution_240p_Num_Video1],
		sum(0) as [YTB_video_resolution_240p_Den_Video1], sum(0) as [YTB_video_mos_240p_Num_Video1], sum(0) as [YTB_video_mos_240p_Den_Video1], sum(0) as [YTB_video_resolution_%240p_Num_Video1],
		sum(0) as [YTB_video_resolution_%240p_Den_Video1], sum(0) as [YTB_video_resolution_360p_Num_Video1], sum(0) as [YTB_video_resolution_360p_Den_Video1], sum(0) as [YTB_video_mos_360p_Num_Video1],
		sum(0) as [YTB_video_mos_360p_Den_Video1], sum(0) as [YTB_video_resolution_%360p_Num_Video1], sum(0) as [YTB_video_resolution_%360p_Den_Video1], sum(0) as [YTB_video_resolution_480p_Num_Video1],
		sum(0) as [YTB_video_resolution_480p_Den_Video1], sum(0) as [YTB_video_mos_480p_Num_Video1], sum(0) as [YTB_video_mos_480p_Den_Video1], sum(0) as [YTB_video_resolution_%480p_Num_Video1],
		sum(0) as [YTB_video_resolution_%480p_Den_Video1], sum(0) as [YTB_video_resolution_720p_Num_Video1], sum(0) as [YTB_video_resolution_720p_Den_Video1], sum(0) as [YTB_video_mos_720p_Num_Video1],
		sum(0) as [YTB_video_mos_720p_Den_Video1], sum(0) as [YTB_video_resolution_%720p_Num_Video1], sum(0) as [YTB_video_resolution_%720p_Den_Video1],
		sum(0) as [YTB_video_resolution_1080p_Num_Video1], sum(0) as [YTB_video_resolution_1080p_Den_Video1], sum(0) as [YTB_video_mos_1080p_Num_Video1], sum(0) as [YTB_video_mos_1080p_Den_Video1],
		sum(0) as [YTB_video_resolution_%1080p_Num_Video1], sum(0) as [YTB_video_resolution_%1080p_Den_Video1],

		sum(0) as Avg_Video_StarTime_Num_Video2, sum(0) as avg_Video_startTime_Den_Video2, sum(0) as Reproductions_WO_Interruptions_Video2, sum(0) as Reproductions_WO_Interruptions_Den_Video2,
		sum(0) as B4_Video2, sum(0) as [ReproduccionesHD_Video2], sum(0) as [Successful video download_Video2], sum(0) as [Reproducciones_Video2], sum(0) as [Fails_Video2],sum(0) as YTB_video_resolution_num_Video2,
		sum(0) as YTB_video_resolution_den_Video2, sum(0) as YTB_video_mos_num_Video2, sum(0) as YTB_video_mos_den_Video2, null   as [YTB_url_Video2], sum(0) as [YTB_1st_Resolution_Num_Video2],
		sum(0) as [YTB_1st_Resolution_Den_Video2], sum(0) as [YTB_2nd_Resolution_Num_Video2], sum(0) as [YTB_2nd_Resolution_Den_Video2], sum(0) as [YTB_FirstChangeFromInit_Num_Video2],
		sum(0) as [YTB_FirstChangeFromInit_Den_Video2], sum(0) as [YTB_initialResolution_Num_Video2], sum(0) as [YTB_initialResolution_Den_Video2], sum(0) as [YTB_finalResolution_Num_Video2],
		sum(0) as [YTB_finalResolution_Den_Video2], sum(0) as [YTB_video_resolution_144p_Num_Video2], sum(0) as [YTB_video_resolution_144p_Den_Video2], sum(0) as [YTB_video_mos_144p_Num_Video2],
		sum(0) as [YTB_video_mos_144p_Den_Video2],sum(0) as [YTB_video_resolution_%144p_Num_Video2],sum(0) as [YTB_video_resolution_%144p_Den_Video2],sum(0) as [YTB_video_resolution_240p_Num_Video2],
		sum(0) as [YTB_video_resolution_240p_Den_Video2], sum(0) as [YTB_video_mos_240p_Num_Video2], sum(0) as [YTB_video_mos_240p_Den_Video2], sum(0) as [YTB_video_resolution_%240p_Num_Video2],
		sum(0) as [YTB_video_resolution_%240p_Den_Video2], sum(0) as [YTB_video_resolution_360p_Num_Video2], sum(0) as [YTB_video_resolution_360p_Den_Video2], sum(0) as [YTB_video_mos_360p_Num_Video2],
		sum(0) as [YTB_video_mos_360p_Den_Video2], sum(0) as [YTB_video_resolution_%360p_Num_Video2], sum(0) as [YTB_video_resolution_%360p_Den_Video2], sum(0) as [YTB_video_resolution_480p_Num_Video2],
		sum(0) as [YTB_video_resolution_480p_Den_Video2], sum(0) as [YTB_video_mos_480p_Num_Video2], sum(0) as [YTB_video_mos_480p_Den_Video2], sum(0) as [YTB_video_resolution_%480p_Num_Video2],
		sum(0) as [YTB_video_resolution_%480p_Den_Video2], sum(0) as [YTB_video_resolution_720p_Num_Video2], sum(0) as [YTB_video_resolution_720p_Den_Video2], sum(0) as [YTB_video_mos_720p_Num_Video2],
		sum(0) as [YTB_video_mos_720p_Den_Video2], sum(0) as [YTB_video_resolution_%720p_Num_Video2], sum(0) as [YTB_video_resolution_%720p_Den_Video2],
		sum(0) as [YTB_video_resolution_1080p_Num_Video2], sum(0) as [YTB_video_resolution_1080p_Den_Video2], sum(0) as [YTB_video_mos_1080p_Num_Video2], sum(0) as [YTB_video_mos_1080p_Den_Video2],
		sum(0) as [YTB_video_resolution_%1080p_Num_Video2], sum(0) as [YTB_video_resolution_%1080p_Den_Video2],

		sum(0) as Avg_Video_StarTime_Num_Video3, sum(0) as avg_Video_startTime_Den_Video3, sum(0) as Reproductions_WO_Interruptions_Video3, sum(0) as Reproductions_WO_Interruptions_Den_Video3,
		sum(0) as B4_Video3, sum(0) as [ReproduccionesHD_Video3], sum(0) as [Successful video download_Video3], sum(0) as [Reproducciones_Video3],sum(0) as [Fails_Video3], sum(0) as YTB_video_resolution_num_Video3,
		sum(0) as YTB_video_resolution_den_Video3, sum(0) as YTB_video_mos_num_Video3, sum(0) as YTB_video_mos_den_Video3, null   as [YTB_url_Video3], sum(0) as [YTB_1st_Resolution_Num_Video3],
		sum(0) as [YTB_1st_Resolution_Den_Video3], sum(0) as [YTB_2nd_Resolution_Num_Video3], sum(0) as [YTB_2nd_Resolution_Den_Video3], sum(0) as [YTB_FirstChangeFromInit_Num_Video3],
		sum(0) as [YTB_FirstChangeFromInit_Den_Video3], sum(0) as [YTB_initialResolution_Num_Video3], sum(0) as [YTB_initialResolution_Den_Video3], sum(0) as [YTB_finalResolution_Num_Video3],
		sum(0) as [YTB_finalResolution_Den_Video3], sum(0) as [YTB_video_resolution_144p_Num_Video3], sum(0) as [YTB_video_resolution_144p_Den_Video3], sum(0) as [YTB_video_mos_144p_Num_Video3],
		sum(0) as [YTB_video_mos_144p_Den_Video3],sum(0) as [YTB_video_resolution_%144p_Num_Video3],sum(0) as [YTB_video_resolution_%144p_Den_Video3],sum(0) as [YTB_video_resolution_240p_Num_Video3],
		sum(0) as [YTB_video_resolution_240p_Den_Video3], sum(0) as [YTB_video_mos_240p_Num_Video3], sum(0) as [YTB_video_mos_240p_Den_Video3], sum(0) as [YTB_video_resolution_%240p_Num_Video3],
		sum(0) as [YTB_video_resolution_%240p_Den_Video3], sum(0) as [YTB_video_resolution_360p_Num_Video3], sum(0) as [YTB_video_resolution_360p_Den_Video3], sum(0) as [YTB_video_mos_360p_Num_Video3],
		sum(0) as [YTB_video_mos_360p_Den_Video3], sum(0) as [YTB_video_resolution_%360p_Num_Video3], sum(0) as [YTB_video_resolution_%360p_Den_Video3], sum(0) as [YTB_video_resolution_480p_Num_Video3],
		sum(0) as [YTB_video_resolution_480p_Den_Video3], sum(0) as [YTB_video_mos_480p_Num_Video3], sum(0) as [YTB_video_mos_480p_Den_Video3], sum(0) as [YTB_video_resolution_%480p_Num_Video3],
		sum(0) as [YTB_video_resolution_%480p_Den_Video3], sum(0) as [YTB_video_resolution_720p_Num_Video3], sum(0) as [YTB_video_resolution_720p_Den_Video3], sum(0) as [YTB_video_mos_720p_Num_Video3],
		sum(0) as [YTB_video_mos_720p_Den_Video3], sum(0) as [YTB_video_resolution_%720p_Num_Video3], sum(0) as [YTB_video_resolution_%720p_Den_Video3],
		sum(0) as [YTB_video_resolution_1080p_Num_Video3], sum(0) as [YTB_video_resolution_1080p_Den_Video3], sum(0) as [YTB_video_mos_1080p_Num_Video3], sum(0) as [YTB_video_mos_1080p_Den_Video3],
		sum(0) as [YTB_video_resolution_%1080p_Num_Video3], sum(0) as [YTB_video_resolution_%1080p_Den_Video3],

		sum(0) as Avg_Video_StarTime_Num_Video4, sum(0) as avg_Video_startTime_Den_Video4, sum(0) as Reproductions_WO_Interruptions_Video4, sum(0) as Reproductions_WO_Interruptions_Den_Video4,
		sum(0) as B4_Video4, sum(0) as [ReproduccionesHD_Video4], sum(0) as [Successful video download_Video4], sum(0) as [Reproducciones_Video4], sum(0) as [Fails_Video4],sum(0) as YTB_video_resolution_num_Video4,
		sum(0) as YTB_video_resolution_den_Video4, sum(0) as YTB_video_mos_num_Video4, sum(0) as YTB_video_mos_den_Video4, null   as [YTB_url_Video4], sum(0) as [YTB_1st_Resolution_Num_Video4],
		sum(0) as [YTB_1st_Resolution_Den_Video4], sum(0) as [YTB_2nd_Resolution_Num_Video4], sum(0) as [YTB_2nd_Resolution_Den_Video4], sum(0) as [YTB_FirstChangeFromInit_Num_Video4],
		sum(0) as [YTB_FirstChangeFromInit_Den_Video4], sum(0) as [YTB_initialResolution_Num_Video4], sum(0) as [YTB_initialResolution_Den_Video4], sum(0) as [YTB_finalResolution_Num_Video4],
		sum(0) as [YTB_finalResolution_Den_Video4], sum(0) as [YTB_video_resolution_144p_Num_Video4], sum(0) as [YTB_video_resolution_144p_Den_Video4], sum(0) as [YTB_video_mos_144p_Num_Video4],
		sum(0) as [YTB_video_mos_144p_Den_Video4],sum(0) as [YTB_video_resolution_%144p_Num_Video4],sum(0) as [YTB_video_resolution_%144p_Den_Video4],sum(0) as [YTB_video_resolution_240p_Num_Video4],
		sum(0) as [YTB_video_resolution_240p_Den_Video4], sum(0) as [YTB_video_mos_240p_Num_Video4], sum(0) as [YTB_video_mos_240p_Den_Video4], sum(0) as [YTB_video_resolution_%240p_Num_Video4],
		sum(0) as [YTB_video_resolution_%240p_Den_Video4], sum(0) as [YTB_video_resolution_360p_Num_Video4], sum(0) as [YTB_video_resolution_360p_Den_Video4], sum(0) as [YTB_video_mos_360p_Num_Video4],
		sum(0) as [YTB_video_mos_360p_Den_Video4], sum(0) as [YTB_video_resolution_%360p_Num_Video4], sum(0) as [YTB_video_resolution_%360p_Den_Video4], sum(0) as [YTB_video_resolution_480p_Num_Video4],
		sum(0) as [YTB_video_resolution_480p_Den_Video4], sum(0) as [YTB_video_mos_480p_Num_Video4], sum(0) as [YTB_video_mos_480p_Den_Video4], sum(0) as [YTB_video_resolution_%480p_Num_Video4],
		sum(0) as [YTB_video_resolution_%480p_Den_Video4], sum(0) as [YTB_video_resolution_720p_Num_Video4], sum(0) as [YTB_video_resolution_720p_Den_Video4], sum(0) as [YTB_video_mos_720p_Num_Video4],
		sum(0) as [YTB_video_mos_720p_Den_Video4], sum(0) as [YTB_video_resolution_%720p_Num_Video4], sum(0) as [YTB_video_resolution_%720p_Den_Video4],
		sum(0) as [YTB_video_resolution_1080p_Num_Video4], sum(0) as [YTB_video_resolution_1080p_Den_Video4], sum(0) as [YTB_video_mos_1080p_Num_Video4], sum(0) as [YTB_video_mos_1080p_Den_Video4],
		sum(0) as [YTB_video_resolution_%1080p_Num_Video4], sum(0) as [YTB_video_resolution_%1080p_Den_Video4],
	

		-- Parametros de configuracion:
		t.ASideDevice as ASideDevice, t.BSideDevice as BSideDevice, t.SWVersion as SWVersion, null as YTB_Version

	from [AGGRData3G].dbo.[lcc_aggr_sp_MDD_Data_Youtube] t, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end,mnc,meas_round,Date_Reporting,Week_Reporting,t.entidad,t.Report_Type,t.Aggr_Type
		, t.ASideDevice, t.BSideDevice, t.SWVersion--, t.Region_VF, t.Region_OSP

	-------------
	union all
	select  
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment,mnc,meas_round,Date_Reporting as meas_date,Week_Reporting as meas_week, 
		'4G' as meas_Tech, 'Youtube SD' as Test_type, 'Downlink' as Direction, entidad as vf_entity,t.Report_Type,t.Aggr_Type,
	
		sum(t.[Time To First Image]*(t.Reproducciones-t.Fails)) as Avg_Video_StarTime_Num,
		sum((t.Reproducciones-t.Fails)) as avg_Video_startTime_Den,
		sum(t.ReproduccionesSinInt) as Reproductions_WO_Interruptions,
		sum(t.Reproducciones) as Reproductions_WO_Interruptions_Den,
		--sum(t.[Successful video download]) as Success_Video_P3_num,
		--sum(t.Reproducciones) as Success_Video_P3_den,
		sum(0) as B4,
		sum(0) as [ReproduccionesHD],
		sum(0) as [Successful video download],
		sum(0) as [Reproducciones],
		sum(0) as YTB_video_resolution_num,
		sum(0) as YTB_video_resolution_den,
		sum(0) as YTB_video_mos_num,
		sum(0) as YTB_video_mos_den,
		null as YTB_URL,
		sum(0) as [YTB_1st_Resolution_Num],
		sum(0) as [YTB_1st_Resolution_Den],
		sum(0) as [YTB_2nd_Resolution_Num],
		sum(0) as [YTB_2nd_Resolution_Den],
		sum(0) as [YTB_FirstChangeFromInit_Num],
		sum(0) as [YTB_FirstChangeFromInit_Den],
		sum(0) as [YTB_initialResolution_Num],
		sum(0) as [YTB_initialResolution_Den],
		sum(0) as [YTB_finalResolution_Num],
		sum(0) as [YTB_finalResolution_Den],
		sum(0) as [YTB_video_resolution_144p_Num],
		sum(0) as [YTB_video_resolution_144p_Den],
		sum(0) as [YTB_video_mos_144p_Num],
		sum(0) as [YTB_video_mos_144p_Den],
		sum(0) as [YTB_video_resolution_%144p_Num],
		sum(0) as [YTB_video_resolution_%144p_Den],
		sum(0) as [YTB_video_resolution_240p_Num],
		sum(0) as [YTB_video_resolution_240p_Den],
		sum(0) as [YTB_video_mos_240p_Num],
		sum(0) as [YTB_video_mos_240p_Den],
		sum(0) as [YTB_video_resolution_%240p_Num],
		sum(0) as [YTB_video_resolution_%240p_Den],
		sum(0) as [YTB_video_resolution_360p_Num],
		sum(0) as [YTB_video_resolution_360p_Den],
		sum(0) as [YTB_video_mos_360p_Num],
		sum(0) as [YTB_video_mos_360p_Den],
		sum(0) as [YTB_video_resolution_%360p_Num],
		sum(0) as [YTB_video_resolution_%360p_Den],
		sum(0) as [YTB_video_resolution_480p_Num],
		sum(0) as [YTB_video_resolution_480p_Den],
		sum(0) as [YTB_video_mos_480p_Num],
		sum(0) as [YTB_video_mos_480p_Den],
		sum(0) as [YTB_video_resolution_%480p_Num],
		sum(0) as [YTB_video_resolution_%480p_Den],
		sum(0) as [YTB_video_resolution_720p_Num],
		sum(0) as [YTB_video_resolution_720p_Den],
		sum(0) as [YTB_video_mos_720p_Num],
		sum(0) as [YTB_video_mos_720p_Den],
		sum(0) as [YTB_video_resolution_%720p_Num],
		sum(0) as [YTB_video_resolution_%720p_Den],
		sum(0) as [YTB_video_resolution_1080p_Num],
		sum(0) as [YTB_video_resolution_1080p_Den],
		sum(0) as [YTB_video_mos_1080p_Num],
		sum(0) as [YTB_video_mos_1080p_Den],
		sum(0) as [YTB_video_resolution_%1080p_Num],
		sum(0) as [YTB_video_resolution_%1080p_Den],

		sum(0) as Avg_Video_StarTime_Num_Video1, sum(0) as avg_Video_startTime_Den_Video1, sum(0) as Reproductions_WO_Interruptions_Video1, sum(0) as Reproductions_WO_Interruptions_Den_Video1,
		sum(0) as B4_Video1, sum(0) as [ReproduccionesHD_Video1], sum(0) as [Successful video download_Video1], sum(0) as [Reproducciones_Video1], sum(0) as [Fails_Video1],sum(0) as YTB_video_resolution_num_Video1,
		sum(0) as YTB_video_resolution_den_Video1, sum(0) as YTB_video_mos_num_Video1, sum(0) as YTB_video_mos_den_Video1, null   as [YTB_url_Video1], sum(0) as [YTB_1st_Resolution_Num_Video1],
		sum(0) as [YTB_1st_Resolution_Den_Video1], sum(0) as [YTB_2nd_Resolution_Num_Video1], sum(0) as [YTB_2nd_Resolution_Den_Video1], sum(0) as [YTB_FirstChangeFromInit_Num_Video1],
		sum(0) as [YTB_FirstChangeFromInit_Den_Video1], sum(0) as [YTB_initialResolution_Num_Video1], sum(0) as [YTB_initialResolution_Den_Video1], sum(0) as [YTB_finalResolution_Num_Video1],
		sum(0) as [YTB_finalResolution_Den_Video1], sum(0) as [YTB_video_resolution_144p_Num_Video1], sum(0) as [YTB_video_resolution_144p_Den_Video1], sum(0) as [YTB_video_mos_144p_Num_Video1],
		sum(0) as [YTB_video_mos_144p_Den_Video1],sum(0) as [YTB_video_resolution_%144p_Num_Video1],sum(0) as [YTB_video_resolution_%144p_Den_Video1],sum(0) as [YTB_video_resolution_240p_Num_Video1],
		sum(0) as [YTB_video_resolution_240p_Den_Video1], sum(0) as [YTB_video_mos_240p_Num_Video1], sum(0) as [YTB_video_mos_240p_Den_Video1], sum(0) as [YTB_video_resolution_%240p_Num_Video1],
		sum(0) as [YTB_video_resolution_%240p_Den_Video1], sum(0) as [YTB_video_resolution_360p_Num_Video1], sum(0) as [YTB_video_resolution_360p_Den_Video1], sum(0) as [YTB_video_mos_360p_Num_Video1],
		sum(0) as [YTB_video_mos_360p_Den_Video1], sum(0) as [YTB_video_resolution_%360p_Num_Video1], sum(0) as [YTB_video_resolution_%360p_Den_Video1], sum(0) as [YTB_video_resolution_480p_Num_Video1],
		sum(0) as [YTB_video_resolution_480p_Den_Video1], sum(0) as [YTB_video_mos_480p_Num_Video1], sum(0) as [YTB_video_mos_480p_Den_Video1], sum(0) as [YTB_video_resolution_%480p_Num_Video1],
		sum(0) as [YTB_video_resolution_%480p_Den_Video1], sum(0) as [YTB_video_resolution_720p_Num_Video1], sum(0) as [YTB_video_resolution_720p_Den_Video1], sum(0) as [YTB_video_mos_720p_Num_Video1],
		sum(0) as [YTB_video_mos_720p_Den_Video1], sum(0) as [YTB_video_resolution_%720p_Num_Video1], sum(0) as [YTB_video_resolution_%720p_Den_Video1],
		sum(0) as [YTB_video_resolution_1080p_Num_Video1], sum(0) as [YTB_video_resolution_1080p_Den_Video1], sum(0) as [YTB_video_mos_1080p_Num_Video1], sum(0) as [YTB_video_mos_1080p_Den_Video1],
		sum(0) as [YTB_video_resolution_%1080p_Num_Video1], sum(0) as [YTB_video_resolution_%1080p_Den_Video1],

		sum(0) as Avg_Video_StarTime_Num_Video2, sum(0) as avg_Video_startTime_Den_Video2, sum(0) as Reproductions_WO_Interruptions_Video2, sum(0) as Reproductions_WO_Interruptions_Den_Video2,
		sum(0) as B4_Video2, sum(0) as [ReproduccionesHD_Video2], sum(0) as [Successful video download_Video2], sum(0) as [Reproducciones_Video2], sum(0) as [Fails_Video2],sum(0) as YTB_video_resolution_num_Video2,
		sum(0) as YTB_video_resolution_den_Video2, sum(0) as YTB_video_mos_num_Video2, sum(0) as YTB_video_mos_den_Video2, null   as [YTB_url_Video2], sum(0) as [YTB_1st_Resolution_Num_Video2],
		sum(0) as [YTB_1st_Resolution_Den_Video2], sum(0) as [YTB_2nd_Resolution_Num_Video2], sum(0) as [YTB_2nd_Resolution_Den_Video2], sum(0) as [YTB_FirstChangeFromInit_Num_Video2],
		sum(0) as [YTB_FirstChangeFromInit_Den_Video2], sum(0) as [YTB_initialResolution_Num_Video2], sum(0) as [YTB_initialResolution_Den_Video2], sum(0) as [YTB_finalResolution_Num_Video2],
		sum(0) as [YTB_finalResolution_Den_Video2], sum(0) as [YTB_video_resolution_144p_Num_Video2], sum(0) as [YTB_video_resolution_144p_Den_Video2], sum(0) as [YTB_video_mos_144p_Num_Video2],
		sum(0) as [YTB_video_mos_144p_Den_Video2],sum(0) as [YTB_video_resolution_%144p_Num_Video2],sum(0) as [YTB_video_resolution_%144p_Den_Video2],sum(0) as [YTB_video_resolution_240p_Num_Video2],
		sum(0) as [YTB_video_resolution_240p_Den_Video2], sum(0) as [YTB_video_mos_240p_Num_Video2], sum(0) as [YTB_video_mos_240p_Den_Video2], sum(0) as [YTB_video_resolution_%240p_Num_Video2],
		sum(0) as [YTB_video_resolution_%240p_Den_Video2], sum(0) as [YTB_video_resolution_360p_Num_Video2], sum(0) as [YTB_video_resolution_360p_Den_Video2], sum(0) as [YTB_video_mos_360p_Num_Video2],
		sum(0) as [YTB_video_mos_360p_Den_Video2], sum(0) as [YTB_video_resolution_%360p_Num_Video2], sum(0) as [YTB_video_resolution_%360p_Den_Video2], sum(0) as [YTB_video_resolution_480p_Num_Video2],
		sum(0) as [YTB_video_resolution_480p_Den_Video2], sum(0) as [YTB_video_mos_480p_Num_Video2], sum(0) as [YTB_video_mos_480p_Den_Video2], sum(0) as [YTB_video_resolution_%480p_Num_Video2],
		sum(0) as [YTB_video_resolution_%480p_Den_Video2], sum(0) as [YTB_video_resolution_720p_Num_Video2], sum(0) as [YTB_video_resolution_720p_Den_Video2], sum(0) as [YTB_video_mos_720p_Num_Video2],
		sum(0) as [YTB_video_mos_720p_Den_Video2], sum(0) as [YTB_video_resolution_%720p_Num_Video2], sum(0) as [YTB_video_resolution_%720p_Den_Video2],
		sum(0) as [YTB_video_resolution_1080p_Num_Video2], sum(0) as [YTB_video_resolution_1080p_Den_Video2], sum(0) as [YTB_video_mos_1080p_Num_Video2], sum(0) as [YTB_video_mos_1080p_Den_Video2],
		sum(0) as [YTB_video_resolution_%1080p_Num_Video2], sum(0) as [YTB_video_resolution_%1080p_Den_Video2],

		sum(0) as Avg_Video_StarTime_Num_Video3, sum(0) as avg_Video_startTime_Den_Video3, sum(0) as Reproductions_WO_Interruptions_Video3, sum(0) as Reproductions_WO_Interruptions_Den_Video3,
		sum(0) as B4_Video3, sum(0) as [ReproduccionesHD_Video3], sum(0) as [Successful video download_Video3], sum(0) as [Reproducciones_Video3], sum(0) as [Fails_Video3],sum(0) as YTB_video_resolution_num_Video3,
		sum(0) as YTB_video_resolution_den_Video3, sum(0) as YTB_video_mos_num_Video3, sum(0) as YTB_video_mos_den_Video3, null   as [YTB_url_Video3], sum(0) as [YTB_1st_Resolution_Num_Video3],
		sum(0) as [YTB_1st_Resolution_Den_Video3], sum(0) as [YTB_2nd_Resolution_Num_Video3], sum(0) as [YTB_2nd_Resolution_Den_Video3], sum(0) as [YTB_FirstChangeFromInit_Num_Video3],
		sum(0) as [YTB_FirstChangeFromInit_Den_Video3], sum(0) as [YTB_initialResolution_Num_Video3], sum(0) as [YTB_initialResolution_Den_Video3], sum(0) as [YTB_finalResolution_Num_Video3],
		sum(0) as [YTB_finalResolution_Den_Video3], sum(0) as [YTB_video_resolution_144p_Num_Video3], sum(0) as [YTB_video_resolution_144p_Den_Video3], sum(0) as [YTB_video_mos_144p_Num_Video3],
		sum(0) as [YTB_video_mos_144p_Den_Video3],sum(0) as [YTB_video_resolution_%144p_Num_Video3],sum(0) as [YTB_video_resolution_%144p_Den_Video3],sum(0) as [YTB_video_resolution_240p_Num_Video3],
		sum(0) as [YTB_video_resolution_240p_Den_Video3], sum(0) as [YTB_video_mos_240p_Num_Video3], sum(0) as [YTB_video_mos_240p_Den_Video3], sum(0) as [YTB_video_resolution_%240p_Num_Video3],
		sum(0) as [YTB_video_resolution_%240p_Den_Video3], sum(0) as [YTB_video_resolution_360p_Num_Video3], sum(0) as [YTB_video_resolution_360p_Den_Video3], sum(0) as [YTB_video_mos_360p_Num_Video3],
		sum(0) as [YTB_video_mos_360p_Den_Video3], sum(0) as [YTB_video_resolution_%360p_Num_Video3], sum(0) as [YTB_video_resolution_%360p_Den_Video3], sum(0) as [YTB_video_resolution_480p_Num_Video3],
		sum(0) as [YTB_video_resolution_480p_Den_Video3], sum(0) as [YTB_video_mos_480p_Num_Video3], sum(0) as [YTB_video_mos_480p_Den_Video3], sum(0) as [YTB_video_resolution_%480p_Num_Video3],
		sum(0) as [YTB_video_resolution_%480p_Den_Video3], sum(0) as [YTB_video_resolution_720p_Num_Video3], sum(0) as [YTB_video_resolution_720p_Den_Video3], sum(0) as [YTB_video_mos_720p_Num_Video3],
		sum(0) as [YTB_video_mos_720p_Den_Video3], sum(0) as [YTB_video_resolution_%720p_Num_Video3], sum(0) as [YTB_video_resolution_%720p_Den_Video3],
		sum(0) as [YTB_video_resolution_1080p_Num_Video3], sum(0) as [YTB_video_resolution_1080p_Den_Video3], sum(0) as [YTB_video_mos_1080p_Num_Video3], sum(0) as [YTB_video_mos_1080p_Den_Video3],
		sum(0) as [YTB_video_resolution_%1080p_Num_Video3], sum(0) as [YTB_video_resolution_%1080p_Den_Video3],

		sum(0) as Avg_Video_StarTime_Num_Video4, sum(0) as avg_Video_startTime_Den_Video4, sum(0) as Reproductions_WO_Interruptions_Video4, sum(0) as Reproductions_WO_Interruptions_Den_Video4,
		sum(0) as B4_Video4, sum(0) as [ReproduccionesHD_Video4], sum(0) as [Successful video download_Video4], sum(0) as [Reproducciones_Video4], sum(0) as [Fails_Video4],sum(0) as YTB_video_resolution_num_Video4,
		sum(0) as YTB_video_resolution_den_Video4, sum(0) as YTB_video_mos_num_Video4, sum(0) as YTB_video_mos_den_Video4, null   as [YTB_url_Video4], sum(0) as [YTB_1st_Resolution_Num_Video4],
		sum(0) as [YTB_1st_Resolution_Den_Video4], sum(0) as [YTB_2nd_Resolution_Num_Video4], sum(0) as [YTB_2nd_Resolution_Den_Video4], sum(0) as [YTB_FirstChangeFromInit_Num_Video4],
		sum(0) as [YTB_FirstChangeFromInit_Den_Video4], sum(0) as [YTB_initialResolution_Num_Video4], sum(0) as [YTB_initialResolution_Den_Video4], sum(0) as [YTB_finalResolution_Num_Video4],
		sum(0) as [YTB_finalResolution_Den_Video4], sum(0) as [YTB_video_resolution_144p_Num_Video4], sum(0) as [YTB_video_resolution_144p_Den_Video4], sum(0) as [YTB_video_mos_144p_Num_Video4],
		sum(0) as [YTB_video_mos_144p_Den_Video4],sum(0) as [YTB_video_resolution_%144p_Num_Video4],sum(0) as [YTB_video_resolution_%144p_Den_Video4],sum(0) as [YTB_video_resolution_240p_Num_Video4],
		sum(0) as [YTB_video_resolution_240p_Den_Video4], sum(0) as [YTB_video_mos_240p_Num_Video4], sum(0) as [YTB_video_mos_240p_Den_Video4], sum(0) as [YTB_video_resolution_%240p_Num_Video4],
		sum(0) as [YTB_video_resolution_%240p_Den_Video4], sum(0) as [YTB_video_resolution_360p_Num_Video4], sum(0) as [YTB_video_resolution_360p_Den_Video4], sum(0) as [YTB_video_mos_360p_Num_Video4],
		sum(0) as [YTB_video_mos_360p_Den_Video4], sum(0) as [YTB_video_resolution_%360p_Num_Video4], sum(0) as [YTB_video_resolution_%360p_Den_Video4], sum(0) as [YTB_video_resolution_480p_Num_Video4],
		sum(0) as [YTB_video_resolution_480p_Den_Video4], sum(0) as [YTB_video_mos_480p_Num_Video4], sum(0) as [YTB_video_mos_480p_Den_Video4], sum(0) as [YTB_video_resolution_%480p_Num_Video4],
		sum(0) as [YTB_video_resolution_%480p_Den_Video4], sum(0) as [YTB_video_resolution_720p_Num_Video4], sum(0) as [YTB_video_resolution_720p_Den_Video4], sum(0) as [YTB_video_mos_720p_Num_Video4],
		sum(0) as [YTB_video_mos_720p_Den_Video4], sum(0) as [YTB_video_resolution_%720p_Num_Video4], sum(0) as [YTB_video_resolution_%720p_Den_Video4],
		sum(0) as [YTB_video_resolution_1080p_Num_Video4], sum(0) as [YTB_video_resolution_1080p_Den_Video4], sum(0) as [YTB_video_mos_1080p_Num_Video4], sum(0) as [YTB_video_mos_1080p_Den_Video4],
		sum(0) as [YTB_video_resolution_%1080p_Num_Video4], sum(0) as [YTB_video_resolution_%1080p_Den_Video4],
		
		-- Parametros de configuracion:
		t.ASideDevice as ASideDevice, t.BSideDevice as BSideDevice, t.SWVersion as SWVersion, null as YTB_Version
	
	from [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_Youtube] t, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end,mnc,meas_round,Date_Reporting,Week_Reporting,t.entidad,t.Report_Type,t.Aggr_Type
		, t.ASideDevice, t.BSideDevice, t.SWVersion--, t.Region_VF, t.Region_OSP

	-------------
	union all
	select  
		p.codigo_ine, 'Roads' vf_environment,mnc,meas_round,Date_Reporting as meas_date,Week_Reporting as meas_week, 
		'Road 4G' as meas_Tech, 'Youtube SD' as Test_type, 'Downlink' as Direction, entidad as vf_entity,t.Report_Type,t.Aggr_Type,
	
		sum(t.[Time To First Image]*(t.Reproducciones-t.Fails)) as Avg_Video_StarTime_Num,
		sum((t.Reproducciones-t.Fails)) as avg_Video_startTime_Den,
		sum(t.ReproduccionesSinInt) as Reproductions_WO_Interruptions,
		sum(t.Reproducciones) as Reproductions_WO_Interruptions_Den,
		sum(0) as B4,
		sum(0) as [ReproduccionesHD],
		sum(0) as [Successful video download],
		sum(0) as [Reproducciones],
		sum(0) as YTB_video_resolution_num,
		sum(0) as YTB_video_resolution_den,
		sum(0) as YTB_video_mos_num,
		sum(0) as YTB_video_mos_den,
		null as YTB_URL,
		sum(0) as [YTB_1st_Resolution_Num],
		sum(0) as [YTB_1st_Resolution_Den],
		sum(0) as [YTB_2nd_Resolution_Num],
		sum(0) as [YTB_2nd_Resolution_Den],
		sum(0) as [YTB_FirstChangeFromInit_Num],
		sum(0) as [YTB_FirstChangeFromInit_Den],
		sum(0) as [YTB_initialResolution_Num],
		sum(0) as [YTB_initialResolution_Den],
		sum(0) as [YTB_finalResolution_Num],
		sum(0) as [YTB_finalResolution_Den],
		sum(0) as [YTB_video_resolution_144p_Num],
		sum(0) as [YTB_video_resolution_144p_Den],
		sum(0) as [YTB_video_mos_144p_Num],
		sum(0) as [YTB_video_mos_144p_Den],
		sum(0) as [YTB_video_resolution_%144p_Num],
		sum(0) as [YTB_video_resolution_%144p_Den],
		sum(0) as [YTB_video_resolution_240p_Num],
		sum(0) as [YTB_video_resolution_240p_Den],
		sum(0) as [YTB_video_mos_240p_Num],
		sum(0) as [YTB_video_mos_240p_Den],
		sum(0) as [YTB_video_resolution_%240p_Num],
		sum(0) as [YTB_video_resolution_%240p_Den],
		sum(0) as [YTB_video_resolution_360p_Num],
		sum(0) as [YTB_video_resolution_360p_Den],
		sum(0) as [YTB_video_mos_360p_Num],
		sum(0) as [YTB_video_mos_360p_Den],
		sum(0) as [YTB_video_resolution_%360p_Num],
		sum(0) as [YTB_video_resolution_%360p_Den],
		sum(0) as [YTB_video_resolution_480p_Num],
		sum(0) as [YTB_video_resolution_480p_Den],
		sum(0) as [YTB_video_mos_480p_Num],
		sum(0) as [YTB_video_mos_480p_Den],
		sum(0) as [YTB_video_resolution_%480p_Num],
		sum(0) as [YTB_video_resolution_%480p_Den],
		sum(0) as [YTB_video_resolution_720p_Num],
		sum(0) as [YTB_video_resolution_720p_Den],
		sum(0) as [YTB_video_mos_720p_Num],
		sum(0) as [YTB_video_mos_720p_Den],
		sum(0) as [YTB_video_resolution_%720p_Num],
		sum(0) as [YTB_video_resolution_%720p_Den],
		sum(0) as [YTB_video_resolution_1080p_Num],
		sum(0) as [YTB_video_resolution_1080p_Den],
		sum(0) as [YTB_video_mos_1080p_Num],
		sum(0) as [YTB_video_mos_1080p_Den],
		sum(0) as [YTB_video_resolution_%1080p_Num],
		sum(0) as [YTB_video_resolution_%1080p_Den],

		sum(0) as Avg_Video_StarTime_Num_Video1, sum(0) as avg_Video_startTime_Den_Video1, sum(0) as Reproductions_WO_Interruptions_Video1, sum(0) as Reproductions_WO_Interruptions_Den_Video1,
		sum(0) as B4_Video1, sum(0) as [ReproduccionesHD_Video1], sum(0) as [Successful video download_Video1], sum(0) as [Reproducciones_Video1], sum(0) as [Fails_Video1],sum(0) as YTB_video_resolution_num_Video1,
		sum(0) as YTB_video_resolution_den_Video1, sum(0) as YTB_video_mos_num_Video1, sum(0) as YTB_video_mos_den_Video1, null   as [YTB_url_Video1], sum(0) as [YTB_1st_Resolution_Num_Video1],
		sum(0) as [YTB_1st_Resolution_Den_Video1], sum(0) as [YTB_2nd_Resolution_Num_Video1], sum(0) as [YTB_2nd_Resolution_Den_Video1], sum(0) as [YTB_FirstChangeFromInit_Num_Video1],
		sum(0) as [YTB_FirstChangeFromInit_Den_Video1], sum(0) as [YTB_initialResolution_Num_Video1], sum(0) as [YTB_initialResolution_Den_Video1], sum(0) as [YTB_finalResolution_Num_Video1],
		sum(0) as [YTB_finalResolution_Den_Video1], sum(0) as [YTB_video_resolution_144p_Num_Video1], sum(0) as [YTB_video_resolution_144p_Den_Video1], sum(0) as [YTB_video_mos_144p_Num_Video1],
		sum(0) as [YTB_video_mos_144p_Den_Video1],sum(0) as [YTB_video_resolution_%144p_Num_Video1],sum(0) as [YTB_video_resolution_%144p_Den_Video1],sum(0) as [YTB_video_resolution_240p_Num_Video1],
		sum(0) as [YTB_video_resolution_240p_Den_Video1], sum(0) as [YTB_video_mos_240p_Num_Video1], sum(0) as [YTB_video_mos_240p_Den_Video1], sum(0) as [YTB_video_resolution_%240p_Num_Video1],
		sum(0) as [YTB_video_resolution_%240p_Den_Video1], sum(0) as [YTB_video_resolution_360p_Num_Video1], sum(0) as [YTB_video_resolution_360p_Den_Video1], sum(0) as [YTB_video_mos_360p_Num_Video1],
		sum(0) as [YTB_video_mos_360p_Den_Video1], sum(0) as [YTB_video_resolution_%360p_Num_Video1], sum(0) as [YTB_video_resolution_%360p_Den_Video1], sum(0) as [YTB_video_resolution_480p_Num_Video1],
		sum(0) as [YTB_video_resolution_480p_Den_Video1], sum(0) as [YTB_video_mos_480p_Num_Video1], sum(0) as [YTB_video_mos_480p_Den_Video1], sum(0) as [YTB_video_resolution_%480p_Num_Video1],
		sum(0) as [YTB_video_resolution_%480p_Den_Video1], sum(0) as [YTB_video_resolution_720p_Num_Video1], sum(0) as [YTB_video_resolution_720p_Den_Video1], sum(0) as [YTB_video_mos_720p_Num_Video1],
		sum(0) as [YTB_video_mos_720p_Den_Video1], sum(0) as [YTB_video_resolution_%720p_Num_Video1], sum(0) as [YTB_video_resolution_%720p_Den_Video1],
		sum(0) as [YTB_video_resolution_1080p_Num_Video1], sum(0) as [YTB_video_resolution_1080p_Den_Video1], sum(0) as [YTB_video_mos_1080p_Num_Video1], sum(0) as [YTB_video_mos_1080p_Den_Video1],
		sum(0) as [YTB_video_resolution_%1080p_Num_Video1], sum(0) as [YTB_video_resolution_%1080p_Den_Video1],

		sum(0) as Avg_Video_StarTime_Num_Video2, sum(0) as avg_Video_startTime_Den_Video2, sum(0) as Reproductions_WO_Interruptions_Video2, sum(0) as Reproductions_WO_Interruptions_Den_Video2,
		sum(0) as B4_Video2, sum(0) as [ReproduccionesHD_Video2], sum(0) as [Successful video download_Video2], sum(0) as [Reproducciones_Video2], sum(0) as [Fails_Video2],sum(0) as YTB_video_resolution_num_Video2,
		sum(0) as YTB_video_resolution_den_Video2, sum(0) as YTB_video_mos_num_Video2, sum(0) as YTB_video_mos_den_Video2, null   as [YTB_url_Video2], sum(0) as [YTB_1st_Resolution_Num_Video2],
		sum(0) as [YTB_1st_Resolution_Den_Video2], sum(0) as [YTB_2nd_Resolution_Num_Video2], sum(0) as [YTB_2nd_Resolution_Den_Video2], sum(0) as [YTB_FirstChangeFromInit_Num_Video2],
		sum(0) as [YTB_FirstChangeFromInit_Den_Video2], sum(0) as [YTB_initialResolution_Num_Video2], sum(0) as [YTB_initialResolution_Den_Video2], sum(0) as [YTB_finalResolution_Num_Video2],
		sum(0) as [YTB_finalResolution_Den_Video2], sum(0) as [YTB_video_resolution_144p_Num_Video2], sum(0) as [YTB_video_resolution_144p_Den_Video2], sum(0) as [YTB_video_mos_144p_Num_Video2],
		sum(0) as [YTB_video_mos_144p_Den_Video2],sum(0) as [YTB_video_resolution_%144p_Num_Video2],sum(0) as [YTB_video_resolution_%144p_Den_Video2],sum(0) as [YTB_video_resolution_240p_Num_Video2],
		sum(0) as [YTB_video_resolution_240p_Den_Video2], sum(0) as [YTB_video_mos_240p_Num_Video2], sum(0) as [YTB_video_mos_240p_Den_Video2], sum(0) as [YTB_video_resolution_%240p_Num_Video2],
		sum(0) as [YTB_video_resolution_%240p_Den_Video2], sum(0) as [YTB_video_resolution_360p_Num_Video2], sum(0) as [YTB_video_resolution_360p_Den_Video2], sum(0) as [YTB_video_mos_360p_Num_Video2],
		sum(0) as [YTB_video_mos_360p_Den_Video2], sum(0) as [YTB_video_resolution_%360p_Num_Video2], sum(0) as [YTB_video_resolution_%360p_Den_Video2], sum(0) as [YTB_video_resolution_480p_Num_Video2],
		sum(0) as [YTB_video_resolution_480p_Den_Video2], sum(0) as [YTB_video_mos_480p_Num_Video2], sum(0) as [YTB_video_mos_480p_Den_Video2], sum(0) as [YTB_video_resolution_%480p_Num_Video2],
		sum(0) as [YTB_video_resolution_%480p_Den_Video2], sum(0) as [YTB_video_resolution_720p_Num_Video2], sum(0) as [YTB_video_resolution_720p_Den_Video2], sum(0) as [YTB_video_mos_720p_Num_Video2],
		sum(0) as [YTB_video_mos_720p_Den_Video2], sum(0) as [YTB_video_resolution_%720p_Num_Video2], sum(0) as [YTB_video_resolution_%720p_Den_Video2],
		sum(0) as [YTB_video_resolution_1080p_Num_Video2], sum(0) as [YTB_video_resolution_1080p_Den_Video2], sum(0) as [YTB_video_mos_1080p_Num_Video2], sum(0) as [YTB_video_mos_1080p_Den_Video2],
		sum(0) as [YTB_video_resolution_%1080p_Num_Video2], sum(0) as [YTB_video_resolution_%1080p_Den_Video2],

		sum(0) as Avg_Video_StarTime_Num_Video3, sum(0) as avg_Video_startTime_Den_Video3, sum(0) as Reproductions_WO_Interruptions_Video3, sum(0) as Reproductions_WO_Interruptions_Den_Video3,
		sum(0) as B4_Video3, sum(0) as [ReproduccionesHD_Video3], sum(0) as [Successful video download_Video3], sum(0) as [Reproducciones_Video3], sum(0) as [Fails_Video3],sum(0) as YTB_video_resolution_num_Video3,
		sum(0) as YTB_video_resolution_den_Video3, sum(0) as YTB_video_mos_num_Video3, sum(0) as YTB_video_mos_den_Video3, null   as [YTB_url_Video3], sum(0) as [YTB_1st_Resolution_Num_Video3],
		sum(0) as [YTB_1st_Resolution_Den_Video3], sum(0) as [YTB_2nd_Resolution_Num_Video3], sum(0) as [YTB_2nd_Resolution_Den_Video3], sum(0) as [YTB_FirstChangeFromInit_Num_Video3],
		sum(0) as [YTB_FirstChangeFromInit_Den_Video3], sum(0) as [YTB_initialResolution_Num_Video3], sum(0) as [YTB_initialResolution_Den_Video3], sum(0) as [YTB_finalResolution_Num_Video3],
		sum(0) as [YTB_finalResolution_Den_Video3], sum(0) as [YTB_video_resolution_144p_Num_Video3], sum(0) as [YTB_video_resolution_144p_Den_Video3], sum(0) as [YTB_video_mos_144p_Num_Video3],
		sum(0) as [YTB_video_mos_144p_Den_Video3],sum(0) as [YTB_video_resolution_%144p_Num_Video3],sum(0) as [YTB_video_resolution_%144p_Den_Video3],sum(0) as [YTB_video_resolution_240p_Num_Video3],
		sum(0) as [YTB_video_resolution_240p_Den_Video3], sum(0) as [YTB_video_mos_240p_Num_Video3], sum(0) as [YTB_video_mos_240p_Den_Video3], sum(0) as [YTB_video_resolution_%240p_Num_Video3],
		sum(0) as [YTB_video_resolution_%240p_Den_Video3], sum(0) as [YTB_video_resolution_360p_Num_Video3], sum(0) as [YTB_video_resolution_360p_Den_Video3], sum(0) as [YTB_video_mos_360p_Num_Video3],
		sum(0) as [YTB_video_mos_360p_Den_Video3], sum(0) as [YTB_video_resolution_%360p_Num_Video3], sum(0) as [YTB_video_resolution_%360p_Den_Video3], sum(0) as [YTB_video_resolution_480p_Num_Video3],
		sum(0) as [YTB_video_resolution_480p_Den_Video3], sum(0) as [YTB_video_mos_480p_Num_Video3], sum(0) as [YTB_video_mos_480p_Den_Video3], sum(0) as [YTB_video_resolution_%480p_Num_Video3],
		sum(0) as [YTB_video_resolution_%480p_Den_Video3], sum(0) as [YTB_video_resolution_720p_Num_Video3], sum(0) as [YTB_video_resolution_720p_Den_Video3], sum(0) as [YTB_video_mos_720p_Num_Video3],
		sum(0) as [YTB_video_mos_720p_Den_Video3], sum(0) as [YTB_video_resolution_%720p_Num_Video3], sum(0) as [YTB_video_resolution_%720p_Den_Video3],
		sum(0) as [YTB_video_resolution_1080p_Num_Video3], sum(0) as [YTB_video_resolution_1080p_Den_Video3], sum(0) as [YTB_video_mos_1080p_Num_Video3], sum(0) as [YTB_video_mos_1080p_Den_Video3],
		sum(0) as [YTB_video_resolution_%1080p_Num_Video3], sum(0) as [YTB_video_resolution_%1080p_Den_Video3],

		sum(0) as Avg_Video_StarTime_Num_Video4, sum(0) as avg_Video_startTime_Den_Video4, sum(0) as Reproductions_WO_Interruptions_Video4, sum(0) as Reproductions_WO_Interruptions_Den_Video4,
		sum(0) as B4_Video4, sum(0) as [ReproduccionesHD_Video4], sum(0) as [Successful video download_Video4], sum(0) as [Reproducciones_Video4], sum(0) as [Fails_Video4],sum(0) as YTB_video_resolution_num_Video4,
		sum(0) as YTB_video_resolution_den_Video4, sum(0) as YTB_video_mos_num_Video4, sum(0) as YTB_video_mos_den_Video4, null   as [YTB_url_Video4], sum(0) as [YTB_1st_Resolution_Num_Video4],
		sum(0) as [YTB_1st_Resolution_Den_Video4], sum(0) as [YTB_2nd_Resolution_Num_Video4], sum(0) as [YTB_2nd_Resolution_Den_Video4], sum(0) as [YTB_FirstChangeFromInit_Num_Video4],
		sum(0) as [YTB_FirstChangeFromInit_Den_Video4], sum(0) as [YTB_initialResolution_Num_Video4], sum(0) as [YTB_initialResolution_Den_Video4], sum(0) as [YTB_finalResolution_Num_Video4],
		sum(0) as [YTB_finalResolution_Den_Video4], sum(0) as [YTB_video_resolution_144p_Num_Video4], sum(0) as [YTB_video_resolution_144p_Den_Video4], sum(0) as [YTB_video_mos_144p_Num_Video4],
		sum(0) as [YTB_video_mos_144p_Den_Video4],sum(0) as [YTB_video_resolution_%144p_Num_Video4],sum(0) as [YTB_video_resolution_%144p_Den_Video4],sum(0) as [YTB_video_resolution_240p_Num_Video4],
		sum(0) as [YTB_video_resolution_240p_Den_Video4], sum(0) as [YTB_video_mos_240p_Num_Video4], sum(0) as [YTB_video_mos_240p_Den_Video4], sum(0) as [YTB_video_resolution_%240p_Num_Video4],
		sum(0) as [YTB_video_resolution_%240p_Den_Video4], sum(0) as [YTB_video_resolution_360p_Num_Video4], sum(0) as [YTB_video_resolution_360p_Den_Video4], sum(0) as [YTB_video_mos_360p_Num_Video4],
		sum(0) as [YTB_video_mos_360p_Den_Video4], sum(0) as [YTB_video_resolution_%360p_Num_Video4], sum(0) as [YTB_video_resolution_%360p_Den_Video4], sum(0) as [YTB_video_resolution_480p_Num_Video4],
		sum(0) as [YTB_video_resolution_480p_Den_Video4], sum(0) as [YTB_video_mos_480p_Num_Video4], sum(0) as [YTB_video_mos_480p_Den_Video4], sum(0) as [YTB_video_resolution_%480p_Num_Video4],
		sum(0) as [YTB_video_resolution_%480p_Den_Video4], sum(0) as [YTB_video_resolution_720p_Num_Video4], sum(0) as [YTB_video_resolution_720p_Den_Video4], sum(0) as [YTB_video_mos_720p_Num_Video4],
		sum(0) as [YTB_video_mos_720p_Den_Video4], sum(0) as [YTB_video_resolution_%720p_Num_Video4], sum(0) as [YTB_video_resolution_%720p_Den_Video4],
		sum(0) as [YTB_video_resolution_1080p_Num_Video4], sum(0) as [YTB_video_resolution_1080p_Den_Video4], sum(0) as [YTB_video_mos_1080p_Num_Video4], sum(0) as [YTB_video_mos_1080p_Den_Video4],
		sum(0) as [YTB_video_resolution_%1080p_Num_Video4], sum(0) as [YTB_video_resolution_%1080p_Den_Video4],
		
	
		t.ASideDevice as ASideDevice, t.BSideDevice as BSideDevice, t.SWVersion as SWVersion, null as YTB_Version
	from [aggrData4G_ROAD].dbo.[lcc_aggr_sp_MDD_Data_Youtube] t, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, mnc, meas_round, Date_Reporting, Week_Reporting, t.entidad, t.Report_Type, t.Aggr_Type,
		t.ASideDevice, t.BSideDevice, t.SWVersion--, t.Region_VF, t.Region_OSP

	-------------------------------------
	-- Video Streaming 4GOnly			YTB SD
	-------------------------------------	
	insert into _RI_Data_y
	select		-- 4GOnly - SD
		p.codigo_ine, case when  t.entidad like 'AVE-%' or  t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment, t.mnc, t.meas_round, t.Date_Reporting as meas_date, t.Week_Reporting as meas_week, 
		'4GOnly' as meas_Tech, 'Youtube SD' as Test_type, 'Downlink' as Direction,  t.entidad as vf_entity, t.Report_Type, t.Aggr_Type,
	
		sum(YTB4G.[Time To First Image]*(YTB4G.Reproducciones-YTB4G.Fails)) as Avg_Video_StarTime_Num,
		sum((YTB4G.Reproducciones-YTB4G.Fails)) as avg_Video_startTime_Den,
		sum(YTB4G.ReproduccionesSinInt) as Reproductions_WO_Interruptions,
		sum(YTB4G.Reproducciones) as Reproductions_WO_Interruptions_Den,
		sum(0) as B4,
		sum(0) as [ReproduccionesHD],
		sum(0) as [Successful video download],
		sum(0) as [Reproducciones],
		sum(0) as YTB_video_resolution_num,
		sum(0) as YTB_video_resolution_den,
		sum(0) as YTB_video_mos_num,
		sum(0) as YTB_video_mos_den,
		null as YTB_URL,
		sum(0) as [YTB_1st_Resolution_Num],
		sum(0) as [YTB_1st_Resolution_Den],
		sum(0) as [YTB_2nd_Resolution_Num],
		sum(0) as [YTB_2nd_Resolution_Den],
		sum(0) as [YTB_FirstChangeFromInit_Num],
		sum(0) as [YTB_FirstChangeFromInit_Den],
		sum(0) as [YTB_initialResolution_Num],
		sum(0) as [YTB_initialResolution_Den],
		sum(0) as [YTB_finalResolution_Num],
		sum(0) as [YTB_finalResolution_Den],
		sum(0) as [YTB_video_resolution_144p_Num],
		sum(0) as [YTB_video_resolution_144p_Den],
		sum(0) as [YTB_video_mos_144p_Num],
		sum(0) as [YTB_video_mos_144p_Den],
		sum(0) as [YTB_video_resolution_%144p_Num],
		sum(0) as [YTB_video_resolution_%144p_Den],
		sum(0) as [YTB_video_resolution_240p_Num],
		sum(0) as [YTB_video_resolution_240p_Den],
		sum(0) as [YTB_video_mos_240p_Num],
		sum(0) as [YTB_video_mos_240p_Den],
		sum(0) as [YTB_video_resolution_%240p_Num],
		sum(0) as [YTB_video_resolution_%240p_Den],
		sum(0) as [YTB_video_resolution_360p_Num],
		sum(0) as [YTB_video_resolution_360p_Den],
		sum(0) as [YTB_video_mos_360p_Num],
		sum(0) as [YTB_video_mos_360p_Den],
		sum(0) as [YTB_video_resolution_%360p_Num],
		sum(0) as [YTB_video_resolution_%360p_Den],
		sum(0) as [YTB_video_resolution_480p_Num],
		sum(0) as [YTB_video_resolution_480p_Den],
		sum(0) as [YTB_video_mos_480p_Num],
		sum(0) as [YTB_video_mos_480p_Den],
		sum(0) as [YTB_video_resolution_%480p_Num],
		sum(0) as [YTB_video_resolution_%480p_Den],
		sum(0) as [YTB_video_resolution_720p_Num],
		sum(0) as [YTB_video_resolution_720p_Den],
		sum(0) as [YTB_video_mos_720p_Num],
		sum(0) as [YTB_video_mos_720p_Den],
		sum(0) as [YTB_video_resolution_%720p_Num],
		sum(0) as [YTB_video_resolution_%720p_Den],
		sum(0) as [YTB_video_resolution_1080p_Num],
		sum(0) as [YTB_video_resolution_1080p_Den],
		sum(0) as [YTB_video_mos_1080p_Num],
		sum(0) as [YTB_video_mos_1080p_Den],
		sum(0) as [YTB_video_resolution_%1080p_Num],
		sum(0) as [YTB_video_resolution_%1080p_Den],

		sum(0) as Avg_Video_StarTime_Num_Video1, sum(0) as avg_Video_startTime_Den_Video1, sum(0) as Reproductions_WO_Interruptions_Video1, sum(0) as Reproductions_WO_Interruptions_Den_Video1,
		sum(0) as B4_Video1, sum(0) as [ReproduccionesHD_Video1], sum(0) as [Successful video download_Video1], sum(0) as [Reproducciones_Video1], sum(0) as [Fails_Video1],sum(0) as YTB_video_resolution_num_Video1,
		sum(0) as YTB_video_resolution_den_Video1, sum(0) as YTB_video_mos_num_Video1, sum(0) as YTB_video_mos_den_Video1, null   as [YTB_url_Video1], sum(0) as [YTB_1st_Resolution_Num_Video1],
		sum(0) as [YTB_1st_Resolution_Den_Video1], sum(0) as [YTB_2nd_Resolution_Num_Video1], sum(0) as [YTB_2nd_Resolution_Den_Video1], sum(0) as [YTB_FirstChangeFromInit_Num_Video1],
		sum(0) as [YTB_FirstChangeFromInit_Den_Video1], sum(0) as [YTB_initialResolution_Num_Video1], sum(0) as [YTB_initialResolution_Den_Video1], sum(0) as [YTB_finalResolution_Num_Video1],
		sum(0) as [YTB_finalResolution_Den_Video1], sum(0) as [YTB_video_resolution_144p_Num_Video1], sum(0) as [YTB_video_resolution_144p_Den_Video1], sum(0) as [YTB_video_mos_144p_Num_Video1],
		sum(0) as [YTB_video_mos_144p_Den_Video1],sum(0) as [YTB_video_resolution_%144p_Num_Video1],sum(0) as [YTB_video_resolution_%144p_Den_Video1],sum(0) as [YTB_video_resolution_240p_Num_Video1],
		sum(0) as [YTB_video_resolution_240p_Den_Video1], sum(0) as [YTB_video_mos_240p_Num_Video1], sum(0) as [YTB_video_mos_240p_Den_Video1], sum(0) as [YTB_video_resolution_%240p_Num_Video1],
		sum(0) as [YTB_video_resolution_%240p_Den_Video1], sum(0) as [YTB_video_resolution_360p_Num_Video1], sum(0) as [YTB_video_resolution_360p_Den_Video1], sum(0) as [YTB_video_mos_360p_Num_Video1],
		sum(0) as [YTB_video_mos_360p_Den_Video1], sum(0) as [YTB_video_resolution_%360p_Num_Video1], sum(0) as [YTB_video_resolution_%360p_Den_Video1], sum(0) as [YTB_video_resolution_480p_Num_Video1],
		sum(0) as [YTB_video_resolution_480p_Den_Video1], sum(0) as [YTB_video_mos_480p_Num_Video1], sum(0) as [YTB_video_mos_480p_Den_Video1], sum(0) as [YTB_video_resolution_%480p_Num_Video1],
		sum(0) as [YTB_video_resolution_%480p_Den_Video1], sum(0) as [YTB_video_resolution_720p_Num_Video1], sum(0) as [YTB_video_resolution_720p_Den_Video1], sum(0) as [YTB_video_mos_720p_Num_Video1],
		sum(0) as [YTB_video_mos_720p_Den_Video1], sum(0) as [YTB_video_resolution_%720p_Num_Video1], sum(0) as [YTB_video_resolution_%720p_Den_Video1],
		sum(0) as [YTB_video_resolution_1080p_Num_Video1], sum(0) as [YTB_video_resolution_1080p_Den_Video1], sum(0) as [YTB_video_mos_1080p_Num_Video1], sum(0) as [YTB_video_mos_1080p_Den_Video1],
		sum(0) as [YTB_video_resolution_%1080p_Num_Video1], sum(0) as [YTB_video_resolution_%1080p_Den_Video1],

		sum(0) as Avg_Video_StarTime_Num_Video2, sum(0) as avg_Video_startTime_Den_Video2, sum(0) as Reproductions_WO_Interruptions_Video2, sum(0) as Reproductions_WO_Interruptions_Den_Video2,
		sum(0) as B4_Video2, sum(0) as [ReproduccionesHD_Video2], sum(0) as [Successful video download_Video2], sum(0) as [Reproducciones_Video2], sum(0) as [Fails_Video2],sum(0) as YTB_video_resolution_num_Video2,
		sum(0) as YTB_video_resolution_den_Video2, sum(0) as YTB_video_mos_num_Video2, sum(0) as YTB_video_mos_den_Video2, null   as [YTB_url_Video2], sum(0) as [YTB_1st_Resolution_Num_Video2],
		sum(0) as [YTB_1st_Resolution_Den_Video2], sum(0) as [YTB_2nd_Resolution_Num_Video2], sum(0) as [YTB_2nd_Resolution_Den_Video2], sum(0) as [YTB_FirstChangeFromInit_Num_Video2],
		sum(0) as [YTB_FirstChangeFromInit_Den_Video2], sum(0) as [YTB_initialResolution_Num_Video2], sum(0) as [YTB_initialResolution_Den_Video2], sum(0) as [YTB_finalResolution_Num_Video2],
		sum(0) as [YTB_finalResolution_Den_Video2], sum(0) as [YTB_video_resolution_144p_Num_Video2], sum(0) as [YTB_video_resolution_144p_Den_Video2], sum(0) as [YTB_video_mos_144p_Num_Video2],
		sum(0) as [YTB_video_mos_144p_Den_Video2],sum(0) as [YTB_video_resolution_%144p_Num_Video2],sum(0) as [YTB_video_resolution_%144p_Den_Video2],sum(0) as [YTB_video_resolution_240p_Num_Video2],
		sum(0) as [YTB_video_resolution_240p_Den_Video2], sum(0) as [YTB_video_mos_240p_Num_Video2], sum(0) as [YTB_video_mos_240p_Den_Video2], sum(0) as [YTB_video_resolution_%240p_Num_Video2],
		sum(0) as [YTB_video_resolution_%240p_Den_Video2], sum(0) as [YTB_video_resolution_360p_Num_Video2], sum(0) as [YTB_video_resolution_360p_Den_Video2], sum(0) as [YTB_video_mos_360p_Num_Video2],
		sum(0) as [YTB_video_mos_360p_Den_Video2], sum(0) as [YTB_video_resolution_%360p_Num_Video2], sum(0) as [YTB_video_resolution_%360p_Den_Video2], sum(0) as [YTB_video_resolution_480p_Num_Video2],
		sum(0) as [YTB_video_resolution_480p_Den_Video2], sum(0) as [YTB_video_mos_480p_Num_Video2], sum(0) as [YTB_video_mos_480p_Den_Video2], sum(0) as [YTB_video_resolution_%480p_Num_Video2],
		sum(0) as [YTB_video_resolution_%480p_Den_Video2], sum(0) as [YTB_video_resolution_720p_Num_Video2], sum(0) as [YTB_video_resolution_720p_Den_Video2], sum(0) as [YTB_video_mos_720p_Num_Video2],
		sum(0) as [YTB_video_mos_720p_Den_Video2], sum(0) as [YTB_video_resolution_%720p_Num_Video2], sum(0) as [YTB_video_resolution_%720p_Den_Video2],
		sum(0) as [YTB_video_resolution_1080p_Num_Video2], sum(0) as [YTB_video_resolution_1080p_Den_Video2], sum(0) as [YTB_video_mos_1080p_Num_Video2], sum(0) as [YTB_video_mos_1080p_Den_Video2],
		sum(0) as [YTB_video_resolution_%1080p_Num_Video2], sum(0) as [YTB_video_resolution_%1080p_Den_Video2],

		sum(0) as Avg_Video_StarTime_Num_Video3, sum(0) as avg_Video_startTime_Den_Video3, sum(0) as Reproductions_WO_Interruptions_Video3, sum(0) as Reproductions_WO_Interruptions_Den_Video3,
		sum(0) as B4_Video3, sum(0) as [ReproduccionesHD_Video3], sum(0) as [Successful video download_Video3], sum(0) as [Reproducciones_Video3], sum(0) as [Fails_Video3],sum(0) as YTB_video_resolution_num_Video3,
		sum(0) as YTB_video_resolution_den_Video3, sum(0) as YTB_video_mos_num_Video3, sum(0) as YTB_video_mos_den_Video3, null   as [YTB_url_Video3], sum(0) as [YTB_1st_Resolution_Num_Video3],
		sum(0) as [YTB_1st_Resolution_Den_Video3], sum(0) as [YTB_2nd_Resolution_Num_Video3], sum(0) as [YTB_2nd_Resolution_Den_Video3], sum(0) as [YTB_FirstChangeFromInit_Num_Video3],
		sum(0) as [YTB_FirstChangeFromInit_Den_Video3], sum(0) as [YTB_initialResolution_Num_Video3], sum(0) as [YTB_initialResolution_Den_Video3], sum(0) as [YTB_finalResolution_Num_Video3],
		sum(0) as [YTB_finalResolution_Den_Video3], sum(0) as [YTB_video_resolution_144p_Num_Video3], sum(0) as [YTB_video_resolution_144p_Den_Video3], sum(0) as [YTB_video_mos_144p_Num_Video3],
		sum(0) as [YTB_video_mos_144p_Den_Video3],sum(0) as [YTB_video_resolution_%144p_Num_Video3],sum(0) as [YTB_video_resolution_%144p_Den_Video3],sum(0) as [YTB_video_resolution_240p_Num_Video3],
		sum(0) as [YTB_video_resolution_240p_Den_Video3], sum(0) as [YTB_video_mos_240p_Num_Video3], sum(0) as [YTB_video_mos_240p_Den_Video3], sum(0) as [YTB_video_resolution_%240p_Num_Video3],
		sum(0) as [YTB_video_resolution_%240p_Den_Video3], sum(0) as [YTB_video_resolution_360p_Num_Video3], sum(0) as [YTB_video_resolution_360p_Den_Video3], sum(0) as [YTB_video_mos_360p_Num_Video3],
		sum(0) as [YTB_video_mos_360p_Den_Video3], sum(0) as [YTB_video_resolution_%360p_Num_Video3], sum(0) as [YTB_video_resolution_%360p_Den_Video3], sum(0) as [YTB_video_resolution_480p_Num_Video3],
		sum(0) as [YTB_video_resolution_480p_Den_Video3], sum(0) as [YTB_video_mos_480p_Num_Video3], sum(0) as [YTB_video_mos_480p_Den_Video3], sum(0) as [YTB_video_resolution_%480p_Num_Video3],
		sum(0) as [YTB_video_resolution_%480p_Den_Video3], sum(0) as [YTB_video_resolution_720p_Num_Video3], sum(0) as [YTB_video_resolution_720p_Den_Video3], sum(0) as [YTB_video_mos_720p_Num_Video3],
		sum(0) as [YTB_video_mos_720p_Den_Video3], sum(0) as [YTB_video_resolution_%720p_Num_Video3], sum(0) as [YTB_video_resolution_%720p_Den_Video3],
		sum(0) as [YTB_video_resolution_1080p_Num_Video3], sum(0) as [YTB_video_resolution_1080p_Den_Video3], sum(0) as [YTB_video_mos_1080p_Num_Video3], sum(0) as [YTB_video_mos_1080p_Den_Video3],
		sum(0) as [YTB_video_resolution_%1080p_Num_Video3], sum(0) as [YTB_video_resolution_%1080p_Den_Video3],

		sum(0) as Avg_Video_StarTime_Num_Video4, sum(0) as avg_Video_startTime_Den_Video4, sum(0) as Reproductions_WO_Interruptions_Video4, sum(0) as Reproductions_WO_Interruptions_Den_Video4,
		sum(0) as B4_Video4, sum(0) as [ReproduccionesHD_Video4], sum(0) as [Successful video download_Video4], sum(0) as [Reproducciones_Video4], sum(0) as [Fails_Video4],sum(0) as YTB_video_resolution_num_Video4,
		sum(0) as YTB_video_resolution_den_Video4, sum(0) as YTB_video_mos_num_Video4, sum(0) as YTB_video_mos_den_Video4, null   as [YTB_url_Video4], sum(0) as [YTB_1st_Resolution_Num_Video4],
		sum(0) as [YTB_1st_Resolution_Den_Video4], sum(0) as [YTB_2nd_Resolution_Num_Video4], sum(0) as [YTB_2nd_Resolution_Den_Video4], sum(0) as [YTB_FirstChangeFromInit_Num_Video4],
		sum(0) as [YTB_FirstChangeFromInit_Den_Video4], sum(0) as [YTB_initialResolution_Num_Video4], sum(0) as [YTB_initialResolution_Den_Video4], sum(0) as [YTB_finalResolution_Num_Video4],
		sum(0) as [YTB_finalResolution_Den_Video4], sum(0) as [YTB_video_resolution_144p_Num_Video4], sum(0) as [YTB_video_resolution_144p_Den_Video4], sum(0) as [YTB_video_mos_144p_Num_Video4],
		sum(0) as [YTB_video_mos_144p_Den_Video4],sum(0) as [YTB_video_resolution_%144p_Num_Video4],sum(0) as [YTB_video_resolution_%144p_Den_Video4],sum(0) as [YTB_video_resolution_240p_Num_Video4],
		sum(0) as [YTB_video_resolution_240p_Den_Video4], sum(0) as [YTB_video_mos_240p_Num_Video4], sum(0) as [YTB_video_mos_240p_Den_Video4], sum(0) as [YTB_video_resolution_%240p_Num_Video4],
		sum(0) as [YTB_video_resolution_%240p_Den_Video4], sum(0) as [YTB_video_resolution_360p_Num_Video4], sum(0) as [YTB_video_resolution_360p_Den_Video4], sum(0) as [YTB_video_mos_360p_Num_Video4],
		sum(0) as [YTB_video_mos_360p_Den_Video4], sum(0) as [YTB_video_resolution_%360p_Num_Video4], sum(0) as [YTB_video_resolution_%360p_Den_Video4], sum(0) as [YTB_video_resolution_480p_Num_Video4],
		sum(0) as [YTB_video_resolution_480p_Den_Video4], sum(0) as [YTB_video_mos_480p_Num_Video4], sum(0) as [YTB_video_mos_480p_Den_Video4], sum(0) as [YTB_video_resolution_%480p_Num_Video4],
		sum(0) as [YTB_video_resolution_%480p_Den_Video4], sum(0) as [YTB_video_resolution_720p_Num_Video4], sum(0) as [YTB_video_resolution_720p_Den_Video4], sum(0) as [YTB_video_mos_720p_Num_Video4],
		sum(0) as [YTB_video_mos_720p_Den_Video4], sum(0) as [YTB_video_resolution_%720p_Num_Video4], sum(0) as [YTB_video_resolution_%720p_Den_Video4],
		sum(0) as [YTB_video_resolution_1080p_Num_Video4], sum(0) as [YTB_video_resolution_1080p_Den_Video4], sum(0) as [YTB_video_mos_1080p_Num_Video4], sum(0) as [YTB_video_mos_1080p_Den_Video4],
		sum(0) as [YTB_video_resolution_%1080p_Num_Video4], sum(0) as [YTB_video_resolution_%1080p_Den_Video4],

		-- Parametros de configuracion:
		t.ASideDevice as ASideDevice, t.BSideDevice as BSideDevice, t.SWVersion as SWVersion, null as YTB_Version		

	from [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_Youtube] t
		left outer join [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_Youtube_4G] YTB4G on (isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(YTB4G.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=YTB4G.mnc and t.Date_Reporting=YTB4G.Date_Reporting and t.entidad=YTB4G.entidad and t.Aggr_Type=YTB4G.Aggr_Type and t.Report_Type=YTB4G.Report_Type and t.meas_round=YTB4G.meas_round)
		, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, case when  t.entidad like 'AVE-%' or  t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end, 
		t.mnc, t.meas_round, t.Date_Reporting, t.Week_Reporting, t.entidad, t.Report_Type, t.Aggr_Type,
		t.ASideDevice, t.BSideDevice, t.SWVersion--, t.Region_VF, t.Region_OSP

	-------------------
	union all
	select  -- Road 4GOnly - SD
		p.codigo_ine, 'Roads' vf_environment, t.mnc, t.meas_round, t.Date_Reporting as meas_date, t.Week_Reporting as meas_week, 
		'Road 4GOnly' as meas_Tech, 'Youtube SD' as Test_type, 'Downlink' as Direction,  t.entidad as vf_entity, t.Report_Type, t.Aggr_Type,
	
		sum(YTB4G.[Time To First Image]*(YTB4G.Reproducciones-YTB4G.Fails)) as Avg_Video_StarTime_Num,
		sum((YTB4G.Reproducciones-YTB4G.Fails)) as avg_Video_startTime_Den,
		sum(YTB4G.ReproduccionesSinInt) as Reproductions_WO_Interruptions,
		sum(YTB4G.Reproducciones) as Reproductions_WO_Interruptions_Den,
		sum(0) as B4,
		sum(0) as [ReproduccionesHD],
		sum(0) as [Successful video download],
		sum(0) as [Reproducciones],
		sum(0) as YTB_video_resolution_num,
		sum(0) as YTB_video_resolution_den,
		sum(0) as YTB_video_mos_num,
		sum(0) as YTB_video_mos_den,
		null as YTB_URL,
		sum(0) as [YTB_1st_Resolution_Num],
		sum(0) as [YTB_1st_Resolution_Den],
		sum(0) as [YTB_2nd_Resolution_Num],
		sum(0) as [YTB_2nd_Resolution_Den],
		sum(0) as [YTB_FirstChangeFromInit_Num],
		sum(0) as [YTB_FirstChangeFromInit_Den],
		sum(0) as [YTB_initialResolution_Num],
		sum(0) as [YTB_initialResolution_Den],
		sum(0) as [YTB_finalResolution_Num],
		sum(0) as [YTB_finalResolution_Den],
		sum(0) as [YTB_video_resolution_144p_Num],
		sum(0) as [YTB_video_resolution_144p_Den],
		sum(0) as [YTB_video_mos_144p_Num],
		sum(0) as [YTB_video_mos_144p_Den],
		sum(0) as [YTB_video_resolution_%144p_Num],
		sum(0) as [YTB_video_resolution_%144p_Den],
		sum(0) as [YTB_video_resolution_240p_Num],
		sum(0) as [YTB_video_resolution_240p_Den],
		sum(0) as [YTB_video_mos_240p_Num],
		sum(0) as [YTB_video_mos_240p_Den],
		sum(0) as [YTB_video_resolution_%240p_Num],
		sum(0) as [YTB_video_resolution_%240p_Den],
		sum(0) as [YTB_video_resolution_360p_Num],
		sum(0) as [YTB_video_resolution_360p_Den],
		sum(0) as [YTB_video_mos_360p_Num],
		sum(0) as [YTB_video_mos_360p_Den],
		sum(0) as [YTB_video_resolution_%360p_Num],
		sum(0) as [YTB_video_resolution_%360p_Den],
		sum(0) as [YTB_video_resolution_480p_Num],
		sum(0) as [YTB_video_resolution_480p_Den],
		sum(0) as [YTB_video_mos_480p_Num],
		sum(0) as [YTB_video_mos_480p_Den],
		sum(0) as [YTB_video_resolution_%480p_Num],
		sum(0) as [YTB_video_resolution_%480p_Den],
		sum(0) as [YTB_video_resolution_720p_Num],
		sum(0) as [YTB_video_resolution_720p_Den],
		sum(0) as [YTB_video_mos_720p_Num],
		sum(0) as [YTB_video_mos_720p_Den],
		sum(0) as [YTB_video_resolution_%720p_Num],
		sum(0) as [YTB_video_resolution_%720p_Den],
		sum(0) as [YTB_video_resolution_1080p_Num],
		sum(0) as [YTB_video_resolution_1080p_Den],
		sum(0) as [YTB_video_mos_1080p_Num],
		sum(0) as [YTB_video_mos_1080p_Den],
		sum(0) as [YTB_video_resolution_%1080p_Num],
		sum(0) as [YTB_video_resolution_%1080p_Den],
		
		sum(0) as Avg_Video_StarTime_Num_Video1, sum(0) as avg_Video_startTime_Den_Video1, sum(0) as Reproductions_WO_Interruptions_Video1, sum(0) as Reproductions_WO_Interruptions_Den_Video1,
		sum(0) as B4_Video1, sum(0) as [ReproduccionesHD_Video1], sum(0) as [Successful video download_Video1], sum(0) as [Reproducciones_Video1], sum(0) as [Fails_Video1],sum(0) as YTB_video_resolution_num_Video1,
		sum(0) as YTB_video_resolution_den_Video1, sum(0) as YTB_video_mos_num_Video1, sum(0) as YTB_video_mos_den_Video1, null   as [YTB_url_Video1], sum(0) as [YTB_1st_Resolution_Num_Video1],
		sum(0) as [YTB_1st_Resolution_Den_Video1], sum(0) as [YTB_2nd_Resolution_Num_Video1], sum(0) as [YTB_2nd_Resolution_Den_Video1], sum(0) as [YTB_FirstChangeFromInit_Num_Video1],
		sum(0) as [YTB_FirstChangeFromInit_Den_Video1], sum(0) as [YTB_initialResolution_Num_Video1], sum(0) as [YTB_initialResolution_Den_Video1], sum(0) as [YTB_finalResolution_Num_Video1],
		sum(0) as [YTB_finalResolution_Den_Video1], sum(0) as [YTB_video_resolution_144p_Num_Video1], sum(0) as [YTB_video_resolution_144p_Den_Video1], sum(0) as [YTB_video_mos_144p_Num_Video1],
		sum(0) as [YTB_video_mos_144p_Den_Video1],sum(0) as [YTB_video_resolution_%144p_Num_Video1],sum(0) as [YTB_video_resolution_%144p_Den_Video1],sum(0) as [YTB_video_resolution_240p_Num_Video1],
		sum(0) as [YTB_video_resolution_240p_Den_Video1], sum(0) as [YTB_video_mos_240p_Num_Video1], sum(0) as [YTB_video_mos_240p_Den_Video1], sum(0) as [YTB_video_resolution_%240p_Num_Video1],
		sum(0) as [YTB_video_resolution_%240p_Den_Video1], sum(0) as [YTB_video_resolution_360p_Num_Video1], sum(0) as [YTB_video_resolution_360p_Den_Video1], sum(0) as [YTB_video_mos_360p_Num_Video1],
		sum(0) as [YTB_video_mos_360p_Den_Video1], sum(0) as [YTB_video_resolution_%360p_Num_Video1], sum(0) as [YTB_video_resolution_%360p_Den_Video1], sum(0) as [YTB_video_resolution_480p_Num_Video1],
		sum(0) as [YTB_video_resolution_480p_Den_Video1], sum(0) as [YTB_video_mos_480p_Num_Video1], sum(0) as [YTB_video_mos_480p_Den_Video1], sum(0) as [YTB_video_resolution_%480p_Num_Video1],
		sum(0) as [YTB_video_resolution_%480p_Den_Video1], sum(0) as [YTB_video_resolution_720p_Num_Video1], sum(0) as [YTB_video_resolution_720p_Den_Video1], sum(0) as [YTB_video_mos_720p_Num_Video1],
		sum(0) as [YTB_video_mos_720p_Den_Video1], sum(0) as [YTB_video_resolution_%720p_Num_Video1], sum(0) as [YTB_video_resolution_%720p_Den_Video1],
		sum(0) as [YTB_video_resolution_1080p_Num_Video1], sum(0) as [YTB_video_resolution_1080p_Den_Video1], sum(0) as [YTB_video_mos_1080p_Num_Video1], sum(0) as [YTB_video_mos_1080p_Den_Video1],
		sum(0) as [YTB_video_resolution_%1080p_Num_Video1], sum(0) as [YTB_video_resolution_%1080p_Den_Video1],

		sum(0) as Avg_Video_StarTime_Num_Video2, sum(0) as avg_Video_startTime_Den_Video2, sum(0) as Reproductions_WO_Interruptions_Video2, sum(0) as Reproductions_WO_Interruptions_Den_Video2,
		sum(0) as B4_Video2, sum(0) as [ReproduccionesHD_Video2], sum(0) as [Successful video download_Video2], sum(0) as [Reproducciones_Video2], sum(0) as [Fails_Video2],sum(0) as YTB_video_resolution_num_Video2,
		sum(0) as YTB_video_resolution_den_Video2, sum(0) as YTB_video_mos_num_Video2, sum(0) as YTB_video_mos_den_Video2, null   as [YTB_url_Video2], sum(0) as [YTB_1st_Resolution_Num_Video2],
		sum(0) as [YTB_1st_Resolution_Den_Video2], sum(0) as [YTB_2nd_Resolution_Num_Video2], sum(0) as [YTB_2nd_Resolution_Den_Video2], sum(0) as [YTB_FirstChangeFromInit_Num_Video2],
		sum(0) as [YTB_FirstChangeFromInit_Den_Video2], sum(0) as [YTB_initialResolution_Num_Video2], sum(0) as [YTB_initialResolution_Den_Video2], sum(0) as [YTB_finalResolution_Num_Video2],
		sum(0) as [YTB_finalResolution_Den_Video2], sum(0) as [YTB_video_resolution_144p_Num_Video2], sum(0) as [YTB_video_resolution_144p_Den_Video2], sum(0) as [YTB_video_mos_144p_Num_Video2],
		sum(0) as [YTB_video_mos_144p_Den_Video2],sum(0) as [YTB_video_resolution_%144p_Num_Video2],sum(0) as [YTB_video_resolution_%144p_Den_Video2],sum(0) as [YTB_video_resolution_240p_Num_Video2],
		sum(0) as [YTB_video_resolution_240p_Den_Video2], sum(0) as [YTB_video_mos_240p_Num_Video2], sum(0) as [YTB_video_mos_240p_Den_Video2], sum(0) as [YTB_video_resolution_%240p_Num_Video2],
		sum(0) as [YTB_video_resolution_%240p_Den_Video2], sum(0) as [YTB_video_resolution_360p_Num_Video2], sum(0) as [YTB_video_resolution_360p_Den_Video2], sum(0) as [YTB_video_mos_360p_Num_Video2],
		sum(0) as [YTB_video_mos_360p_Den_Video2], sum(0) as [YTB_video_resolution_%360p_Num_Video2], sum(0) as [YTB_video_resolution_%360p_Den_Video2], sum(0) as [YTB_video_resolution_480p_Num_Video2],
		sum(0) as [YTB_video_resolution_480p_Den_Video2], sum(0) as [YTB_video_mos_480p_Num_Video2], sum(0) as [YTB_video_mos_480p_Den_Video2], sum(0) as [YTB_video_resolution_%480p_Num_Video2],
		sum(0) as [YTB_video_resolution_%480p_Den_Video2], sum(0) as [YTB_video_resolution_720p_Num_Video2], sum(0) as [YTB_video_resolution_720p_Den_Video2], sum(0) as [YTB_video_mos_720p_Num_Video2],
		sum(0) as [YTB_video_mos_720p_Den_Video2], sum(0) as [YTB_video_resolution_%720p_Num_Video2], sum(0) as [YTB_video_resolution_%720p_Den_Video2],
		sum(0) as [YTB_video_resolution_1080p_Num_Video2], sum(0) as [YTB_video_resolution_1080p_Den_Video2], sum(0) as [YTB_video_mos_1080p_Num_Video2], sum(0) as [YTB_video_mos_1080p_Den_Video2],
		sum(0) as [YTB_video_resolution_%1080p_Num_Video2], sum(0) as [YTB_video_resolution_%1080p_Den_Video2],

		sum(0) as Avg_Video_StarTime_Num_Video3, sum(0) as avg_Video_startTime_Den_Video3, sum(0) as Reproductions_WO_Interruptions_Video3, sum(0) as Reproductions_WO_Interruptions_Den_Video3,
		sum(0) as B4_Video3, sum(0) as [ReproduccionesHD_Video3], sum(0) as [Successful video download_Video3], sum(0) as [Reproducciones_Video3], sum(0) as [Fails_Video3],sum(0) as YTB_video_resolution_num_Video3,
		sum(0) as YTB_video_resolution_den_Video3, sum(0) as YTB_video_mos_num_Video3, sum(0) as YTB_video_mos_den_Video3, null   as [YTB_url_Video3], sum(0) as [YTB_1st_Resolution_Num_Video3],
		sum(0) as [YTB_1st_Resolution_Den_Video3], sum(0) as [YTB_2nd_Resolution_Num_Video3], sum(0) as [YTB_2nd_Resolution_Den_Video3], sum(0) as [YTB_FirstChangeFromInit_Num_Video3],
		sum(0) as [YTB_FirstChangeFromInit_Den_Video3], sum(0) as [YTB_initialResolution_Num_Video3], sum(0) as [YTB_initialResolution_Den_Video3], sum(0) as [YTB_finalResolution_Num_Video3],
		sum(0) as [YTB_finalResolution_Den_Video3], sum(0) as [YTB_video_resolution_144p_Num_Video3], sum(0) as [YTB_video_resolution_144p_Den_Video3], sum(0) as [YTB_video_mos_144p_Num_Video3],
		sum(0) as [YTB_video_mos_144p_Den_Video3],sum(0) as [YTB_video_resolution_%144p_Num_Video3],sum(0) as [YTB_video_resolution_%144p_Den_Video3],sum(0) as [YTB_video_resolution_240p_Num_Video3],
		sum(0) as [YTB_video_resolution_240p_Den_Video3], sum(0) as [YTB_video_mos_240p_Num_Video3], sum(0) as [YTB_video_mos_240p_Den_Video3], sum(0) as [YTB_video_resolution_%240p_Num_Video3],
		sum(0) as [YTB_video_resolution_%240p_Den_Video3], sum(0) as [YTB_video_resolution_360p_Num_Video3], sum(0) as [YTB_video_resolution_360p_Den_Video3], sum(0) as [YTB_video_mos_360p_Num_Video3],
		sum(0) as [YTB_video_mos_360p_Den_Video3], sum(0) as [YTB_video_resolution_%360p_Num_Video3], sum(0) as [YTB_video_resolution_%360p_Den_Video3], sum(0) as [YTB_video_resolution_480p_Num_Video3],
		sum(0) as [YTB_video_resolution_480p_Den_Video3], sum(0) as [YTB_video_mos_480p_Num_Video3], sum(0) as [YTB_video_mos_480p_Den_Video3], sum(0) as [YTB_video_resolution_%480p_Num_Video3],
		sum(0) as [YTB_video_resolution_%480p_Den_Video3], sum(0) as [YTB_video_resolution_720p_Num_Video3], sum(0) as [YTB_video_resolution_720p_Den_Video3], sum(0) as [YTB_video_mos_720p_Num_Video3],
		sum(0) as [YTB_video_mos_720p_Den_Video3], sum(0) as [YTB_video_resolution_%720p_Num_Video3], sum(0) as [YTB_video_resolution_%720p_Den_Video3],
		sum(0) as [YTB_video_resolution_1080p_Num_Video3], sum(0) as [YTB_video_resolution_1080p_Den_Video3], sum(0) as [YTB_video_mos_1080p_Num_Video3], sum(0) as [YTB_video_mos_1080p_Den_Video3],
		sum(0) as [YTB_video_resolution_%1080p_Num_Video3], sum(0) as [YTB_video_resolution_%1080p_Den_Video3],

		sum(0) as Avg_Video_StarTime_Num_Video4, sum(0) as avg_Video_startTime_Den_Video4, sum(0) as Reproductions_WO_Interruptions_Video4, sum(0) as Reproductions_WO_Interruptions_Den_Video4,
		sum(0) as B4_Video4, sum(0) as [ReproduccionesHD_Video4], sum(0) as [Successful video download_Video4], sum(0) as [Reproducciones_Video4], sum(0) as [Fails_Video4],sum(0) as YTB_video_resolution_num_Video4,
		sum(0) as YTB_video_resolution_den_Video4, sum(0) as YTB_video_mos_num_Video4, sum(0) as YTB_video_mos_den_Video4, null   as [YTB_url_Video4], sum(0) as [YTB_1st_Resolution_Num_Video4],
		sum(0) as [YTB_1st_Resolution_Den_Video4], sum(0) as [YTB_2nd_Resolution_Num_Video4], sum(0) as [YTB_2nd_Resolution_Den_Video4], sum(0) as [YTB_FirstChangeFromInit_Num_Video4],
		sum(0) as [YTB_FirstChangeFromInit_Den_Video4], sum(0) as [YTB_initialResolution_Num_Video4], sum(0) as [YTB_initialResolution_Den_Video4], sum(0) as [YTB_finalResolution_Num_Video4],
		sum(0) as [YTB_finalResolution_Den_Video4], sum(0) as [YTB_video_resolution_144p_Num_Video4], sum(0) as [YTB_video_resolution_144p_Den_Video4], sum(0) as [YTB_video_mos_144p_Num_Video4],
		sum(0) as [YTB_video_mos_144p_Den_Video4],sum(0) as [YTB_video_resolution_%144p_Num_Video4],sum(0) as [YTB_video_resolution_%144p_Den_Video4],sum(0) as [YTB_video_resolution_240p_Num_Video4],
		sum(0) as [YTB_video_resolution_240p_Den_Video4], sum(0) as [YTB_video_mos_240p_Num_Video4], sum(0) as [YTB_video_mos_240p_Den_Video4], sum(0) as [YTB_video_resolution_%240p_Num_Video4],
		sum(0) as [YTB_video_resolution_%240p_Den_Video4], sum(0) as [YTB_video_resolution_360p_Num_Video4], sum(0) as [YTB_video_resolution_360p_Den_Video4], sum(0) as [YTB_video_mos_360p_Num_Video4],
		sum(0) as [YTB_video_mos_360p_Den_Video4], sum(0) as [YTB_video_resolution_%360p_Num_Video4], sum(0) as [YTB_video_resolution_%360p_Den_Video4], sum(0) as [YTB_video_resolution_480p_Num_Video4],
		sum(0) as [YTB_video_resolution_480p_Den_Video4], sum(0) as [YTB_video_mos_480p_Num_Video4], sum(0) as [YTB_video_mos_480p_Den_Video4], sum(0) as [YTB_video_resolution_%480p_Num_Video4],
		sum(0) as [YTB_video_resolution_%480p_Den_Video4], sum(0) as [YTB_video_resolution_720p_Num_Video4], sum(0) as [YTB_video_resolution_720p_Den_Video4], sum(0) as [YTB_video_mos_720p_Num_Video4],
		sum(0) as [YTB_video_mos_720p_Den_Video4], sum(0) as [YTB_video_resolution_%720p_Num_Video4], sum(0) as [YTB_video_resolution_%720p_Den_Video4],
		sum(0) as [YTB_video_resolution_1080p_Num_Video4], sum(0) as [YTB_video_resolution_1080p_Den_Video4], sum(0) as [YTB_video_mos_1080p_Num_Video4], sum(0) as [YTB_video_mos_1080p_Den_Video4],
		sum(0) as [YTB_video_resolution_%1080p_Num_Video4], sum(0) as [YTB_video_resolution_%1080p_Den_Video4],

		-- Parametros de configuracion:
		t.ASideDevice as ASideDevice, t.BSideDevice as BSideDevice, t.SWVersion as SWVersion, null as YTB_Version

	from [aggrData4G_ROAD].dbo.[lcc_aggr_sp_MDD_Data_Youtube] t
		left outer join [aggrData4G_ROAD].dbo.[lcc_aggr_sp_MDD_Data_Youtube_4G] YTB4G on (isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(YTB4G.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=YTB4G.mnc and t.Date_Reporting=YTB4G.Date_Reporting and t.entidad=YTB4G.entidad and t.Aggr_Type=YTB4G.Aggr_Type and t.Report_Type=YTB4G.Report_Type and t.meas_round=YTB4G.meas_round)
		, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, t.mnc, t.meas_round, t.Date_Reporting, t.Week_Reporting, t.entidad, t.Report_Type, t.Aggr_Type, 
		t.ASideDevice, t.BSideDevice, t.SWVersion --,t.Region_VF, t.Region_OSP

	-------------------------------------
	-- Video Streaming 4G_CA_Only		YTB SD
	-------------------------------------	
	insert into _RI_Data_y
	select  -- 4G_CA_Only SD
		p.codigo_ine, case when  t.entidad like 'AVE-%' or  t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment, t.mnc, t.meas_round, t.Date_Reporting as meas_date, t.Week_Reporting as meas_week, 
		'4G_CA_Only' as meas_Tech, 'Youtube SD' as Test_type, 'Downlink' as Direction,  t.entidad as vf_entity, t.Report_Type, t.Aggr_Type,
	
		sum(YTBCA.[Time To First Image]*(YTBCA.Reproducciones-YTBCA.Fails)) as Avg_Video_StarTime_Num,
		sum((YTBCA.Reproducciones-YTBCA.Fails)) as avg_Video_startTime_Den,
		sum(YTBCA.ReproduccionesSinInt) as Reproductions_WO_Interruptions,
		sum(YTBCA.Reproducciones) as Reproductions_WO_Interruptions_Den,
		sum(0) as B4,
		sum(0) as [ReproduccionesHD],
		sum(0) as [Successful video download],
		sum(0) as [Reproducciones],
		sum(0) as YTB_video_resolution_num,
		sum(0) as YTB_video_resolution_den,
		sum(0) as YTB_video_mos_num,
		sum(0) as YTB_video_mos_den,
		null as YTB_URL,
		sum(0) as [YTB_1st_Resolution_Num],
		sum(0) as [YTB_1st_Resolution_Den],
		sum(0) as [YTB_2nd_Resolution_Num],
		sum(0) as [YTB_2nd_Resolution_Den],
		sum(0) as [YTB_FirstChangeFromInit_Num],
		sum(0) as [YTB_FirstChangeFromInit_Den],
		sum(0) as [YTB_initialResolution_Num],
		sum(0) as [YTB_initialResolution_Den],
		sum(0) as [YTB_finalResolution_Num],
		sum(0) as [YTB_finalResolution_Den],
		sum(0) as [YTB_video_resolution_144p_Num],
		sum(0) as [YTB_video_resolution_144p_Den],
		sum(0) as [YTB_video_mos_144p_Num],
		sum(0) as [YTB_video_mos_144p_Den],
		sum(0) as [YTB_video_resolution_%144p_Num],
		sum(0) as [YTB_video_resolution_%144p_Den],
		sum(0) as [YTB_video_resolution_240p_Num],
		sum(0) as [YTB_video_resolution_240p_Den],
		sum(0) as [YTB_video_mos_240p_Num],
		sum(0) as [YTB_video_mos_240p_Den],
		sum(0) as [YTB_video_resolution_%240p_Num],
		sum(0) as [YTB_video_resolution_%240p_Den],
		sum(0) as [YTB_video_resolution_360p_Num],
		sum(0) as [YTB_video_resolution_360p_Den],
		sum(0) as [YTB_video_mos_360p_Num],
		sum(0) as [YTB_video_mos_360p_Den],
		sum(0) as [YTB_video_resolution_%360p_Num],
		sum(0) as [YTB_video_resolution_%360p_Den],
		sum(0) as [YTB_video_resolution_480p_Num],
		sum(0) as [YTB_video_resolution_480p_Den],
		sum(0) as [YTB_video_mos_480p_Num],
		sum(0) as [YTB_video_mos_480p_Den],
		sum(0) as [YTB_video_resolution_%480p_Num],
		sum(0) as [YTB_video_resolution_%480p_Den],
		sum(0) as [YTB_video_resolution_720p_Num],
		sum(0) as [YTB_video_resolution_720p_Den],
		sum(0) as [YTB_video_mos_720p_Num],
		sum(0) as [YTB_video_mos_720p_Den],
		sum(0) as [YTB_video_resolution_%720p_Num],
		sum(0) as [YTB_video_resolution_%720p_Den],
		sum(0) as [YTB_video_resolution_1080p_Num],
		sum(0) as [YTB_video_resolution_1080p_Den],
		sum(0) as [YTB_video_mos_1080p_Num],
		sum(0) as [YTB_video_mos_1080p_Den],
		sum(0) as [YTB_video_resolution_%1080p_Num],
		sum(0) as [YTB_video_resolution_%1080p_Den],

		sum(0) as Avg_Video_StarTime_Num_Video1, sum(0) as avg_Video_startTime_Den_Video1, sum(0) as Reproductions_WO_Interruptions_Video1, sum(0) as Reproductions_WO_Interruptions_Den_Video1,
		sum(0) as B4_Video1, sum(0) as [ReproduccionesHD_Video1], sum(0) as [Successful video download_Video1], sum(0) as [Reproducciones_Video1], sum(0) as [Fails_Video1],sum(0) as YTB_video_resolution_num_Video1,
		sum(0) as YTB_video_resolution_den_Video1, sum(0) as YTB_video_mos_num_Video1, sum(0) as YTB_video_mos_den_Video1, null   as [YTB_url_Video1], sum(0) as [YTB_1st_Resolution_Num_Video1],
		sum(0) as [YTB_1st_Resolution_Den_Video1], sum(0) as [YTB_2nd_Resolution_Num_Video1], sum(0) as [YTB_2nd_Resolution_Den_Video1], sum(0) as [YTB_FirstChangeFromInit_Num_Video1],
		sum(0) as [YTB_FirstChangeFromInit_Den_Video1], sum(0) as [YTB_initialResolution_Num_Video1], sum(0) as [YTB_initialResolution_Den_Video1], sum(0) as [YTB_finalResolution_Num_Video1],
		sum(0) as [YTB_finalResolution_Den_Video1], sum(0) as [YTB_video_resolution_144p_Num_Video1], sum(0) as [YTB_video_resolution_144p_Den_Video1], sum(0) as [YTB_video_mos_144p_Num_Video1],
		sum(0) as [YTB_video_mos_144p_Den_Video1],sum(0) as [YTB_video_resolution_%144p_Num_Video1],sum(0) as [YTB_video_resolution_%144p_Den_Video1],sum(0) as [YTB_video_resolution_240p_Num_Video1],
		sum(0) as [YTB_video_resolution_240p_Den_Video1], sum(0) as [YTB_video_mos_240p_Num_Video1], sum(0) as [YTB_video_mos_240p_Den_Video1], sum(0) as [YTB_video_resolution_%240p_Num_Video1],
		sum(0) as [YTB_video_resolution_%240p_Den_Video1], sum(0) as [YTB_video_resolution_360p_Num_Video1], sum(0) as [YTB_video_resolution_360p_Den_Video1], sum(0) as [YTB_video_mos_360p_Num_Video1],
		sum(0) as [YTB_video_mos_360p_Den_Video1], sum(0) as [YTB_video_resolution_%360p_Num_Video1], sum(0) as [YTB_video_resolution_%360p_Den_Video1], sum(0) as [YTB_video_resolution_480p_Num_Video1],
		sum(0) as [YTB_video_resolution_480p_Den_Video1], sum(0) as [YTB_video_mos_480p_Num_Video1], sum(0) as [YTB_video_mos_480p_Den_Video1], sum(0) as [YTB_video_resolution_%480p_Num_Video1],
		sum(0) as [YTB_video_resolution_%480p_Den_Video1], sum(0) as [YTB_video_resolution_720p_Num_Video1], sum(0) as [YTB_video_resolution_720p_Den_Video1], sum(0) as [YTB_video_mos_720p_Num_Video1],
		sum(0) as [YTB_video_mos_720p_Den_Video1], sum(0) as [YTB_video_resolution_%720p_Num_Video1], sum(0) as [YTB_video_resolution_%720p_Den_Video1],
		sum(0) as [YTB_video_resolution_1080p_Num_Video1], sum(0) as [YTB_video_resolution_1080p_Den_Video1], sum(0) as [YTB_video_mos_1080p_Num_Video1], sum(0) as [YTB_video_mos_1080p_Den_Video1],
		sum(0) as [YTB_video_resolution_%1080p_Num_Video1], sum(0) as [YTB_video_resolution_%1080p_Den_Video1],

		sum(0) as Avg_Video_StarTime_Num_Video2, sum(0) as avg_Video_startTime_Den_Video2, sum(0) as Reproductions_WO_Interruptions_Video2, sum(0) as Reproductions_WO_Interruptions_Den_Video2,
		sum(0) as B4_Video2, sum(0) as [ReproduccionesHD_Video2], sum(0) as [Successful video download_Video2], sum(0) as [Reproducciones_Video2], sum(0) as [Fails_Video2],sum(0) as YTB_video_resolution_num_Video2,
		sum(0) as YTB_video_resolution_den_Video2, sum(0) as YTB_video_mos_num_Video2, sum(0) as YTB_video_mos_den_Video2, null   as [YTB_url_Video2], sum(0) as [YTB_1st_Resolution_Num_Video2],
		sum(0) as [YTB_1st_Resolution_Den_Video2], sum(0) as [YTB_2nd_Resolution_Num_Video2], sum(0) as [YTB_2nd_Resolution_Den_Video2], sum(0) as [YTB_FirstChangeFromInit_Num_Video2],
		sum(0) as [YTB_FirstChangeFromInit_Den_Video2], sum(0) as [YTB_initialResolution_Num_Video2], sum(0) as [YTB_initialResolution_Den_Video2], sum(0) as [YTB_finalResolution_Num_Video2],
		sum(0) as [YTB_finalResolution_Den_Video2], sum(0) as [YTB_video_resolution_144p_Num_Video2], sum(0) as [YTB_video_resolution_144p_Den_Video2], sum(0) as [YTB_video_mos_144p_Num_Video2],
		sum(0) as [YTB_video_mos_144p_Den_Video2],sum(0) as [YTB_video_resolution_%144p_Num_Video2],sum(0) as [YTB_video_resolution_%144p_Den_Video2],sum(0) as [YTB_video_resolution_240p_Num_Video2],
		sum(0) as [YTB_video_resolution_240p_Den_Video2], sum(0) as [YTB_video_mos_240p_Num_Video2], sum(0) as [YTB_video_mos_240p_Den_Video2], sum(0) as [YTB_video_resolution_%240p_Num_Video2],
		sum(0) as [YTB_video_resolution_%240p_Den_Video2], sum(0) as [YTB_video_resolution_360p_Num_Video2], sum(0) as [YTB_video_resolution_360p_Den_Video2], sum(0) as [YTB_video_mos_360p_Num_Video2],
		sum(0) as [YTB_video_mos_360p_Den_Video2], sum(0) as [YTB_video_resolution_%360p_Num_Video2], sum(0) as [YTB_video_resolution_%360p_Den_Video2], sum(0) as [YTB_video_resolution_480p_Num_Video2],
		sum(0) as [YTB_video_resolution_480p_Den_Video2], sum(0) as [YTB_video_mos_480p_Num_Video2], sum(0) as [YTB_video_mos_480p_Den_Video2], sum(0) as [YTB_video_resolution_%480p_Num_Video2],
		sum(0) as [YTB_video_resolution_%480p_Den_Video2], sum(0) as [YTB_video_resolution_720p_Num_Video2], sum(0) as [YTB_video_resolution_720p_Den_Video2], sum(0) as [YTB_video_mos_720p_Num_Video2],
		sum(0) as [YTB_video_mos_720p_Den_Video2], sum(0) as [YTB_video_resolution_%720p_Num_Video2], sum(0) as [YTB_video_resolution_%720p_Den_Video2],
		sum(0) as [YTB_video_resolution_1080p_Num_Video2], sum(0) as [YTB_video_resolution_1080p_Den_Video2], sum(0) as [YTB_video_mos_1080p_Num_Video2], sum(0) as [YTB_video_mos_1080p_Den_Video2],
		sum(0) as [YTB_video_resolution_%1080p_Num_Video2], sum(0) as [YTB_video_resolution_%1080p_Den_Video2],

		sum(0) as Avg_Video_StarTime_Num_Video3, sum(0) as avg_Video_startTime_Den_Video3, sum(0) as Reproductions_WO_Interruptions_Video3, sum(0) as Reproductions_WO_Interruptions_Den_Video3,
		sum(0) as B4_Video3, sum(0) as [ReproduccionesHD_Video3], sum(0) as [Successful video download_Video3], sum(0) as [Reproducciones_Video3], sum(0) as [Fails_Video3],sum(0) as YTB_video_resolution_num_Video3,
		sum(0) as YTB_video_resolution_den_Video3, sum(0) as YTB_video_mos_num_Video3, sum(0) as YTB_video_mos_den_Video3, null   as [YTB_url_Video3], sum(0) as [YTB_1st_Resolution_Num_Video3],
		sum(0) as [YTB_1st_Resolution_Den_Video3], sum(0) as [YTB_2nd_Resolution_Num_Video3], sum(0) as [YTB_2nd_Resolution_Den_Video3], sum(0) as [YTB_FirstChangeFromInit_Num_Video3],
		sum(0) as [YTB_FirstChangeFromInit_Den_Video3], sum(0) as [YTB_initialResolution_Num_Video3], sum(0) as [YTB_initialResolution_Den_Video3], sum(0) as [YTB_finalResolution_Num_Video3],
		sum(0) as [YTB_finalResolution_Den_Video3], sum(0) as [YTB_video_resolution_144p_Num_Video3], sum(0) as [YTB_video_resolution_144p_Den_Video3], sum(0) as [YTB_video_mos_144p_Num_Video3],
		sum(0) as [YTB_video_mos_144p_Den_Video3],sum(0) as [YTB_video_resolution_%144p_Num_Video3],sum(0) as [YTB_video_resolution_%144p_Den_Video3],sum(0) as [YTB_video_resolution_240p_Num_Video3],
		sum(0) as [YTB_video_resolution_240p_Den_Video3], sum(0) as [YTB_video_mos_240p_Num_Video3], sum(0) as [YTB_video_mos_240p_Den_Video3], sum(0) as [YTB_video_resolution_%240p_Num_Video3],
		sum(0) as [YTB_video_resolution_%240p_Den_Video3], sum(0) as [YTB_video_resolution_360p_Num_Video3], sum(0) as [YTB_video_resolution_360p_Den_Video3], sum(0) as [YTB_video_mos_360p_Num_Video3],
		sum(0) as [YTB_video_mos_360p_Den_Video3], sum(0) as [YTB_video_resolution_%360p_Num_Video3], sum(0) as [YTB_video_resolution_%360p_Den_Video3], sum(0) as [YTB_video_resolution_480p_Num_Video3],
		sum(0) as [YTB_video_resolution_480p_Den_Video3], sum(0) as [YTB_video_mos_480p_Num_Video3], sum(0) as [YTB_video_mos_480p_Den_Video3], sum(0) as [YTB_video_resolution_%480p_Num_Video3],
		sum(0) as [YTB_video_resolution_%480p_Den_Video3], sum(0) as [YTB_video_resolution_720p_Num_Video3], sum(0) as [YTB_video_resolution_720p_Den_Video3], sum(0) as [YTB_video_mos_720p_Num_Video3],
		sum(0) as [YTB_video_mos_720p_Den_Video3], sum(0) as [YTB_video_resolution_%720p_Num_Video3], sum(0) as [YTB_video_resolution_%720p_Den_Video3],
		sum(0) as [YTB_video_resolution_1080p_Num_Video3], sum(0) as [YTB_video_resolution_1080p_Den_Video3], sum(0) as [YTB_video_mos_1080p_Num_Video3], sum(0) as [YTB_video_mos_1080p_Den_Video3],
		sum(0) as [YTB_video_resolution_%1080p_Num_Video3], sum(0) as [YTB_video_resolution_%1080p_Den_Video3],

		sum(0) as Avg_Video_StarTime_Num_Video4, sum(0) as avg_Video_startTime_Den_Video4, sum(0) as Reproductions_WO_Interruptions_Video4, sum(0) as Reproductions_WO_Interruptions_Den_Video4,
		sum(0) as B4_Video4, sum(0) as [ReproduccionesHD_Video4], sum(0) as [Successful video download_Video4], sum(0) as [Reproducciones_Video4], sum(0) as [Fails_Video4],sum(0) as YTB_video_resolution_num_Video4,
		sum(0) as YTB_video_resolution_den_Video4, sum(0) as YTB_video_mos_num_Video4, sum(0) as YTB_video_mos_den_Video4, null   as [YTB_url_Video4], sum(0) as [YTB_1st_Resolution_Num_Video4],
		sum(0) as [YTB_1st_Resolution_Den_Video4], sum(0) as [YTB_2nd_Resolution_Num_Video4], sum(0) as [YTB_2nd_Resolution_Den_Video4], sum(0) as [YTB_FirstChangeFromInit_Num_Video4],
		sum(0) as [YTB_FirstChangeFromInit_Den_Video4], sum(0) as [YTB_initialResolution_Num_Video4], sum(0) as [YTB_initialResolution_Den_Video4], sum(0) as [YTB_finalResolution_Num_Video4],
		sum(0) as [YTB_finalResolution_Den_Video4], sum(0) as [YTB_video_resolution_144p_Num_Video4], sum(0) as [YTB_video_resolution_144p_Den_Video4], sum(0) as [YTB_video_mos_144p_Num_Video4],
		sum(0) as [YTB_video_mos_144p_Den_Video4],sum(0) as [YTB_video_resolution_%144p_Num_Video4],sum(0) as [YTB_video_resolution_%144p_Den_Video4],sum(0) as [YTB_video_resolution_240p_Num_Video4],
		sum(0) as [YTB_video_resolution_240p_Den_Video4], sum(0) as [YTB_video_mos_240p_Num_Video4], sum(0) as [YTB_video_mos_240p_Den_Video4], sum(0) as [YTB_video_resolution_%240p_Num_Video4],
		sum(0) as [YTB_video_resolution_%240p_Den_Video4], sum(0) as [YTB_video_resolution_360p_Num_Video4], sum(0) as [YTB_video_resolution_360p_Den_Video4], sum(0) as [YTB_video_mos_360p_Num_Video4],
		sum(0) as [YTB_video_mos_360p_Den_Video4], sum(0) as [YTB_video_resolution_%360p_Num_Video4], sum(0) as [YTB_video_resolution_%360p_Den_Video4], sum(0) as [YTB_video_resolution_480p_Num_Video4],
		sum(0) as [YTB_video_resolution_480p_Den_Video4], sum(0) as [YTB_video_mos_480p_Num_Video4], sum(0) as [YTB_video_mos_480p_Den_Video4], sum(0) as [YTB_video_resolution_%480p_Num_Video4],
		sum(0) as [YTB_video_resolution_%480p_Den_Video4], sum(0) as [YTB_video_resolution_720p_Num_Video4], sum(0) as [YTB_video_resolution_720p_Den_Video4], sum(0) as [YTB_video_mos_720p_Num_Video4],
		sum(0) as [YTB_video_mos_720p_Den_Video4], sum(0) as [YTB_video_resolution_%720p_Num_Video4], sum(0) as [YTB_video_resolution_%720p_Den_Video4],
		sum(0) as [YTB_video_resolution_1080p_Num_Video4], sum(0) as [YTB_video_resolution_1080p_Den_Video4], sum(0) as [YTB_video_mos_1080p_Num_Video4], sum(0) as [YTB_video_mos_1080p_Den_Video4],
		sum(0) as [YTB_video_resolution_%1080p_Num_Video4], sum(0) as [YTB_video_resolution_%1080p_Den_Video4],

		-- Parametros de configuracion:
		t.ASideDevice as ASideDevice, t.BSideDevice as BSideDevice, t.SWVersion as SWVersion, null as YTB_Version 
	
	from [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_Youtube] t
		left outer join [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_Youtube_CA_ONLY] YTBCA on (isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(YTBCA.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=YTBCA.mnc and t.Date_Reporting=YTBCA.Date_Reporting and t.entidad=YTBCA.entidad and t.Aggr_Type=YTBCA.Aggr_Type and t.Report_Type=YTBCA.Report_Type and t.meas_round=YTBCA.meas_round)
		, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, case when  t.entidad like 'AVE-%' or  t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end, 
		t.mnc, t.meas_round, t.Date_Reporting, t.Week_Reporting, t.entidad, t.Report_Type, t.Aggr_Type,
		t.ASideDevice, t.BSideDevice, t.SWVersion	--, t.Region_VF, t.Region_OSP

	-------------
	insert into [dbo].[_RI_Data_Ejecucion]
	select 'Fin 3. Insert Video Streaming SD: 3G, 4G, 4GOnly y 4G_CA_Only y ROADs', getdate()


	--------------------------------------------------------------------------
	-- (4) Video Streaming HD ------------------------------------------------
	--------------------------------------------------------------------------	
	print '4. Insert Video Streaming HD: 3G, 4G, 4GOnly y 4G_CA_Only y ROADs' 	
	-------------
	insert into _RI_Data_y
	select  
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment,mnc,meas_round,Date_Reporting as meas_date,Week_Reporting as meas_week, 
		'3G' as meas_Tech, 'Youtube HD' as Test_type, 'Downlink' as Direction, entidad as vf_entity,t.Report_Type,t.Aggr_Type,
	
		sum(t.[Time To First Image]*(t.Reproducciones-t.Fails)) as Avg_Video_StarTime_Num,
		sum((t.Reproducciones-t.Fails)) as avg_Video_startTime_Den,
		sum(t.ReproduccionesSinInt) as Reproductions_WO_Interruptions,
		sum(t.Reproducciones) as Reproductions_WO_Interruptions_Den,
		--sum(t.[Successful video download]) as Success_Video_P3_num,
		--sum(t.Reproducciones) as Success_Video_P3_den,
		sum(t.[B4]) as B4,
		sum(t.[ReproduccionesHD]) as [ReproduccionesHD],
		sum(t.[Successful video download]) as [Successful video download],
		sum(t.[Reproducciones]) as [Reproducciones],
		--sum(cast(left(t.[avg Video Resolution],3) as int)*t.[Count_Video_Resolucion]) as YTB_video_resolution_num,
		sum(cast(replace(t.[avg Video Resolution],'p','') as float)*t.[Count_Video_Resolucion]) as YTB_video_resolution_num,
		sum(t.Count_Video_Resolucion) as YTB_video_resolution_den,
		sum(t.[Video MOS]*t.[Count_Video_MOS]) as YTB_video_mos_num,
		sum(t.[Count_Video_MOS]) as YTB_video_mos_den,
		--null as Region_Road_VF, null as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP,
		max(t.url) as YTB_URL,
		sum(t.[1st Resolution]*t.[Count 1st Resolution]) as 'YTB_1st_Resolution_Num',
		sum(t.[Count 1st Resolution]) as 'YTB_1st_Resolution_Den',
		sum(t.[2nd Resolution]*t.[Count 2nd Resolution]) as 'YTB_2nd_Resolution_Num',
		sum(t.[Count 2nd Resolution]) as 'YTB_2nd_Resolution_Den',
		sum(t.[FirstChangeFromInit]*t.[Count FirstChangeFromInit]) as 'YTB_FirstChangeFromInit_Num',
		sum(t.[Count FirstChangeFromInit]) as 'YTB_FirstChangeFromInit_Den',
		sum(t.[initialResolution]*t.[Count initialResolution]) as 'YTB_initialResolution_Num',
		sum(t.[Count initialResolution]) as 'YTB_initialResolution_Den',
		sum(t.[finalResolution]*t.[Count finalResolution]) as 'YTB_finalResolution_Num',
		sum(t.[Count finalResolution]) as 'YTB_finalResolution_Den',
		sum(t.[144p-VideoDuration]*t.[Count 144p-VideoDuration]) as 'YTB_video_resolution_144p_Num',
		sum(t.[Count 144p-VideoDuration]) as 'YTB_video_resolution_144p_Den',
		sum(t.[144p-VideoMOS]*t.[Count 144p-VideoMOS]) as 'YTB_video_mos_144p_Num',
		sum(t.[Count 144p-VideoMOS]) as 'YTB_video_mos_144p_Den',
		sum(t.[% 144p]*t.[Count % 144p]) as 'YTB_video_resolution_%144p_Num',
		sum(t.[Count % 144p]) as 'YTB_video_resolution_%144p_Den',
		sum(t.[240p-VideoDuration]*t.[Count 240p-VideoDuration]) as 'YTB_video_resolution_240p_Num',
		sum(t.[Count 240p-VideoDuration]) as 'YTB_video_resolution_240p_Den',
		sum(t.[240p-VideoMOS]*t.[Count 240p-VideoMOS]) as 'YTB_video_mos_240p_Num',
		sum(t.[Count 240p-VideoMOS]) as 'YTB_video_mos_240p_Den',
		sum(t.[% 240p]*t.[Count % 240p]) as 'YTB_video_resolution_%240p_Num',
		sum(t.[Count % 240p]) as 'YTB_video_resolution_%240p_Den',
		sum(t.[360p-VideoDuration]*t.[Count 360p-VideoDuration]) as 'YTB_video_resolution_360p_Num',
		sum(t.[Count 360p-VideoDuration]) as 'YTB_video_resolution_360p_Den',
		sum(t.[360p-VideoMOS]*t.[Count 360p-VideoMOS]) as 'YTB_video_mos_360p_Num',
		sum(t.[Count 360p-VideoMOS]) as 'YTB_video_mos_360p_Den',
		sum(t.[% 360p]*t.[Count % 360p]) as 'YTB_video_resolution_%360p_Num',
		sum(t.[Count % 360p]) as 'YTB_video_resolution_%360p_Den',
		sum(t.[480p-VideoDuration]*t.[Count 480p-VideoDuration]) as 'YTB_video_resolution_480p_Num',
		sum(t.[Count 480p-VideoDuration]) as 'YTB_video_resolution_480p_Den',
		sum(t.[480p-VideoMOS]*t.[Count 480p-VideoMOS]) as 'YTB_video_mos_480p_Num',
		sum(t.[Count 480p-VideoMOS]) as 'YTB_video_mos_480p_Den',
		sum(t.[% 480p]*t.[Count % 480p]) as 'YTB_video_resolution_%480p_Num',
		sum(t.[Count % 480p]) as 'YTB_video_resolution_%480p_Den',
		sum(t.[720p-VideoDuration]*t.[Count 720p-VideoDuration]) as 'YTB_video_resolution_720p_Num',
		sum(t.[Count 720p-VideoDuration]) as 'YTB_video_resolution_720p_Den',
		sum(t.[720p-VideoMOS]*t.[Count 720p-VideoMOS]) as 'YTB_video_mos_720p_Num',
		sum(t.[Count 720p-VideoMOS]) as 'YTB_video_mos_720p_Den',
		sum(t.[% 720p]*t.[Count % 720p]) as 'YTB_video_resolution_%720p_Num',
		sum(t.[Count % 720p]) as 'YTB_video_resolution_%720p_Den',
		sum(t.[1080p-VideoDuration]*t.[Count 1080p-VideoDuration]) as 'YTB_video_resolution_1080p_Num',
		sum(t.[Count 1080p-VideoDuration]) as 'YTB_video_resolution_1080p_Den',
		sum(t.[1080p-VideoMOS]*t.[Count 1080p-VideoMOS]) as 'YTB_video_mos_1080p_Num',
		sum(t.[Count 1080p-VideoMOS]) as 'YTB_video_mos_1080p_Den',
		sum(t.[% 1080p]*t.[Count % 1080p]) as 'YTB_video_resolution_%1080p_Num',
		sum(t.[Count % 1080p]) as 'YTB_video_resolution_%1080p_Den',

		--YOUTUBE HD: Video 1
		sum(t.[Time To First Image_Video1]*(t.Reproducciones_Video1-t.Fails_Video1)) as Avg_Video_StarTime_Num_Video1,
		sum((t.Reproducciones_Video1-t.Fails_Video1)) as avg_Video_startTime_Den_Video1,
		sum(t.ReproduccionesSinInt_Video1) as Reproductions_WO_Interruptions_Video1,
		sum(t.Reproducciones_Video1) as Reproductions_WO_Interruptions_Den_Video1,
		sum(t.[B4_Video1]) as B4_Video1,
		sum(t.[ReproduccionesHD_Video1]) as [ReproduccionesHD_Video1],
		sum(t.[Successful video download_Video1]) as [Successful video download_Video1],
		sum(t.[Reproducciones_Video1]) as [Reproducciones_Video1],
		sum(t.[Fails_Video1]) as [Fails_Video1],
		--sum(cast(left(t.[avg Video Resolution_Video1],3) as int)*t.[Count_Video_Resolucion_Video1]) as YTB_video_resolution_num_Video1,
		sum(cast(replace(t.[avg Video Resolution_Video1],'p','') as float)*t.[Count_Video_Resolucion_Video1]) as YTB_video_resolution_num_Video1,
		sum(t.Count_Video_Resolucion_Video1) as YTB_video_resolution_den_Video1,
		sum(t.[Video MOS_Video1]*t.[Count_Video_MOS_Video1]) as YTB_video_mos_num_Video1,
		sum(t.[Count_Video_MOS_Video1]) as YTB_video_mos_den_Video1,
		max(t.url_Video1) as YTB_URL_Video1,
		sum(t.[1st Resolution_Video1]*t.[Count 1st Resolution_Video1]) as 'YTB_1st_Resolution_Num_Video1',
		sum(t.[Count 1st Resolution_Video1]) as 'YTB_1st_Resolution_Den_Video1',
		sum(t.[2nd Resolution_Video1]*t.[Count 2nd Resolution_Video1]) as 'YTB_2nd_Resolution_Num_Video1',
		sum(t.[Count 2nd Resolution_Video1]) as 'YTB_2nd_Resolution_Den_Video1',
		sum(t.[FirstChangeFromInit_Video1]*t.[Count FirstChangeFromInit_Video1]) as 'YTB_FirstChangeFromInit_Num_Video1',
		sum(t.[Count FirstChangeFromInit_Video1]) as 'YTB_FirstChangeFromInit_Den_Video1',
		sum(t.[initialResolution_Video1]*t.[Count initialResolution_Video1]) as 'YTB_initialResolution_Num_Video1',
		sum(t.[Count initialResolution_Video1]) as 'YTB_initialResolution_Den_Video1',
		sum(t.[finalResolution_Video1]*t.[Count finalResolution_Video1]) as 'YTB_finalResolution_Num_Video1',
		sum(t.[Count finalResolution_Video1]) as 'YTB_finalResolution_Den_Video1',
		sum(t.[144p-VideoDuration_Video1]*t.[Count 144p-VideoDuration_Video1]) as 'YTB_video_resolution_144p_Num_Video1',
		sum(t.[Count 144p-VideoDuration_Video1]) as 'YTB_video_resolution_144p_Den_Video1',
		sum(t.[144p-VideoMOS_Video1]*t.[Count 144p-VideoMOS_Video1]) as 'YTB_video_mos_144p_Num_Video1',
		sum(t.[Count 144p-VideoMOS_Video1]) as 'YTB_video_mos_144p_Den_Video1',
		sum(t.[% 144p_Video1]*t.[Count % 144p_Video1]) as 'YTB_video_resolution_%144p_Num_Video1',
		sum(t.[Count % 144p_Video1]) as 'YTB_video_resolution_%144p_Den_Video1',
		sum(t.[240p-VideoDuration_Video1]*t.[Count 240p-VideoDuration_Video1]) as 'YTB_video_resolution_240p_Num_Video1',
		sum(t.[Count 240p-VideoDuration_Video1]) as 'YTB_video_resolution_240p_Den_Video1',
		sum(t.[240p-VideoMOS_Video1]*t.[Count 240p-VideoMOS_Video1]) as 'YTB_video_mos_240p_Num_Video1',
		sum(t.[Count 240p-VideoMOS_Video1]) as 'YTB_video_mos_240p_Den_Video1',
		sum(t.[% 240p_Video1]*t.[Count % 240p_Video1]) as 'YTB_video_resolution_%240p_Num_Video1',
		sum(t.[Count % 240p_Video1]) as 'YTB_video_resolution_%240p_Den_Video1',
		sum(t.[360p-VideoDuration_Video1]*t.[Count 360p-VideoDuration_Video1]) as 'YTB_video_resolution_360p_Num_Video1',
		sum(t.[Count 360p-VideoDuration_Video1]) as 'YTB_video_resolution_360p_Den_Video1',
		sum(t.[360p-VideoMOS_Video1]*t.[Count 360p-VideoMOS_Video1]) as 'YTB_video_mos_360p_Num_Video1',
		sum(t.[Count 360p-VideoMOS_Video1]) as 'YTB_video_mos_360p_Den_Video1',
		sum(t.[% 360p_Video1]*t.[Count % 360p_Video1]) as 'YTB_video_resolution_%360p_Num_Video1',
		sum(t.[Count % 360p_Video1]) as 'YTB_video_resolution_%360p_Den_Video1',
		sum(t.[480p-VideoDuration_Video1]*t.[Count 480p-VideoDuration_Video1]) as 'YTB_video_resolution_480p_Num_Video1',
		sum(t.[Count 480p-VideoDuration_Video1]) as 'YTB_video_resolution_480p_Den_Video1',
		sum(t.[480p-VideoMOS_Video1]*t.[Count 480p-VideoMOS_Video1]) as 'YTB_video_mos_480p_Num_Video1',
		sum(t.[Count 480p-VideoMOS_Video1]) as 'YTB_video_mos_480p_Den_Video1',
		sum(t.[% 480p_Video1]*t.[Count % 480p_Video1]) as 'YTB_video_resolution_%480p_Num_Video1',
		sum(t.[Count % 480p_Video1]) as 'YTB_video_resolution_%480p_Den_Video1',
		sum(t.[720p-VideoDuration_Video1]*t.[Count 720p-VideoDuration_Video1]) as 'YTB_video_resolution_720p_Num_Video1',
		sum(t.[Count 720p-VideoDuration_Video1]) as 'YTB_video_resolution_720p_Den_Video1',
		sum(t.[720p-VideoMOS_Video1]*t.[Count 720p-VideoMOS_Video1]) as 'YTB_video_mos_720p_Num_Video1',
		sum(t.[Count 720p-VideoMOS_Video1]) as 'YTB_video_mos_720p_Den_Video1',
		sum(t.[% 720p_Video1]*t.[Count % 720p_Video1]) as 'YTB_video_resolution_%720p_Num_Video1',
		sum(t.[Count % 720p_Video1]) as 'YTB_video_resolution_%720p_Den_Video1',
		sum(t.[1080p-VideoDuration_Video1]*t.[Count 1080p-VideoDuration_Video1]) as 'YTB_video_resolution_1080p_Num_Video1',
		sum(t.[Count 1080p-VideoDuration_Video1]) as 'YTB_video_resolution_1080p_Den_Video1',
		sum(t.[1080p-VideoMOS_Video1]*t.[Count 1080p-VideoMOS_Video1]) as 'YTB_video_mos_1080p_Num_Video1',
		sum(t.[Count 1080p-VideoMOS_Video1]) as 'YTB_video_mos_1080p_Den_Video1',
		sum(t.[% 1080p_Video1]*t.[Count % 1080p_Video1]) as 'YTB_video_resolution_%1080p_Num_Video1',
		sum(t.[Count % 1080p_Video1]) as 'YTB_video_resolution_%1080p_Den_Video1',

		--YOUTUBE HD: Video 2
		sum(t.[Time To First Image_Video2]*(t.Reproducciones_Video2-t.Fails_Video2)) as Avg_Video_StarTime_Num_Video2,
		sum((t.Reproducciones_Video2-t.Fails_Video2)) as avg_Video_startTime_Den_Video2,
		sum(t.ReproduccionesSinInt_Video2) as Reproductions_WO_Interruptions_Video2,
		sum(t.Reproducciones_Video2) as Reproductions_WO_Interruptions_Den_Video2,
		sum(t.[B4_Video2]) as B4_Video2,
		sum(t.[ReproduccionesHD_Video2]) as [ReproduccionesHD_Video2],
		sum(t.[Successful video download_Video2]) as [Successful video download_Video2],
		sum(t.[Reproducciones_Video2]) as [Reproducciones_Video2],
		sum(t.[Fails_Video2]) as [Fails_Video2],
		--sum(cast(left(t.[avg Video Resolution_Video2],3) as int)*t.[Count_Video_Resolucion_Video2]) as YTB_video_resolution_num_Video2,
		sum(cast(replace(t.[avg Video Resolution_Video2],'p','') as float)*t.[Count_Video_Resolucion_Video2]) as YTB_video_resolution_num_Video2,
		sum(t.Count_Video_Resolucion_Video2) as YTB_video_resolution_den_Video2,
		sum(t.[Video MOS_Video2]*t.[Count_Video_MOS_Video2]) as YTB_video_mos_num_Video2,
		sum(t.[Count_Video_MOS_Video2]) as YTB_video_mos_den_Video2,
		max(t.url_Video2) as YTB_URL_Video2,
		sum(t.[1st Resolution_Video2]*t.[Count 1st Resolution_Video2]) as 'YTB_1st_Resolution_Num_Video2',
		sum(t.[Count 1st Resolution_Video2]) as 'YTB_1st_Resolution_Den_Video2',
		sum(t.[2nd Resolution_Video2]*t.[Count 2nd Resolution_Video2]) as 'YTB_2nd_Resolution_Num_Video2',
		sum(t.[Count 2nd Resolution_Video2]) as 'YTB_2nd_Resolution_Den_Video2',
		sum(t.[FirstChangeFromInit_Video2]*t.[Count FirstChangeFromInit_Video2]) as 'YTB_FirstChangeFromInit_Num_Video2',
		sum(t.[Count FirstChangeFromInit_Video2]) as 'YTB_FirstChangeFromInit_Den_Video2',
		sum(t.[initialResolution_Video2]*t.[Count initialResolution_Video2]) as 'YTB_initialResolution_Num_Video2',
		sum(t.[Count initialResolution_Video2]) as 'YTB_initialResolution_Den_Video2',
		sum(t.[finalResolution_Video2]*t.[Count finalResolution_Video2]) as 'YTB_finalResolution_Num_Video2',
		sum(t.[Count finalResolution_Video2]) as 'YTB_finalResolution_Den_Video2',
		sum(t.[144p-VideoDuration_Video2]*t.[Count 144p-VideoDuration_Video2]) as 'YTB_video_resolution_144p_Num_Video2',
		sum(t.[Count 144p-VideoDuration_Video2]) as 'YTB_video_resolution_144p_Den_Video2',
		sum(t.[144p-VideoMOS_Video2]*t.[Count 144p-VideoMOS_Video2]) as 'YTB_video_mos_144p_Num_Video2',
		sum(t.[Count 144p-VideoMOS_Video2]) as 'YTB_video_mos_144p_Den_Video2',
		sum(t.[% 144p_Video2]*t.[Count % 144p_Video2]) as 'YTB_video_resolution_%144p_Num_Video2',
		sum(t.[Count % 144p_Video2]) as 'YTB_video_resolution_%144p_Den_Video2',
		sum(t.[240p-VideoDuration_Video2]*t.[Count 240p-VideoDuration_Video2]) as 'YTB_video_resolution_240p_Num_Video2',
		sum(t.[Count 240p-VideoDuration_Video2]) as 'YTB_video_resolution_240p_Den_Video2',
		sum(t.[240p-VideoMOS_Video2]*t.[Count 240p-VideoMOS_Video2]) as 'YTB_video_mos_240p_Num_Video2',
		sum(t.[Count 240p-VideoMOS_Video2]) as 'YTB_video_mos_240p_Den_Video2',
		sum(t.[% 240p_Video2]*t.[Count % 240p_Video2]) as 'YTB_video_resolution_%240p_Num_Video2',
		sum(t.[Count % 240p_Video2]) as 'YTB_video_resolution_%240p_Den_Video2',
		sum(t.[360p-VideoDuration_Video2]*t.[Count 360p-VideoDuration_Video2]) as 'YTB_video_resolution_360p_Num_Video2',
		sum(t.[Count 360p-VideoDuration_Video2]) as 'YTB_video_resolution_360p_Den_Video2',
		sum(t.[360p-VideoMOS_Video2]*t.[Count 360p-VideoMOS_Video2]) as 'YTB_video_mos_360p_Num_Video2',
		sum(t.[Count 360p-VideoMOS_Video2]) as 'YTB_video_mos_360p_Den_Video2',
		sum(t.[% 360p_Video2]*t.[Count % 360p_Video2]) as 'YTB_video_resolution_%360p_Num_Video2',
		sum(t.[Count % 360p_Video2]) as 'YTB_video_resolution_%360p_Den_Video2',
		sum(t.[480p-VideoDuration_Video2]*t.[Count 480p-VideoDuration_Video2]) as 'YTB_video_resolution_480p_Num_Video2',
		sum(t.[Count 480p-VideoDuration_Video2]) as 'YTB_video_resolution_480p_Den_Video2',
		sum(t.[480p-VideoMOS_Video2]*t.[Count 480p-VideoMOS_Video2]) as 'YTB_video_mos_480p_Num_Video2',
		sum(t.[Count 480p-VideoMOS_Video2]) as 'YTB_video_mos_480p_Den_Video2',
		sum(t.[% 480p_Video2]*t.[Count % 480p_Video2]) as 'YTB_video_resolution_%480p_Num_Video2',
		sum(t.[Count % 480p_Video2]) as 'YTB_video_resolution_%480p_Den_Video2',
		sum(t.[720p-VideoDuration_Video2]*t.[Count 720p-VideoDuration_Video2]) as 'YTB_video_resolution_720p_Num_Video2',
		sum(t.[Count 720p-VideoDuration_Video2]) as 'YTB_video_resolution_720p_Den_Video2',
		sum(t.[720p-VideoMOS_Video2]*t.[Count 720p-VideoMOS_Video2]) as 'YTB_video_mos_720p_Num_Video2',
		sum(t.[Count 720p-VideoMOS_Video2]) as 'YTB_video_mos_720p_Den_Video2',
		sum(t.[% 720p_Video2]*t.[Count % 720p_Video2]) as 'YTB_video_resolution_%720p_Num_Video2',
		sum(t.[Count % 720p_Video2]) as 'YTB_video_resolution_%720p_Den_Video2',
		sum(t.[1080p-VideoDuration_Video2]*t.[Count 1080p-VideoDuration_Video2]) as 'YTB_video_resolution_1080p_Num_Video2',
		sum(t.[Count 1080p-VideoDuration_Video2]) as 'YTB_video_resolution_1080p_Den_Video2',
		sum(t.[1080p-VideoMOS_Video2]*t.[Count 1080p-VideoMOS_Video2]) as 'YTB_video_mos_1080p_Num_Video2',
		sum(t.[Count 1080p-VideoMOS_Video2]) as 'YTB_video_mos_1080p_Den_Video2',
		sum(t.[% 1080p_Video2]*t.[Count % 1080p_Video2]) as 'YTB_video_resolution_%1080p_Num_Video2',
		sum(t.[Count % 1080p_Video2]) as 'YTB_video_resolution_%1080p_Den_Video2',

		--YOUTUBE HD: Video 3
		sum(t.[Time To First Image_Video3]*(t.Reproducciones_Video3-t.Fails_Video3)) as Avg_Video_StarTime_Num_Video3,
		sum((t.Reproducciones_Video3-t.Fails_Video3)) as avg_Video_startTime_Den_Video3,
		sum(t.ReproduccionesSinInt_Video3) as Reproductions_WO_Interruptions_Video3,
		sum(t.Reproducciones_Video3) as Reproductions_WO_Interruptions_Den_Video3,
		sum(t.[B4_Video3]) as B4_Video3,
		sum(t.[ReproduccionesHD_Video3]) as [ReproduccionesHD_Video3],
		sum(t.[Successful video download_Video3]) as [Successful video download_Video3],
		sum(t.[Reproducciones_Video3]) as [Reproducciones_Video3],
		sum(t.[Fails_Video3]) as [Fails_Video3],
		--sum(cast(left(t.[avg Video Resolution_Video3],3) as int)*t.[Count_Video_Resolucion_Video3]) as YTB_video_resolution_num_Video3,
		sum(cast(replace(t.[avg Video Resolution_Video3],'p','') as float)*t.[Count_Video_Resolucion_Video3]) as YTB_video_resolution_num_Video3,
		sum(t.Count_Video_Resolucion_Video3) as YTB_video_resolution_den_Video3,
		sum(t.[Video MOS_Video3]*t.[Count_Video_MOS_Video3]) as YTB_video_mos_num_Video3,
		sum(t.[Count_Video_MOS_Video3]) as YTB_video_mos_den_Video3,
		max(t.url_Video3) as YTB_URL_Video3,
		sum(t.[1st Resolution_Video3]*t.[Count 1st Resolution_Video3]) as 'YTB_1st_Resolution_Num_Video3',
		sum(t.[Count 1st Resolution_Video3]) as 'YTB_1st_Resolution_Den_Video3',
		sum(t.[2nd Resolution_Video3]*t.[Count 2nd Resolution_Video3]) as 'YTB_2nd_Resolution_Num_Video3',
		sum(t.[Count 2nd Resolution_Video3]) as 'YTB_2nd_Resolution_Den_Video3',
		sum(t.[FirstChangeFromInit_Video3]*t.[Count FirstChangeFromInit_Video3]) as 'YTB_FirstChangeFromInit_Num_Video3',
		sum(t.[Count FirstChangeFromInit_Video3]) as 'YTB_FirstChangeFromInit_Den_Video3',
		sum(t.[initialResolution_Video3]*t.[Count initialResolution_Video3]) as 'YTB_initialResolution_Num_Video3',
		sum(t.[Count initialResolution_Video3]) as 'YTB_initialResolution_Den_Video3',
		sum(t.[finalResolution_Video3]*t.[Count finalResolution_Video3]) as 'YTB_finalResolution_Num_Video3',
		sum(t.[Count finalResolution_Video3]) as 'YTB_finalResolution_Den_Video3',
		sum(t.[144p-VideoDuration_Video3]*t.[Count 144p-VideoDuration_Video3]) as 'YTB_video_resolution_144p_Num_Video3',
		sum(t.[Count 144p-VideoDuration_Video3]) as 'YTB_video_resolution_144p_Den_Video3',
		sum(t.[144p-VideoMOS_Video3]*t.[Count 144p-VideoMOS_Video3]) as 'YTB_video_mos_144p_Num_Video3',
		sum(t.[Count 144p-VideoMOS_Video3]) as 'YTB_video_mos_144p_Den_Video3',
		sum(t.[% 144p_Video3]*t.[Count % 144p_Video3]) as 'YTB_video_resolution_%144p_Num_Video3',
		sum(t.[Count % 144p_Video3]) as 'YTB_video_resolution_%144p_Den_Video3',
		sum(t.[240p-VideoDuration_Video3]*t.[Count 240p-VideoDuration_Video3]) as 'YTB_video_resolution_240p_Num_Video3',
		sum(t.[Count 240p-VideoDuration_Video3]) as 'YTB_video_resolution_240p_Den_Video3',
		sum(t.[240p-VideoMOS_Video3]*t.[Count 240p-VideoMOS_Video3]) as 'YTB_video_mos_240p_Num_Video3',
		sum(t.[Count 240p-VideoMOS_Video3]) as 'YTB_video_mos_240p_Den_Video3',
		sum(t.[% 240p_Video3]*t.[Count % 240p_Video3]) as 'YTB_video_resolution_%240p_Num_Video3',
		sum(t.[Count % 240p_Video3]) as 'YTB_video_resolution_%240p_Den_Video3',
		sum(t.[360p-VideoDuration_Video3]*t.[Count 360p-VideoDuration_Video3]) as 'YTB_video_resolution_360p_Num_Video3',
		sum(t.[Count 360p-VideoDuration_Video3]) as 'YTB_video_resolution_360p_Den_Video3',
		sum(t.[360p-VideoMOS_Video3]*t.[Count 360p-VideoMOS_Video3]) as 'YTB_video_mos_360p_Num_Video3',
		sum(t.[Count 360p-VideoMOS_Video3]) as 'YTB_video_mos_360p_Den_Video3',
		sum(t.[% 360p_Video3]*t.[Count % 360p_Video3]) as 'YTB_video_resolution_%360p_Num_Video3',
		sum(t.[Count % 360p_Video3]) as 'YTB_video_resolution_%360p_Den_Video3',
		sum(t.[480p-VideoDuration_Video3]*t.[Count 480p-VideoDuration_Video3]) as 'YTB_video_resolution_480p_Num_Video3',
		sum(t.[Count 480p-VideoDuration_Video3]) as 'YTB_video_resolution_480p_Den_Video3',
		sum(t.[480p-VideoMOS_Video3]*t.[Count 480p-VideoMOS_Video3]) as 'YTB_video_mos_480p_Num_Video3',
		sum(t.[Count 480p-VideoMOS_Video3]) as 'YTB_video_mos_480p_Den_Video3',
		sum(t.[% 480p_Video3]*t.[Count % 480p_Video3]) as 'YTB_video_resolution_%480p_Num_Video3',
		sum(t.[Count % 480p_Video3]) as 'YTB_video_resolution_%480p_Den_Video3',
		sum(t.[720p-VideoDuration_Video3]*t.[Count 720p-VideoDuration_Video3]) as 'YTB_video_resolution_720p_Num_Video3',
		sum(t.[Count 720p-VideoDuration_Video3]) as 'YTB_video_resolution_720p_Den_Video3',
		sum(t.[720p-VideoMOS_Video3]*t.[Count 720p-VideoMOS_Video3]) as 'YTB_video_mos_720p_Num_Video3',
		sum(t.[Count 720p-VideoMOS_Video3]) as 'YTB_video_mos_720p_Den_Video3',
		sum(t.[% 720p_Video3]*t.[Count % 720p_Video3]) as 'YTB_video_resolution_%720p_Num_Video3',
		sum(t.[Count % 720p_Video3]) as 'YTB_video_resolution_%720p_Den_Video3',
		sum(t.[1080p-VideoDuration_Video3]*t.[Count 1080p-VideoDuration_Video3]) as 'YTB_video_resolution_1080p_Num_Video3',
		sum(t.[Count 1080p-VideoDuration_Video3]) as 'YTB_video_resolution_1080p_Den_Video3',
		sum(t.[1080p-VideoMOS_Video3]*t.[Count 1080p-VideoMOS_Video3]) as 'YTB_video_mos_1080p_Num_Video3',
		sum(t.[Count 1080p-VideoMOS_Video3]) as 'YTB_video_mos_1080p_Den_Video3',
		sum(t.[% 1080p_Video3]*t.[Count % 1080p_Video3]) as 'YTB_video_resolution_%1080p_Num_Video3',
		sum(t.[Count % 1080p_Video3]) as 'YTB_video_resolution_%1080p_Den_Video3',

		--YOUTUBE HD: Video 4
		sum(t.[Time To First Image_Video4]*(t.Reproducciones_Video4-t.Fails_Video4)) as Avg_Video_StarTime_Num_Video4,
		sum((t.Reproducciones_Video4-t.Fails_Video4)) as avg_Video_startTime_Den_Video4,
		sum(t.ReproduccionesSinInt_Video4) as Reproductions_WO_Interruptions_Video4,
		sum(t.Reproducciones_Video4) as Reproductions_WO_Interruptions_Den_Video4,
		sum(t.[B4_Video4]) as B4_Video4,
		sum(t.[ReproduccionesHD_Video4]) as [ReproduccionesHD_Video4],
		sum(t.[Successful video download_Video4]) as [Successful video download_Video4],
		sum(t.[Reproducciones_Video4]) as [Reproducciones_Video4],
		sum(t.[Fails_Video4]) as [Fails_Video4],
		--sum(cast(left(t.[avg Video Resolution_Video4],3) as int)*t.[Count_Video_Resolucion_Video4]) as YTB_video_resolution_num_Video4,
		sum(cast(replace(t.[avg Video Resolution_Video4],'p','') as float)*t.[Count_Video_Resolucion_Video4]) as YTB_video_resolution_num_Video4,
		sum(t.Count_Video_Resolucion_Video4) as YTB_video_resolution_den_Video4,
		sum(t.[Video MOS_Video4]*t.[Count_Video_MOS_Video4]) as YTB_video_mos_num_Video4,
		sum(t.[Count_Video_MOS_Video4]) as YTB_video_mos_den_Video4,
		max(t.url_Video4) as YTB_URL_Video4,
		sum(t.[1st Resolution_Video4]*t.[Count 1st Resolution_Video4]) as 'YTB_1st_Resolution_Num_Video4',
		sum(t.[Count 1st Resolution_Video4]) as 'YTB_1st_Resolution_Den_Video4',
		sum(t.[2nd Resolution_Video4]*t.[Count 2nd Resolution_Video4]) as 'YTB_2nd_Resolution_Num_Video4',
		sum(t.[Count 2nd Resolution_Video4]) as 'YTB_2nd_Resolution_Den_Video4',
		sum(t.[FirstChangeFromInit_Video4]*t.[Count FirstChangeFromInit_Video4]) as 'YTB_FirstChangeFromInit_Num_Video4',
		sum(t.[Count FirstChangeFromInit_Video4]) as 'YTB_FirstChangeFromInit_Den_Video4',
		sum(t.[initialResolution_Video4]*t.[Count initialResolution_Video4]) as 'YTB_initialResolution_Num_Video4',
		sum(t.[Count initialResolution_Video4]) as 'YTB_initialResolution_Den_Video4',
		sum(t.[finalResolution_Video4]*t.[Count finalResolution_Video4]) as 'YTB_finalResolution_Num_Video4',
		sum(t.[Count finalResolution_Video4]) as 'YTB_finalResolution_Den_Video4',
		sum(t.[144p-VideoDuration_Video4]*t.[Count 144p-VideoDuration_Video4]) as 'YTB_video_resolution_144p_Num_Video4',
		sum(t.[Count 144p-VideoDuration_Video4]) as 'YTB_video_resolution_144p_Den_Video4',
		sum(t.[144p-VideoMOS_Video4]*t.[Count 144p-VideoMOS_Video4]) as 'YTB_video_mos_144p_Num_Video4',
		sum(t.[Count 144p-VideoMOS_Video4]) as 'YTB_video_mos_144p_Den_Video4',
		sum(t.[% 144p_Video4]*t.[Count % 144p_Video4]) as 'YTB_video_resolution_%144p_Num_Video4',
		sum(t.[Count % 144p_Video4]) as 'YTB_video_resolution_%144p_Den_Video4',
		sum(t.[240p-VideoDuration_Video4]*t.[Count 240p-VideoDuration_Video4]) as 'YTB_video_resolution_240p_Num_Video4',
		sum(t.[Count 240p-VideoDuration_Video4]) as 'YTB_video_resolution_240p_Den_Video4',
		sum(t.[240p-VideoMOS_Video4]*t.[Count 240p-VideoMOS_Video4]) as 'YTB_video_mos_240p_Num_Video4',
		sum(t.[Count 240p-VideoMOS_Video4]) as 'YTB_video_mos_240p_Den_Video4',
		sum(t.[% 240p_Video4]*t.[Count % 240p_Video4]) as 'YTB_video_resolution_%240p_Num_Video4',
		sum(t.[Count % 240p_Video4]) as 'YTB_video_resolution_%240p_Den_Video4',
		sum(t.[360p-VideoDuration_Video4]*t.[Count 360p-VideoDuration_Video4]) as 'YTB_video_resolution_360p_Num_Video4',
		sum(t.[Count 360p-VideoDuration_Video4]) as 'YTB_video_resolution_360p_Den_Video4',
		sum(t.[360p-VideoMOS_Video4]*t.[Count 360p-VideoMOS_Video4]) as 'YTB_video_mos_360p_Num_Video4',
		sum(t.[Count 360p-VideoMOS_Video4]) as 'YTB_video_mos_360p_Den_Video4',
		sum(t.[% 360p_Video4]*t.[Count % 360p_Video4]) as 'YTB_video_resolution_%360p_Num_Video4',
		sum(t.[Count % 360p_Video4]) as 'YTB_video_resolution_%360p_Den_Video4',
		sum(t.[480p-VideoDuration_Video4]*t.[Count 480p-VideoDuration_Video4]) as 'YTB_video_resolution_480p_Num_Video4',
		sum(t.[Count 480p-VideoDuration_Video4]) as 'YTB_video_resolution_480p_Den_Video4',
		sum(t.[480p-VideoMOS_Video4]*t.[Count 480p-VideoMOS_Video4]) as 'YTB_video_mos_480p_Num_Video4',
		sum(t.[Count 480p-VideoMOS_Video4]) as 'YTB_video_mos_480p_Den_Video4',
		sum(t.[% 480p_Video4]*t.[Count % 480p_Video4]) as 'YTB_video_resolution_%480p_Num_Video4',
		sum(t.[Count % 480p_Video4]) as 'YTB_video_resolution_%480p_Den_Video4',
		sum(t.[720p-VideoDuration_Video4]*t.[Count 720p-VideoDuration_Video4]) as 'YTB_video_resolution_720p_Num_Video4',
		sum(t.[Count 720p-VideoDuration_Video4]) as 'YTB_video_resolution_720p_Den_Video4',
		sum(t.[720p-VideoMOS_Video4]*t.[Count 720p-VideoMOS_Video4]) as 'YTB_video_mos_720p_Num_Video4',
		sum(t.[Count 720p-VideoMOS_Video4]) as 'YTB_video_mos_720p_Den_Video4',
		sum(t.[% 720p_Video4]*t.[Count % 720p_Video4]) as 'YTB_video_resolution_%720p_Num_Video4',
		sum(t.[Count % 720p_Video4]) as 'YTB_video_resolution_%720p_Den_Video4',
		sum(t.[1080p-VideoDuration_Video4]*t.[Count 1080p-VideoDuration_Video4]) as 'YTB_video_resolution_1080p_Num_Video4',
		sum(t.[Count 1080p-VideoDuration_Video4]) as 'YTB_video_resolution_1080p_Den_Video4',
		sum(t.[1080p-VideoMOS_Video4]*t.[Count 1080p-VideoMOS_Video4]) as 'YTB_video_mos_1080p_Num_Video4',
		sum(t.[Count 1080p-VideoMOS_Video4]) as 'YTB_video_mos_1080p_Den_Video4',
		sum(t.[% 1080p_Video4]*t.[Count % 1080p_Video4]) as 'YTB_video_resolution_%1080p_Num_Video4',
		sum(t.[Count % 1080p_Video4]) as 'YTB_video_resolution_%1080p_Den_Video4',

		-- Parametros de configuracion:
		t.ASideDevice as ASideDevice, t.BSideDevice as BSideDevice, t.SWVersion as SWVersion, max(t.Youtube_Version) as YTB_Version 

	from [AGGRData3G].dbo.[lcc_aggr_sp_MDD_Data_Youtube_HD] t, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end,mnc,meas_round,Date_Reporting,Week_Reporting,t.entidad,t.Report_Type,t.Aggr_Type,
		t.ASideDevice, t.BSideDevice, t.SWVersion--, t.Youtube_Version --, t.Region_VF, t.Region_OSP, 
		

	-------------
	union all
	select  
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment,mnc,meas_round,Date_Reporting as meas_date,Week_Reporting as meas_week, 
		'4G' as meas_Tech, 'Youtube HD' as Test_type, 'Downlink' as Direction, entidad as vf_entity,t.Report_Type,t.Aggr_Type,
	
		sum(t.[Time To First Image]*(t.Reproducciones-t.Fails)) as Avg_Video_StarTime_Num,
		sum((t.Reproducciones-t.Fails)) as avg_Video_startTime_Den,
		sum(t.ReproduccionesSinInt) as Reproductions_WO_Interruptions,
		sum(t.Reproducciones) as Reproductions_WO_Interruptions_Den,
		--sum(t.[Successful video download]) as Success_Video_P3_num,
		--sum(t.Reproducciones) as Success_Video_P3_den,
		sum(t.[B4]) as B4,
		sum(t.[ReproduccionesHD]) as [ReproduccionesHD],
		sum(t.[Successful video download]) as [Successful video download],
		sum(t.[Reproducciones]) as [Reproducciones],
		--sum(cast(left(t.[avg Video Resolution],3) as int)*t.[Count_Video_Resolucion]) as YTB_video_resolution_num,
		sum(cast(replace(t.[avg Video Resolution],'p','') as float)*t.[Count_Video_Resolucion]) as YTB_video_resolution_num,
		sum(t.Count_Video_Resolucion) as YTB_video_resolution_den,
		sum(t.[Video MOS]*t.[Count_Video_MOS]) as YTB_video_mos_num,
		sum(t.[Count_Video_MOS]) as YTB_video_mos_den,
		--null as Region_Road_VF, null as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP,
		max(t.url) as YTB_URL,
		sum(t.[1st Resolution]*t.[Count 1st Resolution]) as 'YTB_1st_Resolution_Num',
		sum(t.[Count 1st Resolution]) as 'YTB_1st_Resolution_Den',
		sum(t.[2nd Resolution]*t.[Count 2nd Resolution]) as 'YTB_2nd_Resolution_Num',
		sum(t.[Count 2nd Resolution]) as 'YTB_2nd_Resolution_Den',
		sum(t.[FirstChangeFromInit]*t.[Count FirstChangeFromInit]) as 'YTB_FirstChangeFromInit_Num',
		sum(t.[Count FirstChangeFromInit]) as 'YTB_FirstChangeFromInit_Den',
		sum(t.[initialResolution]*t.[Count initialResolution]) as 'YTB_initialResolution_Num',
		sum(t.[Count initialResolution]) as 'YTB_initialResolution_Den',
		sum(t.[finalResolution]*t.[Count finalResolution]) as 'YTB_finalResolution_Num',
		sum(t.[Count finalResolution]) as 'YTB_finalResolution_Den',
		sum(t.[144p-VideoDuration]*t.[Count 144p-VideoDuration]) as 'YTB_video_resolution_144p_Num',
		sum(t.[Count 144p-VideoDuration]) as 'YTB_video_resolution_144p_Den',
		sum(t.[144p-VideoMOS]*t.[Count 144p-VideoMOS]) as 'YTB_video_mos_144p_Num',
		sum(t.[Count 144p-VideoMOS]) as 'YTB_video_mos_144p_Den',
		sum(t.[% 144p]*t.[Count % 144p]) as 'YTB_video_resolution_%144p_Num',
		sum(t.[Count % 144p]) as 'YTB_video_resolution_%144p_Den',
		sum(t.[240p-VideoDuration]*t.[Count 240p-VideoDuration]) as 'YTB_video_resolution_240p_Num',
		sum(t.[Count 240p-VideoDuration]) as 'YTB_video_resolution_240p_Den',
		sum(t.[240p-VideoMOS]*t.[Count 240p-VideoMOS]) as 'YTB_video_mos_240p_Num',
		sum(t.[Count 240p-VideoMOS]) as 'YTB_video_mos_240p_Den',
		sum(t.[% 240p]*t.[Count % 240p]) as 'YTB_video_resolution_%240p_Num',
		sum(t.[Count % 240p]) as 'YTB_video_resolution_%240p_Den',
		sum(t.[360p-VideoDuration]*t.[Count 360p-VideoDuration]) as 'YTB_video_resolution_360p_Num',
		sum(t.[Count 360p-VideoDuration]) as 'YTB_video_resolution_360p_Den',
		sum(t.[360p-VideoMOS]*t.[Count 360p-VideoMOS]) as 'YTB_video_mos_360p_Num',
		sum(t.[Count 360p-VideoMOS]) as 'YTB_video_mos_360p_Den',
		sum(t.[% 360p]*t.[Count % 360p]) as 'YTB_video_resolution_%360p_Num',
		sum(t.[Count % 360p]) as 'YTB_video_resolution_%360p_Den',
		sum(t.[480p-VideoDuration]*t.[Count 480p-VideoDuration]) as 'YTB_video_resolution_480p_Num',
		sum(t.[Count 480p-VideoDuration]) as 'YTB_video_resolution_480p_Den',
		sum(t.[480p-VideoMOS]*t.[Count 480p-VideoMOS]) as 'YTB_video_mos_480p_Num',
		sum(t.[Count 480p-VideoMOS]) as 'YTB_video_mos_480p_Den',
		sum(t.[% 480p]*t.[Count % 480p]) as 'YTB_video_resolution_%480p_Num',
		sum(t.[Count % 480p]) as 'YTB_video_resolution_%480p_Den',
		sum(t.[720p-VideoDuration]*t.[Count 720p-VideoDuration]) as 'YTB_video_resolution_720p_Num',
		sum(t.[Count 720p-VideoDuration]) as 'YTB_video_resolution_720p_Den',
		sum(t.[720p-VideoMOS]*t.[Count 720p-VideoMOS]) as 'YTB_video_mos_720p_Num',
		sum(t.[Count 720p-VideoMOS]) as 'YTB_video_mos_720p_Den',
		sum(t.[% 720p]*t.[Count % 720p]) as 'YTB_video_resolution_%720p_Num',
		sum(t.[Count % 720p]) as 'YTB_video_resolution_%720p_Den',
		sum(t.[1080p-VideoDuration]*t.[Count 1080p-VideoDuration]) as 'YTB_video_resolution_1080p_Num',
		sum(t.[Count 1080p-VideoDuration]) as 'YTB_video_resolution_1080p_Den',
		sum(t.[1080p-VideoMOS]*t.[Count 1080p-VideoMOS]) as 'YTB_video_mos_1080p_Num',
		sum(t.[Count 1080p-VideoMOS]) as 'YTB_video_mos_1080p_Den',
		sum(t.[% 1080p]*t.[Count % 1080p]) as 'YTB_video_resolution_%1080p_Num',
		sum(t.[Count % 1080p]) as 'YTB_video_resolution_%1080p_Den',

		--YOUTUBE HD: Video 1
		sum(t.[Time To First Image_Video1]*(t.Reproducciones_Video1-t.Fails_Video1)) as Avg_Video_StarTime_Num_Video1,
		sum((t.Reproducciones_Video1-t.Fails_Video1)) as avg_Video_startTime_Den_Video1,
		sum(t.ReproduccionesSinInt_Video1) as Reproductions_WO_Interruptions_Video1,
		sum(t.Reproducciones_Video1) as Reproductions_WO_Interruptions_Den_Video1,
		sum(t.[B4_Video1]) as B4_Video1,
		sum(t.[ReproduccionesHD_Video1]) as [ReproduccionesHD_Video1],
		sum(t.[Successful video download_Video1]) as [Successful video download_Video1],
		sum(t.[Reproducciones_Video1]) as [Reproducciones_Video1],
		sum(t.[Fails_Video1]) as [Fails_Video1],
		--sum(cast(left(t.[avg Video Resolution_Video1],3) as int)*t.[Count_Video_Resolucion_Video1]) as YTB_video_resolution_num_Video1,
		sum(cast(replace(t.[avg Video Resolution_Video1],'p','') as float)*t.[Count_Video_Resolucion_Video1]) as YTB_video_resolution_num_Video1,
		sum(t.Count_Video_Resolucion_Video1) as YTB_video_resolution_den_Video1,
		sum(t.[Video MOS_Video1]*t.[Count_Video_MOS_Video1]) as YTB_video_mos_num_Video1,
		sum(t.[Count_Video_MOS_Video1]) as YTB_video_mos_den_Video1,
		max(t.url_Video1) as YTB_URL_Video1,
		sum(t.[1st Resolution_Video1]*t.[Count 1st Resolution_Video1]) as 'YTB_1st_Resolution_Num_Video1',
		sum(t.[Count 1st Resolution_Video1]) as 'YTB_1st_Resolution_Den_Video1',
		sum(t.[2nd Resolution_Video1]*t.[Count 2nd Resolution_Video1]) as 'YTB_2nd_Resolution_Num_Video1',
		sum(t.[Count 2nd Resolution_Video1]) as 'YTB_2nd_Resolution_Den_Video1',
		sum(t.[FirstChangeFromInit_Video1]*t.[Count FirstChangeFromInit_Video1]) as 'YTB_FirstChangeFromInit_Num_Video1',
		sum(t.[Count FirstChangeFromInit_Video1]) as 'YTB_FirstChangeFromInit_Den_Video1',
		sum(t.[initialResolution_Video1]*t.[Count initialResolution_Video1]) as 'YTB_initialResolution_Num_Video1',
		sum(t.[Count initialResolution_Video1]) as 'YTB_initialResolution_Den_Video1',
		sum(t.[finalResolution_Video1]*t.[Count finalResolution_Video1]) as 'YTB_finalResolution_Num_Video1',
		sum(t.[Count finalResolution_Video1]) as 'YTB_finalResolution_Den_Video1',
		sum(t.[144p-VideoDuration_Video1]*t.[Count 144p-VideoDuration_Video1]) as 'YTB_video_resolution_144p_Num_Video1',
		sum(t.[Count 144p-VideoDuration_Video1]) as 'YTB_video_resolution_144p_Den_Video1',
		sum(t.[144p-VideoMOS_Video1]*t.[Count 144p-VideoMOS_Video1]) as 'YTB_video_mos_144p_Num_Video1',
		sum(t.[Count 144p-VideoMOS_Video1]) as 'YTB_video_mos_144p_Den_Video1',
		sum(t.[% 144p_Video1]*t.[Count % 144p_Video1]) as 'YTB_video_resolution_%144p_Num_Video1',
		sum(t.[Count % 144p_Video1]) as 'YTB_video_resolution_%144p_Den_Video1',
		sum(t.[240p-VideoDuration_Video1]*t.[Count 240p-VideoDuration_Video1]) as 'YTB_video_resolution_240p_Num_Video1',
		sum(t.[Count 240p-VideoDuration_Video1]) as 'YTB_video_resolution_240p_Den_Video1',
		sum(t.[240p-VideoMOS_Video1]*t.[Count 240p-VideoMOS_Video1]) as 'YTB_video_mos_240p_Num_Video1',
		sum(t.[Count 240p-VideoMOS_Video1]) as 'YTB_video_mos_240p_Den_Video1',
		sum(t.[% 240p_Video1]*t.[Count % 240p_Video1]) as 'YTB_video_resolution_%240p_Num_Video1',
		sum(t.[Count % 240p_Video1]) as 'YTB_video_resolution_%240p_Den_Video1',
		sum(t.[360p-VideoDuration_Video1]*t.[Count 360p-VideoDuration_Video1]) as 'YTB_video_resolution_360p_Num_Video1',
		sum(t.[Count 360p-VideoDuration_Video1]) as 'YTB_video_resolution_360p_Den_Video1',
		sum(t.[360p-VideoMOS_Video1]*t.[Count 360p-VideoMOS_Video1]) as 'YTB_video_mos_360p_Num_Video1',
		sum(t.[Count 360p-VideoMOS_Video1]) as 'YTB_video_mos_360p_Den_Video1',
		sum(t.[% 360p_Video1]*t.[Count % 360p_Video1]) as 'YTB_video_resolution_%360p_Num_Video1',
		sum(t.[Count % 360p_Video1]) as 'YTB_video_resolution_%360p_Den_Video1',
		sum(t.[480p-VideoDuration_Video1]*t.[Count 480p-VideoDuration_Video1]) as 'YTB_video_resolution_480p_Num_Video1',
		sum(t.[Count 480p-VideoDuration_Video1]) as 'YTB_video_resolution_480p_Den_Video1',
		sum(t.[480p-VideoMOS_Video1]*t.[Count 480p-VideoMOS_Video1]) as 'YTB_video_mos_480p_Num_Video1',
		sum(t.[Count 480p-VideoMOS_Video1]) as 'YTB_video_mos_480p_Den_Video1',
		sum(t.[% 480p_Video1]*t.[Count % 480p_Video1]) as 'YTB_video_resolution_%480p_Num_Video1',
		sum(t.[Count % 480p_Video1]) as 'YTB_video_resolution_%480p_Den_Video1',
		sum(t.[720p-VideoDuration_Video1]*t.[Count 720p-VideoDuration_Video1]) as 'YTB_video_resolution_720p_Num_Video1',
		sum(t.[Count 720p-VideoDuration_Video1]) as 'YTB_video_resolution_720p_Den_Video1',
		sum(t.[720p-VideoMOS_Video1]*t.[Count 720p-VideoMOS_Video1]) as 'YTB_video_mos_720p_Num_Video1',
		sum(t.[Count 720p-VideoMOS_Video1]) as 'YTB_video_mos_720p_Den_Video1',
		sum(t.[% 720p_Video1]*t.[Count % 720p_Video1]) as 'YTB_video_resolution_%720p_Num_Video1',
		sum(t.[Count % 720p_Video1]) as 'YTB_video_resolution_%720p_Den_Video1',
		sum(t.[1080p-VideoDuration_Video1]*t.[Count 1080p-VideoDuration_Video1]) as 'YTB_video_resolution_1080p_Num_Video1',
		sum(t.[Count 1080p-VideoDuration_Video1]) as 'YTB_video_resolution_1080p_Den_Video1',
		sum(t.[1080p-VideoMOS_Video1]*t.[Count 1080p-VideoMOS_Video1]) as 'YTB_video_mos_1080p_Num_Video1',
		sum(t.[Count 1080p-VideoMOS_Video1]) as 'YTB_video_mos_1080p_Den_Video1',
		sum(t.[% 1080p_Video1]*t.[Count % 1080p_Video1]) as 'YTB_video_resolution_%1080p_Num_Video1',
		sum(t.[Count % 1080p_Video1]) as 'YTB_video_resolution_%1080p_Den_Video1',

		--YOUTUBE HD: Video 2
		sum(t.[Time To First Image_Video2]*(t.Reproducciones_Video2-t.Fails_Video2)) as Avg_Video_StarTime_Num_Video2,
		sum((t.Reproducciones_Video2-t.Fails_Video2)) as avg_Video_startTime_Den_Video2,
		sum(t.ReproduccionesSinInt_Video2) as Reproductions_WO_Interruptions_Video2,
		sum(t.Reproducciones_Video2) as Reproductions_WO_Interruptions_Den_Video2,
		sum(t.[B4_Video2]) as B4_Video2,
		sum(t.[ReproduccionesHD_Video2]) as [ReproduccionesHD_Video2],
		sum(t.[Successful video download_Video2]) as [Successful video download_Video2],
		sum(t.[Reproducciones_Video2]) as [Reproducciones_Video2],
		sum(t.[Fails_Video2]) as [Fails_Video2],
		--sum(cast(left(t.[avg Video Resolution_Video2],3) as int)*t.[Count_Video_Resolucion_Video2]) as YTB_video_resolution_num_Video2,
		sum(cast(replace(t.[avg Video Resolution_Video2],'p','') as float)*t.[Count_Video_Resolucion_Video2]) as YTB_video_resolution_num_Video2,
		sum(t.Count_Video_Resolucion_Video2) as YTB_video_resolution_den_Video2,
		sum(t.[Video MOS_Video2]*t.[Count_Video_MOS_Video2]) as YTB_video_mos_num_Video2,
		sum(t.[Count_Video_MOS_Video2]) as YTB_video_mos_den_Video2,
		max(t.url_Video2) as YTB_URL_Video2,
		sum(t.[1st Resolution_Video2]*t.[Count 1st Resolution_Video2]) as 'YTB_1st_Resolution_Num_Video2',
		sum(t.[Count 1st Resolution_Video2]) as 'YTB_1st_Resolution_Den_Video2',
		sum(t.[2nd Resolution_Video2]*t.[Count 2nd Resolution_Video2]) as 'YTB_2nd_Resolution_Num_Video2',
		sum(t.[Count 2nd Resolution_Video2]) as 'YTB_2nd_Resolution_Den_Video2',
		sum(t.[FirstChangeFromInit_Video2]*t.[Count FirstChangeFromInit_Video2]) as 'YTB_FirstChangeFromInit_Num_Video2',
		sum(t.[Count FirstChangeFromInit_Video2]) as 'YTB_FirstChangeFromInit_Den_Video2',
		sum(t.[initialResolution_Video2]*t.[Count initialResolution_Video2]) as 'YTB_initialResolution_Num_Video2',
		sum(t.[Count initialResolution_Video2]) as 'YTB_initialResolution_Den_Video2',
		sum(t.[finalResolution_Video2]*t.[Count finalResolution_Video2]) as 'YTB_finalResolution_Num_Video2',
		sum(t.[Count finalResolution_Video2]) as 'YTB_finalResolution_Den_Video2',
		sum(t.[144p-VideoDuration_Video2]*t.[Count 144p-VideoDuration_Video2]) as 'YTB_video_resolution_144p_Num_Video2',
		sum(t.[Count 144p-VideoDuration_Video2]) as 'YTB_video_resolution_144p_Den_Video2',
		sum(t.[144p-VideoMOS_Video2]*t.[Count 144p-VideoMOS_Video2]) as 'YTB_video_mos_144p_Num_Video2',
		sum(t.[Count 144p-VideoMOS_Video2]) as 'YTB_video_mos_144p_Den_Video2',
		sum(t.[% 144p_Video2]*t.[Count % 144p_Video2]) as 'YTB_video_resolution_%144p_Num_Video2',
		sum(t.[Count % 144p_Video2]) as 'YTB_video_resolution_%144p_Den_Video2',
		sum(t.[240p-VideoDuration_Video2]*t.[Count 240p-VideoDuration_Video2]) as 'YTB_video_resolution_240p_Num_Video2',
		sum(t.[Count 240p-VideoDuration_Video2]) as 'YTB_video_resolution_240p_Den_Video2',
		sum(t.[240p-VideoMOS_Video2]*t.[Count 240p-VideoMOS_Video2]) as 'YTB_video_mos_240p_Num_Video2',
		sum(t.[Count 240p-VideoMOS_Video2]) as 'YTB_video_mos_240p_Den_Video2',
		sum(t.[% 240p_Video2]*t.[Count % 240p_Video2]) as 'YTB_video_resolution_%240p_Num_Video2',
		sum(t.[Count % 240p_Video2]) as 'YTB_video_resolution_%240p_Den_Video2',
		sum(t.[360p-VideoDuration_Video2]*t.[Count 360p-VideoDuration_Video2]) as 'YTB_video_resolution_360p_Num_Video2',
		sum(t.[Count 360p-VideoDuration_Video2]) as 'YTB_video_resolution_360p_Den_Video2',
		sum(t.[360p-VideoMOS_Video2]*t.[Count 360p-VideoMOS_Video2]) as 'YTB_video_mos_360p_Num_Video2',
		sum(t.[Count 360p-VideoMOS_Video2]) as 'YTB_video_mos_360p_Den_Video2',
		sum(t.[% 360p_Video2]*t.[Count % 360p_Video2]) as 'YTB_video_resolution_%360p_Num_Video2',
		sum(t.[Count % 360p_Video2]) as 'YTB_video_resolution_%360p_Den_Video2',
		sum(t.[480p-VideoDuration_Video2]*t.[Count 480p-VideoDuration_Video2]) as 'YTB_video_resolution_480p_Num_Video2',
		sum(t.[Count 480p-VideoDuration_Video2]) as 'YTB_video_resolution_480p_Den_Video2',
		sum(t.[480p-VideoMOS_Video2]*t.[Count 480p-VideoMOS_Video2]) as 'YTB_video_mos_480p_Num_Video2',
		sum(t.[Count 480p-VideoMOS_Video2]) as 'YTB_video_mos_480p_Den_Video2',
		sum(t.[% 480p_Video2]*t.[Count % 480p_Video2]) as 'YTB_video_resolution_%480p_Num_Video2',
		sum(t.[Count % 480p_Video2]) as 'YTB_video_resolution_%480p_Den_Video2',
		sum(t.[720p-VideoDuration_Video2]*t.[Count 720p-VideoDuration_Video2]) as 'YTB_video_resolution_720p_Num_Video2',
		sum(t.[Count 720p-VideoDuration_Video2]) as 'YTB_video_resolution_720p_Den_Video2',
		sum(t.[720p-VideoMOS_Video2]*t.[Count 720p-VideoMOS_Video2]) as 'YTB_video_mos_720p_Num_Video2',
		sum(t.[Count 720p-VideoMOS_Video2]) as 'YTB_video_mos_720p_Den_Video2',
		sum(t.[% 720p_Video2]*t.[Count % 720p_Video2]) as 'YTB_video_resolution_%720p_Num_Video2',
		sum(t.[Count % 720p_Video2]) as 'YTB_video_resolution_%720p_Den_Video2',
		sum(t.[1080p-VideoDuration_Video2]*t.[Count 1080p-VideoDuration_Video2]) as 'YTB_video_resolution_1080p_Num_Video2',
		sum(t.[Count 1080p-VideoDuration_Video2]) as 'YTB_video_resolution_1080p_Den_Video2',
		sum(t.[1080p-VideoMOS_Video2]*t.[Count 1080p-VideoMOS_Video2]) as 'YTB_video_mos_1080p_Num_Video2',
		sum(t.[Count 1080p-VideoMOS_Video2]) as 'YTB_video_mos_1080p_Den_Video2',
		sum(t.[% 1080p_Video2]*t.[Count % 1080p_Video2]) as 'YTB_video_resolution_%1080p_Num_Video2',
		sum(t.[Count % 1080p_Video2]) as 'YTB_video_resolution_%1080p_Den_Video2',

		--YOUTUBE HD: Video 3
		sum(t.[Time To First Image_Video3]*(t.Reproducciones_Video3-t.Fails_Video3)) as Avg_Video_StarTime_Num_Video3,
		sum((t.Reproducciones_Video3-t.Fails_Video3)) as avg_Video_startTime_Den_Video3,
		sum(t.ReproduccionesSinInt_Video3) as Reproductions_WO_Interruptions_Video3,
		sum(t.Reproducciones_Video3) as Reproductions_WO_Interruptions_Den_Video3,
		sum(t.[B4_Video3]) as B4_Video3,
		sum(t.[ReproduccionesHD_Video3]) as [ReproduccionesHD_Video3],
		sum(t.[Successful video download_Video3]) as [Successful video download_Video3],
		sum(t.[Reproducciones_Video3]) as [Reproducciones_Video3],
		sum(t.[Fails_Video3]) as [Fails_Video3],
		--sum(cast(left(t.[avg Video Resolution_Video3],3) as int)*t.[Count_Video_Resolucion_Video3]) as YTB_video_resolution_num_Video3,
		sum(cast(replace(t.[avg Video Resolution_Video3],'p','') as float)*t.[Count_Video_Resolucion_Video3]) as YTB_video_resolution_num_Video3,
		sum(t.Count_Video_Resolucion_Video3) as YTB_video_resolution_den_Video3,
		sum(t.[Video MOS_Video3]*t.[Count_Video_MOS_Video3]) as YTB_video_mos_num_Video3,
		sum(t.[Count_Video_MOS_Video3]) as YTB_video_mos_den_Video3,
		max(t.url_Video3) as YTB_URL_Video3,
		sum(t.[1st Resolution_Video3]*t.[Count 1st Resolution_Video3]) as 'YTB_1st_Resolution_Num_Video3',
		sum(t.[Count 1st Resolution_Video3]) as 'YTB_1st_Resolution_Den_Video3',
		sum(t.[2nd Resolution_Video3]*t.[Count 2nd Resolution_Video3]) as 'YTB_2nd_Resolution_Num_Video3',
		sum(t.[Count 2nd Resolution_Video3]) as 'YTB_2nd_Resolution_Den_Video3',
		sum(t.[FirstChangeFromInit_Video3]*t.[Count FirstChangeFromInit_Video3]) as 'YTB_FirstChangeFromInit_Num_Video3',
		sum(t.[Count FirstChangeFromInit_Video3]) as 'YTB_FirstChangeFromInit_Den_Video3',
		sum(t.[initialResolution_Video3]*t.[Count initialResolution_Video3]) as 'YTB_initialResolution_Num_Video3',
		sum(t.[Count initialResolution_Video3]) as 'YTB_initialResolution_Den_Video3',
		sum(t.[finalResolution_Video3]*t.[Count finalResolution_Video3]) as 'YTB_finalResolution_Num_Video3',
		sum(t.[Count finalResolution_Video3]) as 'YTB_finalResolution_Den_Video3',
		sum(t.[144p-VideoDuration_Video3]*t.[Count 144p-VideoDuration_Video3]) as 'YTB_video_resolution_144p_Num_Video3',
		sum(t.[Count 144p-VideoDuration_Video3]) as 'YTB_video_resolution_144p_Den_Video3',
		sum(t.[144p-VideoMOS_Video3]*t.[Count 144p-VideoMOS_Video3]) as 'YTB_video_mos_144p_Num_Video3',
		sum(t.[Count 144p-VideoMOS_Video3]) as 'YTB_video_mos_144p_Den_Video3',
		sum(t.[% 144p_Video3]*t.[Count % 144p_Video3]) as 'YTB_video_resolution_%144p_Num_Video3',
		sum(t.[Count % 144p_Video3]) as 'YTB_video_resolution_%144p_Den_Video3',
		sum(t.[240p-VideoDuration_Video3]*t.[Count 240p-VideoDuration_Video3]) as 'YTB_video_resolution_240p_Num_Video3',
		sum(t.[Count 240p-VideoDuration_Video3]) as 'YTB_video_resolution_240p_Den_Video3',
		sum(t.[240p-VideoMOS_Video3]*t.[Count 240p-VideoMOS_Video3]) as 'YTB_video_mos_240p_Num_Video3',
		sum(t.[Count 240p-VideoMOS_Video3]) as 'YTB_video_mos_240p_Den_Video3',
		sum(t.[% 240p_Video3]*t.[Count % 240p_Video3]) as 'YTB_video_resolution_%240p_Num_Video3',
		sum(t.[Count % 240p_Video3]) as 'YTB_video_resolution_%240p_Den_Video3',
		sum(t.[360p-VideoDuration_Video3]*t.[Count 360p-VideoDuration_Video3]) as 'YTB_video_resolution_360p_Num_Video3',
		sum(t.[Count 360p-VideoDuration_Video3]) as 'YTB_video_resolution_360p_Den_Video3',
		sum(t.[360p-VideoMOS_Video3]*t.[Count 360p-VideoMOS_Video3]) as 'YTB_video_mos_360p_Num_Video3',
		sum(t.[Count 360p-VideoMOS_Video3]) as 'YTB_video_mos_360p_Den_Video3',
		sum(t.[% 360p_Video3]*t.[Count % 360p_Video3]) as 'YTB_video_resolution_%360p_Num_Video3',
		sum(t.[Count % 360p_Video3]) as 'YTB_video_resolution_%360p_Den_Video3',
		sum(t.[480p-VideoDuration_Video3]*t.[Count 480p-VideoDuration_Video3]) as 'YTB_video_resolution_480p_Num_Video3',
		sum(t.[Count 480p-VideoDuration_Video3]) as 'YTB_video_resolution_480p_Den_Video3',
		sum(t.[480p-VideoMOS_Video3]*t.[Count 480p-VideoMOS_Video3]) as 'YTB_video_mos_480p_Num_Video3',
		sum(t.[Count 480p-VideoMOS_Video3]) as 'YTB_video_mos_480p_Den_Video3',
		sum(t.[% 480p_Video3]*t.[Count % 480p_Video3]) as 'YTB_video_resolution_%480p_Num_Video3',
		sum(t.[Count % 480p_Video3]) as 'YTB_video_resolution_%480p_Den_Video3',
		sum(t.[720p-VideoDuration_Video3]*t.[Count 720p-VideoDuration_Video3]) as 'YTB_video_resolution_720p_Num_Video3',
		sum(t.[Count 720p-VideoDuration_Video3]) as 'YTB_video_resolution_720p_Den_Video3',
		sum(t.[720p-VideoMOS_Video3]*t.[Count 720p-VideoMOS_Video3]) as 'YTB_video_mos_720p_Num_Video3',
		sum(t.[Count 720p-VideoMOS_Video3]) as 'YTB_video_mos_720p_Den_Video3',
		sum(t.[% 720p_Video3]*t.[Count % 720p_Video3]) as 'YTB_video_resolution_%720p_Num_Video3',
		sum(t.[Count % 720p_Video3]) as 'YTB_video_resolution_%720p_Den_Video3',
		sum(t.[1080p-VideoDuration_Video3]*t.[Count 1080p-VideoDuration_Video3]) as 'YTB_video_resolution_1080p_Num_Video3',
		sum(t.[Count 1080p-VideoDuration_Video3]) as 'YTB_video_resolution_1080p_Den_Video3',
		sum(t.[1080p-VideoMOS_Video3]*t.[Count 1080p-VideoMOS_Video3]) as 'YTB_video_mos_1080p_Num_Video3',
		sum(t.[Count 1080p-VideoMOS_Video3]) as 'YTB_video_mos_1080p_Den_Video3',
		sum(t.[% 1080p_Video3]*t.[Count % 1080p_Video3]) as 'YTB_video_resolution_%1080p_Num_Video3',
		sum(t.[Count % 1080p_Video3]) as 'YTB_video_resolution_%1080p_Den_Video3',

		--YOUTUBE HD: Video 4
		sum(t.[Time To First Image_Video4]*(t.Reproducciones_Video4-t.Fails_Video4)) as Avg_Video_StarTime_Num_Video4,
		sum((t.Reproducciones_Video4-t.Fails_Video4)) as avg_Video_startTime_Den_Video4,
		sum(t.ReproduccionesSinInt_Video4) as Reproductions_WO_Interruptions_Video4,
		sum(t.Reproducciones_Video4) as Reproductions_WO_Interruptions_Den_Video4,
		sum(t.[B4_Video4]) as B4_Video4,
		sum(t.[ReproduccionesHD_Video4]) as [ReproduccionesHD_Video4],
		sum(t.[Successful video download_Video4]) as [Successful video download_Video4],
		sum(t.[Reproducciones_Video4]) as [Reproducciones_Video4],
		sum(t.[Fails_Video4]) as [Fails_Video4],
		--sum(cast(left(t.[avg Video Resolution_Video4],3) as int)*t.[Count_Video_Resolucion_Video4]) as YTB_video_resolution_num_Video4,
		sum(cast(replace(t.[avg Video Resolution_Video4],'p','') as float)*t.[Count_Video_Resolucion_Video4]) as YTB_video_resolution_num_Video4,
		sum(t.Count_Video_Resolucion_Video4) as YTB_video_resolution_den_Video4,
		sum(t.[Video MOS_Video4]*t.[Count_Video_MOS_Video4]) as YTB_video_mos_num_Video4,
		sum(t.[Count_Video_MOS_Video4]) as YTB_video_mos_den_Video4,
		max(t.url_Video4) as YTB_URL_Video4,
		sum(t.[1st Resolution_Video4]*t.[Count 1st Resolution_Video4]) as 'YTB_1st_Resolution_Num_Video4',
		sum(t.[Count 1st Resolution_Video4]) as 'YTB_1st_Resolution_Den_Video4',
		sum(t.[2nd Resolution_Video4]*t.[Count 2nd Resolution_Video4]) as 'YTB_2nd_Resolution_Num_Video4',
		sum(t.[Count 2nd Resolution_Video4]) as 'YTB_2nd_Resolution_Den_Video4',
		sum(t.[FirstChangeFromInit_Video4]*t.[Count FirstChangeFromInit_Video4]) as 'YTB_FirstChangeFromInit_Num_Video4',
		sum(t.[Count FirstChangeFromInit_Video4]) as 'YTB_FirstChangeFromInit_Den_Video4',
		sum(t.[initialResolution_Video4]*t.[Count initialResolution_Video4]) as 'YTB_initialResolution_Num_Video4',
		sum(t.[Count initialResolution_Video4]) as 'YTB_initialResolution_Den_Video4',
		sum(t.[finalResolution_Video4]*t.[Count finalResolution_Video4]) as 'YTB_finalResolution_Num_Video4',
		sum(t.[Count finalResolution_Video4]) as 'YTB_finalResolution_Den_Video4',
		sum(t.[144p-VideoDuration_Video4]*t.[Count 144p-VideoDuration_Video4]) as 'YTB_video_resolution_144p_Num_Video4',
		sum(t.[Count 144p-VideoDuration_Video4]) as 'YTB_video_resolution_144p_Den_Video4',
		sum(t.[144p-VideoMOS_Video4]*t.[Count 144p-VideoMOS_Video4]) as 'YTB_video_mos_144p_Num_Video4',
		sum(t.[Count 144p-VideoMOS_Video4]) as 'YTB_video_mos_144p_Den_Video4',
		sum(t.[% 144p_Video4]*t.[Count % 144p_Video4]) as 'YTB_video_resolution_%144p_Num_Video4',
		sum(t.[Count % 144p_Video4]) as 'YTB_video_resolution_%144p_Den_Video4',
		sum(t.[240p-VideoDuration_Video4]*t.[Count 240p-VideoDuration_Video4]) as 'YTB_video_resolution_240p_Num_Video4',
		sum(t.[Count 240p-VideoDuration_Video4]) as 'YTB_video_resolution_240p_Den_Video4',
		sum(t.[240p-VideoMOS_Video4]*t.[Count 240p-VideoMOS_Video4]) as 'YTB_video_mos_240p_Num_Video4',
		sum(t.[Count 240p-VideoMOS_Video4]) as 'YTB_video_mos_240p_Den_Video4',
		sum(t.[% 240p_Video4]*t.[Count % 240p_Video4]) as 'YTB_video_resolution_%240p_Num_Video4',
		sum(t.[Count % 240p_Video4]) as 'YTB_video_resolution_%240p_Den_Video4',
		sum(t.[360p-VideoDuration_Video4]*t.[Count 360p-VideoDuration_Video4]) as 'YTB_video_resolution_360p_Num_Video4',
		sum(t.[Count 360p-VideoDuration_Video4]) as 'YTB_video_resolution_360p_Den_Video4',
		sum(t.[360p-VideoMOS_Video4]*t.[Count 360p-VideoMOS_Video4]) as 'YTB_video_mos_360p_Num_Video4',
		sum(t.[Count 360p-VideoMOS_Video4]) as 'YTB_video_mos_360p_Den_Video4',
		sum(t.[% 360p_Video4]*t.[Count % 360p_Video4]) as 'YTB_video_resolution_%360p_Num_Video4',
		sum(t.[Count % 360p_Video4]) as 'YTB_video_resolution_%360p_Den_Video4',
		sum(t.[480p-VideoDuration_Video4]*t.[Count 480p-VideoDuration_Video4]) as 'YTB_video_resolution_480p_Num_Video4',
		sum(t.[Count 480p-VideoDuration_Video4]) as 'YTB_video_resolution_480p_Den_Video4',
		sum(t.[480p-VideoMOS_Video4]*t.[Count 480p-VideoMOS_Video4]) as 'YTB_video_mos_480p_Num_Video4',
		sum(t.[Count 480p-VideoMOS_Video4]) as 'YTB_video_mos_480p_Den_Video4',
		sum(t.[% 480p_Video4]*t.[Count % 480p_Video4]) as 'YTB_video_resolution_%480p_Num_Video4',
		sum(t.[Count % 480p_Video4]) as 'YTB_video_resolution_%480p_Den_Video4',
		sum(t.[720p-VideoDuration_Video4]*t.[Count 720p-VideoDuration_Video4]) as 'YTB_video_resolution_720p_Num_Video4',
		sum(t.[Count 720p-VideoDuration_Video4]) as 'YTB_video_resolution_720p_Den_Video4',
		sum(t.[720p-VideoMOS_Video4]*t.[Count 720p-VideoMOS_Video4]) as 'YTB_video_mos_720p_Num_Video4',
		sum(t.[Count 720p-VideoMOS_Video4]) as 'YTB_video_mos_720p_Den_Video4',
		sum(t.[% 720p_Video4]*t.[Count % 720p_Video4]) as 'YTB_video_resolution_%720p_Num_Video4',
		sum(t.[Count % 720p_Video4]) as 'YTB_video_resolution_%720p_Den_Video4',
		sum(t.[1080p-VideoDuration_Video4]*t.[Count 1080p-VideoDuration_Video4]) as 'YTB_video_resolution_1080p_Num_Video4',
		sum(t.[Count 1080p-VideoDuration_Video4]) as 'YTB_video_resolution_1080p_Den_Video4',
		sum(t.[1080p-VideoMOS_Video4]*t.[Count 1080p-VideoMOS_Video4]) as 'YTB_video_mos_1080p_Num_Video4',
		sum(t.[Count 1080p-VideoMOS_Video4]) as 'YTB_video_mos_1080p_Den_Video4',
		sum(t.[% 1080p_Video4]*t.[Count % 1080p_Video4]) as 'YTB_video_resolution_%1080p_Num_Video4',
		sum(t.[Count % 1080p_Video4]) as 'YTB_video_resolution_%1080p_Den_Video4',

		-- Parametros de configuracion:
		t.ASideDevice as ASideDevice, t.BSideDevice as BSideDevice, t.SWVersion as SWVersion, max(t.Youtube_Version) as YTB_Version 

	from [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_Youtube_HD] t, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end,mnc,meas_round,Date_Reporting,Week_Reporting,t.entidad,t.Report_Type,t.Aggr_Type,
		t.ASideDevice, t.BSideDevice, t.SWVersion--, t.Youtube_Version--, t.url --, t.Region_VF, t.Region_OSP

	-------------
	union all
	select  
		p.codigo_ine, 'Roads' vf_environment,mnc,meas_round,Date_Reporting as meas_date,Week_Reporting as meas_week, 
		'Road 4G' as meas_Tech, 'Youtube HD' as Test_type, 'Downlink' as Direction, entidad as vf_entity,t.Report_Type,t.Aggr_Type,
	
		sum(t.[Time To First Image]*(t.Reproducciones-t.Fails)) as Avg_Video_StarTime_Num,
		sum((t.Reproducciones-t.Fails)) as avg_Video_startTime_Den,
		sum(t.ReproduccionesSinInt) as Reproductions_WO_Interruptions,
		sum(t.Reproducciones) as Reproductions_WO_Interruptions_Den,
		--sum(t.[Successful video download]) as Success_Video_P3_num,
		--sum(t.Reproducciones) as Success_Video_P3_den,
		sum(t.[B4]) as B4,
		sum(t.[ReproduccionesHD]) as [ReproduccionesHD],
		sum(t.[Successful video download]) as [Successful video download],
		sum(t.[Reproducciones]) as [Reproducciones],
		--sum(cast(left(t.[avg Video Resolution],3) as int)*t.[Count_Video_Resolucion]) as YTB_video_resolution_num,
		sum(cast(replace(t.[avg Video Resolution],'p','') as float)*t.[Count_Video_Resolucion]) as YTB_video_resolution_num,
		sum(t.Count_Video_Resolucion) as YTB_video_resolution_den,
		sum(t.[Video MOS]*t.[Count_Video_MOS]) as YTB_video_mos_num,
		sum(t.[Count_Video_MOS]) as YTB_video_mos_den,
		--t.Region_VF as Region_Road_VF, t.Region_OSP as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP,
		max(t.url) as YTB_URL,
		sum(t.[1st Resolution]*t.[Count 1st Resolution]) as 'YTB_1st_Resolution_Num',
		sum(t.[Count 1st Resolution]) as 'YTB_1st_Resolution_Den',
		sum(t.[2nd Resolution]*t.[Count 2nd Resolution]) as 'YTB_2nd_Resolution_Num',
		sum(t.[Count 2nd Resolution]) as 'YTB_2nd_Resolution_Den',
		sum(t.[FirstChangeFromInit]*t.[Count FirstChangeFromInit]) as 'YTB_FirstChangeFromInit_Num',
		sum(t.[Count FirstChangeFromInit]) as 'YTB_FirstChangeFromInit_Den',
		sum(t.[initialResolution]*t.[Count initialResolution]) as 'YTB_initialResolution_Num',
		sum(t.[Count initialResolution]) as 'YTB_initialResolution_Den',
		sum(t.[finalResolution]*t.[Count finalResolution]) as 'YTB_finalResolution_Num',
		sum(t.[Count finalResolution]) as 'YTB_finalResolution_Den',
		sum(t.[144p-VideoDuration]*t.[Count 144p-VideoDuration]) as 'YTB_video_resolution_144p_Num',
		sum(t.[Count 144p-VideoDuration]) as 'YTB_video_resolution_144p_Den',
		sum(t.[144p-VideoMOS]*t.[Count 144p-VideoMOS]) as 'YTB_video_mos_144p_Num',
		sum(t.[Count 144p-VideoMOS]) as 'YTB_video_mos_144p_Den',
		sum(t.[% 144p]*t.[Count % 144p]) as 'YTB_video_resolution_%144p_Num',
		sum(t.[Count % 144p]) as 'YTB_video_resolution_%144p_Den',
		sum(t.[240p-VideoDuration]*t.[Count 240p-VideoDuration]) as 'YTB_video_resolution_240p_Num',
		sum(t.[Count 240p-VideoDuration]) as 'YTB_video_resolution_240p_Den',
		sum(t.[240p-VideoMOS]*t.[Count 240p-VideoMOS]) as 'YTB_video_mos_240p_Num',
		sum(t.[Count 240p-VideoMOS]) as 'YTB_video_mos_240p_Den',
		sum(t.[% 240p]*t.[Count % 240p]) as 'YTB_video_resolution_%240p_Num',
		sum(t.[Count % 240p]) as 'YTB_video_resolution_%240p_Den',
		sum(t.[360p-VideoDuration]*t.[Count 360p-VideoDuration]) as 'YTB_video_resolution_360p_Num',
		sum(t.[Count 360p-VideoDuration]) as 'YTB_video_resolution_360p_Den',
		sum(t.[360p-VideoMOS]*t.[Count 360p-VideoMOS]) as 'YTB_video_mos_360p_Num',
		sum(t.[Count 360p-VideoMOS]) as 'YTB_video_mos_360p_Den',
		sum(t.[% 360p]*t.[Count % 360p]) as 'YTB_video_resolution_%360p_Num',
		sum(t.[Count % 360p]) as 'YTB_video_resolution_%360p_Den',
		sum(t.[480p-VideoDuration]*t.[Count 480p-VideoDuration]) as 'YTB_video_resolution_480p_Num',
		sum(t.[Count 480p-VideoDuration]) as 'YTB_video_resolution_480p_Den',
		sum(t.[480p-VideoMOS]*t.[Count 480p-VideoMOS]) as 'YTB_video_mos_480p_Num',
		sum(t.[Count 480p-VideoMOS]) as 'YTB_video_mos_480p_Den',
		sum(t.[% 480p]*t.[Count % 480p]) as 'YTB_video_resolution_%480p_Num',
		sum(t.[Count % 480p]) as 'YTB_video_resolution_%480p_Den',
		sum(t.[720p-VideoDuration]*t.[Count 720p-VideoDuration]) as 'YTB_video_resolution_720p_Num',
		sum(t.[Count 720p-VideoDuration]) as 'YTB_video_resolution_720p_Den',
		sum(t.[720p-VideoMOS]*t.[Count 720p-VideoMOS]) as 'YTB_video_mos_720p_Num',
		sum(t.[Count 720p-VideoMOS]) as 'YTB_video_mos_720p_Den',
		sum(t.[% 720p]*t.[Count % 720p]) as 'YTB_video_resolution_%720p_Num',
		sum(t.[Count % 720p]) as 'YTB_video_resolution_%720p_Den',
		sum(t.[1080p-VideoDuration]*t.[Count 1080p-VideoDuration]) as 'YTB_video_resolution_1080p_Num',
		sum(t.[Count 1080p-VideoDuration]) as 'YTB_video_resolution_1080p_Den',
		sum(t.[1080p-VideoMOS]*t.[Count 1080p-VideoMOS]) as 'YTB_video_mos_1080p_Num',
		sum(t.[Count 1080p-VideoMOS]) as 'YTB_video_mos_1080p_Den',
		sum(t.[% 1080p]*t.[Count % 1080p]) as 'YTB_video_resolution_%1080p_Num',
		sum(t.[Count % 1080p]) as 'YTB_video_resolution_%1080p_Den',

		--YOUTUBE HD: Video 1
		sum(t.[Time To First Image_Video1]*(t.Reproducciones_Video1-t.Fails_Video1)) as Avg_Video_StarTime_Num_Video1,
		sum((t.Reproducciones_Video1-t.Fails_Video1)) as avg_Video_startTime_Den_Video1,
		sum(t.ReproduccionesSinInt_Video1) as Reproductions_WO_Interruptions_Video1,
		sum(t.Reproducciones_Video1) as Reproductions_WO_Interruptions_Den_Video1,
		sum(t.[B4_Video1]) as B4_Video1,
		sum(t.[ReproduccionesHD_Video1]) as [ReproduccionesHD_Video1],
		sum(t.[Successful video download_Video1]) as [Successful video download_Video1],
		sum(t.[Reproducciones_Video1]) as [Reproducciones_Video1],
		sum(t.[Fails_Video1]) as [Fails_Video1],
		--sum(cast(left(t.[avg Video Resolution_Video1],3) as int)*t.[Count_Video_Resolucion_Video1]) as YTB_video_resolution_num_Video1,
		sum(cast(replace(t.[avg Video Resolution_Video1],'p','') as float)*t.[Count_Video_Resolucion_Video1]) as YTB_video_resolution_num_Video1,
		sum(t.Count_Video_Resolucion_Video1) as YTB_video_resolution_den_Video1,
		sum(t.[Video MOS_Video1]*t.[Count_Video_MOS_Video1]) as YTB_video_mos_num_Video1,
		sum(t.[Count_Video_MOS_Video1]) as YTB_video_mos_den_Video1,
		max(t.url_Video1) as YTB_URL_Video1,
		sum(t.[1st Resolution_Video1]*t.[Count 1st Resolution_Video1]) as 'YTB_1st_Resolution_Num_Video1',
		sum(t.[Count 1st Resolution_Video1]) as 'YTB_1st_Resolution_Den_Video1',
		sum(t.[2nd Resolution_Video1]*t.[Count 2nd Resolution_Video1]) as 'YTB_2nd_Resolution_Num_Video1',
		sum(t.[Count 2nd Resolution_Video1]) as 'YTB_2nd_Resolution_Den_Video1',
		sum(t.[FirstChangeFromInit_Video1]*t.[Count FirstChangeFromInit_Video1]) as 'YTB_FirstChangeFromInit_Num_Video1',
		sum(t.[Count FirstChangeFromInit_Video1]) as 'YTB_FirstChangeFromInit_Den_Video1',
		sum(t.[initialResolution_Video1]*t.[Count initialResolution_Video1]) as 'YTB_initialResolution_Num_Video1',
		sum(t.[Count initialResolution_Video1]) as 'YTB_initialResolution_Den_Video1',
		sum(t.[finalResolution_Video1]*t.[Count finalResolution_Video1]) as 'YTB_finalResolution_Num_Video1',
		sum(t.[Count finalResolution_Video1]) as 'YTB_finalResolution_Den_Video1',
		sum(t.[144p-VideoDuration_Video1]*t.[Count 144p-VideoDuration_Video1]) as 'YTB_video_resolution_144p_Num_Video1',
		sum(t.[Count 144p-VideoDuration_Video1]) as 'YTB_video_resolution_144p_Den_Video1',
		sum(t.[144p-VideoMOS_Video1]*t.[Count 144p-VideoMOS_Video1]) as 'YTB_video_mos_144p_Num_Video1',
		sum(t.[Count 144p-VideoMOS_Video1]) as 'YTB_video_mos_144p_Den_Video1',
		sum(t.[% 144p_Video1]*t.[Count % 144p_Video1]) as 'YTB_video_resolution_%144p_Num_Video1',
		sum(t.[Count % 144p_Video1]) as 'YTB_video_resolution_%144p_Den_Video1',
		sum(t.[240p-VideoDuration_Video1]*t.[Count 240p-VideoDuration_Video1]) as 'YTB_video_resolution_240p_Num_Video1',
		sum(t.[Count 240p-VideoDuration_Video1]) as 'YTB_video_resolution_240p_Den_Video1',
		sum(t.[240p-VideoMOS_Video1]*t.[Count 240p-VideoMOS_Video1]) as 'YTB_video_mos_240p_Num_Video1',
		sum(t.[Count 240p-VideoMOS_Video1]) as 'YTB_video_mos_240p_Den_Video1',
		sum(t.[% 240p_Video1]*t.[Count % 240p_Video1]) as 'YTB_video_resolution_%240p_Num_Video1',
		sum(t.[Count % 240p_Video1]) as 'YTB_video_resolution_%240p_Den_Video1',
		sum(t.[360p-VideoDuration_Video1]*t.[Count 360p-VideoDuration_Video1]) as 'YTB_video_resolution_360p_Num_Video1',
		sum(t.[Count 360p-VideoDuration_Video1]) as 'YTB_video_resolution_360p_Den_Video1',
		sum(t.[360p-VideoMOS_Video1]*t.[Count 360p-VideoMOS_Video1]) as 'YTB_video_mos_360p_Num_Video1',
		sum(t.[Count 360p-VideoMOS_Video1]) as 'YTB_video_mos_360p_Den_Video1',
		sum(t.[% 360p_Video1]*t.[Count % 360p_Video1]) as 'YTB_video_resolution_%360p_Num_Video1',
		sum(t.[Count % 360p_Video1]) as 'YTB_video_resolution_%360p_Den_Video1',
		sum(t.[480p-VideoDuration_Video1]*t.[Count 480p-VideoDuration_Video1]) as 'YTB_video_resolution_480p_Num_Video1',
		sum(t.[Count 480p-VideoDuration_Video1]) as 'YTB_video_resolution_480p_Den_Video1',
		sum(t.[480p-VideoMOS_Video1]*t.[Count 480p-VideoMOS_Video1]) as 'YTB_video_mos_480p_Num_Video1',
		sum(t.[Count 480p-VideoMOS_Video1]) as 'YTB_video_mos_480p_Den_Video1',
		sum(t.[% 480p_Video1]*t.[Count % 480p_Video1]) as 'YTB_video_resolution_%480p_Num_Video1',
		sum(t.[Count % 480p_Video1]) as 'YTB_video_resolution_%480p_Den_Video1',
		sum(t.[720p-VideoDuration_Video1]*t.[Count 720p-VideoDuration_Video1]) as 'YTB_video_resolution_720p_Num_Video1',
		sum(t.[Count 720p-VideoDuration_Video1]) as 'YTB_video_resolution_720p_Den_Video1',
		sum(t.[720p-VideoMOS_Video1]*t.[Count 720p-VideoMOS_Video1]) as 'YTB_video_mos_720p_Num_Video1',
		sum(t.[Count 720p-VideoMOS_Video1]) as 'YTB_video_mos_720p_Den_Video1',
		sum(t.[% 720p_Video1]*t.[Count % 720p_Video1]) as 'YTB_video_resolution_%720p_Num_Video1',
		sum(t.[Count % 720p_Video1]) as 'YTB_video_resolution_%720p_Den_Video1',
		sum(t.[1080p-VideoDuration_Video1]*t.[Count 1080p-VideoDuration_Video1]) as 'YTB_video_resolution_1080p_Num_Video1',
		sum(t.[Count 1080p-VideoDuration_Video1]) as 'YTB_video_resolution_1080p_Den_Video1',
		sum(t.[1080p-VideoMOS_Video1]*t.[Count 1080p-VideoMOS_Video1]) as 'YTB_video_mos_1080p_Num_Video1',
		sum(t.[Count 1080p-VideoMOS_Video1]) as 'YTB_video_mos_1080p_Den_Video1',
		sum(t.[% 1080p_Video1]*t.[Count % 1080p_Video1]) as 'YTB_video_resolution_%1080p_Num_Video1',
		sum(t.[Count % 1080p_Video1]) as 'YTB_video_resolution_%1080p_Den_Video1',

		--YOUTUBE HD: Video 2
		sum(t.[Time To First Image_Video2]*(t.Reproducciones_Video2-t.Fails_Video2)) as Avg_Video_StarTime_Num_Video2,
		sum((t.Reproducciones_Video2-t.Fails_Video2)) as avg_Video_startTime_Den_Video2,
		sum(t.ReproduccionesSinInt_Video2) as Reproductions_WO_Interruptions_Video2,
		sum(t.Reproducciones_Video2) as Reproductions_WO_Interruptions_Den_Video2,
		sum(t.[B4_Video2]) as B4_Video2,
		sum(t.[ReproduccionesHD_Video2]) as [ReproduccionesHD_Video2],
		sum(t.[Successful video download_Video2]) as [Successful video download_Video2],
		sum(t.[Reproducciones_Video2]) as [Reproducciones_Video2],
		sum(t.[Fails_Video2]) as [Fails_Video2],
		--sum(cast(left(t.[avg Video Resolution_Video2],3) as int)*t.[Count_Video_Resolucion_Video2]) as YTB_video_resolution_num_Video2,
		sum(cast(replace(t.[avg Video Resolution_Video2],'p','') as float)*t.[Count_Video_Resolucion_Video2]) as YTB_video_resolution_num_Video2,
		sum(t.Count_Video_Resolucion_Video2) as YTB_video_resolution_den_Video2,
		sum(t.[Video MOS_Video2]*t.[Count_Video_MOS_Video2]) as YTB_video_mos_num_Video2,
		sum(t.[Count_Video_MOS_Video2]) as YTB_video_mos_den_Video2,
		max(t.url_Video2) as YTB_URL_Video2,
		sum(t.[1st Resolution_Video2]*t.[Count 1st Resolution_Video2]) as 'YTB_1st_Resolution_Num_Video2',
		sum(t.[Count 1st Resolution_Video2]) as 'YTB_1st_Resolution_Den_Video2',
		sum(t.[2nd Resolution_Video2]*t.[Count 2nd Resolution_Video2]) as 'YTB_2nd_Resolution_Num_Video2',
		sum(t.[Count 2nd Resolution_Video2]) as 'YTB_2nd_Resolution_Den_Video2',
		sum(t.[FirstChangeFromInit_Video2]*t.[Count FirstChangeFromInit_Video2]) as 'YTB_FirstChangeFromInit_Num_Video2',
		sum(t.[Count FirstChangeFromInit_Video2]) as 'YTB_FirstChangeFromInit_Den_Video2',
		sum(t.[initialResolution_Video2]*t.[Count initialResolution_Video2]) as 'YTB_initialResolution_Num_Video2',
		sum(t.[Count initialResolution_Video2]) as 'YTB_initialResolution_Den_Video2',
		sum(t.[finalResolution_Video2]*t.[Count finalResolution_Video2]) as 'YTB_finalResolution_Num_Video2',
		sum(t.[Count finalResolution_Video2]) as 'YTB_finalResolution_Den_Video2',
		sum(t.[144p-VideoDuration_Video2]*t.[Count 144p-VideoDuration_Video2]) as 'YTB_video_resolution_144p_Num_Video2',
		sum(t.[Count 144p-VideoDuration_Video2]) as 'YTB_video_resolution_144p_Den_Video2',
		sum(t.[144p-VideoMOS_Video2]*t.[Count 144p-VideoMOS_Video2]) as 'YTB_video_mos_144p_Num_Video2',
		sum(t.[Count 144p-VideoMOS_Video2]) as 'YTB_video_mos_144p_Den_Video2',
		sum(t.[% 144p_Video2]*t.[Count % 144p_Video2]) as 'YTB_video_resolution_%144p_Num_Video2',
		sum(t.[Count % 144p_Video2]) as 'YTB_video_resolution_%144p_Den_Video2',
		sum(t.[240p-VideoDuration_Video2]*t.[Count 240p-VideoDuration_Video2]) as 'YTB_video_resolution_240p_Num_Video2',
		sum(t.[Count 240p-VideoDuration_Video2]) as 'YTB_video_resolution_240p_Den_Video2',
		sum(t.[240p-VideoMOS_Video2]*t.[Count 240p-VideoMOS_Video2]) as 'YTB_video_mos_240p_Num_Video2',
		sum(t.[Count 240p-VideoMOS_Video2]) as 'YTB_video_mos_240p_Den_Video2',
		sum(t.[% 240p_Video2]*t.[Count % 240p_Video2]) as 'YTB_video_resolution_%240p_Num_Video2',
		sum(t.[Count % 240p_Video2]) as 'YTB_video_resolution_%240p_Den_Video2',
		sum(t.[360p-VideoDuration_Video2]*t.[Count 360p-VideoDuration_Video2]) as 'YTB_video_resolution_360p_Num_Video2',
		sum(t.[Count 360p-VideoDuration_Video2]) as 'YTB_video_resolution_360p_Den_Video2',
		sum(t.[360p-VideoMOS_Video2]*t.[Count 360p-VideoMOS_Video2]) as 'YTB_video_mos_360p_Num_Video2',
		sum(t.[Count 360p-VideoMOS_Video2]) as 'YTB_video_mos_360p_Den_Video2',
		sum(t.[% 360p_Video2]*t.[Count % 360p_Video2]) as 'YTB_video_resolution_%360p_Num_Video2',
		sum(t.[Count % 360p_Video2]) as 'YTB_video_resolution_%360p_Den_Video2',
		sum(t.[480p-VideoDuration_Video2]*t.[Count 480p-VideoDuration_Video2]) as 'YTB_video_resolution_480p_Num_Video2',
		sum(t.[Count 480p-VideoDuration_Video2]) as 'YTB_video_resolution_480p_Den_Video2',
		sum(t.[480p-VideoMOS_Video2]*t.[Count 480p-VideoMOS_Video2]) as 'YTB_video_mos_480p_Num_Video2',
		sum(t.[Count 480p-VideoMOS_Video2]) as 'YTB_video_mos_480p_Den_Video2',
		sum(t.[% 480p_Video2]*t.[Count % 480p_Video2]) as 'YTB_video_resolution_%480p_Num_Video2',
		sum(t.[Count % 480p_Video2]) as 'YTB_video_resolution_%480p_Den_Video2',
		sum(t.[720p-VideoDuration_Video2]*t.[Count 720p-VideoDuration_Video2]) as 'YTB_video_resolution_720p_Num_Video2',
		sum(t.[Count 720p-VideoDuration_Video2]) as 'YTB_video_resolution_720p_Den_Video2',
		sum(t.[720p-VideoMOS_Video2]*t.[Count 720p-VideoMOS_Video2]) as 'YTB_video_mos_720p_Num_Video2',
		sum(t.[Count 720p-VideoMOS_Video2]) as 'YTB_video_mos_720p_Den_Video2',
		sum(t.[% 720p_Video2]*t.[Count % 720p_Video2]) as 'YTB_video_resolution_%720p_Num_Video2',
		sum(t.[Count % 720p_Video2]) as 'YTB_video_resolution_%720p_Den_Video2',
		sum(t.[1080p-VideoDuration_Video2]*t.[Count 1080p-VideoDuration_Video2]) as 'YTB_video_resolution_1080p_Num_Video2',
		sum(t.[Count 1080p-VideoDuration_Video2]) as 'YTB_video_resolution_1080p_Den_Video2',
		sum(t.[1080p-VideoMOS_Video2]*t.[Count 1080p-VideoMOS_Video2]) as 'YTB_video_mos_1080p_Num_Video2',
		sum(t.[Count 1080p-VideoMOS_Video2]) as 'YTB_video_mos_1080p_Den_Video2',
		sum(t.[% 1080p_Video2]*t.[Count % 1080p_Video2]) as 'YTB_video_resolution_%1080p_Num_Video2',
		sum(t.[Count % 1080p_Video2]) as 'YTB_video_resolution_%1080p_Den_Video2',

		--YOUTUBE HD: Video 3
		sum(t.[Time To First Image_Video3]*(t.Reproducciones_Video3-t.Fails_Video3)) as Avg_Video_StarTime_Num_Video3,
		sum((t.Reproducciones_Video3-t.Fails_Video3)) as avg_Video_startTime_Den_Video3,
		sum(t.ReproduccionesSinInt_Video3) as Reproductions_WO_Interruptions_Video3,
		sum(t.Reproducciones_Video3) as Reproductions_WO_Interruptions_Den_Video3,
		sum(t.[B4_Video3]) as B4_Video3,
		sum(t.[ReproduccionesHD_Video3]) as [ReproduccionesHD_Video3],
		sum(t.[Successful video download_Video3]) as [Successful video download_Video3],
		sum(t.[Reproducciones_Video3]) as [Reproducciones_Video3],
		sum(t.[Fails_Video3]) as [Fails_Video3],
		--sum(cast(left(t.[avg Video Resolution_Video3],3) as int)*t.[Count_Video_Resolucion_Video3]) as YTB_video_resolution_num_Video3,
		sum(cast(replace(t.[avg Video Resolution_Video3],'p','') as float)*t.[Count_Video_Resolucion_Video3]) as YTB_video_resolution_num_Video3,
		sum(t.Count_Video_Resolucion_Video3) as YTB_video_resolution_den_Video3,
		sum(t.[Video MOS_Video3]*t.[Count_Video_MOS_Video3]) as YTB_video_mos_num_Video3,
		sum(t.[Count_Video_MOS_Video3]) as YTB_video_mos_den_Video3,
		max(t.url_Video3) as YTB_URL_Video3,
		sum(t.[1st Resolution_Video3]*t.[Count 1st Resolution_Video3]) as 'YTB_1st_Resolution_Num_Video3',
		sum(t.[Count 1st Resolution_Video3]) as 'YTB_1st_Resolution_Den_Video3',
		sum(t.[2nd Resolution_Video3]*t.[Count 2nd Resolution_Video3]) as 'YTB_2nd_Resolution_Num_Video3',
		sum(t.[Count 2nd Resolution_Video3]) as 'YTB_2nd_Resolution_Den_Video3',
		sum(t.[FirstChangeFromInit_Video3]*t.[Count FirstChangeFromInit_Video3]) as 'YTB_FirstChangeFromInit_Num_Video3',
		sum(t.[Count FirstChangeFromInit_Video3]) as 'YTB_FirstChangeFromInit_Den_Video3',
		sum(t.[initialResolution_Video3]*t.[Count initialResolution_Video3]) as 'YTB_initialResolution_Num_Video3',
		sum(t.[Count initialResolution_Video3]) as 'YTB_initialResolution_Den_Video3',
		sum(t.[finalResolution_Video3]*t.[Count finalResolution_Video3]) as 'YTB_finalResolution_Num_Video3',
		sum(t.[Count finalResolution_Video3]) as 'YTB_finalResolution_Den_Video3',
		sum(t.[144p-VideoDuration_Video3]*t.[Count 144p-VideoDuration_Video3]) as 'YTB_video_resolution_144p_Num_Video3',
		sum(t.[Count 144p-VideoDuration_Video3]) as 'YTB_video_resolution_144p_Den_Video3',
		sum(t.[144p-VideoMOS_Video3]*t.[Count 144p-VideoMOS_Video3]) as 'YTB_video_mos_144p_Num_Video3',
		sum(t.[Count 144p-VideoMOS_Video3]) as 'YTB_video_mos_144p_Den_Video3',
		sum(t.[% 144p_Video3]*t.[Count % 144p_Video3]) as 'YTB_video_resolution_%144p_Num_Video3',
		sum(t.[Count % 144p_Video3]) as 'YTB_video_resolution_%144p_Den_Video3',
		sum(t.[240p-VideoDuration_Video3]*t.[Count 240p-VideoDuration_Video3]) as 'YTB_video_resolution_240p_Num_Video3',
		sum(t.[Count 240p-VideoDuration_Video3]) as 'YTB_video_resolution_240p_Den_Video3',
		sum(t.[240p-VideoMOS_Video3]*t.[Count 240p-VideoMOS_Video3]) as 'YTB_video_mos_240p_Num_Video3',
		sum(t.[Count 240p-VideoMOS_Video3]) as 'YTB_video_mos_240p_Den_Video3',
		sum(t.[% 240p_Video3]*t.[Count % 240p_Video3]) as 'YTB_video_resolution_%240p_Num_Video3',
		sum(t.[Count % 240p_Video3]) as 'YTB_video_resolution_%240p_Den_Video3',
		sum(t.[360p-VideoDuration_Video3]*t.[Count 360p-VideoDuration_Video3]) as 'YTB_video_resolution_360p_Num_Video3',
		sum(t.[Count 360p-VideoDuration_Video3]) as 'YTB_video_resolution_360p_Den_Video3',
		sum(t.[360p-VideoMOS_Video3]*t.[Count 360p-VideoMOS_Video3]) as 'YTB_video_mos_360p_Num_Video3',
		sum(t.[Count 360p-VideoMOS_Video3]) as 'YTB_video_mos_360p_Den_Video3',
		sum(t.[% 360p_Video3]*t.[Count % 360p_Video3]) as 'YTB_video_resolution_%360p_Num_Video3',
		sum(t.[Count % 360p_Video3]) as 'YTB_video_resolution_%360p_Den_Video3',
		sum(t.[480p-VideoDuration_Video3]*t.[Count 480p-VideoDuration_Video3]) as 'YTB_video_resolution_480p_Num_Video3',
		sum(t.[Count 480p-VideoDuration_Video3]) as 'YTB_video_resolution_480p_Den_Video3',
		sum(t.[480p-VideoMOS_Video3]*t.[Count 480p-VideoMOS_Video3]) as 'YTB_video_mos_480p_Num_Video3',
		sum(t.[Count 480p-VideoMOS_Video3]) as 'YTB_video_mos_480p_Den_Video3',
		sum(t.[% 480p_Video3]*t.[Count % 480p_Video3]) as 'YTB_video_resolution_%480p_Num_Video3',
		sum(t.[Count % 480p_Video3]) as 'YTB_video_resolution_%480p_Den_Video3',
		sum(t.[720p-VideoDuration_Video3]*t.[Count 720p-VideoDuration_Video3]) as 'YTB_video_resolution_720p_Num_Video3',
		sum(t.[Count 720p-VideoDuration_Video3]) as 'YTB_video_resolution_720p_Den_Video3',
		sum(t.[720p-VideoMOS_Video3]*t.[Count 720p-VideoMOS_Video3]) as 'YTB_video_mos_720p_Num_Video3',
		sum(t.[Count 720p-VideoMOS_Video3]) as 'YTB_video_mos_720p_Den_Video3',
		sum(t.[% 720p_Video3]*t.[Count % 720p_Video3]) as 'YTB_video_resolution_%720p_Num_Video3',
		sum(t.[Count % 720p_Video3]) as 'YTB_video_resolution_%720p_Den_Video3',
		sum(t.[1080p-VideoDuration_Video3]*t.[Count 1080p-VideoDuration_Video3]) as 'YTB_video_resolution_1080p_Num_Video3',
		sum(t.[Count 1080p-VideoDuration_Video3]) as 'YTB_video_resolution_1080p_Den_Video3',
		sum(t.[1080p-VideoMOS_Video3]*t.[Count 1080p-VideoMOS_Video3]) as 'YTB_video_mos_1080p_Num_Video3',
		sum(t.[Count 1080p-VideoMOS_Video3]) as 'YTB_video_mos_1080p_Den_Video3',
		sum(t.[% 1080p_Video3]*t.[Count % 1080p_Video3]) as 'YTB_video_resolution_%1080p_Num_Video3',
		sum(t.[Count % 1080p_Video3]) as 'YTB_video_resolution_%1080p_Den_Video3',

		--YOUTUBE HD: Video 4
		sum(t.[Time To First Image_Video4]*(t.Reproducciones_Video4-t.Fails_Video4)) as Avg_Video_StarTime_Num_Video4,
		sum((t.Reproducciones_Video4-t.Fails_Video4)) as avg_Video_startTime_Den_Video4,
		sum(t.ReproduccionesSinInt_Video4) as Reproductions_WO_Interruptions_Video4,
		sum(t.Reproducciones_Video4) as Reproductions_WO_Interruptions_Den_Video4,
		sum(t.[B4_Video4]) as B4_Video4,
		sum(t.[ReproduccionesHD_Video4]) as [ReproduccionesHD_Video4],
		sum(t.[Successful video download_Video4]) as [Successful video download_Video4],
		sum(t.[Reproducciones_Video4]) as [Reproducciones_Video4],
		sum(t.[Fails_Video4]) as [Fails_Video4],
		--sum(cast(left(t.[avg Video Resolution_Video4],3) as int)*t.[Count_Video_Resolucion_Video4]) as YTB_video_resolution_num_Video4,
		sum(cast(replace(t.[avg Video Resolution_Video4],'p','') as float)*t.[Count_Video_Resolucion_Video4]) as YTB_video_resolution_num_Video4,
		sum(t.Count_Video_Resolucion_Video4) as YTB_video_resolution_den_Video4,
		sum(t.[Video MOS_Video4]*t.[Count_Video_MOS_Video4]) as YTB_video_mos_num_Video4,
		sum(t.[Count_Video_MOS_Video4]) as YTB_video_mos_den_Video4,
		max(t.url_Video4) as YTB_URL_Video4,
		sum(t.[1st Resolution_Video4]*t.[Count 1st Resolution_Video4]) as 'YTB_1st_Resolution_Num_Video4',
		sum(t.[Count 1st Resolution_Video4]) as 'YTB_1st_Resolution_Den_Video4',
		sum(t.[2nd Resolution_Video4]*t.[Count 2nd Resolution_Video4]) as 'YTB_2nd_Resolution_Num_Video4',
		sum(t.[Count 2nd Resolution_Video4]) as 'YTB_2nd_Resolution_Den_Video4',
		sum(t.[FirstChangeFromInit_Video4]*t.[Count FirstChangeFromInit_Video4]) as 'YTB_FirstChangeFromInit_Num_Video4',
		sum(t.[Count FirstChangeFromInit_Video4]) as 'YTB_FirstChangeFromInit_Den_Video4',
		sum(t.[initialResolution_Video4]*t.[Count initialResolution_Video4]) as 'YTB_initialResolution_Num_Video4',
		sum(t.[Count initialResolution_Video4]) as 'YTB_initialResolution_Den_Video4',
		sum(t.[finalResolution_Video4]*t.[Count finalResolution_Video4]) as 'YTB_finalResolution_Num_Video4',
		sum(t.[Count finalResolution_Video4]) as 'YTB_finalResolution_Den_Video4',
		sum(t.[144p-VideoDuration_Video4]*t.[Count 144p-VideoDuration_Video4]) as 'YTB_video_resolution_144p_Num_Video4',
		sum(t.[Count 144p-VideoDuration_Video4]) as 'YTB_video_resolution_144p_Den_Video4',
		sum(t.[144p-VideoMOS_Video4]*t.[Count 144p-VideoMOS_Video4]) as 'YTB_video_mos_144p_Num_Video4',
		sum(t.[Count 144p-VideoMOS_Video4]) as 'YTB_video_mos_144p_Den_Video4',
		sum(t.[% 144p_Video4]*t.[Count % 144p_Video4]) as 'YTB_video_resolution_%144p_Num_Video4',
		sum(t.[Count % 144p_Video4]) as 'YTB_video_resolution_%144p_Den_Video4',
		sum(t.[240p-VideoDuration_Video4]*t.[Count 240p-VideoDuration_Video4]) as 'YTB_video_resolution_240p_Num_Video4',
		sum(t.[Count 240p-VideoDuration_Video4]) as 'YTB_video_resolution_240p_Den_Video4',
		sum(t.[240p-VideoMOS_Video4]*t.[Count 240p-VideoMOS_Video4]) as 'YTB_video_mos_240p_Num_Video4',
		sum(t.[Count 240p-VideoMOS_Video4]) as 'YTB_video_mos_240p_Den_Video4',
		sum(t.[% 240p_Video4]*t.[Count % 240p_Video4]) as 'YTB_video_resolution_%240p_Num_Video4',
		sum(t.[Count % 240p_Video4]) as 'YTB_video_resolution_%240p_Den_Video4',
		sum(t.[360p-VideoDuration_Video4]*t.[Count 360p-VideoDuration_Video4]) as 'YTB_video_resolution_360p_Num_Video4',
		sum(t.[Count 360p-VideoDuration_Video4]) as 'YTB_video_resolution_360p_Den_Video4',
		sum(t.[360p-VideoMOS_Video4]*t.[Count 360p-VideoMOS_Video4]) as 'YTB_video_mos_360p_Num_Video4',
		sum(t.[Count 360p-VideoMOS_Video4]) as 'YTB_video_mos_360p_Den_Video4',
		sum(t.[% 360p_Video4]*t.[Count % 360p_Video4]) as 'YTB_video_resolution_%360p_Num_Video4',
		sum(t.[Count % 360p_Video4]) as 'YTB_video_resolution_%360p_Den_Video4',
		sum(t.[480p-VideoDuration_Video4]*t.[Count 480p-VideoDuration_Video4]) as 'YTB_video_resolution_480p_Num_Video4',
		sum(t.[Count 480p-VideoDuration_Video4]) as 'YTB_video_resolution_480p_Den_Video4',
		sum(t.[480p-VideoMOS_Video4]*t.[Count 480p-VideoMOS_Video4]) as 'YTB_video_mos_480p_Num_Video4',
		sum(t.[Count 480p-VideoMOS_Video4]) as 'YTB_video_mos_480p_Den_Video4',
		sum(t.[% 480p_Video4]*t.[Count % 480p_Video4]) as 'YTB_video_resolution_%480p_Num_Video4',
		sum(t.[Count % 480p_Video4]) as 'YTB_video_resolution_%480p_Den_Video4',
		sum(t.[720p-VideoDuration_Video4]*t.[Count 720p-VideoDuration_Video4]) as 'YTB_video_resolution_720p_Num_Video4',
		sum(t.[Count 720p-VideoDuration_Video4]) as 'YTB_video_resolution_720p_Den_Video4',
		sum(t.[720p-VideoMOS_Video4]*t.[Count 720p-VideoMOS_Video4]) as 'YTB_video_mos_720p_Num_Video4',
		sum(t.[Count 720p-VideoMOS_Video4]) as 'YTB_video_mos_720p_Den_Video4',
		sum(t.[% 720p_Video4]*t.[Count % 720p_Video4]) as 'YTB_video_resolution_%720p_Num_Video4',
		sum(t.[Count % 720p_Video4]) as 'YTB_video_resolution_%720p_Den_Video4',
		sum(t.[1080p-VideoDuration_Video4]*t.[Count 1080p-VideoDuration_Video4]) as 'YTB_video_resolution_1080p_Num_Video4',
		sum(t.[Count 1080p-VideoDuration_Video4]) as 'YTB_video_resolution_1080p_Den_Video4',
		sum(t.[1080p-VideoMOS_Video4]*t.[Count 1080p-VideoMOS_Video4]) as 'YTB_video_mos_1080p_Num_Video4',
		sum(t.[Count 1080p-VideoMOS_Video4]) as 'YTB_video_mos_1080p_Den_Video4',
		sum(t.[% 1080p_Video4]*t.[Count % 1080p_Video4]) as 'YTB_video_resolution_%1080p_Num_Video4',
		sum(t.[Count % 1080p_Video4]) as 'YTB_video_resolution_%1080p_Den_Video4',

		-- Parametros de configuracion:
		t.ASideDevice as ASideDevice, t.BSideDevice as BSideDevice, t.SWVersion as SWVersion, max(t.Youtube_Version) as YTB_Version 
	
	from [aggrData4G_ROAD].dbo.[lcc_aggr_sp_MDD_Data_Youtube_HD] t, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine,mnc,meas_round,Date_Reporting,Week_Reporting,t.entidad,t.Report_Type,t.Aggr_Type/*,t.Youtube_Version*/,
		t.ASideDevice, t.BSideDevice, t.SWVersion--, t.url --,t.Region_VF, t.Region_OSP

	-------------------------------------
	-- Video Streaming 4GOnly			YTB HD
	-------------------------------------	
	insert into _RI_Data_y
	select  -- 4GOnly HD
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment, t.mnc, t.meas_round, t.Date_Reporting as meas_date, t.Week_Reporting as meas_week, 
		'4GOnly' as meas_Tech, 'Youtube HD' as Test_type, 'Downlink' as Direction, t.entidad as vf_entity, t.Report_Type, t.Aggr_Type,
	
		sum(YTB4G.[Time To First Image]*(YTB4G.Reproducciones-YTB4G.Fails)) as Avg_Video_StarTime_Num,
		sum((YTB4G.Reproducciones-YTB4G.Fails)) as avg_Video_startTime_Den,
		sum(YTB4G.ReproduccionesSinInt) as Reproductions_WO_Interruptions,
		sum(YTB4G.Reproducciones) as Reproductions_WO_Interruptions_Den,
		--sum(YTB4G.[Successful video download]) as Success_Video_P3_num,
		--sum(YTB4G.Reproducciones) as Success_Video_P3_den,
		sum(YTB4G.[B4]) as B4,
		sum(YTB4G.[ReproduccionesHD]) as [ReproduccionesHD],
		sum(YTB4G.[Successful video download]) as [Successful video download],
		sum(YTB4G.[Reproducciones]) as [Reproducciones],
		sum(cast(replace(YTB4G.[avg Video Resolution],'p','') as float)*YTB4G.[Count_Video_Resolucion]) as YTB_video_resolution_num,
		sum(YTB4G.Count_Video_Resolucion) as YTB_video_resolution_den,
		sum(YTB4G.[Video MOS]*YTB4G.[Count_Video_MOS]) as YTB_video_mos_num,
		sum(YTB4G.[Count_Video_MOS]) as YTB_video_mos_den,
		--null as Region_Road_VF, null as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP,
		max(t.url) as YTB_URL,
		sum(YTB4G.[1st Resolution]*YTB4G.[Count 1st Resolution]) as 'YTB_1st_Resolution_Num',
		sum(YTB4G.[Count 1st Resolution]) as 'YTB_1st_Resolution_Den',
		sum(YTB4G.[2nd Resolution]*YTB4G.[Count 2nd Resolution]) as 'YTB_2nd_Resolution_Num',
		sum(YTB4G.[Count 2nd Resolution]) as 'YTB_2nd_Resolution_Den',
		sum(YTB4G.[FirstChangeFromInit]*YTB4G.[Count FirstChangeFromInit]) as 'YTB_FirstChangeFromInit_Num',
		sum(YTB4G.[Count FirstChangeFromInit]) as 'YTB_FirstChangeFromInit_Den',
		sum(YTB4G.[initialResolution]*YTB4G.[Count initialResolution]) as 'YTB_initialResolution_Num',
		sum(YTB4G.[Count initialResolution]) as 'YTB_initialResolution_Den',
		sum(YTB4G.[finalResolution]*YTB4G.[Count finalResolution]) as 'YTB_finalResolution_Num',
		sum(YTB4G.[Count finalResolution]) as 'YTB_finalResolution_Den',
		sum(YTB4G.[144p-VideoDuration]*YTB4G.[Count 144p-VideoDuration]) as 'YTB_video_resolution_144p_Num',
		sum(YTB4G.[Count 144p-VideoDuration]) as 'YTB_video_resolution_144p_Den',
		sum(YTB4G.[144p-VideoMOS]*YTB4G.[Count 144p-VideoMOS]) as 'YTB_video_mos_144p_Num',
		sum(YTB4G.[Count 144p-VideoMOS]) as 'YTB_video_mos_144p_Den',
		sum(YTB4G.[% 144p]*YTB4G.[Count % 144p]) as 'YTB_video_resolution_%144p_Num',
		sum(YTB4G.[Count % 144p]) as 'YTB_video_resolution_%144p_Den',
		sum(YTB4G.[240p-VideoDuration]*YTB4G.[Count 240p-VideoDuration]) as 'YTB_video_resolution_240p_Num',
		sum(YTB4G.[Count 240p-VideoDuration]) as 'YTB_video_resolution_240p_Den',
		sum(YTB4G.[240p-VideoMOS]*YTB4G.[Count 240p-VideoMOS]) as 'YTB_video_mos_240p_Num',
		sum(YTB4G.[Count 240p-VideoMOS]) as 'YTB_video_mos_240p_Den',
		sum(YTB4G.[% 240p]*YTB4G.[Count % 240p]) as 'YTB_video_resolution_%240p_Num',
		sum(YTB4G.[Count % 240p]) as 'YTB_video_resolution_%240p_Den',
		sum(YTB4G.[360p-VideoDuration]*YTB4G.[Count 360p-VideoDuration]) as 'YTB_video_resolution_360p_Num',
		sum(YTB4G.[Count 360p-VideoDuration]) as 'YTB_video_resolution_360p_Den',
		sum(YTB4G.[360p-VideoMOS]*YTB4G.[Count 360p-VideoMOS]) as 'YTB_video_mos_360p_Num',
		sum(YTB4G.[Count 360p-VideoMOS]) as 'YTB_video_mos_360p_Den',
		sum(YTB4G.[% 360p]*YTB4G.[Count % 360p]) as 'YTB_video_resolution_%360p_Num',
		sum(YTB4G.[Count % 360p]) as 'YTB_video_resolution_%360p_Den',
		sum(YTB4G.[480p-VideoDuration]*YTB4G.[Count 480p-VideoDuration]) as 'YTB_video_resolution_480p_Num',
		sum(YTB4G.[Count 480p-VideoDuration]) as 'YTB_video_resolution_480p_Den',
		sum(YTB4G.[480p-VideoMOS]*YTB4G.[Count 480p-VideoMOS]) as 'YTB_video_mos_480p_Num',
		sum(YTB4G.[Count 480p-VideoMOS]) as 'YTB_video_mos_480p_Den',
		sum(YTB4G.[% 480p]*YTB4G.[Count % 480p]) as 'YTB_video_resolution_%480p_Num',
		sum(YTB4G.[Count % 480p]) as 'YTB_video_resolution_%480p_Den',
		sum(t.[720p-VideoDuration]*t.[Count 720p-VideoDuration]) as 'YTB_video_resolution_720p_Num',
		sum(t.[Count 720p-VideoDuration]) as 'YTB_video_resolution_720p_Den',
		sum(t.[720p-VideoMOS]*t.[Count 720p-VideoMOS]) as 'YTB_video_mos_720p_Num',
		sum(t.[Count 720p-VideoMOS]) as 'YTB_video_mos_720p_Den',
		sum(t.[% 720p]*t.[Count % 720p]) as 'YTB_video_resolution_%720p_Num',
		sum(t.[Count % 720p]) as 'YTB_video_resolution_%720p_Den',
		sum(YTB4G.[1080p-VideoDuration]*YTB4G.[Count 1080p-VideoDuration]) as 'YTB_video_resolution_1080p_Num',
		sum(YTB4G.[Count 1080p-VideoDuration]) as 'YTB_video_resolution_1080p_Den',
		sum(YTB4G.[1080p-VideoMOS]*YTB4G.[Count 1080p-VideoMOS]) as 'YTB_video_mos_1080p_Num',
		sum(YTB4G.[Count 1080p-VideoMOS]) as 'YTB_video_mos_1080p_Den',
		sum(YTB4G.[% 1080p]*YTB4G.[Count % 1080p]) as 'YTB_video_resolution_%1080p_Num',
		sum(YTB4G.[Count % 1080p]) as 'YTB_video_resolution_%1080p_Den',

		--YOUTUBE HD: Video 1
		sum(YTB4G.[Time To First Image_Video1]*(YTB4G.Reproducciones_Video1-YTB4G.Fails_Video1)) as Avg_Video_StarTime_Num_Video1,
		sum((YTB4G.Reproducciones_Video1-YTB4G.Fails_Video1)) as avg_Video_startTime_Den_Video1,
		sum(YTB4G.ReproduccionesSinInt_Video1) as Reproductions_WO_Interruptions_Video1,
		sum(YTB4G.Reproducciones_Video1) as Reproductions_WO_Interruptions_Den_Video1,
		sum(YTB4G.[B4_Video1]) as B4_Video1,
		sum(YTB4G.[ReproduccionesHD_Video1]) as [ReproduccionesHD_Video1],
		sum(YTB4G.[Successful video download_Video1]) as [Successful video download_Video1],
		sum(YTB4G.[Reproducciones_Video1]) as [Reproducciones_Video1],
		sum(YTB4G.[Fails_Video1]) as [Fails_Video1],
		--sum(cast(left(YTB4G.[avg Video Resolution_Video1],3) as int)*YTB4G.[Count_Video_Resolucion_Video1]) as YTB_video_resolution_num_Video1,
		sum(cast(replace(YTB4G.[avg Video Resolution_Video1],'p','') as float)*YTB4G.[Count_Video_Resolucion_Video1]) as YTB_video_resolution_num_Video1,
		sum(YTB4G.Count_Video_Resolucion_Video1) as YTB_video_resolution_den_Video1,
		sum(YTB4G.[Video MOS_Video1]*YTB4G.[Count_Video_MOS_Video1]) as YTB_video_mos_num_Video1,
		sum(YTB4G.[Count_Video_MOS_Video1]) as YTB_video_mos_den_Video1,
		max(t.url_Video1) as YTB_URL_Video1,
		sum(YTB4G.[1st Resolution_Video1]*YTB4G.[Count 1st Resolution_Video1]) as 'YTB_1st_Resolution_Num_Video1',
		sum(YTB4G.[Count 1st Resolution_Video1]) as 'YTB_1st_Resolution_Den_Video1',
		sum(YTB4G.[2nd Resolution_Video1]*YTB4G.[Count 2nd Resolution_Video1]) as 'YTB_2nd_Resolution_Num_Video1',
		sum(YTB4G.[Count 2nd Resolution_Video1]) as 'YTB_2nd_Resolution_Den_Video1',
		sum(YTB4G.[FirstChangeFromInit_Video1]*YTB4G.[Count FirstChangeFromInit_Video1]) as 'YTB_FirstChangeFromInit_Num_Video1',
		sum(YTB4G.[Count FirstChangeFromInit_Video1]) as 'YTB_FirstChangeFromInit_Den_Video1',
		sum(YTB4G.[initialResolution_Video1]*YTB4G.[Count initialResolution_Video1]) as 'YTB_initialResolution_Num_Video1',
		sum(YTB4G.[Count initialResolution_Video1]) as 'YTB_initialResolution_Den_Video1',
		sum(YTB4G.[finalResolution_Video1]*YTB4G.[Count finalResolution_Video1]) as 'YTB_finalResolution_Num_Video1',
		sum(YTB4G.[Count finalResolution_Video1]) as 'YTB_finalResolution_Den_Video1',
		sum(YTB4G.[144p-VideoDuration_Video1]*YTB4G.[Count 144p-VideoDuration_Video1]) as 'YTB_video_resolution_144p_Num_Video1',
		sum(YTB4G.[Count 144p-VideoDuration_Video1]) as 'YTB_video_resolution_144p_Den_Video1',
		sum(YTB4G.[144p-VideoMOS_Video1]*YTB4G.[Count 144p-VideoMOS_Video1]) as 'YTB_video_mos_144p_Num_Video1',
		sum(YTB4G.[Count 144p-VideoMOS_Video1]) as 'YTB_video_mos_144p_Den_Video1',
		sum(YTB4G.[% 144p_Video1]*YTB4G.[Count % 144p_Video1]) as 'YTB_video_resolution_%144p_Num_Video1',
		sum(YTB4G.[Count % 144p_Video1]) as 'YTB_video_resolution_%144p_Den_Video1',
		sum(YTB4G.[240p-VideoDuration_Video1]*YTB4G.[Count 240p-VideoDuration_Video1]) as 'YTB_video_resolution_240p_Num_Video1',
		sum(YTB4G.[Count 240p-VideoDuration_Video1]) as 'YTB_video_resolution_240p_Den_Video1',
		sum(YTB4G.[240p-VideoMOS_Video1]*YTB4G.[Count 240p-VideoMOS_Video1]) as 'YTB_video_mos_240p_Num_Video1',
		sum(YTB4G.[Count 240p-VideoMOS_Video1]) as 'YTB_video_mos_240p_Den_Video1',
		sum(YTB4G.[% 240p_Video1]*YTB4G.[Count % 240p_Video1]) as 'YTB_video_resolution_%240p_Num_Video1',
		sum(YTB4G.[Count % 240p_Video1]) as 'YTB_video_resolution_%240p_Den_Video1',
		sum(YTB4G.[360p-VideoDuration_Video1]*YTB4G.[Count 360p-VideoDuration_Video1]) as 'YTB_video_resolution_360p_Num_Video1',
		sum(YTB4G.[Count 360p-VideoDuration_Video1]) as 'YTB_video_resolution_360p_Den_Video1',
		sum(YTB4G.[360p-VideoMOS_Video1]*YTB4G.[Count 360p-VideoMOS_Video1]) as 'YTB_video_mos_360p_Num_Video1',
		sum(YTB4G.[Count 360p-VideoMOS_Video1]) as 'YTB_video_mos_360p_Den_Video1',
		sum(YTB4G.[% 360p_Video1]*YTB4G.[Count % 360p_Video1]) as 'YTB_video_resolution_%360p_Num_Video1',
		sum(YTB4G.[Count % 360p_Video1]) as 'YTB_video_resolution_%360p_Den_Video1',
		sum(YTB4G.[480p-VideoDuration_Video1]*YTB4G.[Count 480p-VideoDuration_Video1]) as 'YTB_video_resolution_480p_Num_Video1',
		sum(YTB4G.[Count 480p-VideoDuration_Video1]) as 'YTB_video_resolution_480p_Den_Video1',
		sum(YTB4G.[480p-VideoMOS_Video1]*YTB4G.[Count 480p-VideoMOS_Video1]) as 'YTB_video_mos_480p_Num_Video1',
		sum(YTB4G.[Count 480p-VideoMOS_Video1]) as 'YTB_video_mos_480p_Den_Video1',
		sum(YTB4G.[% 480p_Video1]*YTB4G.[Count % 480p_Video1]) as 'YTB_video_resolution_%480p_Num_Video1',
		sum(YTB4G.[Count % 480p_Video1]) as 'YTB_video_resolution_%480p_Den_Video1',
		sum(t.[720p-VideoDuration_Video1]*t.[Count 720p-VideoDuration_Video1]) as 'YTB_video_resolution_720p_Num_Video1',
		sum(t.[Count 720p-VideoDuration_Video1]) as 'YTB_video_resolution_720p_Den_Video1',
		sum(t.[720p-VideoMOS_Video1]*t.[Count 720p-VideoMOS_Video1]) as 'YTB_video_mos_720p_Num_Video1',
		sum(t.[Count 720p-VideoMOS_Video1]) as 'YTB_video_mos_720p_Den_Video1',
		sum(t.[% 720p_Video1]*t.[Count % 720p_Video1]) as 'YTB_video_resolution_%720p_Num_Video1',
		sum(t.[Count % 720p_Video1]) as 'YTB_video_resolution_%720p_Den_Video1',
		sum(YTB4G.[1080p-VideoDuration_Video1]*YTB4G.[Count 1080p-VideoDuration_Video1]) as 'YTB_video_resolution_1080p_Num_Video1',
		sum(YTB4G.[Count 1080p-VideoDuration_Video1]) as 'YTB_video_resolution_1080p_Den_Video1',
		sum(YTB4G.[1080p-VideoMOS_Video1]*YTB4G.[Count 1080p-VideoMOS_Video1]) as 'YTB_video_mos_1080p_Num_Video1',
		sum(YTB4G.[Count 1080p-VideoMOS_Video1]) as 'YTB_video_mos_1080p_Den_Video1',
		sum(YTB4G.[% 1080p_Video1]*YTB4G.[Count % 1080p_Video1]) as 'YTB_video_resolution_%1080p_Num_Video1',
		sum(YTB4G.[Count % 1080p_Video1]) as 'YTB_video_resolution_%1080p_Den_Video1',

		--YOUTUBE HD: Video 2
		sum(YTB4G.[Time To First Image_Video2]*(YTB4G.Reproducciones_Video2-YTB4G.Fails_Video2)) as Avg_Video_StarTime_Num_Video2,
		sum((YTB4G.Reproducciones_Video2-YTB4G.Fails_Video2)) as avg_Video_startTime_Den_Video2,
		sum(YTB4G.ReproduccionesSinInt_Video2) as Reproductions_WO_Interruptions_Video2,
		sum(YTB4G.Reproducciones_Video2) as Reproductions_WO_Interruptions_Den_Video2,
		sum(YTB4G.[B4_Video2]) as B4_Video2,
		sum(YTB4G.[ReproduccionesHD_Video2]) as [ReproduccionesHD_Video2],
		sum(YTB4G.[Successful video download_Video2]) as [Successful video download_Video2],
		sum(YTB4G.[Reproducciones_Video2]) as [Reproducciones_Video2],
		sum(YTB4G.[Fails_Video2]) as [Fails_Video2],
		--sum(cast(left(YTB4G.[avg Video Resolution_Video2],3) as int)*YTB4G.[Count_Video_Resolucion_Video2]) as YTB_video_resolution_num_Video2,
		sum(cast(replace(YTB4G.[avg Video Resolution_Video2],'p','') as float)*YTB4G.[Count_Video_Resolucion_Video2]) as YTB_video_resolution_num_Video2,
		sum(YTB4G.Count_Video_Resolucion_Video2) as YTB_video_resolution_den_Video2,
		sum(YTB4G.[Video MOS_Video2]*YTB4G.[Count_Video_MOS_Video2]) as YTB_video_mos_num_Video2,
		sum(YTB4G.[Count_Video_MOS_Video2]) as YTB_video_mos_den_Video2,
		max(t.url_Video2) as YTB_URL_Video2,
		sum(YTB4G.[1st Resolution_Video2]*YTB4G.[Count 1st Resolution_Video2]) as 'YTB_1st_Resolution_Num_Video2',
		sum(YTB4G.[Count 1st Resolution_Video2]) as 'YTB_1st_Resolution_Den_Video2',
		sum(YTB4G.[2nd Resolution_Video2]*YTB4G.[Count 2nd Resolution_Video2]) as 'YTB_2nd_Resolution_Num_Video2',
		sum(YTB4G.[Count 2nd Resolution_Video2]) as 'YTB_2nd_Resolution_Den_Video2',
		sum(YTB4G.[FirstChangeFromInit_Video2]*YTB4G.[Count FirstChangeFromInit_Video2]) as 'YTB_FirstChangeFromInit_Num_Video2',
		sum(YTB4G.[Count FirstChangeFromInit_Video2]) as 'YTB_FirstChangeFromInit_Den_Video2',
		sum(YTB4G.[initialResolution_Video2]*YTB4G.[Count initialResolution_Video2]) as 'YTB_initialResolution_Num_Video2',
		sum(YTB4G.[Count initialResolution_Video2]) as 'YTB_initialResolution_Den_Video2',
		sum(YTB4G.[finalResolution_Video2]*YTB4G.[Count finalResolution_Video2]) as 'YTB_finalResolution_Num_Video2',
		sum(YTB4G.[Count finalResolution_Video2]) as 'YTB_finalResolution_Den_Video2',
		sum(YTB4G.[144p-VideoDuration_Video2]*YTB4G.[Count 144p-VideoDuration_Video2]) as 'YTB_video_resolution_144p_Num_Video2',
		sum(YTB4G.[Count 144p-VideoDuration_Video2]) as 'YTB_video_resolution_144p_Den_Video2',
		sum(YTB4G.[144p-VideoMOS_Video2]*YTB4G.[Count 144p-VideoMOS_Video2]) as 'YTB_video_mos_144p_Num_Video2',
		sum(YTB4G.[Count 144p-VideoMOS_Video2]) as 'YTB_video_mos_144p_Den_Video2',
		sum(YTB4G.[% 144p_Video2]*YTB4G.[Count % 144p_Video2]) as 'YTB_video_resolution_%144p_Num_Video2',
		sum(YTB4G.[Count % 144p_Video2]) as 'YTB_video_resolution_%144p_Den_Video2',
		sum(YTB4G.[240p-VideoDuration_Video2]*YTB4G.[Count 240p-VideoDuration_Video2]) as 'YTB_video_resolution_240p_Num_Video2',
		sum(YTB4G.[Count 240p-VideoDuration_Video2]) as 'YTB_video_resolution_240p_Den_Video2',
		sum(YTB4G.[240p-VideoMOS_Video2]*YTB4G.[Count 240p-VideoMOS_Video2]) as 'YTB_video_mos_240p_Num_Video2',
		sum(YTB4G.[Count 240p-VideoMOS_Video2]) as 'YTB_video_mos_240p_Den_Video2',
		sum(YTB4G.[% 240p_Video2]*YTB4G.[Count % 240p_Video2]) as 'YTB_video_resolution_%240p_Num_Video2',
		sum(YTB4G.[Count % 240p_Video2]) as 'YTB_video_resolution_%240p_Den_Video2',
		sum(YTB4G.[360p-VideoDuration_Video2]*YTB4G.[Count 360p-VideoDuration_Video2]) as 'YTB_video_resolution_360p_Num_Video2',
		sum(YTB4G.[Count 360p-VideoDuration_Video2]) as 'YTB_video_resolution_360p_Den_Video2',
		sum(YTB4G.[360p-VideoMOS_Video2]*YTB4G.[Count 360p-VideoMOS_Video2]) as 'YTB_video_mos_360p_Num_Video2',
		sum(YTB4G.[Count 360p-VideoMOS_Video2]) as 'YTB_video_mos_360p_Den_Video2',
		sum(YTB4G.[% 360p_Video2]*YTB4G.[Count % 360p_Video2]) as 'YTB_video_resolution_%360p_Num_Video2',
		sum(YTB4G.[Count % 360p_Video2]) as 'YTB_video_resolution_%360p_Den_Video2',
		sum(YTB4G.[480p-VideoDuration_Video2]*YTB4G.[Count 480p-VideoDuration_Video2]) as 'YTB_video_resolution_480p_Num_Video2',
		sum(YTB4G.[Count 480p-VideoDuration_Video2]) as 'YTB_video_resolution_480p_Den_Video2',
		sum(YTB4G.[480p-VideoMOS_Video2]*YTB4G.[Count 480p-VideoMOS_Video2]) as 'YTB_video_mos_480p_Num_Video2',
		sum(YTB4G.[Count 480p-VideoMOS_Video2]) as 'YTB_video_mos_480p_Den_Video2',
		sum(YTB4G.[% 480p_Video2]*YTB4G.[Count % 480p_Video2]) as 'YTB_video_resolution_%480p_Num_Video2',
		sum(YTB4G.[Count % 480p_Video2]) as 'YTB_video_resolution_%480p_Den_Video2',
		sum(t.[720p-VideoDuration_Video2]*t.[Count 720p-VideoDuration_Video2]) as 'YTB_video_resolution_720p_Num_Video2',
		sum(t.[Count 720p-VideoDuration_Video2]) as 'YTB_video_resolution_720p_Den_Video2',
		sum(t.[720p-VideoMOS_Video2]*t.[Count 720p-VideoMOS_Video2]) as 'YTB_video_mos_720p_Num_Video2',
		sum(t.[Count 720p-VideoMOS_Video2]) as 'YTB_video_mos_720p_Den_Video2',
		sum(t.[% 720p_Video2]*t.[Count % 720p_Video2]) as 'YTB_video_resolution_%720p_Num_Video2',
		sum(t.[Count % 720p_Video2]) as 'YTB_video_resolution_%720p_Den_Video2',
		sum(YTB4G.[1080p-VideoDuration_Video2]*YTB4G.[Count 1080p-VideoDuration_Video2]) as 'YTB_video_resolution_1080p_Num_Video2',
		sum(YTB4G.[Count 1080p-VideoDuration_Video2]) as 'YTB_video_resolution_1080p_Den_Video2',
		sum(YTB4G.[1080p-VideoMOS_Video2]*YTB4G.[Count 1080p-VideoMOS_Video2]) as 'YTB_video_mos_1080p_Num_Video2',
		sum(YTB4G.[Count 1080p-VideoMOS_Video2]) as 'YTB_video_mos_1080p_Den_Video2',
		sum(YTB4G.[% 1080p_Video2]*YTB4G.[Count % 1080p_Video2]) as 'YTB_video_resolution_%1080p_Num_Video2',
		sum(YTB4G.[Count % 1080p_Video2]) as 'YTB_video_resolution_%1080p_Den_Video2',

		--YOUTUBE HD: Video 3
		sum(YTB4G.[Time To First Image_Video3]*(YTB4G.Reproducciones_Video3-YTB4G.Fails_Video3)) as Avg_Video_StarTime_Num_Video3,
		sum((YTB4G.Reproducciones_Video3-YTB4G.Fails_Video3)) as avg_Video_startTime_Den_Video3,
		sum(YTB4G.ReproduccionesSinInt_Video3) as Reproductions_WO_Interruptions_Video3,
		sum(YTB4G.Reproducciones_Video3) as Reproductions_WO_Interruptions_Den_Video3,
		sum(YTB4G.[B4_Video3]) as B4_Video3,
		sum(YTB4G.[ReproduccionesHD_Video3]) as [ReproduccionesHD_Video3],
		sum(YTB4G.[Successful video download_Video3]) as [Successful video download_Video3],
		sum(YTB4G.[Reproducciones_Video3]) as [Reproducciones_Video3],
		sum(YTB4G.[Fails_Video3]) as [Fails_Video3],
		--sum(cast(left(YTB4G.[avg Video Resolution_Video3],3) as int)*YTB4G.[Count_Video_Resolucion_Video3]) as YTB_video_resolution_num_Video3,
		sum(cast(replace(YTB4G.[avg Video Resolution_Video3],'p','') as float)*YTB4G.[Count_Video_Resolucion_Video3]) as YTB_video_resolution_num_Video3,
		sum(YTB4G.Count_Video_Resolucion_Video3) as YTB_video_resolution_den_Video3,
		sum(YTB4G.[Video MOS_Video3]*YTB4G.[Count_Video_MOS_Video3]) as YTB_video_mos_num_Video3,
		sum(YTB4G.[Count_Video_MOS_Video3]) as YTB_video_mos_den_Video3,
		max(t.url_Video3) as YTB_URL_Video3,
		sum(YTB4G.[1st Resolution_Video3]*YTB4G.[Count 1st Resolution_Video3]) as 'YTB_1st_Resolution_Num_Video3',
		sum(YTB4G.[Count 1st Resolution_Video3]) as 'YTB_1st_Resolution_Den_Video3',
		sum(YTB4G.[2nd Resolution_Video3]*YTB4G.[Count 2nd Resolution_Video3]) as 'YTB_2nd_Resolution_Num_Video3',
		sum(YTB4G.[Count 2nd Resolution_Video3]) as 'YTB_2nd_Resolution_Den_Video3',
		sum(YTB4G.[FirstChangeFromInit_Video3]*YTB4G.[Count FirstChangeFromInit_Video3]) as 'YTB_FirstChangeFromInit_Num_Video3',
		sum(YTB4G.[Count FirstChangeFromInit_Video3]) as 'YTB_FirstChangeFromInit_Den_Video3',
		sum(YTB4G.[initialResolution_Video3]*YTB4G.[Count initialResolution_Video3]) as 'YTB_initialResolution_Num_Video3',
		sum(YTB4G.[Count initialResolution_Video3]) as 'YTB_initialResolution_Den_Video3',
		sum(YTB4G.[finalResolution_Video3]*YTB4G.[Count finalResolution_Video3]) as 'YTB_finalResolution_Num_Video3',
		sum(YTB4G.[Count finalResolution_Video3]) as 'YTB_finalResolution_Den_Video3',
		sum(YTB4G.[144p-VideoDuration_Video3]*YTB4G.[Count 144p-VideoDuration_Video3]) as 'YTB_video_resolution_144p_Num_Video3',
		sum(YTB4G.[Count 144p-VideoDuration_Video3]) as 'YTB_video_resolution_144p_Den_Video3',
		sum(YTB4G.[144p-VideoMOS_Video3]*YTB4G.[Count 144p-VideoMOS_Video3]) as 'YTB_video_mos_144p_Num_Video3',
		sum(YTB4G.[Count 144p-VideoMOS_Video3]) as 'YTB_video_mos_144p_Den_Video3',
		sum(YTB4G.[% 144p_Video3]*YTB4G.[Count % 144p_Video3]) as 'YTB_video_resolution_%144p_Num_Video3',
		sum(YTB4G.[Count % 144p_Video3]) as 'YTB_video_resolution_%144p_Den_Video3',
		sum(YTB4G.[240p-VideoDuration_Video3]*YTB4G.[Count 240p-VideoDuration_Video3]) as 'YTB_video_resolution_240p_Num_Video3',
		sum(YTB4G.[Count 240p-VideoDuration_Video3]) as 'YTB_video_resolution_240p_Den_Video3',
		sum(YTB4G.[240p-VideoMOS_Video3]*YTB4G.[Count 240p-VideoMOS_Video3]) as 'YTB_video_mos_240p_Num_Video3',
		sum(YTB4G.[Count 240p-VideoMOS_Video3]) as 'YTB_video_mos_240p_Den_Video3',
		sum(YTB4G.[% 240p_Video3]*YTB4G.[Count % 240p_Video3]) as 'YTB_video_resolution_%240p_Num_Video3',
		sum(YTB4G.[Count % 240p_Video3]) as 'YTB_video_resolution_%240p_Den_Video3',
		sum(YTB4G.[360p-VideoDuration_Video3]*YTB4G.[Count 360p-VideoDuration_Video3]) as 'YTB_video_resolution_360p_Num_Video3',
		sum(YTB4G.[Count 360p-VideoDuration_Video3]) as 'YTB_video_resolution_360p_Den_Video3',
		sum(YTB4G.[360p-VideoMOS_Video3]*YTB4G.[Count 360p-VideoMOS_Video3]) as 'YTB_video_mos_360p_Num_Video3',
		sum(YTB4G.[Count 360p-VideoMOS_Video3]) as 'YTB_video_mos_360p_Den_Video3',
		sum(YTB4G.[% 360p_Video3]*YTB4G.[Count % 360p_Video3]) as 'YTB_video_resolution_%360p_Num_Video3',
		sum(YTB4G.[Count % 360p_Video3]) as 'YTB_video_resolution_%360p_Den_Video3',
		sum(YTB4G.[480p-VideoDuration_Video3]*YTB4G.[Count 480p-VideoDuration_Video3]) as 'YTB_video_resolution_480p_Num_Video3',
		sum(YTB4G.[Count 480p-VideoDuration_Video3]) as 'YTB_video_resolution_480p_Den_Video3',
		sum(YTB4G.[480p-VideoMOS_Video3]*YTB4G.[Count 480p-VideoMOS_Video3]) as 'YTB_video_mos_480p_Num_Video3',
		sum(YTB4G.[Count 480p-VideoMOS_Video3]) as 'YTB_video_mos_480p_Den_Video3',
		sum(YTB4G.[% 480p_Video3]*YTB4G.[Count % 480p_Video3]) as 'YTB_video_resolution_%480p_Num_Video3',
		sum(YTB4G.[Count % 480p_Video3]) as 'YTB_video_resolution_%480p_Den_Video3',
		sum(t.[720p-VideoDuration_Video3]*t.[Count 720p-VideoDuration_Video3]) as 'YTB_video_resolution_720p_Num_Video3',
		sum(t.[Count 720p-VideoDuration_Video3]) as 'YTB_video_resolution_720p_Den_Video3',
		sum(t.[720p-VideoMOS_Video3]*t.[Count 720p-VideoMOS_Video3]) as 'YTB_video_mos_720p_Num_Video3',
		sum(t.[Count 720p-VideoMOS_Video3]) as 'YTB_video_mos_720p_Den_Video3',
		sum(t.[% 720p_Video3]*t.[Count % 720p_Video3]) as 'YTB_video_resolution_%720p_Num_Video3',
		sum(t.[Count % 720p_Video3]) as 'YTB_video_resolution_%720p_Den_Video3',
		sum(YTB4G.[1080p-VideoDuration_Video3]*YTB4G.[Count 1080p-VideoDuration_Video3]) as 'YTB_video_resolution_1080p_Num_Video3',
		sum(YTB4G.[Count 1080p-VideoDuration_Video3]) as 'YTB_video_resolution_1080p_Den_Video3',
		sum(YTB4G.[1080p-VideoMOS_Video3]*YTB4G.[Count 1080p-VideoMOS_Video3]) as 'YTB_video_mos_1080p_Num_Video3',
		sum(YTB4G.[Count 1080p-VideoMOS_Video3]) as 'YTB_video_mos_1080p_Den_Video3',
		sum(YTB4G.[% 1080p_Video3]*YTB4G.[Count % 1080p_Video3]) as 'YTB_video_resolution_%1080p_Num_Video3',
		sum(YTB4G.[Count % 1080p_Video3]) as 'YTB_video_resolution_%1080p_Den_Video3',

		--YOUTUBE HD: Video 4
		sum(YTB4G.[Time To First Image_Video4]*(YTB4G.Reproducciones_Video4-YTB4G.Fails_Video4)) as Avg_Video_StarTime_Num_Video4,
		sum((YTB4G.Reproducciones_Video4-YTB4G.Fails_Video4)) as avg_Video_startTime_Den_Video4,
		sum(YTB4G.ReproduccionesSinInt_Video4) as Reproductions_WO_Interruptions_Video4,
		sum(YTB4G.Reproducciones_Video4) as Reproductions_WO_Interruptions_Den_Video4,
		sum(YTB4G.[B4_Video4]) as B4_Video4,
		sum(YTB4G.[ReproduccionesHD_Video4]) as [ReproduccionesHD_Video4],
		sum(YTB4G.[Successful video download_Video4]) as [Successful video download_Video4],
		sum(YTB4G.[Reproducciones_Video4]) as [Reproducciones_Video4],
		sum(YTB4G.[Fails_Video4]) as [Fails_Video4],
		--sum(cast(left(YTB4G.[avg Video Resolution_Video4],3) as int)*YTB4G.[Count_Video_Resolucion_Video4]) as YTB_video_resolution_num_Video4,
		sum(cast(replace(YTB4G.[avg Video Resolution_Video4],'p','') as float)*YTB4G.[Count_Video_Resolucion_Video4]) as YTB_video_resolution_num_Video4,
		sum(YTB4G.Count_Video_Resolucion_Video4) as YTB_video_resolution_den_Video4,
		sum(YTB4G.[Video MOS_Video4]*YTB4G.[Count_Video_MOS_Video4]) as YTB_video_mos_num_Video4,
		sum(YTB4G.[Count_Video_MOS_Video4]) as YTB_video_mos_den_Video4,
		max(t.url_Video4) as YTB_URL_Video4,
		sum(YTB4G.[1st Resolution_Video4]*YTB4G.[Count 1st Resolution_Video4]) as 'YTB_1st_Resolution_Num_Video4',
		sum(YTB4G.[Count 1st Resolution_Video4]) as 'YTB_1st_Resolution_Den_Video4',
		sum(YTB4G.[2nd Resolution_Video4]*YTB4G.[Count 2nd Resolution_Video4]) as 'YTB_2nd_Resolution_Num_Video4',
		sum(YTB4G.[Count 2nd Resolution_Video4]) as 'YTB_2nd_Resolution_Den_Video4',
		sum(YTB4G.[FirstChangeFromInit_Video4]*YTB4G.[Count FirstChangeFromInit_Video4]) as 'YTB_FirstChangeFromInit_Num_Video4',
		sum(YTB4G.[Count FirstChangeFromInit_Video4]) as 'YTB_FirstChangeFromInit_Den_Video4',
		sum(YTB4G.[initialResolution_Video4]*YTB4G.[Count initialResolution_Video4]) as 'YTB_initialResolution_Num_Video4',
		sum(YTB4G.[Count initialResolution_Video4]) as 'YTB_initialResolution_Den_Video4',
		sum(YTB4G.[finalResolution_Video4]*YTB4G.[Count finalResolution_Video4]) as 'YTB_finalResolution_Num_Video4',
		sum(YTB4G.[Count finalResolution_Video4]) as 'YTB_finalResolution_Den_Video4',
		sum(YTB4G.[144p-VideoDuration_Video4]*YTB4G.[Count 144p-VideoDuration_Video4]) as 'YTB_video_resolution_144p_Num_Video4',
		sum(YTB4G.[Count 144p-VideoDuration_Video4]) as 'YTB_video_resolution_144p_Den_Video4',
		sum(YTB4G.[144p-VideoMOS_Video4]*YTB4G.[Count 144p-VideoMOS_Video4]) as 'YTB_video_mos_144p_Num_Video4',
		sum(YTB4G.[Count 144p-VideoMOS_Video4]) as 'YTB_video_mos_144p_Den_Video4',
		sum(YTB4G.[% 144p_Video4]*YTB4G.[Count % 144p_Video4]) as 'YTB_video_resolution_%144p_Num_Video4',
		sum(YTB4G.[Count % 144p_Video4]) as 'YTB_video_resolution_%144p_Den_Video4',
		sum(YTB4G.[240p-VideoDuration_Video4]*YTB4G.[Count 240p-VideoDuration_Video4]) as 'YTB_video_resolution_240p_Num_Video4',
		sum(YTB4G.[Count 240p-VideoDuration_Video4]) as 'YTB_video_resolution_240p_Den_Video4',
		sum(YTB4G.[240p-VideoMOS_Video4]*YTB4G.[Count 240p-VideoMOS_Video4]) as 'YTB_video_mos_240p_Num_Video4',
		sum(YTB4G.[Count 240p-VideoMOS_Video4]) as 'YTB_video_mos_240p_Den_Video4',
		sum(YTB4G.[% 240p_Video4]*YTB4G.[Count % 240p_Video4]) as 'YTB_video_resolution_%240p_Num_Video4',
		sum(YTB4G.[Count % 240p_Video4]) as 'YTB_video_resolution_%240p_Den_Video4',
		sum(YTB4G.[360p-VideoDuration_Video4]*YTB4G.[Count 360p-VideoDuration_Video4]) as 'YTB_video_resolution_360p_Num_Video4',
		sum(YTB4G.[Count 360p-VideoDuration_Video4]) as 'YTB_video_resolution_360p_Den_Video4',
		sum(YTB4G.[360p-VideoMOS_Video4]*YTB4G.[Count 360p-VideoMOS_Video4]) as 'YTB_video_mos_360p_Num_Video4',
		sum(YTB4G.[Count 360p-VideoMOS_Video4]) as 'YTB_video_mos_360p_Den_Video4',
		sum(YTB4G.[% 360p_Video4]*YTB4G.[Count % 360p_Video4]) as 'YTB_video_resolution_%360p_Num_Video4',
		sum(YTB4G.[Count % 360p_Video4]) as 'YTB_video_resolution_%360p_Den_Video4',
		sum(YTB4G.[480p-VideoDuration_Video4]*YTB4G.[Count 480p-VideoDuration_Video4]) as 'YTB_video_resolution_480p_Num_Video4',
		sum(YTB4G.[Count 480p-VideoDuration_Video4]) as 'YTB_video_resolution_480p_Den_Video4',
		sum(YTB4G.[480p-VideoMOS_Video4]*YTB4G.[Count 480p-VideoMOS_Video4]) as 'YTB_video_mos_480p_Num_Video4',
		sum(YTB4G.[Count 480p-VideoMOS_Video4]) as 'YTB_video_mos_480p_Den_Video4',
		sum(YTB4G.[% 480p_Video4]*YTB4G.[Count % 480p_Video4]) as 'YTB_video_resolution_%480p_Num_Video4',
		sum(YTB4G.[Count % 480p_Video4]) as 'YTB_video_resolution_%480p_Den_Video4',
		sum(t.[720p-VideoDuration_Video4]*t.[Count 720p-VideoDuration_Video4]) as 'YTB_video_resolution_720p_Num_Video4',
		sum(t.[Count 720p-VideoDuration_Video4]) as 'YTB_video_resolution_720p_Den_Video4',
		sum(t.[720p-VideoMOS_Video4]*t.[Count 720p-VideoMOS_Video4]) as 'YTB_video_mos_720p_Num_Video4',
		sum(t.[Count 720p-VideoMOS_Video4]) as 'YTB_video_mos_720p_Den_Video4',
		sum(t.[% 720p_Video4]*t.[Count % 720p_Video4]) as 'YTB_video_resolution_%720p_Num_Video4',
		sum(t.[Count % 720p_Video4]) as 'YTB_video_resolution_%720p_Den_Video4',
		sum(YTB4G.[1080p-VideoDuration_Video4]*YTB4G.[Count 1080p-VideoDuration_Video4]) as 'YTB_video_resolution_1080p_Num_Video4',
		sum(YTB4G.[Count 1080p-VideoDuration_Video4]) as 'YTB_video_resolution_1080p_Den_Video4',
		sum(YTB4G.[1080p-VideoMOS_Video4]*YTB4G.[Count 1080p-VideoMOS_Video4]) as 'YTB_video_mos_1080p_Num_Video4',
		sum(YTB4G.[Count 1080p-VideoMOS_Video4]) as 'YTB_video_mos_1080p_Den_Video4',
		sum(YTB4G.[% 1080p_Video4]*YTB4G.[Count % 1080p_Video4]) as 'YTB_video_resolution_%1080p_Num_Video4',
		sum(YTB4G.[Count % 1080p_Video4]) as 'YTB_video_resolution_%1080p_Den_Video4',

		-- Parametros de configuracion:
		t.ASideDevice as ASideDevice, t.BSideDevice as BSideDevice, t.SWVersion as SWVersion, max(t.Youtube_Version) as YTB_Version

	from [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_Youtube_HD] t
		left outer join [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_Youtube_HD_4G] YTB4G on (isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(YTB4G.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=YTB4G.mnc and t.Date_Reporting=YTB4G.Date_Reporting and t.entidad=YTB4G.entidad and t.Aggr_Type=YTB4G.Aggr_Type and t.Report_Type=YTB4G.Report_Type and t.meas_round=YTB4G.meas_round)
		, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	   -- and entidad = 'Adeje' and mnc = 01 and meas_date = '16_07'
	group by 
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end, t.mnc, t.meas_round, t.Date_Reporting, t.Week_Reporting, t.entidad, t.Report_Type, t.Aggr_Type
		/*,t.Youtube_Version*/, t.ASideDevice, t.BSideDevice, t.SWVersion--, t.url--, t.Region_VF, t.Region_OSP

	-------------------
	union all
	select  -- Road 4GOnly HD
		p.codigo_ine, 'Roads' vf_environment, t.mnc, t.meas_round, t.Date_Reporting as meas_date, t.Week_Reporting as meas_week, 
		'Road 4GOnly' as meas_Tech, 'Youtube HD' as Test_type, 'Downlink' as Direction,  t.entidad as vf_entity,  t.Report_Type,  t.Aggr_Type,
	
		sum(YTB4G.[Time To First Image]*(YTB4G.Reproducciones-YTB4G.Fails)) as Avg_Video_StarTime_Num,
		sum((YTB4G.Reproducciones-YTB4G.Fails)) as avg_Video_startTime_Den,
		sum(YTB4G.ReproduccionesSinInt) as Reproductions_WO_Interruptions,
		sum(YTB4G.Reproducciones) as Reproductions_WO_Interruptions_Den,
		--sum(YTB4G.[Successful video download]) as Success_Video_P3_num,
		--sum(YTB4G.Reproducciones) as Success_Video_P3_den,
		sum(YTB4G.[B4]) as B4,
		sum(YTB4G.[ReproduccionesHD]) as [ReproduccionesHD],
		sum(YTB4G.[Successful video download]) as [Successful video download],
		sum(YTB4G.[Reproducciones]) as [Reproducciones],
		sum(cast(replace(YTB4G.[avg Video Resolution],'p','') as float)*YTB4G.[Count_Video_Resolucion]) as YTB_video_resolution_num,
		sum(YTB4G.Count_Video_Resolucion) as YTB_video_resolution_den,
		sum(YTB4G.[Video MOS]*YTB4G.[Count_Video_MOS]) as YTB_video_mos_num,
		sum(YTB4G.[Count_Video_MOS]) as YTB_video_mos_den,
		--null as Region_Road_VF, null as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP,
		max(t.url) as YTB_URL,
		sum(YTB4G.[1st Resolution]*YTB4G.[Count 1st Resolution]) as 'YTB_1st_Resolution_Num',
		sum(YTB4G.[Count 1st Resolution]) as 'YTB_1st_Resolution_Den',
		sum(YTB4G.[2nd Resolution]*YTB4G.[Count 2nd Resolution]) as 'YTB_2nd_Resolution_Num',
		sum(YTB4G.[Count 2nd Resolution]) as 'YTB_2nd_Resolution_Den',
		sum(YTB4G.[FirstChangeFromInit]*YTB4G.[Count FirstChangeFromInit]) as 'YTB_FirstChangeFromInit_Num',
		sum(YTB4G.[Count FirstChangeFromInit]) as 'YTB_FirstChangeFromInit_Den',
		sum(YTB4G.[initialResolution]*YTB4G.[Count initialResolution]) as 'YTB_initialResolution_Num',
		sum(YTB4G.[Count initialResolution]) as 'YTB_initialResolution_Den',
		sum(YTB4G.[finalResolution]*YTB4G.[Count finalResolution]) as 'YTB_finalResolution_Num',
		sum(YTB4G.[Count finalResolution]) as 'YTB_finalResolution_Den',
		sum(YTB4G.[144p-VideoDuration]*YTB4G.[Count 144p-VideoDuration]) as 'YTB_video_resolution_144p_Num',
		sum(YTB4G.[Count 144p-VideoDuration]) as 'YTB_video_resolution_144p_Den',
		sum(YTB4G.[144p-VideoMOS]*YTB4G.[Count 144p-VideoMOS]) as 'YTB_video_mos_144p_Num',
		sum(YTB4G.[Count 144p-VideoMOS]) as 'YTB_video_mos_144p_Den',
		sum(YTB4G.[% 144p]*YTB4G.[Count % 144p]) as 'YTB_video_resolution_%144p_Num',
		sum(YTB4G.[Count % 144p]) as 'YTB_video_resolution_%144p_Den',
		sum(YTB4G.[240p-VideoDuration]*YTB4G.[Count 240p-VideoDuration]) as 'YTB_video_resolution_240p_Num',
		sum(YTB4G.[Count 240p-VideoDuration]) as 'YTB_video_resolution_240p_Den',
		sum(YTB4G.[240p-VideoMOS]*YTB4G.[Count 240p-VideoMOS]) as 'YTB_video_mos_240p_Num',
		sum(YTB4G.[Count 240p-VideoMOS]) as 'YTB_video_mos_240p_Den',
		sum(YTB4G.[% 240p]*YTB4G.[Count % 240p]) as 'YTB_video_resolution_%240p_Num',
		sum(YTB4G.[Count % 240p]) as 'YTB_video_resolution_%240p_Den',
		sum(YTB4G.[360p-VideoDuration]*YTB4G.[Count 360p-VideoDuration]) as 'YTB_video_resolution_360p_Num',
		sum(YTB4G.[Count 360p-VideoDuration]) as 'YTB_video_resolution_360p_Den',
		sum(YTB4G.[360p-VideoMOS]*YTB4G.[Count 360p-VideoMOS]) as 'YTB_video_mos_360p_Num',
		sum(YTB4G.[Count 360p-VideoMOS]) as 'YTB_video_mos_360p_Den',
		sum(YTB4G.[% 360p]*YTB4G.[Count % 360p]) as 'YTB_video_resolution_%360p_Num',
		sum(YTB4G.[Count % 360p]) as 'YTB_video_resolution_%360p_Den',
		sum(YTB4G.[480p-VideoDuration]*YTB4G.[Count 480p-VideoDuration]) as 'YTB_video_resolution_480p_Num',
		sum(YTB4G.[Count 480p-VideoDuration]) as 'YTB_video_resolution_480p_Den',
		sum(YTB4G.[480p-VideoMOS]*YTB4G.[Count 480p-VideoMOS]) as 'YTB_video_mos_480p_Num',
		sum(YTB4G.[Count 480p-VideoMOS]) as 'YTB_video_mos_480p_Den',
		sum(YTB4G.[% 480p]*YTB4G.[Count % 480p]) as 'YTB_video_resolution_%480p_Num',
		sum(YTB4G.[Count % 480p]) as 'YTB_video_resolution_%480p_Den',
		sum(t.[720p-VideoDuration]*t.[Count 720p-VideoDuration]) as 'YTB_video_resolution_720p_Num',
		sum(t.[Count 720p-VideoDuration]) as 'YTB_video_resolution_720p_Den',
		sum(t.[720p-VideoMOS]*t.[Count 720p-VideoMOS]) as 'YTB_video_mos_720p_Num',
		sum(t.[Count 720p-VideoMOS]) as 'YTB_video_mos_720p_Den',
		sum(t.[% 720p]*t.[Count % 720p]) as 'YTB_video_resolution_%720p_Num',
		sum(t.[Count % 720p]) as 'YTB_video_resolution_%720p_Den',
		sum(YTB4G.[1080p-VideoDuration]*YTB4G.[Count 1080p-VideoDuration]) as 'YTB_video_resolution_1080p_Num',
		sum(YTB4G.[Count 1080p-VideoDuration]) as 'YTB_video_resolution_1080p_Den',
		sum(YTB4G.[1080p-VideoMOS]*YTB4G.[Count 1080p-VideoMOS]) as 'YTB_video_mos_1080p_Num',
		sum(YTB4G.[Count 1080p-VideoMOS]) as 'YTB_video_mos_1080p_Den',
		sum(YTB4G.[% 1080p]*YTB4G.[Count % 1080p]) as 'YTB_video_resolution_%1080p_Num',
		sum(YTB4G.[Count % 1080p]) as 'YTB_video_resolution_%1080p_Den',

		--YOUTUBE HD: Video 1
		sum(YTB4G.[Time To First Image_Video1]*(YTB4G.Reproducciones_Video1-YTB4G.Fails_Video1)) as Avg_Video_StarTime_Num_Video1,
		sum((YTB4G.Reproducciones_Video1-YTB4G.Fails_Video1)) as avg_Video_startTime_Den_Video1,
		sum(YTB4G.ReproduccionesSinInt_Video1) as Reproductions_WO_Interruptions_Video1,
		sum(YTB4G.Reproducciones_Video1) as Reproductions_WO_Interruptions_Den_Video1,
		sum(YTB4G.[B4_Video1]) as B4_Video1,
		sum(YTB4G.[ReproduccionesHD_Video1]) as [ReproduccionesHD_Video1],
		sum(YTB4G.[Successful video download_Video1]) as [Successful video download_Video1],
		sum(YTB4G.[Reproducciones_Video1]) as [Reproducciones_Video1],
		sum(YTB4G.[Fails_Video1]) as [Fails_Video1],
		--sum(cast(left(YTB4G.[avg Video Resolution_Video1],3) as int)*YTB4G.[Count_Video_Resolucion_Video1]) as YTB_video_resolution_num_Video1,
		sum(cast(replace(YTB4G.[avg Video Resolution_Video1],'p','') as float)*YTB4G.[Count_Video_Resolucion_Video1]) as YTB_video_resolution_num_Video1,
		sum(YTB4G.Count_Video_Resolucion_Video1) as YTB_video_resolution_den_Video1,
		sum(YTB4G.[Video MOS_Video1]*YTB4G.[Count_Video_MOS_Video1]) as YTB_video_mos_num_Video1,
		sum(YTB4G.[Count_Video_MOS_Video1]) as YTB_video_mos_den_Video1,
		max(t.url_Video1) as YTB_URL_Video1,
		sum(YTB4G.[1st Resolution_Video1]*YTB4G.[Count 1st Resolution_Video1]) as 'YTB_1st_Resolution_Num_Video1',
		sum(YTB4G.[Count 1st Resolution_Video1]) as 'YTB_1st_Resolution_Den_Video1',
		sum(YTB4G.[2nd Resolution_Video1]*YTB4G.[Count 2nd Resolution_Video1]) as 'YTB_2nd_Resolution_Num_Video1',
		sum(YTB4G.[Count 2nd Resolution_Video1]) as 'YTB_2nd_Resolution_Den_Video1',
		sum(YTB4G.[FirstChangeFromInit_Video1]*YTB4G.[Count FirstChangeFromInit_Video1]) as 'YTB_FirstChangeFromInit_Num_Video1',
		sum(YTB4G.[Count FirstChangeFromInit_Video1]) as 'YTB_FirstChangeFromInit_Den_Video1',
		sum(YTB4G.[initialResolution_Video1]*YTB4G.[Count initialResolution_Video1]) as 'YTB_initialResolution_Num_Video1',
		sum(YTB4G.[Count initialResolution_Video1]) as 'YTB_initialResolution_Den_Video1',
		sum(YTB4G.[finalResolution_Video1]*YTB4G.[Count finalResolution_Video1]) as 'YTB_finalResolution_Num_Video1',
		sum(YTB4G.[Count finalResolution_Video1]) as 'YTB_finalResolution_Den_Video1',
		sum(YTB4G.[144p-VideoDuration_Video1]*YTB4G.[Count 144p-VideoDuration_Video1]) as 'YTB_video_resolution_144p_Num_Video1',
		sum(YTB4G.[Count 144p-VideoDuration_Video1]) as 'YTB_video_resolution_144p_Den_Video1',
		sum(YTB4G.[144p-VideoMOS_Video1]*YTB4G.[Count 144p-VideoMOS_Video1]) as 'YTB_video_mos_144p_Num_Video1',
		sum(YTB4G.[Count 144p-VideoMOS_Video1]) as 'YTB_video_mos_144p_Den_Video1',
		sum(YTB4G.[% 144p_Video1]*YTB4G.[Count % 144p_Video1]) as 'YTB_video_resolution_%144p_Num_Video1',
		sum(YTB4G.[Count % 144p_Video1]) as 'YTB_video_resolution_%144p_Den_Video1',
		sum(YTB4G.[240p-VideoDuration_Video1]*YTB4G.[Count 240p-VideoDuration_Video1]) as 'YTB_video_resolution_240p_Num_Video1',
		sum(YTB4G.[Count 240p-VideoDuration_Video1]) as 'YTB_video_resolution_240p_Den_Video1',
		sum(YTB4G.[240p-VideoMOS_Video1]*YTB4G.[Count 240p-VideoMOS_Video1]) as 'YTB_video_mos_240p_Num_Video1',
		sum(YTB4G.[Count 240p-VideoMOS_Video1]) as 'YTB_video_mos_240p_Den_Video1',
		sum(YTB4G.[% 240p_Video1]*YTB4G.[Count % 240p_Video1]) as 'YTB_video_resolution_%240p_Num_Video1',
		sum(YTB4G.[Count % 240p_Video1]) as 'YTB_video_resolution_%240p_Den_Video1',
		sum(YTB4G.[360p-VideoDuration_Video1]*YTB4G.[Count 360p-VideoDuration_Video1]) as 'YTB_video_resolution_360p_Num_Video1',
		sum(YTB4G.[Count 360p-VideoDuration_Video1]) as 'YTB_video_resolution_360p_Den_Video1',
		sum(YTB4G.[360p-VideoMOS_Video1]*YTB4G.[Count 360p-VideoMOS_Video1]) as 'YTB_video_mos_360p_Num_Video1',
		sum(YTB4G.[Count 360p-VideoMOS_Video1]) as 'YTB_video_mos_360p_Den_Video1',
		sum(YTB4G.[% 360p_Video1]*YTB4G.[Count % 360p_Video1]) as 'YTB_video_resolution_%360p_Num_Video1',
		sum(YTB4G.[Count % 360p_Video1]) as 'YTB_video_resolution_%360p_Den_Video1',
		sum(YTB4G.[480p-VideoDuration_Video1]*YTB4G.[Count 480p-VideoDuration_Video1]) as 'YTB_video_resolution_480p_Num_Video1',
		sum(YTB4G.[Count 480p-VideoDuration_Video1]) as 'YTB_video_resolution_480p_Den_Video1',
		sum(YTB4G.[480p-VideoMOS_Video1]*YTB4G.[Count 480p-VideoMOS_Video1]) as 'YTB_video_mos_480p_Num_Video1',
		sum(YTB4G.[Count 480p-VideoMOS_Video1]) as 'YTB_video_mos_480p_Den_Video1',
		sum(YTB4G.[% 480p_Video1]*YTB4G.[Count % 480p_Video1]) as 'YTB_video_resolution_%480p_Num_Video1',
		sum(YTB4G.[Count % 480p_Video1]) as 'YTB_video_resolution_%480p_Den_Video1',
		sum(t.[720p-VideoDuration_Video1]*t.[Count 720p-VideoDuration_Video1]) as 'YTB_video_resolution_720p_Num_Video1',
		sum(t.[Count 720p-VideoDuration_Video1]) as 'YTB_video_resolution_720p_Den_Video1',
		sum(t.[720p-VideoMOS_Video1]*t.[Count 720p-VideoMOS_Video1]) as 'YTB_video_mos_720p_Num_Video1',
		sum(t.[Count 720p-VideoMOS_Video1]) as 'YTB_video_mos_720p_Den_Video1',
		sum(t.[% 720p_Video1]*t.[Count % 720p_Video1]) as 'YTB_video_resolution_%720p_Num_Video1',
		sum(t.[Count % 720p_Video1]) as 'YTB_video_resolution_%720p_Den_Video1',
		sum(YTB4G.[1080p-VideoDuration_Video1]*YTB4G.[Count 1080p-VideoDuration_Video1]) as 'YTB_video_resolution_1080p_Num_Video1',
		sum(YTB4G.[Count 1080p-VideoDuration_Video1]) as 'YTB_video_resolution_1080p_Den_Video1',
		sum(YTB4G.[1080p-VideoMOS_Video1]*YTB4G.[Count 1080p-VideoMOS_Video1]) as 'YTB_video_mos_1080p_Num_Video1',
		sum(YTB4G.[Count 1080p-VideoMOS_Video1]) as 'YTB_video_mos_1080p_Den_Video1',
		sum(YTB4G.[% 1080p_Video1]*YTB4G.[Count % 1080p_Video1]) as 'YTB_video_resolution_%1080p_Num_Video1',
		sum(YTB4G.[Count % 1080p_Video1]) as 'YTB_video_resolution_%1080p_Den_Video1',

		--YOUTUBE HD: Video 2
		sum(YTB4G.[Time To First Image_Video2]*(YTB4G.Reproducciones_Video2-YTB4G.Fails_Video2)) as Avg_Video_StarTime_Num_Video2,
		sum((YTB4G.Reproducciones_Video2-YTB4G.Fails_Video2)) as avg_Video_startTime_Den_Video2,
		sum(YTB4G.ReproduccionesSinInt_Video2) as Reproductions_WO_Interruptions_Video2,
		sum(YTB4G.Reproducciones_Video2) as Reproductions_WO_Interruptions_Den_Video2,
		sum(YTB4G.[B4_Video2]) as B4_Video2,
		sum(YTB4G.[ReproduccionesHD_Video2]) as [ReproduccionesHD_Video2],
		sum(YTB4G.[Successful video download_Video2]) as [Successful video download_Video2],
		sum(YTB4G.[Reproducciones_Video2]) as [Reproducciones_Video2],
		sum(YTB4G.[Fails_Video2]) as [Fails_Video2],
		--sum(cast(left(YTB4G.[avg Video Resolution_Video2],3) as int)*YTB4G.[Count_Video_Resolucion_Video2]) as YTB_video_resolution_num_Video2,
		sum(cast(replace(YTB4G.[avg Video Resolution_Video2],'p','') as float)*YTB4G.[Count_Video_Resolucion_Video2]) as YTB_video_resolution_num_Video2,
		sum(YTB4G.Count_Video_Resolucion_Video2) as YTB_video_resolution_den_Video2,
		sum(YTB4G.[Video MOS_Video2]*YTB4G.[Count_Video_MOS_Video2]) as YTB_video_mos_num_Video2,
		sum(YTB4G.[Count_Video_MOS_Video2]) as YTB_video_mos_den_Video2,
		max(t.url_Video2) as YTB_URL_Video2,
		sum(YTB4G.[1st Resolution_Video2]*YTB4G.[Count 1st Resolution_Video2]) as 'YTB_1st_Resolution_Num_Video2',
		sum(YTB4G.[Count 1st Resolution_Video2]) as 'YTB_1st_Resolution_Den_Video2',
		sum(YTB4G.[2nd Resolution_Video2]*YTB4G.[Count 2nd Resolution_Video2]) as 'YTB_2nd_Resolution_Num_Video2',
		sum(YTB4G.[Count 2nd Resolution_Video2]) as 'YTB_2nd_Resolution_Den_Video2',
		sum(YTB4G.[FirstChangeFromInit_Video2]*YTB4G.[Count FirstChangeFromInit_Video2]) as 'YTB_FirstChangeFromInit_Num_Video2',
		sum(YTB4G.[Count FirstChangeFromInit_Video2]) as 'YTB_FirstChangeFromInit_Den_Video2',
		sum(YTB4G.[initialResolution_Video2]*YTB4G.[Count initialResolution_Video2]) as 'YTB_initialResolution_Num_Video2',
		sum(YTB4G.[Count initialResolution_Video2]) as 'YTB_initialResolution_Den_Video2',
		sum(YTB4G.[finalResolution_Video2]*YTB4G.[Count finalResolution_Video2]) as 'YTB_finalResolution_Num_Video2',
		sum(YTB4G.[Count finalResolution_Video2]) as 'YTB_finalResolution_Den_Video2',
		sum(YTB4G.[144p-VideoDuration_Video2]*YTB4G.[Count 144p-VideoDuration_Video2]) as 'YTB_video_resolution_144p_Num_Video2',
		sum(YTB4G.[Count 144p-VideoDuration_Video2]) as 'YTB_video_resolution_144p_Den_Video2',
		sum(YTB4G.[144p-VideoMOS_Video2]*YTB4G.[Count 144p-VideoMOS_Video2]) as 'YTB_video_mos_144p_Num_Video2',
		sum(YTB4G.[Count 144p-VideoMOS_Video2]) as 'YTB_video_mos_144p_Den_Video2',
		sum(YTB4G.[% 144p_Video2]*YTB4G.[Count % 144p_Video2]) as 'YTB_video_resolution_%144p_Num_Video2',
		sum(YTB4G.[Count % 144p_Video2]) as 'YTB_video_resolution_%144p_Den_Video2',
		sum(YTB4G.[240p-VideoDuration_Video2]*YTB4G.[Count 240p-VideoDuration_Video2]) as 'YTB_video_resolution_240p_Num_Video2',
		sum(YTB4G.[Count 240p-VideoDuration_Video2]) as 'YTB_video_resolution_240p_Den_Video2',
		sum(YTB4G.[240p-VideoMOS_Video2]*YTB4G.[Count 240p-VideoMOS_Video2]) as 'YTB_video_mos_240p_Num_Video2',
		sum(YTB4G.[Count 240p-VideoMOS_Video2]) as 'YTB_video_mos_240p_Den_Video2',
		sum(YTB4G.[% 240p_Video2]*YTB4G.[Count % 240p_Video2]) as 'YTB_video_resolution_%240p_Num_Video2',
		sum(YTB4G.[Count % 240p_Video2]) as 'YTB_video_resolution_%240p_Den_Video2',
		sum(YTB4G.[360p-VideoDuration_Video2]*YTB4G.[Count 360p-VideoDuration_Video2]) as 'YTB_video_resolution_360p_Num_Video2',
		sum(YTB4G.[Count 360p-VideoDuration_Video2]) as 'YTB_video_resolution_360p_Den_Video2',
		sum(YTB4G.[360p-VideoMOS_Video2]*YTB4G.[Count 360p-VideoMOS_Video2]) as 'YTB_video_mos_360p_Num_Video2',
		sum(YTB4G.[Count 360p-VideoMOS_Video2]) as 'YTB_video_mos_360p_Den_Video2',
		sum(YTB4G.[% 360p_Video2]*YTB4G.[Count % 360p_Video2]) as 'YTB_video_resolution_%360p_Num_Video2',
		sum(YTB4G.[Count % 360p_Video2]) as 'YTB_video_resolution_%360p_Den_Video2',
		sum(YTB4G.[480p-VideoDuration_Video2]*YTB4G.[Count 480p-VideoDuration_Video2]) as 'YTB_video_resolution_480p_Num_Video2',
		sum(YTB4G.[Count 480p-VideoDuration_Video2]) as 'YTB_video_resolution_480p_Den_Video2',
		sum(YTB4G.[480p-VideoMOS_Video2]*YTB4G.[Count 480p-VideoMOS_Video2]) as 'YTB_video_mos_480p_Num_Video2',
		sum(YTB4G.[Count 480p-VideoMOS_Video2]) as 'YTB_video_mos_480p_Den_Video2',
		sum(YTB4G.[% 480p_Video2]*YTB4G.[Count % 480p_Video2]) as 'YTB_video_resolution_%480p_Num_Video2',
		sum(YTB4G.[Count % 480p_Video2]) as 'YTB_video_resolution_%480p_Den_Video2',
		sum(t.[720p-VideoDuration_Video2]*t.[Count 720p-VideoDuration_Video2]) as 'YTB_video_resolution_720p_Num_Video2',
		sum(t.[Count 720p-VideoDuration_Video2]) as 'YTB_video_resolution_720p_Den_Video2',
		sum(t.[720p-VideoMOS_Video2]*t.[Count 720p-VideoMOS_Video2]) as 'YTB_video_mos_720p_Num_Video2',
		sum(t.[Count 720p-VideoMOS_Video2]) as 'YTB_video_mos_720p_Den_Video2',
		sum(t.[% 720p_Video2]*t.[Count % 720p_Video2]) as 'YTB_video_resolution_%720p_Num_Video2',
		sum(t.[Count % 720p_Video2]) as 'YTB_video_resolution_%720p_Den_Video2',
		sum(YTB4G.[1080p-VideoDuration_Video2]*YTB4G.[Count 1080p-VideoDuration_Video2]) as 'YTB_video_resolution_1080p_Num_Video2',
		sum(YTB4G.[Count 1080p-VideoDuration_Video2]) as 'YTB_video_resolution_1080p_Den_Video2',
		sum(YTB4G.[1080p-VideoMOS_Video2]*YTB4G.[Count 1080p-VideoMOS_Video2]) as 'YTB_video_mos_1080p_Num_Video2',
		sum(YTB4G.[Count 1080p-VideoMOS_Video2]) as 'YTB_video_mos_1080p_Den_Video2',
		sum(YTB4G.[% 1080p_Video2]*YTB4G.[Count % 1080p_Video2]) as 'YTB_video_resolution_%1080p_Num_Video2',
		sum(YTB4G.[Count % 1080p_Video2]) as 'YTB_video_resolution_%1080p_Den_Video2',

		--YOUTUBE HD: Video 3
		sum(YTB4G.[Time To First Image_Video3]*(YTB4G.Reproducciones_Video3-YTB4G.Fails_Video3)) as Avg_Video_StarTime_Num_Video3,
		sum((YTB4G.Reproducciones_Video3-YTB4G.Fails_Video3)) as avg_Video_startTime_Den_Video3,
		sum(YTB4G.ReproduccionesSinInt_Video3) as Reproductions_WO_Interruptions_Video3,
		sum(YTB4G.Reproducciones_Video3) as Reproductions_WO_Interruptions_Den_Video3,
		sum(YTB4G.[B4_Video3]) as B4_Video3,
		sum(YTB4G.[ReproduccionesHD_Video3]) as [ReproduccionesHD_Video3],
		sum(YTB4G.[Successful video download_Video3]) as [Successful video download_Video3],
		sum(YTB4G.[Reproducciones_Video3]) as [Reproducciones_Video3],
		sum(YTB4G.[Fails_Video3]) as [Fails_Video3],
		--sum(cast(left(YTB4G.[avg Video Resolution_Video3],3) as int)*YTB4G.[Count_Video_Resolucion_Video3]) as YTB_video_resolution_num_Video3,
		sum(cast(replace(YTB4G.[avg Video Resolution_Video3],'p','') as float)*YTB4G.[Count_Video_Resolucion_Video3]) as YTB_video_resolution_num_Video3,
		sum(YTB4G.Count_Video_Resolucion_Video3) as YTB_video_resolution_den_Video3,
		sum(YTB4G.[Video MOS_Video3]*YTB4G.[Count_Video_MOS_Video3]) as YTB_video_mos_num_Video3,
		sum(YTB4G.[Count_Video_MOS_Video3]) as YTB_video_mos_den_Video3,
		max(t.url_Video3) as YTB_URL_Video3,
		sum(YTB4G.[1st Resolution_Video3]*YTB4G.[Count 1st Resolution_Video3]) as 'YTB_1st_Resolution_Num_Video3',
		sum(YTB4G.[Count 1st Resolution_Video3]) as 'YTB_1st_Resolution_Den_Video3',
		sum(YTB4G.[2nd Resolution_Video3]*YTB4G.[Count 2nd Resolution_Video3]) as 'YTB_2nd_Resolution_Num_Video3',
		sum(YTB4G.[Count 2nd Resolution_Video3]) as 'YTB_2nd_Resolution_Den_Video3',
		sum(YTB4G.[FirstChangeFromInit_Video3]*YTB4G.[Count FirstChangeFromInit_Video3]) as 'YTB_FirstChangeFromInit_Num_Video3',
		sum(YTB4G.[Count FirstChangeFromInit_Video3]) as 'YTB_FirstChangeFromInit_Den_Video3',
		sum(YTB4G.[initialResolution_Video3]*YTB4G.[Count initialResolution_Video3]) as 'YTB_initialResolution_Num_Video3',
		sum(YTB4G.[Count initialResolution_Video3]) as 'YTB_initialResolution_Den_Video3',
		sum(YTB4G.[finalResolution_Video3]*YTB4G.[Count finalResolution_Video3]) as 'YTB_finalResolution_Num_Video3',
		sum(YTB4G.[Count finalResolution_Video3]) as 'YTB_finalResolution_Den_Video3',
		sum(YTB4G.[144p-VideoDuration_Video3]*YTB4G.[Count 144p-VideoDuration_Video3]) as 'YTB_video_resolution_144p_Num_Video3',
		sum(YTB4G.[Count 144p-VideoDuration_Video3]) as 'YTB_video_resolution_144p_Den_Video3',
		sum(YTB4G.[144p-VideoMOS_Video3]*YTB4G.[Count 144p-VideoMOS_Video3]) as 'YTB_video_mos_144p_Num_Video3',
		sum(YTB4G.[Count 144p-VideoMOS_Video3]) as 'YTB_video_mos_144p_Den_Video3',
		sum(YTB4G.[% 144p_Video3]*YTB4G.[Count % 144p_Video3]) as 'YTB_video_resolution_%144p_Num_Video3',
		sum(YTB4G.[Count % 144p_Video3]) as 'YTB_video_resolution_%144p_Den_Video3',
		sum(YTB4G.[240p-VideoDuration_Video3]*YTB4G.[Count 240p-VideoDuration_Video3]) as 'YTB_video_resolution_240p_Num_Video3',
		sum(YTB4G.[Count 240p-VideoDuration_Video3]) as 'YTB_video_resolution_240p_Den_Video3',
		sum(YTB4G.[240p-VideoMOS_Video3]*YTB4G.[Count 240p-VideoMOS_Video3]) as 'YTB_video_mos_240p_Num_Video3',
		sum(YTB4G.[Count 240p-VideoMOS_Video3]) as 'YTB_video_mos_240p_Den_Video3',
		sum(YTB4G.[% 240p_Video3]*YTB4G.[Count % 240p_Video3]) as 'YTB_video_resolution_%240p_Num_Video3',
		sum(YTB4G.[Count % 240p_Video3]) as 'YTB_video_resolution_%240p_Den_Video3',
		sum(YTB4G.[360p-VideoDuration_Video3]*YTB4G.[Count 360p-VideoDuration_Video3]) as 'YTB_video_resolution_360p_Num_Video3',
		sum(YTB4G.[Count 360p-VideoDuration_Video3]) as 'YTB_video_resolution_360p_Den_Video3',
		sum(YTB4G.[360p-VideoMOS_Video3]*YTB4G.[Count 360p-VideoMOS_Video3]) as 'YTB_video_mos_360p_Num_Video3',
		sum(YTB4G.[Count 360p-VideoMOS_Video3]) as 'YTB_video_mos_360p_Den_Video3',
		sum(YTB4G.[% 360p_Video3]*YTB4G.[Count % 360p_Video3]) as 'YTB_video_resolution_%360p_Num_Video3',
		sum(YTB4G.[Count % 360p_Video3]) as 'YTB_video_resolution_%360p_Den_Video3',
		sum(YTB4G.[480p-VideoDuration_Video3]*YTB4G.[Count 480p-VideoDuration_Video3]) as 'YTB_video_resolution_480p_Num_Video3',
		sum(YTB4G.[Count 480p-VideoDuration_Video3]) as 'YTB_video_resolution_480p_Den_Video3',
		sum(YTB4G.[480p-VideoMOS_Video3]*YTB4G.[Count 480p-VideoMOS_Video3]) as 'YTB_video_mos_480p_Num_Video3',
		sum(YTB4G.[Count 480p-VideoMOS_Video3]) as 'YTB_video_mos_480p_Den_Video3',
		sum(YTB4G.[% 480p_Video3]*YTB4G.[Count % 480p_Video3]) as 'YTB_video_resolution_%480p_Num_Video3',
		sum(YTB4G.[Count % 480p_Video3]) as 'YTB_video_resolution_%480p_Den_Video3',
		sum(t.[720p-VideoDuration_Video3]*t.[Count 720p-VideoDuration_Video3]) as 'YTB_video_resolution_720p_Num_Video3',
		sum(t.[Count 720p-VideoDuration_Video3]) as 'YTB_video_resolution_720p_Den_Video3',
		sum(t.[720p-VideoMOS_Video3]*t.[Count 720p-VideoMOS_Video3]) as 'YTB_video_mos_720p_Num_Video3',
		sum(t.[Count 720p-VideoMOS_Video3]) as 'YTB_video_mos_720p_Den_Video3',
		sum(t.[% 720p_Video3]*t.[Count % 720p_Video3]) as 'YTB_video_resolution_%720p_Num_Video3',
		sum(t.[Count % 720p_Video3]) as 'YTB_video_resolution_%720p_Den_Video3',
		sum(YTB4G.[1080p-VideoDuration_Video3]*YTB4G.[Count 1080p-VideoDuration_Video3]) as 'YTB_video_resolution_1080p_Num_Video3',
		sum(YTB4G.[Count 1080p-VideoDuration_Video3]) as 'YTB_video_resolution_1080p_Den_Video3',
		sum(YTB4G.[1080p-VideoMOS_Video3]*YTB4G.[Count 1080p-VideoMOS_Video3]) as 'YTB_video_mos_1080p_Num_Video3',
		sum(YTB4G.[Count 1080p-VideoMOS_Video3]) as 'YTB_video_mos_1080p_Den_Video3',
		sum(YTB4G.[% 1080p_Video3]*YTB4G.[Count % 1080p_Video3]) as 'YTB_video_resolution_%1080p_Num_Video3',
		sum(YTB4G.[Count % 1080p_Video3]) as 'YTB_video_resolution_%1080p_Den_Video3',

		--YOUTUBE HD: Video 4
		sum(YTB4G.[Time To First Image_Video4]*(YTB4G.Reproducciones_Video4-YTB4G.Fails_Video4)) as Avg_Video_StarTime_Num_Video4,
		sum((YTB4G.Reproducciones_Video4-YTB4G.Fails_Video4)) as avg_Video_startTime_Den_Video4,
		sum(YTB4G.ReproduccionesSinInt_Video4) as Reproductions_WO_Interruptions_Video4,
		sum(YTB4G.Reproducciones_Video4) as Reproductions_WO_Interruptions_Den_Video4,
		sum(YTB4G.[B4_Video4]) as B4_Video4,
		sum(YTB4G.[ReproduccionesHD_Video4]) as [ReproduccionesHD_Video4],
		sum(YTB4G.[Successful video download_Video4]) as [Successful video download_Video4],
		sum(YTB4G.[Reproducciones_Video4]) as [Reproducciones_Video4],
		sum(YTB4G.[Fails_Video4]) as [Fails_Video4],
		--sum(cast(left(YTB4G.[avg Video Resolution_Video4],3) as int)*YTB4G.[Count_Video_Resolucion_Video4]) as YTB_video_resolution_num_Video4,
		sum(cast(replace(YTB4G.[avg Video Resolution_Video4],'p','') as float)*YTB4G.[Count_Video_Resolucion_Video4]) as YTB_video_resolution_num_Video4,
		sum(YTB4G.Count_Video_Resolucion_Video4) as YTB_video_resolution_den_Video4,
		sum(YTB4G.[Video MOS_Video4]*YTB4G.[Count_Video_MOS_Video4]) as YTB_video_mos_num_Video4,
		sum(YTB4G.[Count_Video_MOS_Video4]) as YTB_video_mos_den_Video4,
		max(t.url_Video4) as YTB_URL_Video4,
		sum(YTB4G.[1st Resolution_Video4]*YTB4G.[Count 1st Resolution_Video4]) as 'YTB_1st_Resolution_Num_Video4',
		sum(YTB4G.[Count 1st Resolution_Video4]) as 'YTB_1st_Resolution_Den_Video4',
		sum(YTB4G.[2nd Resolution_Video4]*YTB4G.[Count 2nd Resolution_Video4]) as 'YTB_2nd_Resolution_Num_Video4',
		sum(YTB4G.[Count 2nd Resolution_Video4]) as 'YTB_2nd_Resolution_Den_Video4',
		sum(YTB4G.[FirstChangeFromInit_Video4]*YTB4G.[Count FirstChangeFromInit_Video4]) as 'YTB_FirstChangeFromInit_Num_Video4',
		sum(YTB4G.[Count FirstChangeFromInit_Video4]) as 'YTB_FirstChangeFromInit_Den_Video4',
		sum(YTB4G.[initialResolution_Video4]*YTB4G.[Count initialResolution_Video4]) as 'YTB_initialResolution_Num_Video4',
		sum(YTB4G.[Count initialResolution_Video4]) as 'YTB_initialResolution_Den_Video4',
		sum(YTB4G.[finalResolution_Video4]*YTB4G.[Count finalResolution_Video4]) as 'YTB_finalResolution_Num_Video4',
		sum(YTB4G.[Count finalResolution_Video4]) as 'YTB_finalResolution_Den_Video4',
		sum(YTB4G.[144p-VideoDuration_Video4]*YTB4G.[Count 144p-VideoDuration_Video4]) as 'YTB_video_resolution_144p_Num_Video4',
		sum(YTB4G.[Count 144p-VideoDuration_Video4]) as 'YTB_video_resolution_144p_Den_Video4',
		sum(YTB4G.[144p-VideoMOS_Video4]*YTB4G.[Count 144p-VideoMOS_Video4]) as 'YTB_video_mos_144p_Num_Video4',
		sum(YTB4G.[Count 144p-VideoMOS_Video4]) as 'YTB_video_mos_144p_Den_Video4',
		sum(YTB4G.[% 144p_Video4]*YTB4G.[Count % 144p_Video4]) as 'YTB_video_resolution_%144p_Num_Video4',
		sum(YTB4G.[Count % 144p_Video4]) as 'YTB_video_resolution_%144p_Den_Video4',
		sum(YTB4G.[240p-VideoDuration_Video4]*YTB4G.[Count 240p-VideoDuration_Video4]) as 'YTB_video_resolution_240p_Num_Video4',
		sum(YTB4G.[Count 240p-VideoDuration_Video4]) as 'YTB_video_resolution_240p_Den_Video4',
		sum(YTB4G.[240p-VideoMOS_Video4]*YTB4G.[Count 240p-VideoMOS_Video4]) as 'YTB_video_mos_240p_Num_Video4',
		sum(YTB4G.[Count 240p-VideoMOS_Video4]) as 'YTB_video_mos_240p_Den_Video4',
		sum(YTB4G.[% 240p_Video4]*YTB4G.[Count % 240p_Video4]) as 'YTB_video_resolution_%240p_Num_Video4',
		sum(YTB4G.[Count % 240p_Video4]) as 'YTB_video_resolution_%240p_Den_Video4',
		sum(YTB4G.[360p-VideoDuration_Video4]*YTB4G.[Count 360p-VideoDuration_Video4]) as 'YTB_video_resolution_360p_Num_Video4',
		sum(YTB4G.[Count 360p-VideoDuration_Video4]) as 'YTB_video_resolution_360p_Den_Video4',
		sum(YTB4G.[360p-VideoMOS_Video4]*YTB4G.[Count 360p-VideoMOS_Video4]) as 'YTB_video_mos_360p_Num_Video4',
		sum(YTB4G.[Count 360p-VideoMOS_Video4]) as 'YTB_video_mos_360p_Den_Video4',
		sum(YTB4G.[% 360p_Video4]*YTB4G.[Count % 360p_Video4]) as 'YTB_video_resolution_%360p_Num_Video4',
		sum(YTB4G.[Count % 360p_Video4]) as 'YTB_video_resolution_%360p_Den_Video4',
		sum(YTB4G.[480p-VideoDuration_Video4]*YTB4G.[Count 480p-VideoDuration_Video4]) as 'YTB_video_resolution_480p_Num_Video4',
		sum(YTB4G.[Count 480p-VideoDuration_Video4]) as 'YTB_video_resolution_480p_Den_Video4',
		sum(YTB4G.[480p-VideoMOS_Video4]*YTB4G.[Count 480p-VideoMOS_Video4]) as 'YTB_video_mos_480p_Num_Video4',
		sum(YTB4G.[Count 480p-VideoMOS_Video4]) as 'YTB_video_mos_480p_Den_Video4',
		sum(YTB4G.[% 480p_Video4]*YTB4G.[Count % 480p_Video4]) as 'YTB_video_resolution_%480p_Num_Video4',
		sum(YTB4G.[Count % 480p_Video4]) as 'YTB_video_resolution_%480p_Den_Video4',
		sum(t.[720p-VideoDuration_Video4]*t.[Count 720p-VideoDuration_Video4]) as 'YTB_video_resolution_720p_Num_Video4',
		sum(t.[Count 720p-VideoDuration_Video4]) as 'YTB_video_resolution_720p_Den_Video4',
		sum(t.[720p-VideoMOS_Video4]*t.[Count 720p-VideoMOS_Video4]) as 'YTB_video_mos_720p_Num_Video4',
		sum(t.[Count 720p-VideoMOS_Video4]) as 'YTB_video_mos_720p_Den_Video4',
		sum(t.[% 720p_Video4]*t.[Count % 720p_Video4]) as 'YTB_video_resolution_%720p_Num_Video4',
		sum(t.[Count % 720p_Video4]) as 'YTB_video_resolution_%720p_Den_Video4',
		sum(YTB4G.[1080p-VideoDuration_Video4]*YTB4G.[Count 1080p-VideoDuration_Video4]) as 'YTB_video_resolution_1080p_Num_Video4',
		sum(YTB4G.[Count 1080p-VideoDuration_Video4]) as 'YTB_video_resolution_1080p_Den_Video4',
		sum(YTB4G.[1080p-VideoMOS_Video4]*YTB4G.[Count 1080p-VideoMOS_Video4]) as 'YTB_video_mos_1080p_Num_Video4',
		sum(YTB4G.[Count 1080p-VideoMOS_Video4]) as 'YTB_video_mos_1080p_Den_Video4',
		sum(YTB4G.[% 1080p_Video4]*YTB4G.[Count % 1080p_Video4]) as 'YTB_video_resolution_%1080p_Num_Video4',
		sum(YTB4G.[Count % 1080p_Video4]) as 'YTB_video_resolution_%1080p_Den_Video4',

		-- Parametros de configuracion:
		t.ASideDevice as ASideDevice, t.BSideDevice as BSideDevice, t.SWVersion as SWVersion, max(t.Youtube_Version) as YTB_Version


	from [aggrData4G_ROAD].dbo.[lcc_aggr_sp_MDD_Data_Youtube_HD] t
		left outer join [aggrData4G_ROAD].dbo.[lcc_aggr_sp_MDD_Data_Youtube_HD_4G] YTB4G on (isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(YTB4G.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=YTB4G.mnc and t.Date_Reporting=YTB4G.Date_Reporting and t.entidad=YTB4G.entidad and t.Aggr_Type=YTB4G.Aggr_Type and t.Report_Type=YTB4G.Report_Type and t.meas_round=YTB4G.meas_round)
		, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, t.mnc, t.meas_round, t.Date_Reporting, t.Week_Reporting, t.entidad, t.Report_Type, t.Aggr_Type, /*t.Youtube_Version,*/
		t.ASideDevice, t.BSideDevice, t.SWVersion--, t.url --, t.Region_VF, t.Region_OSP

	-------------------------------------
	-- Video Streaming 4G_CA_Only		YTB HD
	-------------------------------------	
	insert into _RI_Data_y
	select  -- 4G_CA_Only HD
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment, t.mnc, t.meas_round, t.Date_Reporting as meas_date, t.Week_Reporting as meas_week, 
		'4G_CA_Only' as meas_Tech, 'Youtube HD' as Test_type, 'Downlink' as Direction, t.entidad as vf_entity, t.Report_Type, t.Aggr_Type,
	
		sum(YTBCA.[Time To First Image]*(YTBCA.Reproducciones-YTBCA.Fails)) as Avg_Video_StarTime_Num,
		sum((YTBCA.Reproducciones-YTBCA.Fails)) as avg_Video_startTime_Den,
		sum(YTBCA.ReproduccionesSinInt) as Reproductions_WO_Interruptions,
		sum(YTBCA.Reproducciones) as Reproductions_WO_Interruptions_Den,
		--sum(YTBCA.[Successful video download]) as Success_Video_P3_num,
		--sum(YTBCA.Reproducciones) as Success_Video_P3_den,
		sum(YTBCA.[B4]) as B4,
		sum(YTBCA.[ReproduccionesHD]) as [ReproduccionesHD],
		sum(YTBCA.[Successful video download]) as [Successful video download],
		sum(YTBCA.[Reproducciones]) as [Reproducciones],
		sum(cast(replace(YTBCA.[avg Video Resolution],'p','') as float)*YTBCA.[Count_Video_Resolucion]) as YTB_video_resolution_num,
		sum(YTBCA.Count_Video_Resolucion) as YTB_video_resolution_den,
		sum(YTBCA.[Video MOS]*YTBCA.[Count_Video_MOS]) as YTB_video_mos_num,
		sum(YTBCA.[Count_Video_MOS]) as YTB_video_mos_den,
		--null as Region_Road_VF, null as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP,
		max(t.url) as YTB_URL,
		sum(YTBCA.[1st Resolution]*YTBCA.[Count 1st Resolution]) as 'YTB_1st_Resolution_Num',
		sum(YTBCA.[Count 1st Resolution]) as 'YTB_1st_Resolution_Den',
		sum(YTBCA.[2nd Resolution]*YTBCA.[Count 2nd Resolution]) as 'YTB_2nd_Resolution_Num',
		sum(YTBCA.[Count 2nd Resolution]) as 'YTB_2nd_Resolution_Den',
		sum(YTBCA.[FirstChangeFromInit]*YTBCA.[Count FirstChangeFromInit]) as 'YTB_FirstChangeFromInit_Num',
		sum(YTBCA.[Count FirstChangeFromInit]) as 'YTB_FirstChangeFromInit_Den',
		sum(YTBCA.[initialResolution]*YTBCA.[Count initialResolution]) as 'YTB_initialResolution_Num',
		sum(YTBCA.[Count initialResolution]) as 'YTB_initialResolution_Den',
		sum(YTBCA.[finalResolution]*YTBCA.[Count finalResolution]) as 'YTB_finalResolution_Num',
		sum(YTBCA.[Count finalResolution]) as 'YTB_finalResolution_Den',
		sum(YTBCA.[144p-VideoDuration]*YTBCA.[Count 144p-VideoDuration]) as 'YTB_video_resolution_144p_Num',
		sum(YTBCA.[Count 144p-VideoDuration]) as 'YTB_video_resolution_144p_Den',
		sum(YTBCA.[144p-VideoMOS]*YTBCA.[Count 144p-VideoMOS]) as 'YTB_video_mos_144p_Num',
		sum(YTBCA.[Count 144p-VideoMOS]) as 'YTB_video_mos_144p_Den',
		sum(YTBCA.[% 144p]*YTBCA.[Count % 144p]) as 'YTB_video_resolution_%144p_Num',
		sum(YTBCA.[Count % 144p]) as 'YTB_video_resolution_%144p_Den',
		sum(YTBCA.[240p-VideoDuration]*YTBCA.[Count 240p-VideoDuration]) as 'YTB_video_resolution_240p_Num',
		sum(YTBCA.[Count 240p-VideoDuration]) as 'YTB_video_resolution_240p_Den',
		sum(YTBCA.[240p-VideoMOS]*YTBCA.[Count 240p-VideoMOS]) as 'YTB_video_mos_240p_Num',
		sum(YTBCA.[Count 240p-VideoMOS]) as 'YTB_video_mos_240p_Den',
		sum(YTBCA.[% 240p]*YTBCA.[Count % 240p]) as 'YTB_video_resolution_%240p_Num',
		sum(YTBCA.[Count % 240p]) as 'YTB_video_resolution_%240p_Den',
		sum(YTBCA.[360p-VideoDuration]*YTBCA.[Count 360p-VideoDuration]) as 'YTB_video_resolution_360p_Num',
		sum(YTBCA.[Count 360p-VideoDuration]) as 'YTB_video_resolution_360p_Den',
		sum(YTBCA.[360p-VideoMOS]*YTBCA.[Count 360p-VideoMOS]) as 'YTB_video_mos_360p_Num',
		sum(YTBCA.[Count 360p-VideoMOS]) as 'YTB_video_mos_360p_Den',
		sum(YTBCA.[% 360p]*YTBCA.[Count % 360p]) as 'YTB_video_resolution_%360p_Num',
		sum(YTBCA.[Count % 360p]) as 'YTB_video_resolution_%360p_Den',
		sum(YTBCA.[480p-VideoDuration]*YTBCA.[Count 480p-VideoDuration]) as 'YTB_video_resolution_480p_Num',
		sum(YTBCA.[Count 480p-VideoDuration]) as 'YTB_video_resolution_480p_Den',
		sum(YTBCA.[480p-VideoMOS]*YTBCA.[Count 480p-VideoMOS]) as 'YTB_video_mos_480p_Num',
		sum(YTBCA.[Count 480p-VideoMOS]) as 'YTB_video_mos_480p_Den',
		sum(YTBCA.[% 480p]*YTBCA.[Count % 480p]) as 'YTB_video_resolution_%480p_Num',
		sum(YTBCA.[Count % 480p]) as 'YTB_video_resolution_%480p_Den',
		sum(t.[720p-VideoDuration]*t.[Count 720p-VideoDuration]) as 'YTB_video_resolution_720p_Num',
		sum(t.[Count 720p-VideoDuration]) as 'YTB_video_resolution_720p_Den',
		sum(t.[720p-VideoMOS]*t.[Count 720p-VideoMOS]) as 'YTB_video_mos_720p_Num',
		sum(t.[Count 720p-VideoMOS]) as 'YTB_video_mos_720p_Den',
		sum(t.[% 720p]*t.[Count % 720p]) as 'YTB_video_resolution_%720p_Num',
		sum(t.[Count % 720p]) as 'YTB_video_resolution_%720p_Den',
		sum(YTBCA.[1080p-VideoDuration]*YTBCA.[Count 1080p-VideoDuration]) as 'YTB_video_resolution_1080p_Num',
		sum(YTBCA.[Count 1080p-VideoDuration]) as 'YTB_video_resolution_1080p_Den',
		sum(YTBCA.[1080p-VideoMOS]*YTBCA.[Count 1080p-VideoMOS]) as 'YTB_video_mos_1080p_Num',
		sum(YTBCA.[Count 1080p-VideoMOS]) as 'YTB_video_mos_1080p_Den',
		sum(YTBCA.[% 1080p]*YTBCA.[Count % 1080p]) as 'YTB_video_resolution_%1080p_Num',
		sum(YTBCA.[Count % 1080p]) as 'YTB_video_resolution_%1080p_Den',

		--YOUTUBE HD: Video 1
		sum(YTBCA.[Time To First Image_Video1]*(YTBCA.Reproducciones_Video1-YTBCA.Fails_Video1)) as Avg_Video_StarTime_Num_Video1,
		sum((YTBCA.Reproducciones_Video1-YTBCA.Fails_Video1)) as avg_Video_startTime_Den_Video1,
		sum(YTBCA.ReproduccionesSinInt_Video1) as Reproductions_WO_Interruptions_Video1,
		sum(YTBCA.Reproducciones_Video1) as Reproductions_WO_Interruptions_Den_Video1,
		sum(YTBCA.[B4_Video1]) as B4_Video1,
		sum(YTBCA.[ReproduccionesHD_Video1]) as [ReproduccionesHD_Video1],
		sum(YTBCA.[Successful video download_Video1]) as [Successful video download_Video1],
		sum(YTBCA.[Reproducciones_Video1]) as [Reproducciones_Video1],
		sum(YTBCA.[Fails_Video1]) as [Fails_Video1],
		--sum(cast(left(YTBCA.[avg Video Resolution_Video1],3) as int)*YTBCA.[Count_Video_Resolucion_Video1]) as YTB_video_resolution_num_Video1,
		sum(cast(replace(YTBCA.[avg Video Resolution_Video1],'p','') as float)*YTBCA.[Count_Video_Resolucion_Video1]) as YTB_video_resolution_num_Video1,
		sum(YTBCA.Count_Video_Resolucion_Video1) as YTB_video_resolution_den_Video1,
		sum(YTBCA.[Video MOS_Video1]*YTBCA.[Count_Video_MOS_Video1]) as YTB_video_mos_num_Video1,
		sum(YTBCA.[Count_Video_MOS_Video1]) as YTB_video_mos_den_Video1,
		max(t.url_Video1) as YTB_URL_Video1,
		sum(YTBCA.[1st Resolution_Video1]*YTBCA.[Count 1st Resolution_Video1]) as 'YTB_1st_Resolution_Num_Video1',
		sum(YTBCA.[Count 1st Resolution_Video1]) as 'YTB_1st_Resolution_Den_Video1',
		sum(YTBCA.[2nd Resolution_Video1]*YTBCA.[Count 2nd Resolution_Video1]) as 'YTB_2nd_Resolution_Num_Video1',
		sum(YTBCA.[Count 2nd Resolution_Video1]) as 'YTB_2nd_Resolution_Den_Video1',
		sum(YTBCA.[FirstChangeFromInit_Video1]*YTBCA.[Count FirstChangeFromInit_Video1]) as 'YTB_FirstChangeFromInit_Num_Video1',
		sum(YTBCA.[Count FirstChangeFromInit_Video1]) as 'YTB_FirstChangeFromInit_Den_Video1',
		sum(YTBCA.[initialResolution_Video1]*YTBCA.[Count initialResolution_Video1]) as 'YTB_initialResolution_Num_Video1',
		sum(YTBCA.[Count initialResolution_Video1]) as 'YTB_initialResolution_Den_Video1',
		sum(YTBCA.[finalResolution_Video1]*YTBCA.[Count finalResolution_Video1]) as 'YTB_finalResolution_Num_Video1',
		sum(YTBCA.[Count finalResolution_Video1]) as 'YTB_finalResolution_Den_Video1',
		sum(YTBCA.[144p-VideoDuration_Video1]*YTBCA.[Count 144p-VideoDuration_Video1]) as 'YTB_video_resolution_144p_Num_Video1',
		sum(YTBCA.[Count 144p-VideoDuration_Video1]) as 'YTB_video_resolution_144p_Den_Video1',
		sum(YTBCA.[144p-VideoMOS_Video1]*YTBCA.[Count 144p-VideoMOS_Video1]) as 'YTB_video_mos_144p_Num_Video1',
		sum(YTBCA.[Count 144p-VideoMOS_Video1]) as 'YTB_video_mos_144p_Den_Video1',
		sum(YTBCA.[% 144p_Video1]*YTBCA.[Count % 144p_Video1]) as 'YTB_video_resolution_%144p_Num_Video1',
		sum(YTBCA.[Count % 144p_Video1]) as 'YTB_video_resolution_%144p_Den_Video1',
		sum(YTBCA.[240p-VideoDuration_Video1]*YTBCA.[Count 240p-VideoDuration_Video1]) as 'YTB_video_resolution_240p_Num_Video1',
		sum(YTBCA.[Count 240p-VideoDuration_Video1]) as 'YTB_video_resolution_240p_Den_Video1',
		sum(YTBCA.[240p-VideoMOS_Video1]*YTBCA.[Count 240p-VideoMOS_Video1]) as 'YTB_video_mos_240p_Num_Video1',
		sum(YTBCA.[Count 240p-VideoMOS_Video1]) as 'YTB_video_mos_240p_Den_Video1',
		sum(YTBCA.[% 240p_Video1]*YTBCA.[Count % 240p_Video1]) as 'YTB_video_resolution_%240p_Num_Video1',
		sum(YTBCA.[Count % 240p_Video1]) as 'YTB_video_resolution_%240p_Den_Video1',
		sum(YTBCA.[360p-VideoDuration_Video1]*YTBCA.[Count 360p-VideoDuration_Video1]) as 'YTB_video_resolution_360p_Num_Video1',
		sum(YTBCA.[Count 360p-VideoDuration_Video1]) as 'YTB_video_resolution_360p_Den_Video1',
		sum(YTBCA.[360p-VideoMOS_Video1]*YTBCA.[Count 360p-VideoMOS_Video1]) as 'YTB_video_mos_360p_Num_Video1',
		sum(YTBCA.[Count 360p-VideoMOS_Video1]) as 'YTB_video_mos_360p_Den_Video1',
		sum(YTBCA.[% 360p_Video1]*YTBCA.[Count % 360p_Video1]) as 'YTB_video_resolution_%360p_Num_Video1',
		sum(YTBCA.[Count % 360p_Video1]) as 'YTB_video_resolution_%360p_Den_Video1',
		sum(YTBCA.[480p-VideoDuration_Video1]*YTBCA.[Count 480p-VideoDuration_Video1]) as 'YTB_video_resolution_480p_Num_Video1',
		sum(YTBCA.[Count 480p-VideoDuration_Video1]) as 'YTB_video_resolution_480p_Den_Video1',
		sum(YTBCA.[480p-VideoMOS_Video1]*YTBCA.[Count 480p-VideoMOS_Video1]) as 'YTB_video_mos_480p_Num_Video1',
		sum(YTBCA.[Count 480p-VideoMOS_Video1]) as 'YTB_video_mos_480p_Den_Video1',
		sum(YTBCA.[% 480p_Video1]*YTBCA.[Count % 480p_Video1]) as 'YTB_video_resolution_%480p_Num_Video1',
		sum(YTBCA.[Count % 480p_Video1]) as 'YTB_video_resolution_%480p_Den_Video1',
		sum(t.[720p-VideoDuration_Video1]*t.[Count 720p-VideoDuration_Video1]) as 'YTB_video_resolution_720p_Num_Video1',
		sum(t.[Count 720p-VideoDuration_Video1]) as 'YTB_video_resolution_720p_Den_Video1',
		sum(t.[720p-VideoMOS_Video1]*t.[Count 720p-VideoMOS_Video1]) as 'YTB_video_mos_720p_Num_Video1',
		sum(t.[Count 720p-VideoMOS_Video1]) as 'YTB_video_mos_720p_Den_Video1',
		sum(t.[% 720p_Video1]*t.[Count % 720p_Video1]) as 'YTB_video_resolution_%720p_Num_Video1',
		sum(t.[Count % 720p_Video1]) as 'YTB_video_resolution_%720p_Den_Video1',
		sum(YTBCA.[1080p-VideoDuration_Video1]*YTBCA.[Count 1080p-VideoDuration_Video1]) as 'YTB_video_resolution_1080p_Num_Video1',
		sum(YTBCA.[Count 1080p-VideoDuration_Video1]) as 'YTB_video_resolution_1080p_Den_Video1',
		sum(YTBCA.[1080p-VideoMOS_Video1]*YTBCA.[Count 1080p-VideoMOS_Video1]) as 'YTB_video_mos_1080p_Num_Video1',
		sum(YTBCA.[Count 1080p-VideoMOS_Video1]) as 'YTB_video_mos_1080p_Den_Video1',
		sum(YTBCA.[% 1080p_Video1]*YTBCA.[Count % 1080p_Video1]) as 'YTB_video_resolution_%1080p_Num_Video1',
		sum(YTBCA.[Count % 1080p_Video1]) as 'YTB_video_resolution_%1080p_Den_Video1',

		--YOUTUBE HD: Video 2
		sum(YTBCA.[Time To First Image_Video2]*(YTBCA.Reproducciones_Video2-YTBCA.Fails_Video2)) as Avg_Video_StarTime_Num_Video2,
		sum((YTBCA.Reproducciones_Video2-YTBCA.Fails_Video2)) as avg_Video_startTime_Den_Video2,
		sum(YTBCA.ReproduccionesSinInt_Video2) as Reproductions_WO_Interruptions_Video2,
		sum(YTBCA.Reproducciones_Video2) as Reproductions_WO_Interruptions_Den_Video2,
		sum(YTBCA.[B4_Video2]) as B4_Video2,
		sum(YTBCA.[ReproduccionesHD_Video2]) as [ReproduccionesHD_Video2],
		sum(YTBCA.[Successful video download_Video2]) as [Successful video download_Video2],
		sum(YTBCA.[Reproducciones_Video2]) as [Reproducciones_Video2],
		sum(YTBCA.[Fails_Video2]) as [Fails_Video2],
		--sum(cast(left(YTBCA.[avg Video Resolution_Video2],3) as int)*YTBCA.[Count_Video_Resolucion_Video2]) as YTB_video_resolution_num_Video2,
		sum(cast(replace(YTBCA.[avg Video Resolution_Video2],'p','') as float)*YTBCA.[Count_Video_Resolucion_Video2]) as YTB_video_resolution_num_Video2,
		sum(YTBCA.Count_Video_Resolucion_Video2) as YTB_video_resolution_den_Video2,
		sum(YTBCA.[Video MOS_Video2]*YTBCA.[Count_Video_MOS_Video2]) as YTB_video_mos_num_Video2,
		sum(YTBCA.[Count_Video_MOS_Video2]) as YTB_video_mos_den_Video2,
		max(t.url_Video2) as YTB_URL_Video2,
		sum(YTBCA.[1st Resolution_Video2]*YTBCA.[Count 1st Resolution_Video2]) as 'YTB_1st_Resolution_Num_Video2',
		sum(YTBCA.[Count 1st Resolution_Video2]) as 'YTB_1st_Resolution_Den_Video2',
		sum(YTBCA.[2nd Resolution_Video2]*YTBCA.[Count 2nd Resolution_Video2]) as 'YTB_2nd_Resolution_Num_Video2',
		sum(YTBCA.[Count 2nd Resolution_Video2]) as 'YTB_2nd_Resolution_Den_Video2',
		sum(YTBCA.[FirstChangeFromInit_Video2]*YTBCA.[Count FirstChangeFromInit_Video2]) as 'YTB_FirstChangeFromInit_Num_Video2',
		sum(YTBCA.[Count FirstChangeFromInit_Video2]) as 'YTB_FirstChangeFromInit_Den_Video2',
		sum(YTBCA.[initialResolution_Video2]*YTBCA.[Count initialResolution_Video2]) as 'YTB_initialResolution_Num_Video2',
		sum(YTBCA.[Count initialResolution_Video2]) as 'YTB_initialResolution_Den_Video2',
		sum(YTBCA.[finalResolution_Video2]*YTBCA.[Count finalResolution_Video2]) as 'YTB_finalResolution_Num_Video2',
		sum(YTBCA.[Count finalResolution_Video2]) as 'YTB_finalResolution_Den_Video2',
		sum(YTBCA.[144p-VideoDuration_Video2]*YTBCA.[Count 144p-VideoDuration_Video2]) as 'YTB_video_resolution_144p_Num_Video2',
		sum(YTBCA.[Count 144p-VideoDuration_Video2]) as 'YTB_video_resolution_144p_Den_Video2',
		sum(YTBCA.[144p-VideoMOS_Video2]*YTBCA.[Count 144p-VideoMOS_Video2]) as 'YTB_video_mos_144p_Num_Video2',
		sum(YTBCA.[Count 144p-VideoMOS_Video2]) as 'YTB_video_mos_144p_Den_Video2',
		sum(YTBCA.[% 144p_Video2]*YTBCA.[Count % 144p_Video2]) as 'YTB_video_resolution_%144p_Num_Video2',
		sum(YTBCA.[Count % 144p_Video2]) as 'YTB_video_resolution_%144p_Den_Video2',
		sum(YTBCA.[240p-VideoDuration_Video2]*YTBCA.[Count 240p-VideoDuration_Video2]) as 'YTB_video_resolution_240p_Num_Video2',
		sum(YTBCA.[Count 240p-VideoDuration_Video2]) as 'YTB_video_resolution_240p_Den_Video2',
		sum(YTBCA.[240p-VideoMOS_Video2]*YTBCA.[Count 240p-VideoMOS_Video2]) as 'YTB_video_mos_240p_Num_Video2',
		sum(YTBCA.[Count 240p-VideoMOS_Video2]) as 'YTB_video_mos_240p_Den_Video2',
		sum(YTBCA.[% 240p_Video2]*YTBCA.[Count % 240p_Video2]) as 'YTB_video_resolution_%240p_Num_Video2',
		sum(YTBCA.[Count % 240p_Video2]) as 'YTB_video_resolution_%240p_Den_Video2',
		sum(YTBCA.[360p-VideoDuration_Video2]*YTBCA.[Count 360p-VideoDuration_Video2]) as 'YTB_video_resolution_360p_Num_Video2',
		sum(YTBCA.[Count 360p-VideoDuration_Video2]) as 'YTB_video_resolution_360p_Den_Video2',
		sum(YTBCA.[360p-VideoMOS_Video2]*YTBCA.[Count 360p-VideoMOS_Video2]) as 'YTB_video_mos_360p_Num_Video2',
		sum(YTBCA.[Count 360p-VideoMOS_Video2]) as 'YTB_video_mos_360p_Den_Video2',
		sum(YTBCA.[% 360p_Video2]*YTBCA.[Count % 360p_Video2]) as 'YTB_video_resolution_%360p_Num_Video2',
		sum(YTBCA.[Count % 360p_Video2]) as 'YTB_video_resolution_%360p_Den_Video2',
		sum(YTBCA.[480p-VideoDuration_Video2]*YTBCA.[Count 480p-VideoDuration_Video2]) as 'YTB_video_resolution_480p_Num_Video2',
		sum(YTBCA.[Count 480p-VideoDuration_Video2]) as 'YTB_video_resolution_480p_Den_Video2',
		sum(YTBCA.[480p-VideoMOS_Video2]*YTBCA.[Count 480p-VideoMOS_Video2]) as 'YTB_video_mos_480p_Num_Video2',
		sum(YTBCA.[Count 480p-VideoMOS_Video2]) as 'YTB_video_mos_480p_Den_Video2',
		sum(YTBCA.[% 480p_Video2]*YTBCA.[Count % 480p_Video2]) as 'YTB_video_resolution_%480p_Num_Video2',
		sum(YTBCA.[Count % 480p_Video2]) as 'YTB_video_resolution_%480p_Den_Video2',
		sum(t.[720p-VideoDuration_Video2]*t.[Count 720p-VideoDuration_Video2]) as 'YTB_video_resolution_720p_Num_Video2',
		sum(t.[Count 720p-VideoDuration_Video2]) as 'YTB_video_resolution_720p_Den_Video2',
		sum(t.[720p-VideoMOS_Video2]*t.[Count 720p-VideoMOS_Video2]) as 'YTB_video_mos_720p_Num_Video2',
		sum(t.[Count 720p-VideoMOS_Video2]) as 'YTB_video_mos_720p_Den_Video2',
		sum(t.[% 720p_Video2]*t.[Count % 720p_Video2]) as 'YTB_video_resolution_%720p_Num_Video2',
		sum(t.[Count % 720p_Video2]) as 'YTB_video_resolution_%720p_Den_Video2',
		sum(YTBCA.[1080p-VideoDuration_Video2]*YTBCA.[Count 1080p-VideoDuration_Video2]) as 'YTB_video_resolution_1080p_Num_Video2',
		sum(YTBCA.[Count 1080p-VideoDuration_Video2]) as 'YTB_video_resolution_1080p_Den_Video2',
		sum(YTBCA.[1080p-VideoMOS_Video2]*YTBCA.[Count 1080p-VideoMOS_Video2]) as 'YTB_video_mos_1080p_Num_Video2',
		sum(YTBCA.[Count 1080p-VideoMOS_Video2]) as 'YTB_video_mos_1080p_Den_Video2',
		sum(YTBCA.[% 1080p_Video2]*YTBCA.[Count % 1080p_Video2]) as 'YTB_video_resolution_%1080p_Num_Video2',
		sum(YTBCA.[Count % 1080p_Video2]) as 'YTB_video_resolution_%1080p_Den_Video2',

		--YOUTUBE HD: Video 3
		sum(YTBCA.[Time To First Image_Video3]*(YTBCA.Reproducciones_Video3-YTBCA.Fails_Video3)) as Avg_Video_StarTime_Num_Video3,
		sum((YTBCA.Reproducciones_Video3-YTBCA.Fails_Video3)) as avg_Video_startTime_Den_Video3,
		sum(YTBCA.ReproduccionesSinInt_Video3) as Reproductions_WO_Interruptions_Video3,
		sum(YTBCA.Reproducciones_Video3) as Reproductions_WO_Interruptions_Den_Video3,
		sum(YTBCA.[B4_Video3]) as B4_Video3,
		sum(YTBCA.[ReproduccionesHD_Video3]) as [ReproduccionesHD_Video3],
		sum(YTBCA.[Successful video download_Video3]) as [Successful video download_Video3],
		sum(YTBCA.[Reproducciones_Video3]) as [Reproducciones_Video3],
		sum(YTBCA.[Fails_Video3]) as [Fails_Video3],
		--sum(cast(left(YTBCA.[avg Video Resolution_Video3],3) as int)*YTBCA.[Count_Video_Resolucion_Video3]) as YTB_video_resolution_num_Video3,
		sum(cast(replace(YTBCA.[avg Video Resolution_Video3],'p','') as float)*YTBCA.[Count_Video_Resolucion_Video3]) as YTB_video_resolution_num_Video3,
		sum(YTBCA.Count_Video_Resolucion_Video3) as YTB_video_resolution_den_Video3,
		sum(YTBCA.[Video MOS_Video3]*YTBCA.[Count_Video_MOS_Video3]) as YTB_video_mos_num_Video3,
		sum(YTBCA.[Count_Video_MOS_Video3]) as YTB_video_mos_den_Video3,
		max(t.url_Video3) as YTB_URL_Video3,
		sum(YTBCA.[1st Resolution_Video3]*YTBCA.[Count 1st Resolution_Video3]) as 'YTB_1st_Resolution_Num_Video3',
		sum(YTBCA.[Count 1st Resolution_Video3]) as 'YTB_1st_Resolution_Den_Video3',
		sum(YTBCA.[2nd Resolution_Video3]*YTBCA.[Count 2nd Resolution_Video3]) as 'YTB_2nd_Resolution_Num_Video3',
		sum(YTBCA.[Count 2nd Resolution_Video3]) as 'YTB_2nd_Resolution_Den_Video3',
		sum(YTBCA.[FirstChangeFromInit_Video3]*YTBCA.[Count FirstChangeFromInit_Video3]) as 'YTB_FirstChangeFromInit_Num_Video3',
		sum(YTBCA.[Count FirstChangeFromInit_Video3]) as 'YTB_FirstChangeFromInit_Den_Video3',
		sum(YTBCA.[initialResolution_Video3]*YTBCA.[Count initialResolution_Video3]) as 'YTB_initialResolution_Num_Video3',
		sum(YTBCA.[Count initialResolution_Video3]) as 'YTB_initialResolution_Den_Video3',
		sum(YTBCA.[finalResolution_Video3]*YTBCA.[Count finalResolution_Video3]) as 'YTB_finalResolution_Num_Video3',
		sum(YTBCA.[Count finalResolution_Video3]) as 'YTB_finalResolution_Den_Video3',
		sum(YTBCA.[144p-VideoDuration_Video3]*YTBCA.[Count 144p-VideoDuration_Video3]) as 'YTB_video_resolution_144p_Num_Video3',
		sum(YTBCA.[Count 144p-VideoDuration_Video3]) as 'YTB_video_resolution_144p_Den_Video3',
		sum(YTBCA.[144p-VideoMOS_Video3]*YTBCA.[Count 144p-VideoMOS_Video3]) as 'YTB_video_mos_144p_Num_Video3',
		sum(YTBCA.[Count 144p-VideoMOS_Video3]) as 'YTB_video_mos_144p_Den_Video3',
		sum(YTBCA.[% 144p_Video3]*YTBCA.[Count % 144p_Video3]) as 'YTB_video_resolution_%144p_Num_Video3',
		sum(YTBCA.[Count % 144p_Video3]) as 'YTB_video_resolution_%144p_Den_Video3',
		sum(YTBCA.[240p-VideoDuration_Video3]*YTBCA.[Count 240p-VideoDuration_Video3]) as 'YTB_video_resolution_240p_Num_Video3',
		sum(YTBCA.[Count 240p-VideoDuration_Video3]) as 'YTB_video_resolution_240p_Den_Video3',
		sum(YTBCA.[240p-VideoMOS_Video3]*YTBCA.[Count 240p-VideoMOS_Video3]) as 'YTB_video_mos_240p_Num_Video3',
		sum(YTBCA.[Count 240p-VideoMOS_Video3]) as 'YTB_video_mos_240p_Den_Video3',
		sum(YTBCA.[% 240p_Video3]*YTBCA.[Count % 240p_Video3]) as 'YTB_video_resolution_%240p_Num_Video3',
		sum(YTBCA.[Count % 240p_Video3]) as 'YTB_video_resolution_%240p_Den_Video3',
		sum(YTBCA.[360p-VideoDuration_Video3]*YTBCA.[Count 360p-VideoDuration_Video3]) as 'YTB_video_resolution_360p_Num_Video3',
		sum(YTBCA.[Count 360p-VideoDuration_Video3]) as 'YTB_video_resolution_360p_Den_Video3',
		sum(YTBCA.[360p-VideoMOS_Video3]*YTBCA.[Count 360p-VideoMOS_Video3]) as 'YTB_video_mos_360p_Num_Video3',
		sum(YTBCA.[Count 360p-VideoMOS_Video3]) as 'YTB_video_mos_360p_Den_Video3',
		sum(YTBCA.[% 360p_Video3]*YTBCA.[Count % 360p_Video3]) as 'YTB_video_resolution_%360p_Num_Video3',
		sum(YTBCA.[Count % 360p_Video3]) as 'YTB_video_resolution_%360p_Den_Video3',
		sum(YTBCA.[480p-VideoDuration_Video3]*YTBCA.[Count 480p-VideoDuration_Video3]) as 'YTB_video_resolution_480p_Num_Video3',
		sum(YTBCA.[Count 480p-VideoDuration_Video3]) as 'YTB_video_resolution_480p_Den_Video3',
		sum(YTBCA.[480p-VideoMOS_Video3]*YTBCA.[Count 480p-VideoMOS_Video3]) as 'YTB_video_mos_480p_Num_Video3',
		sum(YTBCA.[Count 480p-VideoMOS_Video3]) as 'YTB_video_mos_480p_Den_Video3',
		sum(YTBCA.[% 480p_Video3]*YTBCA.[Count % 480p_Video3]) as 'YTB_video_resolution_%480p_Num_Video3',
		sum(YTBCA.[Count % 480p_Video3]) as 'YTB_video_resolution_%480p_Den_Video3',
		sum(t.[720p-VideoDuration_Video3]*t.[Count 720p-VideoDuration_Video3]) as 'YTB_video_resolution_720p_Num_Video3',
		sum(t.[Count 720p-VideoDuration_Video3]) as 'YTB_video_resolution_720p_Den_Video3',
		sum(t.[720p-VideoMOS_Video3]*t.[Count 720p-VideoMOS_Video3]) as 'YTB_video_mos_720p_Num_Video3',
		sum(t.[Count 720p-VideoMOS_Video3]) as 'YTB_video_mos_720p_Den_Video3',
		sum(t.[% 720p_Video3]*t.[Count % 720p_Video3]) as 'YTB_video_resolution_%720p_Num_Video3',
		sum(t.[Count % 720p_Video3]) as 'YTB_video_resolution_%720p_Den_Video3',
		sum(YTBCA.[1080p-VideoDuration_Video3]*YTBCA.[Count 1080p-VideoDuration_Video3]) as 'YTB_video_resolution_1080p_Num_Video3',
		sum(YTBCA.[Count 1080p-VideoDuration_Video3]) as 'YTB_video_resolution_1080p_Den_Video3',
		sum(YTBCA.[1080p-VideoMOS_Video3]*YTBCA.[Count 1080p-VideoMOS_Video3]) as 'YTB_video_mos_1080p_Num_Video3',
		sum(YTBCA.[Count 1080p-VideoMOS_Video3]) as 'YTB_video_mos_1080p_Den_Video3',
		sum(YTBCA.[% 1080p_Video3]*YTBCA.[Count % 1080p_Video3]) as 'YTB_video_resolution_%1080p_Num_Video3',
		sum(YTBCA.[Count % 1080p_Video3]) as 'YTB_video_resolution_%1080p_Den_Video3',

		--YOUTUBE HD: Video 4
		sum(YTBCA.[Time To First Image_Video4]*(YTBCA.Reproducciones_Video4-YTBCA.Fails_Video4)) as Avg_Video_StarTime_Num_Video4,
		sum((YTBCA.Reproducciones_Video4-YTBCA.Fails_Video4)) as avg_Video_startTime_Den_Video4,
		sum(YTBCA.ReproduccionesSinInt_Video4) as Reproductions_WO_Interruptions_Video4,
		sum(YTBCA.Reproducciones_Video4) as Reproductions_WO_Interruptions_Den_Video4,
		sum(YTBCA.[B4_Video4]) as B4_Video4,
		sum(YTBCA.[ReproduccionesHD_Video4]) as [ReproduccionesHD_Video4],
		sum(YTBCA.[Successful video download_Video4]) as [Successful video download_Video4],
		sum(YTBCA.[Reproducciones_Video4]) as [Reproducciones_Video4],
		sum(YTBCA.[Fails_Video4]) as [Fails_Video4],
		--sum(cast(left(YTBCA.[avg Video Resolution_Video4],3) as int)*YTBCA.[Count_Video_Resolucion_Video4]) as YTB_video_resolution_num_Video4,
		sum(cast(replace(YTBCA.[avg Video Resolution_Video4],'p','') as float)*YTBCA.[Count_Video_Resolucion_Video4]) as YTB_video_resolution_num_Video4,
		sum(YTBCA.Count_Video_Resolucion_Video4) as YTB_video_resolution_den_Video4,
		sum(YTBCA.[Video MOS_Video4]*YTBCA.[Count_Video_MOS_Video4]) as YTB_video_mos_num_Video4,
		sum(YTBCA.[Count_Video_MOS_Video4]) as YTB_video_mos_den_Video4,
		max(t.url_Video4) as YTB_URL_Video4,
		sum(YTBCA.[1st Resolution_Video4]*YTBCA.[Count 1st Resolution_Video4]) as 'YTB_1st_Resolution_Num_Video4',
		sum(YTBCA.[Count 1st Resolution_Video4]) as 'YTB_1st_Resolution_Den_Video4',
		sum(YTBCA.[2nd Resolution_Video4]*YTBCA.[Count 2nd Resolution_Video4]) as 'YTB_2nd_Resolution_Num_Video4',
		sum(YTBCA.[Count 2nd Resolution_Video4]) as 'YTB_2nd_Resolution_Den_Video4',
		sum(YTBCA.[FirstChangeFromInit_Video4]*YTBCA.[Count FirstChangeFromInit_Video4]) as 'YTB_FirstChangeFromInit_Num_Video4',
		sum(YTBCA.[Count FirstChangeFromInit_Video4]) as 'YTB_FirstChangeFromInit_Den_Video4',
		sum(YTBCA.[initialResolution_Video4]*YTBCA.[Count initialResolution_Video4]) as 'YTB_initialResolution_Num_Video4',
		sum(YTBCA.[Count initialResolution_Video4]) as 'YTB_initialResolution_Den_Video4',
		sum(YTBCA.[finalResolution_Video4]*YTBCA.[Count finalResolution_Video4]) as 'YTB_finalResolution_Num_Video4',
		sum(YTBCA.[Count finalResolution_Video4]) as 'YTB_finalResolution_Den_Video4',
		sum(YTBCA.[144p-VideoDuration_Video4]*YTBCA.[Count 144p-VideoDuration_Video4]) as 'YTB_video_resolution_144p_Num_Video4',
		sum(YTBCA.[Count 144p-VideoDuration_Video4]) as 'YTB_video_resolution_144p_Den_Video4',
		sum(YTBCA.[144p-VideoMOS_Video4]*YTBCA.[Count 144p-VideoMOS_Video4]) as 'YTB_video_mos_144p_Num_Video4',
		sum(YTBCA.[Count 144p-VideoMOS_Video4]) as 'YTB_video_mos_144p_Den_Video4',
		sum(YTBCA.[% 144p_Video4]*YTBCA.[Count % 144p_Video4]) as 'YTB_video_resolution_%144p_Num_Video4',
		sum(YTBCA.[Count % 144p_Video4]) as 'YTB_video_resolution_%144p_Den_Video4',
		sum(YTBCA.[240p-VideoDuration_Video4]*YTBCA.[Count 240p-VideoDuration_Video4]) as 'YTB_video_resolution_240p_Num_Video4',
		sum(YTBCA.[Count 240p-VideoDuration_Video4]) as 'YTB_video_resolution_240p_Den_Video4',
		sum(YTBCA.[240p-VideoMOS_Video4]*YTBCA.[Count 240p-VideoMOS_Video4]) as 'YTB_video_mos_240p_Num_Video4',
		sum(YTBCA.[Count 240p-VideoMOS_Video4]) as 'YTB_video_mos_240p_Den_Video4',
		sum(YTBCA.[% 240p_Video4]*YTBCA.[Count % 240p_Video4]) as 'YTB_video_resolution_%240p_Num_Video4',
		sum(YTBCA.[Count % 240p_Video4]) as 'YTB_video_resolution_%240p_Den_Video4',
		sum(YTBCA.[360p-VideoDuration_Video4]*YTBCA.[Count 360p-VideoDuration_Video4]) as 'YTB_video_resolution_360p_Num_Video4',
		sum(YTBCA.[Count 360p-VideoDuration_Video4]) as 'YTB_video_resolution_360p_Den_Video4',
		sum(YTBCA.[360p-VideoMOS_Video4]*YTBCA.[Count 360p-VideoMOS_Video4]) as 'YTB_video_mos_360p_Num_Video4',
		sum(YTBCA.[Count 360p-VideoMOS_Video4]) as 'YTB_video_mos_360p_Den_Video4',
		sum(YTBCA.[% 360p_Video4]*YTBCA.[Count % 360p_Video4]) as 'YTB_video_resolution_%360p_Num_Video4',
		sum(YTBCA.[Count % 360p_Video4]) as 'YTB_video_resolution_%360p_Den_Video4',
		sum(YTBCA.[480p-VideoDuration_Video4]*YTBCA.[Count 480p-VideoDuration_Video4]) as 'YTB_video_resolution_480p_Num_Video4',
		sum(YTBCA.[Count 480p-VideoDuration_Video4]) as 'YTB_video_resolution_480p_Den_Video4',
		sum(YTBCA.[480p-VideoMOS_Video4]*YTBCA.[Count 480p-VideoMOS_Video4]) as 'YTB_video_mos_480p_Num_Video4',
		sum(YTBCA.[Count 480p-VideoMOS_Video4]) as 'YTB_video_mos_480p_Den_Video4',
		sum(YTBCA.[% 480p_Video4]*YTBCA.[Count % 480p_Video4]) as 'YTB_video_resolution_%480p_Num_Video4',
		sum(YTBCA.[Count % 480p_Video4]) as 'YTB_video_resolution_%480p_Den_Video4',
		sum(t.[720p-VideoDuration_Video4]*t.[Count 720p-VideoDuration_Video4]) as 'YTB_video_resolution_720p_Num_Video4',
		sum(t.[Count 720p-VideoDuration_Video4]) as 'YTB_video_resolution_720p_Den_Video4',
		sum(t.[720p-VideoMOS_Video4]*t.[Count 720p-VideoMOS_Video4]) as 'YTB_video_mos_720p_Num_Video4',
		sum(t.[Count 720p-VideoMOS_Video4]) as 'YTB_video_mos_720p_Den_Video4',
		sum(t.[% 720p_Video4]*t.[Count % 720p_Video4]) as 'YTB_video_resolution_%720p_Num_Video4',
		sum(t.[Count % 720p_Video4]) as 'YTB_video_resolution_%720p_Den_Video4',
		sum(YTBCA.[1080p-VideoDuration_Video4]*YTBCA.[Count 1080p-VideoDuration_Video4]) as 'YTB_video_resolution_1080p_Num_Video4',
		sum(YTBCA.[Count 1080p-VideoDuration_Video4]) as 'YTB_video_resolution_1080p_Den_Video4',
		sum(YTBCA.[1080p-VideoMOS_Video4]*YTBCA.[Count 1080p-VideoMOS_Video4]) as 'YTB_video_mos_1080p_Num_Video4',
		sum(YTBCA.[Count 1080p-VideoMOS_Video4]) as 'YTB_video_mos_1080p_Den_Video4',
		sum(YTBCA.[% 1080p_Video4]*YTBCA.[Count % 1080p_Video4]) as 'YTB_video_resolution_%1080p_Num_Video4',
		sum(YTBCA.[Count % 1080p_Video4]) as 'YTB_video_resolution_%1080p_Den_Video4',

		-- Parametros de configuracion:
		t.ASideDevice as ASideDevice, t.BSideDevice as BSideDevice, t.SWVersion as SWVersion, max(t.Youtube_Version) as YTB_Version 
	
	from [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_Youtube_HD] t
		left outer join [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_Youtube_HD_CA_ONLY] YTBCA on (isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(YTBCA.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=YTBCA.mnc and t.Date_Reporting=YTBCA.Date_Reporting and t.entidad=YTBCA.entidad and t.Aggr_Type=YTBCA.Aggr_Type and t.Report_Type=YTBCA.Report_Type and t.meas_round=YTBCA.meas_round)
		, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	   -- and entidad = 'Adeje' and mnc = 01 and meas_date = '16_07'
	group by 
		p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end, 
		t.mnc, t.meas_round, t.Date_Reporting, t.Week_Reporting, t.entidad, t.Report_Type, t.Aggr_Type,
		/*t.Youtube_Version,*/ t.ASideDevice, t.BSideDevice, t.SWVersion--, t.url--, t.Region_VF, t.Region_OSP

	-------------------
	union all
	select  -- Road 4G_CA_Only HD
		p.codigo_ine, 'Roads' vf_environment, t.mnc, t.meas_round, t.Date_Reporting as meas_date, t.Week_Reporting as meas_week, 
		'Road 4G_CA_Only' as meas_Tech, 'Youtube HD' as Test_type, 'Downlink' as Direction, t.entidad as vf_entity, t.Report_Type, t.Aggr_Type,

		sum(YTBCA.[Time To First Image]*(YTBCA.Reproducciones-YTBCA.Fails)) as Avg_Video_StarTime_Num,
		sum((YTBCA.Reproducciones-YTBCA.Fails)) as avg_Video_startTime_Den,
		sum(YTBCA.ReproduccionesSinInt) as Reproductions_WO_Interruptions,
		sum(YTBCA.Reproducciones) as Reproductions_WO_Interruptions_Den,
		--sum(YTBCA.[Successful video download]) as Success_Video_P3_num,
		--sum(YTBCA.Reproducciones) as Success_Video_P3_den,
		sum(YTBCA.[B4]) as B4,
		sum(YTBCA.[ReproduccionesHD]) as [ReproduccionesHD],
		sum(YTBCA.[Successful video download]) as [Successful video download],
		sum(YTBCA.[Reproducciones]) as [Reproducciones],
		sum(cast(replace(YTBCA.[avg Video Resolution],'p','') as float)*YTBCA.[Count_Video_Resolucion]) as YTB_video_resolution_num,
		sum(YTBCA.Count_Video_Resolucion) as YTB_video_resolution_den,
		sum(YTBCA.[Video MOS]*YTBCA.[Count_Video_MOS]) as YTB_video_mos_num,
		sum(YTBCA.[Count_Video_MOS]) as YTB_video_mos_den,
		--t.Region_VF as Region_Road_VF, t.Region_OSP as Region_Road_OSP,
		--t.Region_VF as Region_VF, t.Region_OSP as Region_OSP,
		max(t.url) as YTB_URL,
		sum(YTBCA.[1st Resolution]*YTBCA.[Count 1st Resolution]) as 'YTB_1st_Resolution_Num',
		sum(YTBCA.[Count 1st Resolution]) as 'YTB_1st_Resolution_Den',
		sum(YTBCA.[2nd Resolution]*YTBCA.[Count 2nd Resolution]) as 'YTB_2nd_Resolution_Num',
		sum(YTBCA.[Count 2nd Resolution]) as 'YTB_2nd_Resolution_Den',
		sum(YTBCA.[FirstChangeFromInit]*YTBCA.[Count FirstChangeFromInit]) as 'YTB_FirstChangeFromInit_Num',
		sum(YTBCA.[Count FirstChangeFromInit]) as 'YTB_FirstChangeFromInit_Den',
		sum(YTBCA.[initialResolution]*YTBCA.[Count initialResolution]) as 'YTB_initialResolution_Num',
		sum(YTBCA.[Count initialResolution]) as 'YTB_initialResolution_Den',
		sum(YTBCA.[finalResolution]*YTBCA.[Count finalResolution]) as 'YTB_finalResolution_Num',
		sum(YTBCA.[Count finalResolution]) as 'YTB_finalResolution_Den',
		sum(YTBCA.[144p-VideoDuration]*YTBCA.[Count 144p-VideoDuration]) as 'YTB_video_resolution_144p_Num',
		sum(YTBCA.[Count 144p-VideoDuration]) as 'YTB_video_resolution_144p_Den',
		sum(YTBCA.[144p-VideoMOS]*YTBCA.[Count 144p-VideoMOS]) as 'YTB_video_mos_144p_Num',
		sum(YTBCA.[Count 144p-VideoMOS]) as 'YTB_video_mos_144p_Den',
		sum(YTBCA.[% 144p]*YTBCA.[Count % 144p]) as 'YTB_video_resolution_%144p_Num',
		sum(YTBCA.[Count % 144p]) as 'YTB_video_resolution_%144p_Den',
		sum(YTBCA.[240p-VideoDuration]*YTBCA.[Count 240p-VideoDuration]) as 'YTB_video_resolution_240p_Num',
		sum(YTBCA.[Count 240p-VideoDuration]) as 'YTB_video_resolution_240p_Den',
		sum(YTBCA.[240p-VideoMOS]*YTBCA.[Count 240p-VideoMOS]) as 'YTB_video_mos_240p_Num',
		sum(YTBCA.[Count 240p-VideoMOS]) as 'YTB_video_mos_240p_Den',
		sum(YTBCA.[% 240p]*YTBCA.[Count % 240p]) as 'YTB_video_resolution_%240p_Num',
		sum(YTBCA.[Count % 240p]) as 'YTB_video_resolution_%240p_Den',
		sum(YTBCA.[360p-VideoDuration]*YTBCA.[Count 360p-VideoDuration]) as 'YTB_video_resolution_360p_Num',
		sum(YTBCA.[Count 360p-VideoDuration]) as 'YTB_video_resolution_360p_Den',
		sum(YTBCA.[360p-VideoMOS]*YTBCA.[Count 360p-VideoMOS]) as 'YTB_video_mos_360p_Num',
		sum(YTBCA.[Count 360p-VideoMOS]) as 'YTB_video_mos_360p_Den',
		sum(YTBCA.[% 360p]*YTBCA.[Count % 360p]) as 'YTB_video_resolution_%360p_Num',
		sum(YTBCA.[Count % 360p]) as 'YTB_video_resolution_%360p_Den',
		sum(YTBCA.[480p-VideoDuration]*YTBCA.[Count 480p-VideoDuration]) as 'YTB_video_resolution_480p_Num',
		sum(YTBCA.[Count 480p-VideoDuration]) as 'YTB_video_resolution_480p_Den',
		sum(YTBCA.[480p-VideoMOS]*YTBCA.[Count 480p-VideoMOS]) as 'YTB_video_mos_480p_Num',
		sum(YTBCA.[Count 480p-VideoMOS]) as 'YTB_video_mos_480p_Den',
		sum(YTBCA.[% 480p]*YTBCA.[Count % 480p]) as 'YTB_video_resolution_%480p_Num',
		sum(YTBCA.[Count % 480p]) as 'YTB_video_resolution_%480p_Den',
		sum(t.[720p-VideoDuration]*t.[Count 720p-VideoDuration]) as 'YTB_video_resolution_720p_Num',
		sum(t.[Count 720p-VideoDuration]) as 'YTB_video_resolution_720p_Den',
		sum(t.[720p-VideoMOS]*t.[Count 720p-VideoMOS]) as 'YTB_video_mos_720p_Num',
		sum(t.[Count 720p-VideoMOS]) as 'YTB_video_mos_720p_Den',
		sum(t.[% 720p]*t.[Count % 720p]) as 'YTB_video_resolution_%720p_Num',
		sum(t.[Count % 720p]) as 'YTB_video_resolution_%720p_Den',
		sum(YTBCA.[1080p-VideoDuration]*YTBCA.[Count 1080p-VideoDuration]) as 'YTB_video_resolution_1080p_Num',
		sum(YTBCA.[Count 1080p-VideoDuration]) as 'YTB_video_resolution_1080p_Den',
		sum(YTBCA.[1080p-VideoMOS]*YTBCA.[Count 1080p-VideoMOS]) as 'YTB_video_mos_1080p_Num',
		sum(YTBCA.[Count 1080p-VideoMOS]) as 'YTB_video_mos_1080p_Den',
		sum(YTBCA.[% 1080p]*YTBCA.[Count % 1080p]) as 'YTB_video_resolution_%1080p_Num',
		sum(YTBCA.[Count % 1080p]) as 'YTB_video_resolution_%1080p_Den',

		--YOUTUBE HD: Video 1
		sum(YTBCA.[Time To First Image_Video1]*(YTBCA.Reproducciones_Video1-YTBCA.Fails_Video1)) as Avg_Video_StarTime_Num_Video1,
		sum((YTBCA.Reproducciones_Video1-YTBCA.Fails_Video1)) as avg_Video_startTime_Den_Video1,
		sum(YTBCA.ReproduccionesSinInt_Video1) as Reproductions_WO_Interruptions_Video1,
		sum(YTBCA.Reproducciones_Video1) as Reproductions_WO_Interruptions_Den_Video1,
		sum(YTBCA.[B4_Video1]) as B4_Video1,
		sum(YTBCA.[ReproduccionesHD_Video1]) as [ReproduccionesHD_Video1],
		sum(YTBCA.[Successful video download_Video1]) as [Successful video download_Video1],
		sum(YTBCA.[Reproducciones_Video1]) as [Reproducciones_Video1],
		sum(YTBCA.[Fails_Video1]) as [Fails_Video1],
		--sum(cast(left(YTBCA.[avg Video Resolution_Video1],3) as int)*YTBCA.[Count_Video_Resolucion_Video1]) as YTB_video_resolution_num_Video1,
		sum(cast(replace(YTBCA.[avg Video Resolution_Video1],'p','') as float)*YTBCA.[Count_Video_Resolucion_Video1]) as YTB_video_resolution_num_Video1,
		sum(YTBCA.Count_Video_Resolucion_Video1) as YTB_video_resolution_den_Video1,
		sum(YTBCA.[Video MOS_Video1]*YTBCA.[Count_Video_MOS_Video1]) as YTB_video_mos_num_Video1,
		sum(YTBCA.[Count_Video_MOS_Video1]) as YTB_video_mos_den_Video1,
		max(t.url_Video1) as YTB_URL_Video1,
		sum(YTBCA.[1st Resolution_Video1]*YTBCA.[Count 1st Resolution_Video1]) as 'YTB_1st_Resolution_Num_Video1',
		sum(YTBCA.[Count 1st Resolution_Video1]) as 'YTB_1st_Resolution_Den_Video1',
		sum(YTBCA.[2nd Resolution_Video1]*YTBCA.[Count 2nd Resolution_Video1]) as 'YTB_2nd_Resolution_Num_Video1',
		sum(YTBCA.[Count 2nd Resolution_Video1]) as 'YTB_2nd_Resolution_Den_Video1',
		sum(YTBCA.[FirstChangeFromInit_Video1]*YTBCA.[Count FirstChangeFromInit_Video1]) as 'YTB_FirstChangeFromInit_Num_Video1',
		sum(YTBCA.[Count FirstChangeFromInit_Video1]) as 'YTB_FirstChangeFromInit_Den_Video1',
		sum(YTBCA.[initialResolution_Video1]*YTBCA.[Count initialResolution_Video1]) as 'YTB_initialResolution_Num_Video1',
		sum(YTBCA.[Count initialResolution_Video1]) as 'YTB_initialResolution_Den_Video1',
		sum(YTBCA.[finalResolution_Video1]*YTBCA.[Count finalResolution_Video1]) as 'YTB_finalResolution_Num_Video1',
		sum(YTBCA.[Count finalResolution_Video1]) as 'YTB_finalResolution_Den_Video1',
		sum(YTBCA.[144p-VideoDuration_Video1]*YTBCA.[Count 144p-VideoDuration_Video1]) as 'YTB_video_resolution_144p_Num_Video1',
		sum(YTBCA.[Count 144p-VideoDuration_Video1]) as 'YTB_video_resolution_144p_Den_Video1',
		sum(YTBCA.[144p-VideoMOS_Video1]*YTBCA.[Count 144p-VideoMOS_Video1]) as 'YTB_video_mos_144p_Num_Video1',
		sum(YTBCA.[Count 144p-VideoMOS_Video1]) as 'YTB_video_mos_144p_Den_Video1',
		sum(YTBCA.[% 144p_Video1]*YTBCA.[Count % 144p_Video1]) as 'YTB_video_resolution_%144p_Num_Video1',
		sum(YTBCA.[Count % 144p_Video1]) as 'YTB_video_resolution_%144p_Den_Video1',
		sum(YTBCA.[240p-VideoDuration_Video1]*YTBCA.[Count 240p-VideoDuration_Video1]) as 'YTB_video_resolution_240p_Num_Video1',
		sum(YTBCA.[Count 240p-VideoDuration_Video1]) as 'YTB_video_resolution_240p_Den_Video1',
		sum(YTBCA.[240p-VideoMOS_Video1]*YTBCA.[Count 240p-VideoMOS_Video1]) as 'YTB_video_mos_240p_Num_Video1',
		sum(YTBCA.[Count 240p-VideoMOS_Video1]) as 'YTB_video_mos_240p_Den_Video1',
		sum(YTBCA.[% 240p_Video1]*YTBCA.[Count % 240p_Video1]) as 'YTB_video_resolution_%240p_Num_Video1',
		sum(YTBCA.[Count % 240p_Video1]) as 'YTB_video_resolution_%240p_Den_Video1',
		sum(YTBCA.[360p-VideoDuration_Video1]*YTBCA.[Count 360p-VideoDuration_Video1]) as 'YTB_video_resolution_360p_Num_Video1',
		sum(YTBCA.[Count 360p-VideoDuration_Video1]) as 'YTB_video_resolution_360p_Den_Video1',
		sum(YTBCA.[360p-VideoMOS_Video1]*YTBCA.[Count 360p-VideoMOS_Video1]) as 'YTB_video_mos_360p_Num_Video1',
		sum(YTBCA.[Count 360p-VideoMOS_Video1]) as 'YTB_video_mos_360p_Den_Video1',
		sum(YTBCA.[% 360p_Video1]*YTBCA.[Count % 360p_Video1]) as 'YTB_video_resolution_%360p_Num_Video1',
		sum(YTBCA.[Count % 360p_Video1]) as 'YTB_video_resolution_%360p_Den_Video1',
		sum(YTBCA.[480p-VideoDuration_Video1]*YTBCA.[Count 480p-VideoDuration_Video1]) as 'YTB_video_resolution_480p_Num_Video1',
		sum(YTBCA.[Count 480p-VideoDuration_Video1]) as 'YTB_video_resolution_480p_Den_Video1',
		sum(YTBCA.[480p-VideoMOS_Video1]*YTBCA.[Count 480p-VideoMOS_Video1]) as 'YTB_video_mos_480p_Num_Video1',
		sum(YTBCA.[Count 480p-VideoMOS_Video1]) as 'YTB_video_mos_480p_Den_Video1',
		sum(YTBCA.[% 480p_Video1]*YTBCA.[Count % 480p_Video1]) as 'YTB_video_resolution_%480p_Num_Video1',
		sum(YTBCA.[Count % 480p_Video1]) as 'YTB_video_resolution_%480p_Den_Video1',
		sum(t.[720p-VideoDuration_Video1]*t.[Count 720p-VideoDuration_Video1]) as 'YTB_video_resolution_720p_Num_Video1',
		sum(t.[Count 720p-VideoDuration_Video1]) as 'YTB_video_resolution_720p_Den_Video1',
		sum(t.[720p-VideoMOS_Video1]*t.[Count 720p-VideoMOS_Video1]) as 'YTB_video_mos_720p_Num_Video1',
		sum(t.[Count 720p-VideoMOS_Video1]) as 'YTB_video_mos_720p_Den_Video1',
		sum(t.[% 720p_Video1]*t.[Count % 720p_Video1]) as 'YTB_video_resolution_%720p_Num_Video1',
		sum(t.[Count % 720p_Video1]) as 'YTB_video_resolution_%720p_Den_Video1',
		sum(YTBCA.[1080p-VideoDuration_Video1]*YTBCA.[Count 1080p-VideoDuration_Video1]) as 'YTB_video_resolution_1080p_Num_Video1',
		sum(YTBCA.[Count 1080p-VideoDuration_Video1]) as 'YTB_video_resolution_1080p_Den_Video1',
		sum(YTBCA.[1080p-VideoMOS_Video1]*YTBCA.[Count 1080p-VideoMOS_Video1]) as 'YTB_video_mos_1080p_Num_Video1',
		sum(YTBCA.[Count 1080p-VideoMOS_Video1]) as 'YTB_video_mos_1080p_Den_Video1',
		sum(YTBCA.[% 1080p_Video1]*YTBCA.[Count % 1080p_Video1]) as 'YTB_video_resolution_%1080p_Num_Video1',
		sum(YTBCA.[Count % 1080p_Video1]) as 'YTB_video_resolution_%1080p_Den_Video1',

		--YOUTUBE HD: Video 2
		sum(YTBCA.[Time To First Image_Video2]*(YTBCA.Reproducciones_Video2-YTBCA.Fails_Video2)) as Avg_Video_StarTime_Num_Video2,
		sum((YTBCA.Reproducciones_Video2-YTBCA.Fails_Video2)) as avg_Video_startTime_Den_Video2,
		sum(YTBCA.ReproduccionesSinInt_Video2) as Reproductions_WO_Interruptions_Video2,
		sum(YTBCA.Reproducciones_Video2) as Reproductions_WO_Interruptions_Den_Video2,
		sum(YTBCA.[B4_Video2]) as B4_Video2,
		sum(YTBCA.[ReproduccionesHD_Video2]) as [ReproduccionesHD_Video2],
		sum(YTBCA.[Successful video download_Video2]) as [Successful video download_Video2],
		sum(YTBCA.[Reproducciones_Video2]) as [Reproducciones_Video2],
		sum(YTBCA.[Fails_Video2]) as [Fails_Video2],
		--sum(cast(left(YTBCA.[avg Video Resolution_Video2],3) as int)*YTBCA.[Count_Video_Resolucion_Video2]) as YTB_video_resolution_num_Video2,
		sum(cast(replace(YTBCA.[avg Video Resolution_Video2],'p','') as float)*YTBCA.[Count_Video_Resolucion_Video2]) as YTB_video_resolution_num_Video2,
		sum(YTBCA.Count_Video_Resolucion_Video2) as YTB_video_resolution_den_Video2,
		sum(YTBCA.[Video MOS_Video2]*YTBCA.[Count_Video_MOS_Video2]) as YTB_video_mos_num_Video2,
		sum(YTBCA.[Count_Video_MOS_Video2]) as YTB_video_mos_den_Video2,
		max(t.url_Video2) as YTB_URL_Video2,
		sum(YTBCA.[1st Resolution_Video2]*YTBCA.[Count 1st Resolution_Video2]) as 'YTB_1st_Resolution_Num_Video2',
		sum(YTBCA.[Count 1st Resolution_Video2]) as 'YTB_1st_Resolution_Den_Video2',
		sum(YTBCA.[2nd Resolution_Video2]*YTBCA.[Count 2nd Resolution_Video2]) as 'YTB_2nd_Resolution_Num_Video2',
		sum(YTBCA.[Count 2nd Resolution_Video2]) as 'YTB_2nd_Resolution_Den_Video2',
		sum(YTBCA.[FirstChangeFromInit_Video2]*YTBCA.[Count FirstChangeFromInit_Video2]) as 'YTB_FirstChangeFromInit_Num_Video2',
		sum(YTBCA.[Count FirstChangeFromInit_Video2]) as 'YTB_FirstChangeFromInit_Den_Video2',
		sum(YTBCA.[initialResolution_Video2]*YTBCA.[Count initialResolution_Video2]) as 'YTB_initialResolution_Num_Video2',
		sum(YTBCA.[Count initialResolution_Video2]) as 'YTB_initialResolution_Den_Video2',
		sum(YTBCA.[finalResolution_Video2]*YTBCA.[Count finalResolution_Video2]) as 'YTB_finalResolution_Num_Video2',
		sum(YTBCA.[Count finalResolution_Video2]) as 'YTB_finalResolution_Den_Video2',
		sum(YTBCA.[144p-VideoDuration_Video2]*YTBCA.[Count 144p-VideoDuration_Video2]) as 'YTB_video_resolution_144p_Num_Video2',
		sum(YTBCA.[Count 144p-VideoDuration_Video2]) as 'YTB_video_resolution_144p_Den_Video2',
		sum(YTBCA.[144p-VideoMOS_Video2]*YTBCA.[Count 144p-VideoMOS_Video2]) as 'YTB_video_mos_144p_Num_Video2',
		sum(YTBCA.[Count 144p-VideoMOS_Video2]) as 'YTB_video_mos_144p_Den_Video2',
		sum(YTBCA.[% 144p_Video2]*YTBCA.[Count % 144p_Video2]) as 'YTB_video_resolution_%144p_Num_Video2',
		sum(YTBCA.[Count % 144p_Video2]) as 'YTB_video_resolution_%144p_Den_Video2',
		sum(YTBCA.[240p-VideoDuration_Video2]*YTBCA.[Count 240p-VideoDuration_Video2]) as 'YTB_video_resolution_240p_Num_Video2',
		sum(YTBCA.[Count 240p-VideoDuration_Video2]) as 'YTB_video_resolution_240p_Den_Video2',
		sum(YTBCA.[240p-VideoMOS_Video2]*YTBCA.[Count 240p-VideoMOS_Video2]) as 'YTB_video_mos_240p_Num_Video2',
		sum(YTBCA.[Count 240p-VideoMOS_Video2]) as 'YTB_video_mos_240p_Den_Video2',
		sum(YTBCA.[% 240p_Video2]*YTBCA.[Count % 240p_Video2]) as 'YTB_video_resolution_%240p_Num_Video2',
		sum(YTBCA.[Count % 240p_Video2]) as 'YTB_video_resolution_%240p_Den_Video2',
		sum(YTBCA.[360p-VideoDuration_Video2]*YTBCA.[Count 360p-VideoDuration_Video2]) as 'YTB_video_resolution_360p_Num_Video2',
		sum(YTBCA.[Count 360p-VideoDuration_Video2]) as 'YTB_video_resolution_360p_Den_Video2',
		sum(YTBCA.[360p-VideoMOS_Video2]*YTBCA.[Count 360p-VideoMOS_Video2]) as 'YTB_video_mos_360p_Num_Video2',
		sum(YTBCA.[Count 360p-VideoMOS_Video2]) as 'YTB_video_mos_360p_Den_Video2',
		sum(YTBCA.[% 360p_Video2]*YTBCA.[Count % 360p_Video2]) as 'YTB_video_resolution_%360p_Num_Video2',
		sum(YTBCA.[Count % 360p_Video2]) as 'YTB_video_resolution_%360p_Den_Video2',
		sum(YTBCA.[480p-VideoDuration_Video2]*YTBCA.[Count 480p-VideoDuration_Video2]) as 'YTB_video_resolution_480p_Num_Video2',
		sum(YTBCA.[Count 480p-VideoDuration_Video2]) as 'YTB_video_resolution_480p_Den_Video2',
		sum(YTBCA.[480p-VideoMOS_Video2]*YTBCA.[Count 480p-VideoMOS_Video2]) as 'YTB_video_mos_480p_Num_Video2',
		sum(YTBCA.[Count 480p-VideoMOS_Video2]) as 'YTB_video_mos_480p_Den_Video2',
		sum(YTBCA.[% 480p_Video2]*YTBCA.[Count % 480p_Video2]) as 'YTB_video_resolution_%480p_Num_Video2',
		sum(YTBCA.[Count % 480p_Video2]) as 'YTB_video_resolution_%480p_Den_Video2',
		sum(t.[720p-VideoDuration_Video2]*t.[Count 720p-VideoDuration_Video2]) as 'YTB_video_resolution_720p_Num_Video2',
		sum(t.[Count 720p-VideoDuration_Video2]) as 'YTB_video_resolution_720p_Den_Video2',
		sum(t.[720p-VideoMOS_Video2]*t.[Count 720p-VideoMOS_Video2]) as 'YTB_video_mos_720p_Num_Video2',
		sum(t.[Count 720p-VideoMOS_Video2]) as 'YTB_video_mos_720p_Den_Video2',
		sum(t.[% 720p_Video2]*t.[Count % 720p_Video2]) as 'YTB_video_resolution_%720p_Num_Video2',
		sum(t.[Count % 720p_Video2]) as 'YTB_video_resolution_%720p_Den_Video2',
		sum(YTBCA.[1080p-VideoDuration_Video2]*YTBCA.[Count 1080p-VideoDuration_Video2]) as 'YTB_video_resolution_1080p_Num_Video2',
		sum(YTBCA.[Count 1080p-VideoDuration_Video2]) as 'YTB_video_resolution_1080p_Den_Video2',
		sum(YTBCA.[1080p-VideoMOS_Video2]*YTBCA.[Count 1080p-VideoMOS_Video2]) as 'YTB_video_mos_1080p_Num_Video2',
		sum(YTBCA.[Count 1080p-VideoMOS_Video2]) as 'YTB_video_mos_1080p_Den_Video2',
		sum(YTBCA.[% 1080p_Video2]*YTBCA.[Count % 1080p_Video2]) as 'YTB_video_resolution_%1080p_Num_Video2',
		sum(YTBCA.[Count % 1080p_Video2]) as 'YTB_video_resolution_%1080p_Den_Video2',

		--YOUTUBE HD: Video 3
		sum(YTBCA.[Time To First Image_Video3]*(YTBCA.Reproducciones_Video3-YTBCA.Fails_Video3)) as Avg_Video_StarTime_Num_Video3,
		sum((YTBCA.Reproducciones_Video3-YTBCA.Fails_Video3)) as avg_Video_startTime_Den_Video3,
		sum(YTBCA.ReproduccionesSinInt_Video3) as Reproductions_WO_Interruptions_Video3,
		sum(YTBCA.Reproducciones_Video3) as Reproductions_WO_Interruptions_Den_Video3,
		sum(YTBCA.[B4_Video3]) as B4_Video3,
		sum(YTBCA.[ReproduccionesHD_Video3]) as [ReproduccionesHD_Video3],
		sum(YTBCA.[Successful video download_Video3]) as [Successful video download_Video3],
		sum(YTBCA.[Reproducciones_Video3]) as [Reproducciones_Video3],
		sum(YTBCA.[Fails_Video3]) as [Fails_Video3],
		--sum(cast(left(YTBCA.[avg Video Resolution_Video3],3) as int)*YTBCA.[Count_Video_Resolucion_Video3]) as YTB_video_resolution_num_Video3,
		sum(cast(replace(YTBCA.[avg Video Resolution_Video3],'p','') as float)*YTBCA.[Count_Video_Resolucion_Video3]) as YTB_video_resolution_num_Video3,
		sum(YTBCA.Count_Video_Resolucion_Video3) as YTB_video_resolution_den_Video3,
		sum(YTBCA.[Video MOS_Video3]*YTBCA.[Count_Video_MOS_Video3]) as YTB_video_mos_num_Video3,
		sum(YTBCA.[Count_Video_MOS_Video3]) as YTB_video_mos_den_Video3,
		max(t.url_Video3) as YTB_URL_Video3,
		sum(YTBCA.[1st Resolution_Video3]*YTBCA.[Count 1st Resolution_Video3]) as 'YTB_1st_Resolution_Num_Video3',
		sum(YTBCA.[Count 1st Resolution_Video3]) as 'YTB_1st_Resolution_Den_Video3',
		sum(YTBCA.[2nd Resolution_Video3]*YTBCA.[Count 2nd Resolution_Video3]) as 'YTB_2nd_Resolution_Num_Video3',
		sum(YTBCA.[Count 2nd Resolution_Video3]) as 'YTB_2nd_Resolution_Den_Video3',
		sum(YTBCA.[FirstChangeFromInit_Video3]*YTBCA.[Count FirstChangeFromInit_Video3]) as 'YTB_FirstChangeFromInit_Num_Video3',
		sum(YTBCA.[Count FirstChangeFromInit_Video3]) as 'YTB_FirstChangeFromInit_Den_Video3',
		sum(YTBCA.[initialResolution_Video3]*YTBCA.[Count initialResolution_Video3]) as 'YTB_initialResolution_Num_Video3',
		sum(YTBCA.[Count initialResolution_Video3]) as 'YTB_initialResolution_Den_Video3',
		sum(YTBCA.[finalResolution_Video3]*YTBCA.[Count finalResolution_Video3]) as 'YTB_finalResolution_Num_Video3',
		sum(YTBCA.[Count finalResolution_Video3]) as 'YTB_finalResolution_Den_Video3',
		sum(YTBCA.[144p-VideoDuration_Video3]*YTBCA.[Count 144p-VideoDuration_Video3]) as 'YTB_video_resolution_144p_Num_Video3',
		sum(YTBCA.[Count 144p-VideoDuration_Video3]) as 'YTB_video_resolution_144p_Den_Video3',
		sum(YTBCA.[144p-VideoMOS_Video3]*YTBCA.[Count 144p-VideoMOS_Video3]) as 'YTB_video_mos_144p_Num_Video3',
		sum(YTBCA.[Count 144p-VideoMOS_Video3]) as 'YTB_video_mos_144p_Den_Video3',
		sum(YTBCA.[% 144p_Video3]*YTBCA.[Count % 144p_Video3]) as 'YTB_video_resolution_%144p_Num_Video3',
		sum(YTBCA.[Count % 144p_Video3]) as 'YTB_video_resolution_%144p_Den_Video3',
		sum(YTBCA.[240p-VideoDuration_Video3]*YTBCA.[Count 240p-VideoDuration_Video3]) as 'YTB_video_resolution_240p_Num_Video3',
		sum(YTBCA.[Count 240p-VideoDuration_Video3]) as 'YTB_video_resolution_240p_Den_Video3',
		sum(YTBCA.[240p-VideoMOS_Video3]*YTBCA.[Count 240p-VideoMOS_Video3]) as 'YTB_video_mos_240p_Num_Video3',
		sum(YTBCA.[Count 240p-VideoMOS_Video3]) as 'YTB_video_mos_240p_Den_Video3',
		sum(YTBCA.[% 240p_Video3]*YTBCA.[Count % 240p_Video3]) as 'YTB_video_resolution_%240p_Num_Video3',
		sum(YTBCA.[Count % 240p_Video3]) as 'YTB_video_resolution_%240p_Den_Video3',
		sum(YTBCA.[360p-VideoDuration_Video3]*YTBCA.[Count 360p-VideoDuration_Video3]) as 'YTB_video_resolution_360p_Num_Video3',
		sum(YTBCA.[Count 360p-VideoDuration_Video3]) as 'YTB_video_resolution_360p_Den_Video3',
		sum(YTBCA.[360p-VideoMOS_Video3]*YTBCA.[Count 360p-VideoMOS_Video3]) as 'YTB_video_mos_360p_Num_Video3',
		sum(YTBCA.[Count 360p-VideoMOS_Video3]) as 'YTB_video_mos_360p_Den_Video3',
		sum(YTBCA.[% 360p_Video3]*YTBCA.[Count % 360p_Video3]) as 'YTB_video_resolution_%360p_Num_Video3',
		sum(YTBCA.[Count % 360p_Video3]) as 'YTB_video_resolution_%360p_Den_Video3',
		sum(YTBCA.[480p-VideoDuration_Video3]*YTBCA.[Count 480p-VideoDuration_Video3]) as 'YTB_video_resolution_480p_Num_Video3',
		sum(YTBCA.[Count 480p-VideoDuration_Video3]) as 'YTB_video_resolution_480p_Den_Video3',
		sum(YTBCA.[480p-VideoMOS_Video3]*YTBCA.[Count 480p-VideoMOS_Video3]) as 'YTB_video_mos_480p_Num_Video3',
		sum(YTBCA.[Count 480p-VideoMOS_Video3]) as 'YTB_video_mos_480p_Den_Video3',
		sum(YTBCA.[% 480p_Video3]*YTBCA.[Count % 480p_Video3]) as 'YTB_video_resolution_%480p_Num_Video3',
		sum(YTBCA.[Count % 480p_Video3]) as 'YTB_video_resolution_%480p_Den_Video3',
		sum(t.[720p-VideoDuration_Video3]*t.[Count 720p-VideoDuration_Video3]) as 'YTB_video_resolution_720p_Num_Video3',
		sum(t.[Count 720p-VideoDuration_Video3]) as 'YTB_video_resolution_720p_Den_Video3',
		sum(t.[720p-VideoMOS_Video3]*t.[Count 720p-VideoMOS_Video3]) as 'YTB_video_mos_720p_Num_Video3',
		sum(t.[Count 720p-VideoMOS_Video3]) as 'YTB_video_mos_720p_Den_Video3',
		sum(t.[% 720p_Video3]*t.[Count % 720p_Video3]) as 'YTB_video_resolution_%720p_Num_Video3',
		sum(t.[Count % 720p_Video3]) as 'YTB_video_resolution_%720p_Den_Video3',
		sum(YTBCA.[1080p-VideoDuration_Video3]*YTBCA.[Count 1080p-VideoDuration_Video3]) as 'YTB_video_resolution_1080p_Num_Video3',
		sum(YTBCA.[Count 1080p-VideoDuration_Video3]) as 'YTB_video_resolution_1080p_Den_Video3',
		sum(YTBCA.[1080p-VideoMOS_Video3]*YTBCA.[Count 1080p-VideoMOS_Video3]) as 'YTB_video_mos_1080p_Num_Video3',
		sum(YTBCA.[Count 1080p-VideoMOS_Video3]) as 'YTB_video_mos_1080p_Den_Video3',
		sum(YTBCA.[% 1080p_Video3]*YTBCA.[Count % 1080p_Video3]) as 'YTB_video_resolution_%1080p_Num_Video3',
		sum(YTBCA.[Count % 1080p_Video3]) as 'YTB_video_resolution_%1080p_Den_Video3',

		--YOUTUBE HD: Video 4
		sum(YTBCA.[Time To First Image_Video4]*(YTBCA.Reproducciones_Video4-YTBCA.Fails_Video4)) as Avg_Video_StarTime_Num_Video4,
		sum((YTBCA.Reproducciones_Video4-YTBCA.Fails_Video4)) as avg_Video_startTime_Den_Video4,
		sum(YTBCA.ReproduccionesSinInt_Video4) as Reproductions_WO_Interruptions_Video4,
		sum(YTBCA.Reproducciones_Video4) as Reproductions_WO_Interruptions_Den_Video4,
		sum(YTBCA.[B4_Video4]) as B4_Video4,
		sum(YTBCA.[ReproduccionesHD_Video4]) as [ReproduccionesHD_Video4],
		sum(YTBCA.[Successful video download_Video4]) as [Successful video download_Video4],
		sum(YTBCA.[Reproducciones_Video4]) as [Reproducciones_Video4],
		sum(YTBCA.[Fails_Video4]) as [Fails_Video4],
		--sum(cast(left(YTBCA.[avg Video Resolution_Video4],3) as int)*YTBCA.[Count_Video_Resolucion_Video4]) as YTB_video_resolution_num_Video4,
		sum(cast(replace(YTBCA.[avg Video Resolution_Video4],'p','') as float)*YTBCA.[Count_Video_Resolucion_Video4]) as YTB_video_resolution_num_Video4,
		sum(YTBCA.Count_Video_Resolucion_Video4) as YTB_video_resolution_den_Video4,
		sum(YTBCA.[Video MOS_Video4]*YTBCA.[Count_Video_MOS_Video4]) as YTB_video_mos_num_Video4,
		sum(YTBCA.[Count_Video_MOS_Video4]) as YTB_video_mos_den_Video4,
		max(t.url_Video4) as YTB_URL_Video4,
		sum(YTBCA.[1st Resolution_Video4]*YTBCA.[Count 1st Resolution_Video4]) as 'YTB_1st_Resolution_Num_Video4',
		sum(YTBCA.[Count 1st Resolution_Video4]) as 'YTB_1st_Resolution_Den_Video4',
		sum(YTBCA.[2nd Resolution_Video4]*YTBCA.[Count 2nd Resolution_Video4]) as 'YTB_2nd_Resolution_Num_Video4',
		sum(YTBCA.[Count 2nd Resolution_Video4]) as 'YTB_2nd_Resolution_Den_Video4',
		sum(YTBCA.[FirstChangeFromInit_Video4]*YTBCA.[Count FirstChangeFromInit_Video4]) as 'YTB_FirstChangeFromInit_Num_Video4',
		sum(YTBCA.[Count FirstChangeFromInit_Video4]) as 'YTB_FirstChangeFromInit_Den_Video4',
		sum(YTBCA.[initialResolution_Video4]*YTBCA.[Count initialResolution_Video4]) as 'YTB_initialResolution_Num_Video4',
		sum(YTBCA.[Count initialResolution_Video4]) as 'YTB_initialResolution_Den_Video4',
		sum(YTBCA.[finalResolution_Video4]*YTBCA.[Count finalResolution_Video4]) as 'YTB_finalResolution_Num_Video4',
		sum(YTBCA.[Count finalResolution_Video4]) as 'YTB_finalResolution_Den_Video4',
		sum(YTBCA.[144p-VideoDuration_Video4]*YTBCA.[Count 144p-VideoDuration_Video4]) as 'YTB_video_resolution_144p_Num_Video4',
		sum(YTBCA.[Count 144p-VideoDuration_Video4]) as 'YTB_video_resolution_144p_Den_Video4',
		sum(YTBCA.[144p-VideoMOS_Video4]*YTBCA.[Count 144p-VideoMOS_Video4]) as 'YTB_video_mos_144p_Num_Video4',
		sum(YTBCA.[Count 144p-VideoMOS_Video4]) as 'YTB_video_mos_144p_Den_Video4',
		sum(YTBCA.[% 144p_Video4]*YTBCA.[Count % 144p_Video4]) as 'YTB_video_resolution_%144p_Num_Video4',
		sum(YTBCA.[Count % 144p_Video4]) as 'YTB_video_resolution_%144p_Den_Video4',
		sum(YTBCA.[240p-VideoDuration_Video4]*YTBCA.[Count 240p-VideoDuration_Video4]) as 'YTB_video_resolution_240p_Num_Video4',
		sum(YTBCA.[Count 240p-VideoDuration_Video4]) as 'YTB_video_resolution_240p_Den_Video4',
		sum(YTBCA.[240p-VideoMOS_Video4]*YTBCA.[Count 240p-VideoMOS_Video4]) as 'YTB_video_mos_240p_Num_Video4',
		sum(YTBCA.[Count 240p-VideoMOS_Video4]) as 'YTB_video_mos_240p_Den_Video4',
		sum(YTBCA.[% 240p_Video4]*YTBCA.[Count % 240p_Video4]) as 'YTB_video_resolution_%240p_Num_Video4',
		sum(YTBCA.[Count % 240p_Video4]) as 'YTB_video_resolution_%240p_Den_Video4',
		sum(YTBCA.[360p-VideoDuration_Video4]*YTBCA.[Count 360p-VideoDuration_Video4]) as 'YTB_video_resolution_360p_Num_Video4',
		sum(YTBCA.[Count 360p-VideoDuration_Video4]) as 'YTB_video_resolution_360p_Den_Video4',
		sum(YTBCA.[360p-VideoMOS_Video4]*YTBCA.[Count 360p-VideoMOS_Video4]) as 'YTB_video_mos_360p_Num_Video4',
		sum(YTBCA.[Count 360p-VideoMOS_Video4]) as 'YTB_video_mos_360p_Den_Video4',
		sum(YTBCA.[% 360p_Video4]*YTBCA.[Count % 360p_Video4]) as 'YTB_video_resolution_%360p_Num_Video4',
		sum(YTBCA.[Count % 360p_Video4]) as 'YTB_video_resolution_%360p_Den_Video4',
		sum(YTBCA.[480p-VideoDuration_Video4]*YTBCA.[Count 480p-VideoDuration_Video4]) as 'YTB_video_resolution_480p_Num_Video4',
		sum(YTBCA.[Count 480p-VideoDuration_Video4]) as 'YTB_video_resolution_480p_Den_Video4',
		sum(YTBCA.[480p-VideoMOS_Video4]*YTBCA.[Count 480p-VideoMOS_Video4]) as 'YTB_video_mos_480p_Num_Video4',
		sum(YTBCA.[Count 480p-VideoMOS_Video4]) as 'YTB_video_mos_480p_Den_Video4',
		sum(YTBCA.[% 480p_Video4]*YTBCA.[Count % 480p_Video4]) as 'YTB_video_resolution_%480p_Num_Video4',
		sum(YTBCA.[Count % 480p_Video4]) as 'YTB_video_resolution_%480p_Den_Video4',
		sum(t.[720p-VideoDuration_Video4]*t.[Count 720p-VideoDuration_Video4]) as 'YTB_video_resolution_720p_Num_Video4',
		sum(t.[Count 720p-VideoDuration_Video4]) as 'YTB_video_resolution_720p_Den_Video4',
		sum(t.[720p-VideoMOS_Video4]*t.[Count 720p-VideoMOS_Video4]) as 'YTB_video_mos_720p_Num_Video4',
		sum(t.[Count 720p-VideoMOS_Video4]) as 'YTB_video_mos_720p_Den_Video4',
		sum(t.[% 720p_Video4]*t.[Count % 720p_Video4]) as 'YTB_video_resolution_%720p_Num_Video4',
		sum(t.[Count % 720p_Video4]) as 'YTB_video_resolution_%720p_Den_Video4',
		sum(YTBCA.[1080p-VideoDuration_Video4]*YTBCA.[Count 1080p-VideoDuration_Video4]) as 'YTB_video_resolution_1080p_Num_Video4',
		sum(YTBCA.[Count 1080p-VideoDuration_Video4]) as 'YTB_video_resolution_1080p_Den_Video4',
		sum(YTBCA.[1080p-VideoMOS_Video4]*YTBCA.[Count 1080p-VideoMOS_Video4]) as 'YTB_video_mos_1080p_Num_Video4',
		sum(YTBCA.[Count 1080p-VideoMOS_Video4]) as 'YTB_video_mos_1080p_Den_Video4',
		sum(YTBCA.[% 1080p_Video4]*YTBCA.[Count % 1080p_Video4]) as 'YTB_video_resolution_%1080p_Num_Video4',
		sum(YTBCA.[Count % 1080p_Video4]) as 'YTB_video_resolution_%1080p_Den_Video4',

		-- Parametros de configuracion:
		t.ASideDevice as ASideDevice, t.BSideDevice as BSideDevice, t.SWVersion as SWVersion, max(t.Youtube_Version) as YTB_Version 

	from [aggrData4G_ROAD].dbo.[lcc_aggr_sp_MDD_Data_Youtube_HD] t
		left outer join [aggrData4G_ROAD].dbo.[lcc_aggr_sp_MDD_Data_Youtube_HD_CA_ONLY] YTBCA on (isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(YTBCA.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=YTBCA.mnc and t.Date_Reporting=YTBCA.Date_Reporting and t.entidad=YTBCA.entidad and t.Aggr_Type=YTBCA.Aggr_Type and t.Report_Type=YTBCA.Report_Type and t.meas_round=YTBCA.meas_round)
		, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
	group by 
		p.codigo_ine, t.mnc, t.meas_round, t.Date_Reporting, t.Week_Reporting, t.entidad, t.Report_Type, t.Aggr_Type, /*t.Youtube_Version,*/
		t.ASideDevice, t.BSideDevice, t.SWVersion--, t.url --, t.Region_VF, t.Region_OSP

	-------------
	insert into [dbo].[_RI_Data_Ejecucion]
	select 'Fin 4. Insert Video Streaming HD: 3G, 4G, 4GOnly y 4G_CA_Only', getdate()


	-------------------------------------
	-- UPDATES varios:
	--		UPDATE_TM:		Actualizamos la info relativa al TM del DL de las entidades INDOOR y AVEs:
	--						Nos quedamos con la info de la PCC, ya que no se rellenan bien la info relativa al valor general

	--		UPDATE_rangos:	Se anulan los rangos nuevos de thput en entidades agregadas antiguas (que no tengan info en estos campos)
	--						Ojo! Qe hay diferentes rangos por tipo de test:
	--							[AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_DL_Thput_CE_LTE_4G]	-	[ 0-2Mbps_N] 
	--							[AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_DL_Thput_NC_LTE_4G]	-	[ 0-3.5Mbps_N] 
	--							[AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_UL_Thput_CE_LTE_4G]	-	[ 0-0.5Mbps_N]
	--							[AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_UL_Thput_NC_LTE_4G]	-	[ 0-0.8Mbps_N] 

	--		UPDATE_parcelas_sin_info: No se pueden dejar con codigoINE=99999 porque eso es de Indoor
	-------------------------------------
	print '5.1 UPDATE_TM para POCs' 	
	-------------
	-- 4G:		
	update _RI_Data_e
	set
		[4G_TM1_use_Num]=pfl.[4G_TM1_use_Num],	[4G_TM2_use_Num]=pfl.[4G_TM2_use_Num],
		[4G_TM3_use_Num]=pfl.[4G_TM3_use_Num],	[4G_TM4_use_Num]=pfl.[4G_TM4_use_Num],
		[4G_TM5_use_Num]=pfl.[4G_TM5_use_Num],	[4G_TM6_use_Num]=pfl.[4G_TM6_use_Num],
		[4G_TM7_use_Num]=pfl.[4G_TM7_use_Num],
		[4G_TMInvalid_use_Num]= pfl.[4G_TMInvalid_use_Num],	[4G_TMUnknown_use_Num]= pfl.[4G_TMUnknown_use_Num],
		[4G_TM_Den]= pfl.[4G_TM_Den]

	from _RI_Data_e e, 
			(
			select 
				p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment,t.mnc,t.meas_round,t.Date_Reporting as meas_date,t.Week_Reporting as meas_week, 
				'4G' as meas_Tech, 'CE_DL' as Test_type, 'Downlink' as Direction, t.entidad as vf_entity,t.Report_Type,t.Aggr_Type,

				sum(isnull(pfl.[%_TM1_PCC],0)*(pfl.[Count_TM1_PCC]+pfl.[Count_TM2_PCC]+pfl.[Count_TM3_PCC]+pfl.[Count_TM4_PCC]+pfl.[Count_TM5_PCC]+pfl.[Count_TM6_PCC]+pfl.[Count_TM7_PCC]+pfl.[Count_TM_Invalid_PCC]+pfl.[Count_TM_Unknown_PCC])) as [4G_TM1_use_Num],
				sum(isnull(pfl.[%_TM2_PCC],0)*(pfl.[Count_TM1_PCC]+pfl.[Count_TM2_PCC]+pfl.[Count_TM3_PCC]+pfl.[Count_TM4_PCC]+pfl.[Count_TM5_PCC]+pfl.[Count_TM6_PCC]+pfl.[Count_TM7_PCC]+pfl.[Count_TM_Invalid_PCC]+pfl.[Count_TM_Unknown_PCC])) as [4G_TM2_use_Num],
				sum(isnull(pfl.[%_TM3_PCC],0)*(pfl.[Count_TM1_PCC]+pfl.[Count_TM2_PCC]+pfl.[Count_TM3_PCC]+pfl.[Count_TM4_PCC]+pfl.[Count_TM5_PCC]+pfl.[Count_TM6_PCC]+pfl.[Count_TM7_PCC]+pfl.[Count_TM_Invalid_PCC]+pfl.[Count_TM_Unknown_PCC])) as [4G_TM3_use_Num],
				sum(isnull(pfl.[%_TM4_PCC],0)*(pfl.[Count_TM1_PCC]+pfl.[Count_TM2_PCC]+pfl.[Count_TM3_PCC]+pfl.[Count_TM4_PCC]+pfl.[Count_TM5_PCC]+pfl.[Count_TM6_PCC]+pfl.[Count_TM7_PCC]+pfl.[Count_TM_Invalid_PCC]+pfl.[Count_TM_Unknown_PCC])) as [4G_TM4_use_Num],
				sum(isnull(pfl.[%_TM5_PCC],0)*(pfl.[Count_TM1_PCC]+pfl.[Count_TM2_PCC]+pfl.[Count_TM3_PCC]+pfl.[Count_TM4_PCC]+pfl.[Count_TM5_PCC]+pfl.[Count_TM6_PCC]+pfl.[Count_TM7_PCC]+pfl.[Count_TM_Invalid_PCC]+pfl.[Count_TM_Unknown_PCC])) as [4G_TM5_use_Num],
				sum(isnull(pfl.[%_TM6_PCC],0)*(pfl.[Count_TM1_PCC]+pfl.[Count_TM2_PCC]+pfl.[Count_TM3_PCC]+pfl.[Count_TM4_PCC]+pfl.[Count_TM5_PCC]+pfl.[Count_TM6_PCC]+pfl.[Count_TM7_PCC]+pfl.[Count_TM_Invalid_PCC]+pfl.[Count_TM_Unknown_PCC])) as [4G_TM6_use_Num],
				sum(isnull(pfl.[%_TM7_PCC],0)*(pfl.[Count_TM1_PCC]+pfl.[Count_TM2_PCC]+pfl.[Count_TM3_PCC]+pfl.[Count_TM4_PCC]+pfl.[Count_TM5_PCC]+pfl.[Count_TM6_PCC]+pfl.[Count_TM7_PCC]+pfl.[Count_TM_Invalid_PCC]+pfl.[Count_TM_Unknown_PCC])) as [4G_TM7_use_Num],
	
				sum(isnull(pfl.[%_TM_Invalid_PCC],0)*(pfl.[Count_TM1_PCC]+pfl.[Count_TM2_PCC]+pfl.[Count_TM3_PCC]+pfl.[Count_TM4_PCC]+pfl.[Count_TM5_PCC]+pfl.[Count_TM6_PCC]+pfl.[Count_TM7_PCC]+pfl.[Count_TM_Invalid_PCC]+pfl.[Count_TM_Unknown_PCC])) as [4G_TMInvalid_use_Num],
				sum(isnull(pfl.[%_TM_Unknown_PCC],0)*(pfl.[Count_TM1_PCC]+pfl.[Count_TM2_PCC]+pfl.[Count_TM3_PCC]+pfl.[Count_TM4_PCC]+pfl.[Count_TM5_PCC]+pfl.[Count_TM6_PCC]+pfl.[Count_TM7_PCC]+pfl.[Count_TM_Invalid_PCC]+pfl.[Count_TM_Unknown_PCC])) as [4G_TMUnknown_use_Num],
				sum(pfl.[Count_TM1_PCC]+pfl.[Count_TM2_PCC]+pfl.[Count_TM3_PCC]+pfl.[Count_TM4_PCC]+pfl.[Count_TM5_PCC]+pfl.[Count_TM6_PCC]+pfl.[Count_TM7_PCC]+pfl.[Count_TM_Invalid_PCC]+pfl.[Count_TM_Unknown_PCC]) as [4G_TM_Den],
  
				-- Parametros de configuracion:
				pfl.ASideDevice as ASideDevice, pfl.BSideDevice as BSideDevice, pfl.SWVersion as SWVersion

			from [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_DL_Thput_CE] t
					left outer join  [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_DL_Performance_CE_LTE] pfl
						on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(pfl.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=pfl.mnc and t.Date_Reporting=pfl.Date_Reporting and t.entidad=pfl.entidad and t.Aggr_Type=pfl.Aggr_Type and t.Report_Type=pfl.Report_Type and t.meas_round=pfl.meas_round
					, agrids.dbo.vlcc_parcelas_osp p
			where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
					and (pfl.[Database] like '%indoor%' or pfl.[Database] like '%ave%')			
			group by 
				p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end,t.mnc,t.meas_round,t.Date_Reporting,t.Week_Reporting,t.entidad,t.Report_Type,t.Aggr_Type,
				pfl.ASideDevice, pfl.BSideDevice, pfl.SWVersion

			---------
			union all

			select 
				p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment,t.mnc,t.meas_round,t.Date_Reporting as meas_date,t.Week_Reporting as meas_week, 
				'4G' as meas_Tech, 'NC_DL' as Test_type, 'Downlink' as Direction, t.entidad as vf_entity,t.Report_Type,t.Aggr_Type,

				sum(isnull(pfl.[%_TM1_PCC],0)*(pfl.[Count_TM1_PCC]+pfl.[Count_TM2_PCC]+pfl.[Count_TM3_PCC]+pfl.[Count_TM4_PCC]+pfl.[Count_TM5_PCC]+pfl.[Count_TM6_PCC]+pfl.[Count_TM7_PCC]+pfl.[Count_TM_Invalid_PCC]+pfl.[Count_TM_Unknown_PCC])) as [4G_TM1_use_Num],
				sum(isnull(pfl.[%_TM2_PCC],0)*(pfl.[Count_TM1_PCC]+pfl.[Count_TM2_PCC]+pfl.[Count_TM3_PCC]+pfl.[Count_TM4_PCC]+pfl.[Count_TM5_PCC]+pfl.[Count_TM6_PCC]+pfl.[Count_TM7_PCC]+pfl.[Count_TM_Invalid_PCC]+pfl.[Count_TM_Unknown_PCC])) as [4G_TM2_use_Num],
				sum(isnull(pfl.[%_TM3_PCC],0)*(pfl.[Count_TM1_PCC]+pfl.[Count_TM2_PCC]+pfl.[Count_TM3_PCC]+pfl.[Count_TM4_PCC]+pfl.[Count_TM5_PCC]+pfl.[Count_TM6_PCC]+pfl.[Count_TM7_PCC]+pfl.[Count_TM_Invalid_PCC]+pfl.[Count_TM_Unknown_PCC])) as [4G_TM3_use_Num],
				sum(isnull(pfl.[%_TM4_PCC],0)*(pfl.[Count_TM1_PCC]+pfl.[Count_TM2_PCC]+pfl.[Count_TM3_PCC]+pfl.[Count_TM4_PCC]+pfl.[Count_TM5_PCC]+pfl.[Count_TM6_PCC]+pfl.[Count_TM7_PCC]+pfl.[Count_TM_Invalid_PCC]+pfl.[Count_TM_Unknown_PCC])) as [4G_TM4_use_Num],
				sum(isnull(pfl.[%_TM5_PCC],0)*(pfl.[Count_TM1_PCC]+pfl.[Count_TM2_PCC]+pfl.[Count_TM3_PCC]+pfl.[Count_TM4_PCC]+pfl.[Count_TM5_PCC]+pfl.[Count_TM6_PCC]+pfl.[Count_TM7_PCC]+pfl.[Count_TM_Invalid_PCC]+pfl.[Count_TM_Unknown_PCC])) as [4G_TM5_use_Num],
				sum(isnull(pfl.[%_TM6_PCC],0)*(pfl.[Count_TM1_PCC]+pfl.[Count_TM2_PCC]+pfl.[Count_TM3_PCC]+pfl.[Count_TM4_PCC]+pfl.[Count_TM5_PCC]+pfl.[Count_TM6_PCC]+pfl.[Count_TM7_PCC]+pfl.[Count_TM_Invalid_PCC]+pfl.[Count_TM_Unknown_PCC])) as [4G_TM6_use_Num],
				sum(isnull(pfl.[%_TM7_PCC],0)*(pfl.[Count_TM1_PCC]+pfl.[Count_TM2_PCC]+pfl.[Count_TM3_PCC]+pfl.[Count_TM4_PCC]+pfl.[Count_TM5_PCC]+pfl.[Count_TM6_PCC]+pfl.[Count_TM7_PCC]+pfl.[Count_TM_Invalid_PCC]+pfl.[Count_TM_Unknown_PCC])) as [4G_TM7_use_Num],
	
				sum(isnull(pfl.[%_TM_Invalid_PCC],0)*(pfl.[Count_TM1_PCC]+pfl.[Count_TM2_PCC]+pfl.[Count_TM3_PCC]+pfl.[Count_TM4_PCC]+pfl.[Count_TM5_PCC]+pfl.[Count_TM6_PCC]+pfl.[Count_TM7_PCC]+pfl.[Count_TM_Invalid_PCC]+pfl.[Count_TM_Unknown_PCC])) as [4G_TMInvalid_use_Num],
				sum(isnull(pfl.[%_TM_Unknown_PCC],0)*(pfl.[Count_TM1_PCC]+pfl.[Count_TM2_PCC]+pfl.[Count_TM3_PCC]+pfl.[Count_TM4_PCC]+pfl.[Count_TM5_PCC]+pfl.[Count_TM6_PCC]+pfl.[Count_TM7_PCC]+pfl.[Count_TM_Invalid_PCC]+pfl.[Count_TM_Unknown_PCC])) as [4G_TMUnknown_use_Num],
				sum(pfl.[Count_TM1_PCC]+pfl.[Count_TM2_PCC]+pfl.[Count_TM3_PCC]+pfl.[Count_TM4_PCC]+pfl.[Count_TM5_PCC]+pfl.[Count_TM6_PCC]+pfl.[Count_TM7_PCC]+pfl.[Count_TM_Invalid_PCC]+pfl.[Count_TM_Unknown_PCC]) as [4G_TM_Den],

				-- Parametros de configuracion:
				pfl.ASideDevice as ASideDevice, pfl.BSideDevice as BSideDevice, pfl.SWVersion as SWVersion
  
			from [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_DL_Thput_NC] t
					left outer join  [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_DL_Performance_NC_LTE] pfl
						on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(pfl.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=pfl.mnc and t.Date_Reporting=pfl.Date_Reporting and t.entidad=pfl.entidad and t.Aggr_Type=pfl.Aggr_Type and t.Report_Type=pfl.Report_Type and t.meas_round=pfl.meas_round
					, agrids.dbo.vlcc_parcelas_osp p
			where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
					and (pfl.[Database] like '%indoor%' or pfl.[Database] like '%ave%')			
			group by 
				p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end,t.mnc,t.meas_round,t.Date_Reporting,t.Week_Reporting,t.entidad,t.Report_Type,t.Aggr_Type,
				pfl.ASideDevice, pfl.BSideDevice, pfl.SWVersion

			) pfl
	where 
		pfl.codigo_ine=e.codigo_ine and pfl.vf_environment=e.vf_environment and
		pfl.mnc=e.mnc and pfl.meas_round=e.meas_round and pfl.meas_date=e.meas_date	and pfl.meas_week=e.meas_week and
		pfl.meas_Tech=e.meas_Tech and pfl.Test_type=e.Test_type and pfl.Direction=e.Direction and pfl.vf_entity=e.vf_entity and
		pfl.Report_Type=e.Report_Type and pfl.Aggr_Type=e.Aggr_Type and 
		isnull(pfl.ASideDevice,0)=isnull(e.ASideDevice,0) and isnull(pfl.BSideDevice,0)=isnull(e.BSideDevice,0) and isnull(pfl.SWVersion,0)=isnull(e.SWVersion,0)
	
	-------------
	-- 4GOnly:
	update _RI_Data_e
	set
		[4G_TM1_use_Num]=pfl.[4G_TM1_use_Num],	[4G_TM2_use_Num]=pfl.[4G_TM2_use_Num],
		[4G_TM3_use_Num]=pfl.[4G_TM3_use_Num],	[4G_TM4_use_Num]=pfl.[4G_TM4_use_Num],
		[4G_TM5_use_Num]=pfl.[4G_TM5_use_Num],	[4G_TM6_use_Num]=pfl.[4G_TM6_use_Num],
		[4G_TM7_use_Num]=pfl.[4G_TM7_use_Num],
		[4G_TMInvalid_use_Num]= pfl.[4G_TMInvalid_use_Num],	[4G_TMUnknown_use_Num]= pfl.[4G_TMUnknown_use_Num],
		[4G_TM_Den]= pfl.[4G_TM_Den]

	from _RI_Data_e e, 
			(
			select 
				p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment,t.mnc,t.meas_round,t.Date_Reporting as meas_date,t.Week_Reporting as meas_week, 
				'4GOnly' as meas_Tech, 'CE_DL' as Test_type, 'Downlink' as Direction, t.entidad as vf_entity,t.Report_Type,t.Aggr_Type,

				sum(isnull(pfl.[%_TM1_PCC],0)*(pfl.[Count_TM1_PCC]+pfl.[Count_TM2_PCC]+pfl.[Count_TM3_PCC]+pfl.[Count_TM4_PCC]+pfl.[Count_TM5_PCC]+pfl.[Count_TM6_PCC]+pfl.[Count_TM7_PCC]+pfl.[Count_TM_Invalid_PCC]+pfl.[Count_TM_Unknown_PCC])) as [4G_TM1_use_Num],
				sum(isnull(pfl.[%_TM2_PCC],0)*(pfl.[Count_TM1_PCC]+pfl.[Count_TM2_PCC]+pfl.[Count_TM3_PCC]+pfl.[Count_TM4_PCC]+pfl.[Count_TM5_PCC]+pfl.[Count_TM6_PCC]+pfl.[Count_TM7_PCC]+pfl.[Count_TM_Invalid_PCC]+pfl.[Count_TM_Unknown_PCC])) as [4G_TM2_use_Num],
				sum(isnull(pfl.[%_TM3_PCC],0)*(pfl.[Count_TM1_PCC]+pfl.[Count_TM2_PCC]+pfl.[Count_TM3_PCC]+pfl.[Count_TM4_PCC]+pfl.[Count_TM5_PCC]+pfl.[Count_TM6_PCC]+pfl.[Count_TM7_PCC]+pfl.[Count_TM_Invalid_PCC]+pfl.[Count_TM_Unknown_PCC])) as [4G_TM3_use_Num],
				sum(isnull(pfl.[%_TM4_PCC],0)*(pfl.[Count_TM1_PCC]+pfl.[Count_TM2_PCC]+pfl.[Count_TM3_PCC]+pfl.[Count_TM4_PCC]+pfl.[Count_TM5_PCC]+pfl.[Count_TM6_PCC]+pfl.[Count_TM7_PCC]+pfl.[Count_TM_Invalid_PCC]+pfl.[Count_TM_Unknown_PCC])) as [4G_TM4_use_Num],
				sum(isnull(pfl.[%_TM5_PCC],0)*(pfl.[Count_TM1_PCC]+pfl.[Count_TM2_PCC]+pfl.[Count_TM3_PCC]+pfl.[Count_TM4_PCC]+pfl.[Count_TM5_PCC]+pfl.[Count_TM6_PCC]+pfl.[Count_TM7_PCC]+pfl.[Count_TM_Invalid_PCC]+pfl.[Count_TM_Unknown_PCC])) as [4G_TM5_use_Num],
				sum(isnull(pfl.[%_TM6_PCC],0)*(pfl.[Count_TM1_PCC]+pfl.[Count_TM2_PCC]+pfl.[Count_TM3_PCC]+pfl.[Count_TM4_PCC]+pfl.[Count_TM5_PCC]+pfl.[Count_TM6_PCC]+pfl.[Count_TM7_PCC]+pfl.[Count_TM_Invalid_PCC]+pfl.[Count_TM_Unknown_PCC])) as [4G_TM6_use_Num],
				sum(isnull(pfl.[%_TM7_PCC],0)*(pfl.[Count_TM1_PCC]+pfl.[Count_TM2_PCC]+pfl.[Count_TM3_PCC]+pfl.[Count_TM4_PCC]+pfl.[Count_TM5_PCC]+pfl.[Count_TM6_PCC]+pfl.[Count_TM7_PCC]+pfl.[Count_TM_Invalid_PCC]+pfl.[Count_TM_Unknown_PCC])) as [4G_TM7_use_Num],
	
				sum(isnull(pfl.[%_TM_Invalid_PCC],0)*(pfl.[Count_TM1_PCC]+pfl.[Count_TM2_PCC]+pfl.[Count_TM3_PCC]+pfl.[Count_TM4_PCC]+pfl.[Count_TM5_PCC]+pfl.[Count_TM6_PCC]+pfl.[Count_TM7_PCC]+pfl.[Count_TM_Invalid_PCC]+pfl.[Count_TM_Unknown_PCC])) as [4G_TMInvalid_use_Num],
				sum(isnull(pfl.[%_TM_Unknown_PCC],0)*(pfl.[Count_TM1_PCC]+pfl.[Count_TM2_PCC]+pfl.[Count_TM3_PCC]+pfl.[Count_TM4_PCC]+pfl.[Count_TM5_PCC]+pfl.[Count_TM6_PCC]+pfl.[Count_TM7_PCC]+pfl.[Count_TM_Invalid_PCC]+pfl.[Count_TM_Unknown_PCC])) as [4G_TMUnknown_use_Num],
				sum(pfl.[Count_TM1_PCC]+pfl.[Count_TM2_PCC]+pfl.[Count_TM3_PCC]+pfl.[Count_TM4_PCC]+pfl.[Count_TM5_PCC]+pfl.[Count_TM6_PCC]+pfl.[Count_TM7_PCC]+pfl.[Count_TM_Invalid_PCC]+pfl.[Count_TM_Unknown_PCC]) as [4G_TM_Den],
  
				-- Parametros de configuracion:
				pfl.ASideDevice as ASideDevice, pfl.BSideDevice as BSideDevice, pfl.SWVersion as SWVersion
  
			from [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_DL_Thput_CE] t
					left outer join  [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_DL_Performance_CE_LTE_4G] pfl
						on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(pfl.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=pfl.mnc and t.Date_Reporting=pfl.Date_Reporting and t.entidad=pfl.entidad and t.Aggr_Type=pfl.Aggr_Type and t.Report_Type=pfl.Report_Type and t.meas_round=pfl.meas_round
					, agrids.dbo.vlcc_parcelas_osp p
			where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
					and (pfl.[Database] like '%indoor%' or pfl.[Database] like '%ave%')			
			group by 
				p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end,t.mnc,t.meas_round,t.Date_Reporting,t.Week_Reporting,t.entidad,t.Report_Type,t.Aggr_Type,
				pfl.ASideDevice, pfl.BSideDevice, pfl.SWVersion

			union all

			select 
				p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment,t.mnc,t.meas_round,t.Date_Reporting as meas_date,t.Week_Reporting as meas_week, 
				'4GOnly' as meas_Tech, 'NC_DL' as Test_type, 'Downlink' as Direction, t.entidad as vf_entity,t.Report_Type,t.Aggr_Type,

				sum(isnull(pfl.[%_TM1_PCC],0)*(pfl.[Count_TM1_PCC]+pfl.[Count_TM2_PCC]+pfl.[Count_TM3_PCC]+pfl.[Count_TM4_PCC]+pfl.[Count_TM5_PCC]+pfl.[Count_TM6_PCC]+pfl.[Count_TM7_PCC]+pfl.[Count_TM_Invalid_PCC]+pfl.[Count_TM_Unknown_PCC])) as [4G_TM1_use_Num],
				sum(isnull(pfl.[%_TM2_PCC],0)*(pfl.[Count_TM1_PCC]+pfl.[Count_TM2_PCC]+pfl.[Count_TM3_PCC]+pfl.[Count_TM4_PCC]+pfl.[Count_TM5_PCC]+pfl.[Count_TM6_PCC]+pfl.[Count_TM7_PCC]+pfl.[Count_TM_Invalid_PCC]+pfl.[Count_TM_Unknown_PCC])) as [4G_TM2_use_Num],
				sum(isnull(pfl.[%_TM3_PCC],0)*(pfl.[Count_TM1_PCC]+pfl.[Count_TM2_PCC]+pfl.[Count_TM3_PCC]+pfl.[Count_TM4_PCC]+pfl.[Count_TM5_PCC]+pfl.[Count_TM6_PCC]+pfl.[Count_TM7_PCC]+pfl.[Count_TM_Invalid_PCC]+pfl.[Count_TM_Unknown_PCC])) as [4G_TM3_use_Num],
				sum(isnull(pfl.[%_TM4_PCC],0)*(pfl.[Count_TM1_PCC]+pfl.[Count_TM2_PCC]+pfl.[Count_TM3_PCC]+pfl.[Count_TM4_PCC]+pfl.[Count_TM5_PCC]+pfl.[Count_TM6_PCC]+pfl.[Count_TM7_PCC]+pfl.[Count_TM_Invalid_PCC]+pfl.[Count_TM_Unknown_PCC])) as [4G_TM4_use_Num],
				sum(isnull(pfl.[%_TM5_PCC],0)*(pfl.[Count_TM1_PCC]+pfl.[Count_TM2_PCC]+pfl.[Count_TM3_PCC]+pfl.[Count_TM4_PCC]+pfl.[Count_TM5_PCC]+pfl.[Count_TM6_PCC]+pfl.[Count_TM7_PCC]+pfl.[Count_TM_Invalid_PCC]+pfl.[Count_TM_Unknown_PCC])) as [4G_TM5_use_Num],
				sum(isnull(pfl.[%_TM6_PCC],0)*(pfl.[Count_TM1_PCC]+pfl.[Count_TM2_PCC]+pfl.[Count_TM3_PCC]+pfl.[Count_TM4_PCC]+pfl.[Count_TM5_PCC]+pfl.[Count_TM6_PCC]+pfl.[Count_TM7_PCC]+pfl.[Count_TM_Invalid_PCC]+pfl.[Count_TM_Unknown_PCC])) as [4G_TM6_use_Num],
				sum(isnull(pfl.[%_TM7_PCC],0)*(pfl.[Count_TM1_PCC]+pfl.[Count_TM2_PCC]+pfl.[Count_TM3_PCC]+pfl.[Count_TM4_PCC]+pfl.[Count_TM5_PCC]+pfl.[Count_TM6_PCC]+pfl.[Count_TM7_PCC]+pfl.[Count_TM_Invalid_PCC]+pfl.[Count_TM_Unknown_PCC])) as [4G_TM7_use_Num],
	
				sum(isnull(pfl.[%_TM_Invalid_PCC],0)*(pfl.[Count_TM1_PCC]+pfl.[Count_TM2_PCC]+pfl.[Count_TM3_PCC]+pfl.[Count_TM4_PCC]+pfl.[Count_TM5_PCC]+pfl.[Count_TM6_PCC]+pfl.[Count_TM7_PCC]+pfl.[Count_TM_Invalid_PCC]+pfl.[Count_TM_Unknown_PCC])) as [4G_TMInvalid_use_Num],
				sum(isnull(pfl.[%_TM_Unknown_PCC],0)*(pfl.[Count_TM1_PCC]+pfl.[Count_TM2_PCC]+pfl.[Count_TM3_PCC]+pfl.[Count_TM4_PCC]+pfl.[Count_TM5_PCC]+pfl.[Count_TM6_PCC]+pfl.[Count_TM7_PCC]+pfl.[Count_TM_Invalid_PCC]+pfl.[Count_TM_Unknown_PCC])) as [4G_TMUnknown_use_Num],
				sum(pfl.[Count_TM1_PCC]+pfl.[Count_TM2_PCC]+pfl.[Count_TM3_PCC]+pfl.[Count_TM4_PCC]+pfl.[Count_TM5_PCC]+pfl.[Count_TM6_PCC]+pfl.[Count_TM7_PCC]+pfl.[Count_TM_Invalid_PCC]+pfl.[Count_TM_Unknown_PCC]) as [4G_TM_Den],
  
				-- Parametros de configuracion:
				pfl.ASideDevice as ASideDevice, pfl.BSideDevice as BSideDevice, pfl.SWVersion as SWVersion
  
			from [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_DL_Thput_NC] t
					left outer join  [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_DL_Performance_NC_LTE_4G] pfl
						on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(pfl.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=pfl.mnc and t.Date_Reporting=pfl.Date_Reporting and t.entidad=pfl.entidad and t.Aggr_Type=pfl.Aggr_Type and t.Report_Type=pfl.Report_Type and t.meas_round=pfl.meas_round
					, agrids.dbo.vlcc_parcelas_osp p
			where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
					and (pfl.[Database] like '%indoor%' or pfl.[Database] like '%ave%')			
			group by 
				p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end,t.mnc,t.meas_round,t.Date_Reporting,t.Week_Reporting,t.entidad,t.Report_Type,t.Aggr_Type,
				pfl.ASideDevice, pfl.BSideDevice, pfl.SWVersion

			) pfl
	where 
		pfl.codigo_ine=e.codigo_ine and pfl.vf_environment=e.vf_environment and
		pfl.mnc=e.mnc and pfl.meas_round=e.meas_round and pfl.meas_date=e.meas_date	and pfl.meas_week=e.meas_week and
		pfl.meas_Tech=e.meas_Tech and pfl.Test_type=e.Test_type and pfl.Direction=e.Direction and pfl.vf_entity=e.vf_entity and
		pfl.Report_Type=e.Report_Type and pfl.Aggr_Type=e.Aggr_Type and 
		isnull(pfl.ASideDevice,0)=isnull(e.ASideDevice,0) and isnull(pfl.BSideDevice,0)=isnull(e.BSideDevice,0) and isnull(pfl.SWVersion,0)=isnull(e.SWVersion,0)
	
	-------------
	-- 4G_CA_Only:
	update _RI_Data_e
	set
		[4G_TM1_use_Num]=pfl.[4G_TM1_use_Num],	[4G_TM2_use_Num]=pfl.[4G_TM2_use_Num],
		[4G_TM3_use_Num]=pfl.[4G_TM3_use_Num],	[4G_TM4_use_Num]=pfl.[4G_TM4_use_Num],
		[4G_TM5_use_Num]=pfl.[4G_TM5_use_Num],	[4G_TM6_use_Num]=pfl.[4G_TM6_use_Num],
		[4G_TM7_use_Num]=pfl.[4G_TM7_use_Num],
		[4G_TMInvalid_use_Num]= pfl.[4G_TMInvalid_use_Num],	[4G_TMUnknown_use_Num]= pfl.[4G_TMUnknown_use_Num],
		[4G_TM_Den]= pfl.[4G_TM_Den]

	from _RI_Data_e e, 
			(
			select 
				p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment,t.mnc,t.meas_round,t.Date_Reporting as meas_date,t.Week_Reporting as meas_week, 
				'4G_CA_Only' as meas_Tech, 'CE_DL' as Test_type, 'Downlink' as Direction, t.entidad as vf_entity,t.Report_Type,t.Aggr_Type,

				sum(isnull(pfl.[%_TM1_PCC],0)*(pfl.[Count_TM1_PCC]+pfl.[Count_TM2_PCC]+pfl.[Count_TM3_PCC]+pfl.[Count_TM4_PCC]+pfl.[Count_TM5_PCC]+pfl.[Count_TM6_PCC]+pfl.[Count_TM7_PCC]+pfl.[Count_TM_Invalid_PCC]+pfl.[Count_TM_Unknown_PCC])) as [4G_TM1_use_Num],
				sum(isnull(pfl.[%_TM2_PCC],0)*(pfl.[Count_TM1_PCC]+pfl.[Count_TM2_PCC]+pfl.[Count_TM3_PCC]+pfl.[Count_TM4_PCC]+pfl.[Count_TM5_PCC]+pfl.[Count_TM6_PCC]+pfl.[Count_TM7_PCC]+pfl.[Count_TM_Invalid_PCC]+pfl.[Count_TM_Unknown_PCC])) as [4G_TM2_use_Num],
				sum(isnull(pfl.[%_TM3_PCC],0)*(pfl.[Count_TM1_PCC]+pfl.[Count_TM2_PCC]+pfl.[Count_TM3_PCC]+pfl.[Count_TM4_PCC]+pfl.[Count_TM5_PCC]+pfl.[Count_TM6_PCC]+pfl.[Count_TM7_PCC]+pfl.[Count_TM_Invalid_PCC]+pfl.[Count_TM_Unknown_PCC])) as [4G_TM3_use_Num],
				sum(isnull(pfl.[%_TM4_PCC],0)*(pfl.[Count_TM1_PCC]+pfl.[Count_TM2_PCC]+pfl.[Count_TM3_PCC]+pfl.[Count_TM4_PCC]+pfl.[Count_TM5_PCC]+pfl.[Count_TM6_PCC]+pfl.[Count_TM7_PCC]+pfl.[Count_TM_Invalid_PCC]+pfl.[Count_TM_Unknown_PCC])) as [4G_TM4_use_Num],
				sum(isnull(pfl.[%_TM5_PCC],0)*(pfl.[Count_TM1_PCC]+pfl.[Count_TM2_PCC]+pfl.[Count_TM3_PCC]+pfl.[Count_TM4_PCC]+pfl.[Count_TM5_PCC]+pfl.[Count_TM6_PCC]+pfl.[Count_TM7_PCC]+pfl.[Count_TM_Invalid_PCC]+pfl.[Count_TM_Unknown_PCC])) as [4G_TM5_use_Num],
				sum(isnull(pfl.[%_TM6_PCC],0)*(pfl.[Count_TM1_PCC]+pfl.[Count_TM2_PCC]+pfl.[Count_TM3_PCC]+pfl.[Count_TM4_PCC]+pfl.[Count_TM5_PCC]+pfl.[Count_TM6_PCC]+pfl.[Count_TM7_PCC]+pfl.[Count_TM_Invalid_PCC]+pfl.[Count_TM_Unknown_PCC])) as [4G_TM6_use_Num],
				sum(isnull(pfl.[%_TM7_PCC],0)*(pfl.[Count_TM1_PCC]+pfl.[Count_TM2_PCC]+pfl.[Count_TM3_PCC]+pfl.[Count_TM4_PCC]+pfl.[Count_TM5_PCC]+pfl.[Count_TM6_PCC]+pfl.[Count_TM7_PCC]+pfl.[Count_TM_Invalid_PCC]+pfl.[Count_TM_Unknown_PCC])) as [4G_TM7_use_Num],
	
				sum(isnull(pfl.[%_TM_Invalid_PCC],0)*(pfl.[Count_TM1_PCC]+pfl.[Count_TM2_PCC]+pfl.[Count_TM3_PCC]+pfl.[Count_TM4_PCC]+pfl.[Count_TM5_PCC]+pfl.[Count_TM6_PCC]+pfl.[Count_TM7_PCC]+pfl.[Count_TM_Invalid_PCC]+pfl.[Count_TM_Unknown_PCC])) as [4G_TMInvalid_use_Num],
				sum(isnull(pfl.[%_TM_Unknown_PCC],0)*(pfl.[Count_TM1_PCC]+pfl.[Count_TM2_PCC]+pfl.[Count_TM3_PCC]+pfl.[Count_TM4_PCC]+pfl.[Count_TM5_PCC]+pfl.[Count_TM6_PCC]+pfl.[Count_TM7_PCC]+pfl.[Count_TM_Invalid_PCC]+pfl.[Count_TM_Unknown_PCC])) as [4G_TMUnknown_use_Num],
				sum(pfl.[Count_TM1_PCC]+pfl.[Count_TM2_PCC]+pfl.[Count_TM3_PCC]+pfl.[Count_TM4_PCC]+pfl.[Count_TM5_PCC]+pfl.[Count_TM6_PCC]+pfl.[Count_TM7_PCC]+pfl.[Count_TM_Invalid_PCC]+pfl.[Count_TM_Unknown_PCC]) as [4G_TM_Den],
  
				-- Parametros de configuracion:
				pfl.ASideDevice as ASideDevice, pfl.BSideDevice as BSideDevice, pfl.SWVersion as SWVersion
  
  
			from [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_DL_Thput_CE] t
					left outer join  [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_DL_Performance_CE_LTE_CA_Only] pfl
						on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(pfl.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=pfl.mnc and t.Date_Reporting=pfl.Date_Reporting and t.entidad=pfl.entidad and t.Aggr_Type=pfl.Aggr_Type and t.Report_Type=pfl.Report_Type and t.meas_round=pfl.meas_round
					, agrids.dbo.vlcc_parcelas_osp p
			where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
					and (pfl.[Database] like '%indoor%' or pfl.[Database] like '%ave%')			
			group by 
				p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end,t.mnc,t.meas_round,t.Date_Reporting,t.Week_Reporting,t.entidad,t.Report_Type,t.Aggr_Type,
				pfl.ASideDevice, pfl.BSideDevice, pfl.SWVersion

			union all

			select 
				p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment,t.mnc,t.meas_round,t.Date_Reporting as meas_date,t.Week_Reporting as meas_week, 
				'4G_CA_Only' as meas_Tech, 'NC_DL' as Test_type, 'Downlink' as Direction, t.entidad as vf_entity,t.Report_Type,t.Aggr_Type,

				sum(isnull(pfl.[%_TM1_PCC],0)*(pfl.[Count_TM1_PCC]+pfl.[Count_TM2_PCC]+pfl.[Count_TM3_PCC]+pfl.[Count_TM4_PCC]+pfl.[Count_TM5_PCC]+pfl.[Count_TM6_PCC]+pfl.[Count_TM7_PCC]+pfl.[Count_TM_Invalid_PCC]+pfl.[Count_TM_Unknown_PCC])) as [4G_TM1_use_Num],
				sum(isnull(pfl.[%_TM2_PCC],0)*(pfl.[Count_TM1_PCC]+pfl.[Count_TM2_PCC]+pfl.[Count_TM3_PCC]+pfl.[Count_TM4_PCC]+pfl.[Count_TM5_PCC]+pfl.[Count_TM6_PCC]+pfl.[Count_TM7_PCC]+pfl.[Count_TM_Invalid_PCC]+pfl.[Count_TM_Unknown_PCC])) as [4G_TM2_use_Num],
				sum(isnull(pfl.[%_TM3_PCC],0)*(pfl.[Count_TM1_PCC]+pfl.[Count_TM2_PCC]+pfl.[Count_TM3_PCC]+pfl.[Count_TM4_PCC]+pfl.[Count_TM5_PCC]+pfl.[Count_TM6_PCC]+pfl.[Count_TM7_PCC]+pfl.[Count_TM_Invalid_PCC]+pfl.[Count_TM_Unknown_PCC])) as [4G_TM3_use_Num],
				sum(isnull(pfl.[%_TM4_PCC],0)*(pfl.[Count_TM1_PCC]+pfl.[Count_TM2_PCC]+pfl.[Count_TM3_PCC]+pfl.[Count_TM4_PCC]+pfl.[Count_TM5_PCC]+pfl.[Count_TM6_PCC]+pfl.[Count_TM7_PCC]+pfl.[Count_TM_Invalid_PCC]+pfl.[Count_TM_Unknown_PCC])) as [4G_TM4_use_Num],
				sum(isnull(pfl.[%_TM5_PCC],0)*(pfl.[Count_TM1_PCC]+pfl.[Count_TM2_PCC]+pfl.[Count_TM3_PCC]+pfl.[Count_TM4_PCC]+pfl.[Count_TM5_PCC]+pfl.[Count_TM6_PCC]+pfl.[Count_TM7_PCC]+pfl.[Count_TM_Invalid_PCC]+pfl.[Count_TM_Unknown_PCC])) as [4G_TM5_use_Num],
				sum(isnull(pfl.[%_TM6_PCC],0)*(pfl.[Count_TM1_PCC]+pfl.[Count_TM2_PCC]+pfl.[Count_TM3_PCC]+pfl.[Count_TM4_PCC]+pfl.[Count_TM5_PCC]+pfl.[Count_TM6_PCC]+pfl.[Count_TM7_PCC]+pfl.[Count_TM_Invalid_PCC]+pfl.[Count_TM_Unknown_PCC])) as [4G_TM6_use_Num],
				sum(isnull(pfl.[%_TM7_PCC],0)*(pfl.[Count_TM1_PCC]+pfl.[Count_TM2_PCC]+pfl.[Count_TM3_PCC]+pfl.[Count_TM4_PCC]+pfl.[Count_TM5_PCC]+pfl.[Count_TM6_PCC]+pfl.[Count_TM7_PCC]+pfl.[Count_TM_Invalid_PCC]+pfl.[Count_TM_Unknown_PCC])) as [4G_TM7_use_Num],
	
				sum(isnull(pfl.[%_TM_Invalid_PCC],0)*(pfl.[Count_TM1_PCC]+pfl.[Count_TM2_PCC]+pfl.[Count_TM3_PCC]+pfl.[Count_TM4_PCC]+pfl.[Count_TM5_PCC]+pfl.[Count_TM6_PCC]+pfl.[Count_TM7_PCC]+pfl.[Count_TM_Invalid_PCC]+pfl.[Count_TM_Unknown_PCC])) as [4G_TMInvalid_use_Num],
				sum(isnull(pfl.[%_TM_Unknown_PCC],0)*(pfl.[Count_TM1_PCC]+pfl.[Count_TM2_PCC]+pfl.[Count_TM3_PCC]+pfl.[Count_TM4_PCC]+pfl.[Count_TM5_PCC]+pfl.[Count_TM6_PCC]+pfl.[Count_TM7_PCC]+pfl.[Count_TM_Invalid_PCC]+pfl.[Count_TM_Unknown_PCC])) as [4G_TMUnknown_use_Num],
				sum(pfl.[Count_TM1_PCC]+pfl.[Count_TM2_PCC]+pfl.[Count_TM3_PCC]+pfl.[Count_TM4_PCC]+pfl.[Count_TM5_PCC]+pfl.[Count_TM6_PCC]+pfl.[Count_TM7_PCC]+pfl.[Count_TM_Invalid_PCC]+pfl.[Count_TM_Unknown_PCC]) as [4G_TM_Den],
  
				-- Parametros de configuracion:
				pfl.ASideDevice as ASideDevice, pfl.BSideDevice as BSideDevice, pfl.SWVersion as SWVersion
  
  
			from [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_DL_Thput_NC] t
					left outer join  [AGGRData4G].[dbo].[lcc_aggr_sp_MDD_Data_DL_Performance_NC_LTE_CA_Only] pfl
						on isnull(t.parcel,'0.00000 Long, 0.00000 Lat')=isnull(pfl.parcel,'0.00000 Long, 0.00000 Lat') and t.mnc=pfl.mnc and t.Date_Reporting=pfl.Date_Reporting and t.entidad=pfl.entidad and t.Aggr_Type=pfl.Aggr_Type and t.Report_Type=pfl.Report_Type and t.meas_round=pfl.meas_round
					, agrids.dbo.vlcc_parcelas_osp p
			where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
					and (pfl.[Database] like '%indoor%' or pfl.[Database] like '%ave%')			
			group by 
				p.codigo_ine, case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end,t.mnc,t.meas_round,t.Date_Reporting,t.Week_Reporting,t.entidad,t.Report_Type,t.Aggr_Type,
				pfl.ASideDevice, pfl.BSideDevice, pfl.SWVersion

			) pfl
	where 
		pfl.codigo_ine=e.codigo_ine and pfl.vf_environment=e.vf_environment and
		pfl.mnc=e.mnc and pfl.meas_round=e.meas_round and pfl.meas_date=e.meas_date	and pfl.meas_week=e.meas_week and
		pfl.meas_Tech=e.meas_Tech and pfl.Test_type=e.Test_type and pfl.Direction=e.Direction and pfl.vf_entity=e.vf_entity and
		pfl.Report_Type=e.Report_Type and pfl.Aggr_Type=e.Aggr_Type and 
		isnull(pfl.ASideDevice,0)=isnull(e.ASideDevice,0) and isnull(pfl.BSideDevice,0)=isnull(e.BSideDevice,0) and isnull(pfl.SWVersion,0)=isnull(e.SWVersion,0)

	-------------
	insert into [dbo].[_RI_Data_Ejecucion]
	select 'Fin 5.1 UPDATE_TM para POCs', getdate()



	-------------------------------------
	print '5.2 UPDATE_rangos para entidades antiguas' 	
	-------------
	-- a) Chequeo 4G - DL_CE:
	exec dbo.sp_lcc_dropifexists '_RI_Data_entidades_antiguas'
	select 
		case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment,
		t.mnc, t.meas_round, t.Date_Reporting as meas_date, t.Week_Reporting as meas_week, 
		'4G' as meas_Tech, 'CE_DL' as Test_type, 'Downlink' as Direction, t.entidad as vf_entity,t.Report_Type,t.Aggr_Type
	into _RI_Data_entidades_antiguas
	from [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_DL_Thput_CE_LTE] t, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
			and [ 0-2Mbps_N] is null  -- el primer rango nuevo es nulo, es una entidad antgigua que no tiene esos rangos calculados
	group by 
		case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end,
		t.mnc, t.meas_round, t.Date_Reporting, t.Week_Reporting ,t.entidad, t.Report_Type, t.Aggr_Type
	
	union all

	select 
		case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment,
		t.mnc, t.meas_round, t.Date_Reporting as meas_date, t.Week_Reporting as meas_week, 
		'Road 4G' as meas_Tech, 'CE_DL' as Test_type, 'Downlink' as Direction, t.entidad as vf_entity,t.Report_Type,t.Aggr_Type
	from [AGGRData4G_Road].dbo.[lcc_aggr_sp_MDD_Data_DL_Thput_CE_LTE] t, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
			and [ 0-2Mbps_N] is null  -- el primer rango nuevo es nulo, es una entidad antgigua que no tiene esos rangos calculados
	group by 
		case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end,
		t.mnc, t.meas_round, t.Date_Reporting, t.Week_Reporting ,t.entidad, t.Report_Type, t.Aggr_Type
	------------------------
	-- a.1) update correspondiente
	update _RI_Data_e
	set 
		[1_N]=null,		[2_N]=null,		[3_N]=null,		[4_N]=null,		[5_N]=null,		[6_N]=null,		[7_N]=null,		[8_N]=null,		[9_N]=null,		[10_N]=null,
		[11_N]=null,	[12_N]=null,	[13_N]=null,	[14_N]=null,	[15_N]=null,	[16_N]=null,	[17_N]=null,	[18_N]=null,	[19_N]=null,	[20_N]=null,
		[21_N]=null,	[22_N]=null,	[23_N]=null,	[24_N]=null,	[25_N]=null,	[26_N]=null,	[27_N]=null,	[28_N]=null,	[29_N]=null,	[30_N]=null,
		[31_N]=null,	[32_N]=null,	[33_N]=null,	[34_N]=null,	[35_N]=null,	[36_N]=null,	[37_N]=null,	[38_N]=null,	[39_N]=null,	[40_N]=null,
		[41_N]=null,	[42_N]=null,	[43_N]=null,	[44_N]=null,	[45_N]=null,	[46_N]=null,	[47_N]=null,	[48_N]=null,	[49_N]=null,	[50_N]=null,
		[51_N]=null,	[52_N]=null,	[53_N]=null,	[54_N]=null,	[55_N]=null,	[56_N]=null,	[57_N]=null,	[58_N]=null,	[59_N]=null,	[60_N]=null,
		[61_N]=null,	[62_N]=null,	[63_N]=null,	[64_N]=null,	[65_N]=null,	[66_N]=null

	from _RI_Data_e e, _RI_Data_entidades_antiguas old
	where e.meas_Tech like '%4G%' and		-- solo aplica en 4G, en 3G no hay only 
		e.mnc=old.mnc and 
		e.meas_round=old.meas_round and 
		e.meas_date=old.meas_date and 
		e.meas_week =old.meas_week and
		--e.meas_Tech=old.meas_Tech and		-- si no tienen rangos nuevos en 4G, no lo tendra en 4Gonly ni en 4G_CA_Only - no se reagregan por separado 
		e.Test_type=old.Test_type and
		e.Direction=old.Direction and
		e.vf_entity=old.vf_entity and 
		e.Report_Type=old.Report_Type and 
		e.Aggr_Type=old.Aggr_Type 


	------------------------------------------------
	-- b) Chequeo 4G - DL_NC:
	exec dbo.sp_lcc_dropifexists '_RI_Data_entidades_antiguas'
	select 
		case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment,
		t.mnc, t.meas_round, t.Date_Reporting as meas_date, t.Week_Reporting as meas_week, 
		'4G' as meas_Tech, 'NC_DL' as Test_type, 'Downlink' as Direction, t.entidad as vf_entity,t.Report_Type,t.Aggr_Type
	into _RI_Data_entidades_antiguas
	from [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_DL_Thput_NC_LTE] t, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
			and [ 0-3.5Mbps_N] is null  -- el primer rango nuevo es nulo, es una entidad antgigua que no tiene esos rangos calculados
	group by 
		case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end,
		t.mnc, t.meas_round, t.Date_Reporting, t.Week_Reporting ,t.entidad, t.Report_Type, t.Aggr_Type
	
	union all 

		select 
		case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment,
		t.mnc, t.meas_round, t.Date_Reporting as meas_date, t.Week_Reporting as meas_week, 
		'Road 4G' as meas_Tech, 'NC_DL' as Test_type, 'Downlink' as Direction, t.entidad as vf_entity,t.Report_Type,t.Aggr_Type
	from [AGGRData4G_Road].dbo.[lcc_aggr_sp_MDD_Data_DL_Thput_NC_LTE] t, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
			and [ 0-3.5Mbps_N] is null  -- el primer rango nuevo es nulo, es una entidad antgigua que no tiene esos rangos calculados
	group by 
		case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end,
		t.mnc, t.meas_round, t.Date_Reporting, t.Week_Reporting ,t.entidad, t.Report_Type, t.Aggr_Type

	------------------------
	-- b.1) update correspondiente
	update _RI_Data_e
	set 
		[1_N]=null,		[2_N]=null,		[3_N]=null,		[4_N]=null,		[5_N]=null,		[6_N]=null,		[7_N]=null,		[8_N]=null,		[9_N]=null,		[10_N]=null,
		[11_N]=null,	[12_N]=null,	[13_N]=null,	[14_N]=null,	[15_N]=null,	[16_N]=null,	[17_N]=null,	[18_N]=null,	[19_N]=null,	[20_N]=null,
		[21_N]=null,	[22_N]=null,	[23_N]=null,	[24_N]=null,	[25_N]=null,	[26_N]=null,	[27_N]=null,	[28_N]=null,	[29_N]=null,	[30_N]=null,
		[31_N]=null,	[32_N]=null,	[33_N]=null,	[34_N]=null,	[35_N]=null,	[36_N]=null,	[37_N]=null,	[38_N]=null,	[39_N]=null,	[40_N]=null,
		[41_N]=null,	[42_N]=null,	[43_N]=null,	[44_N]=null,	[45_N]=null,	[46_N]=null,	[47_N]=null,	[48_N]=null,	[49_N]=null,	[50_N]=null,
		[51_N]=null,	[52_N]=null,	[53_N]=null,	[54_N]=null,	[55_N]=null,	[56_N]=null,	[57_N]=null,	[58_N]=null,	[59_N]=null,	[60_N]=null,
		[61_N]=null,	[62_N]=null,	[63_N]=null,	[64_N]=null,	[65_N]=null,	[66_N]=null

	from _RI_Data_e e, _RI_Data_entidades_antiguas old
	where e.meas_Tech like '%4G%' and		-- solo aplica en 4G, en 3G no hay only 
		e.mnc=old.mnc and 
		e.meas_round=old.meas_round and 
		e.meas_date=old.meas_date and 
		e.meas_week =old.meas_week and
		--e.meas_Tech=old.meas_Tech and		-- si no tienen rangos nuevos en 4G, no lo tendra en 4Gonly ni en 4G_CA_Only - no se reagregan por separado ?¿
		e.Test_type=old.Test_type and
		e.Direction=old.Direction and
		e.vf_entity=old.vf_entity and 
		e.Report_Type=old.Report_Type and 
		e.Aggr_Type=old.Aggr_Type 


	------------------------------------------------
	-- c) Chequeo 4G - UL_CE:
	exec dbo.sp_lcc_dropifexists '_RI_Data_entidades_antiguas'
	select 
		case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment,
		t.mnc, t.meas_round, t.Date_Reporting as meas_date, t.Week_Reporting as meas_week, 
		'4G' as meas_Tech, 'CE_UL' as Test_type, 'Uplink' as Direction, t.entidad as vf_entity,t.Report_Type,t.Aggr_Type
	into _RI_Data_entidades_antiguas
	from [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_UL_Thput_CE_LTE] t, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
			and [ 0-0.5Mbps_N] is null  -- el primer rango nuevo es nulo, es una entidad antgigua que no tiene esos rangos calculados
	group by 
		case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end,
		t.mnc, t.meas_round, t.Date_Reporting, t.Week_Reporting ,t.entidad, t.Report_Type, t.Aggr_Type
	
	union all

	select 
		case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment,
		t.mnc, t.meas_round, t.Date_Reporting as meas_date, t.Week_Reporting as meas_week, 
		'Road 4G' as meas_Tech, 'CE_UL' as Test_type, 'Uplink' as Direction, t.entidad as vf_entity,t.Report_Type,t.Aggr_Type
	from [AGGRData4G_Road].dbo.[lcc_aggr_sp_MDD_Data_UL_Thput_CE_LTE] t, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
			and [ 0-0.5Mbps_N] is null  -- el primer rango nuevo es nulo, es una entidad antgigua que no tiene esos rangos calculados
	group by 
		case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end,
		t.mnc, t.meas_round, t.Date_Reporting, t.Week_Reporting ,t.entidad, t.Report_Type, t.Aggr_Type

	------------------------
	-- c.1) update correspondiente
	update _RI_Data_e
	set 
		[1_N]=null,		[2_N]=null,		[3_N]=null,		[4_N]=null,		[5_N]=null,		[6_N]=null,		[7_N]=null,		[8_N]=null,		[9_N]=null,		[10_N]=null,
		[11_N]=null,	[12_N]=null,	[13_N]=null,	[14_N]=null,	[15_N]=null,	[16_N]=null,	[17_N]=null,	[18_N]=null,	[19_N]=null,	[20_N]=null,
		[21_N]=null,	[22_N]=null,	[23_N]=null,	[24_N]=null,	[25_N]=null,	[26_N]=null,	[27_N]=null,	[28_N]=null,	[29_N]=null,	[30_N]=null,
		[31_N]=null,	[32_N]=null,	[33_N]=null,	[34_N]=null,	[35_N]=null,	[36_N]=null,	[37_N]=null,	[38_N]=null,	[39_N]=null,	[40_N]=null,
		[41_N]=null,	[42_N]=null,	[43_N]=null,	[44_N]=null,	[45_N]=null,	[46_N]=null,	[47_N]=null,	[48_N]=null,	[49_N]=null,	[50_N]=null,
		[51_N]=null,	[52_N]=null,	[53_N]=null,	[54_N]=null,	[55_N]=null,	[56_N]=null,	[57_N]=null,	[58_N]=null,	[59_N]=null,	[60_N]=null,
		[61_N]=null,	[62_N]=null,	[63_N]=null,	[64_N]=null,	[65_N]=null,	[66_N]=null

	from _RI_Data_e e, _RI_Data_entidades_antiguas old
	where e.meas_Tech like '%4G%' and		-- solo aplica en 4G, en 3G no hay only   
		e.mnc=old.mnc and 
		e.meas_round=old.meas_round and 
		e.meas_date=old.meas_date and 
		e.meas_week =old.meas_week and
		--e.meas_Tech=old.meas_Tech and		-- si no tienen rangos nuevos en 4G, no lo tendra en 4Gonly ni en 4G_CA_Only - no se reagregan por separado ?¿
		e.Test_type=old.Test_type and
		e.Direction=old.Direction and
		e.vf_entity=old.vf_entity and 
		e.Report_Type=old.Report_Type and 
		e.Aggr_Type=old.Aggr_Type 


	------------------------------------------------
	-- d) Chequeo 4G - UL_NC:
	exec dbo.sp_lcc_dropifexists '_RI_Data_entidades_antiguas'
	select 
		case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment,
		t.mnc, t.meas_round, t.Date_Reporting as meas_date, t.Week_Reporting as meas_week, 
		'4G' as meas_Tech, 'NC_UL' as Test_type, 'Uplink' as Direction, t.entidad as vf_entity,t.Report_Type,t.Aggr_Type
	into _RI_Data_entidades_antiguas
	from [AGGRData4G].dbo.[lcc_aggr_sp_MDD_Data_UL_Thput_NC_LTE] t, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
			and [ 0-0.8Mbps_N] is null  -- el primer rango nuevo es nulo, es una entidad antgigua que no tiene esos rangos calculados
	group by 
		case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end,
		t.mnc, t.meas_round, t.Date_Reporting, t.Week_Reporting ,t.entidad, t.Report_Type, t.Aggr_Type

	union all

	select 
		case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end vf_environment,
		t.mnc, t.meas_round, t.Date_Reporting as meas_date, t.Week_Reporting as meas_week, 
		'Road 4G' as meas_Tech, 'NC_UL' as Test_type, 'Uplink' as Direction, t.entidad as vf_entity,t.Report_Type,t.Aggr_Type
	from [AGGRData4G_Road].dbo.[lcc_aggr_sp_MDD_Data_UL_Thput_NC_LTE] t, agrids.dbo.vlcc_parcelas_osp p
	where p.parcela=isnull(t.parcel,'0.00000 Long, 0.00000 Lat')
			and [ 0-0.8Mbps_N] is null  -- el primer rango nuevo es nulo, es una entidad antgigua que no tiene esos rangos calculados
	group by 
		case when t.entidad like 'AVE-%' or t.entidad like 'MAD-___-R[0-9]%' then  'AVE' else p.vf_environment end,
		t.mnc, t.meas_round, t.Date_Reporting, t.Week_Reporting ,t.entidad, t.Report_Type, t.Aggr_Type

	------------------------
	-- d.1) update correspondiente
	update _RI_Data_e
	set 
		[1_N]=null,		[2_N]=null,		[3_N]=null,		[4_N]=null,		[5_N]=null,		[6_N]=null,		[7_N]=null,		[8_N]=null,		[9_N]=null,		[10_N]=null,
		[11_N]=null,	[12_N]=null,	[13_N]=null,	[14_N]=null,	[15_N]=null,	[16_N]=null,	[17_N]=null,	[18_N]=null,	[19_N]=null,	[20_N]=null,
		[21_N]=null,	[22_N]=null,	[23_N]=null,	[24_N]=null,	[25_N]=null,	[26_N]=null,	[27_N]=null,	[28_N]=null,	[29_N]=null,	[30_N]=null,
		[31_N]=null,	[32_N]=null,	[33_N]=null,	[34_N]=null,	[35_N]=null,	[36_N]=null,	[37_N]=null,	[38_N]=null,	[39_N]=null,	[40_N]=null,
		[41_N]=null,	[42_N]=null,	[43_N]=null,	[44_N]=null,	[45_N]=null,	[46_N]=null,	[47_N]=null,	[48_N]=null,	[49_N]=null,	[50_N]=null,
		[51_N]=null,	[52_N]=null,	[53_N]=null,	[54_N]=null,	[55_N]=null,	[56_N]=null,	[57_N]=null,	[58_N]=null,	[59_N]=null,	[60_N]=null,
		[61_N]=null,	[62_N]=null,	[63_N]=null,	[64_N]=null,	[65_N]=null,	[66_N]=null

	from _RI_Data_e e, _RI_Data_entidades_antiguas old
	where e.meas_Tech like '%4G%' and		-- solo aplica en 4G, en 3G no hay only   
		e.mnc=old.mnc and 
		e.meas_round=old.meas_round and 
		e.meas_date=old.meas_date and 
		e.meas_week =old.meas_week and
		--e.meas_Tech=old.meas_Tech and		-- si no tienen rangos nuevos en 4G, no lo tendra en 4Gonly ni en 4G_CA_Only - no se reagregan por separado ?¿
		e.Test_type=old.Test_type and
		e.Direction=old.Direction and
		e.vf_entity=old.vf_entity and 
		e.Report_Type=old.Report_Type and 
		e.Aggr_Type=old.Aggr_Type 

	-------------
	insert into [dbo].[_RI_Data_Ejecucion]
	select 'Fin 5.2 UPDATE_rangos para entidades antiguas', getdate()


	-------------------------------------
	print '5.3 UPDATE_parcelas_sin_info - No se puede dejar codigoINE=99999' 	
	-------------
	update _RI_Data_e set codigo_ine='' where codigo_ine=99999 and vf_environment<>'Indoor'
	update _RI_Data_l set codigo_ine='' where codigo_ine=99999 and vf_environment<>'Indoor'
	update _RI_Data_y set codigo_ine='' where codigo_ine=99999 and vf_environment<>'Indoor'
	
	-------------
	insert into [dbo].[_RI_Data_Ejecucion]
	select '5.3 UPDATE_parcelas_sin_info - No se puede dejar codigoINE=99999', getdate()

	---------------------------------------------------------------
	-- 6. Base Structure
	--------------------------------------------------------------- 
	
	-- 20170831: @MDM Eliminamos las entidades de Fase 3 no reportables a Vodafone. Estas se encuentran en la tabla
	-- de AGRIDs lcc_no_reportable_VDF. Si nos interesan reportarlas de nuevo eliminamos este punto
	print '6a. Eliminamos las entidades no reportables a Vodafone para Fase 3'

	delete t from _RI_Data_e t
	inner join [AGRIDs].dbo.lcc_no_reportable_VDF vdf
	on (vdf.entidad=t.VF_entity
		and vdf.meas_round=t.meas_round
		and vdf.report_type=t.report_type)

	delete t from _RI_Data_l t
	inner join [AGRIDs].dbo.lcc_no_reportable_VDF vdf
	on (vdf.entidad=t.VF_entity
		and vdf.meas_round=t.meas_round
		and vdf.report_type=t.report_type)

	delete t from _RI_Data_y t
	inner join [AGRIDs].dbo.lcc_no_reportable_VDF vdf
	on (vdf.entidad=t.VF_entity
		and vdf.meas_round=t.meas_round
		and vdf.report_type=t.report_type)

	-----------
	insert into [dbo].[_RI_Voice_Ejecucion]
	select 'Fin 6a. Delete de las entidades no reportables a VDF en Fase 3', getdate()

	print '6b. Creacion Base Structure' 	
	-------------
	exec dbo.sp_lcc_dropifexists '_RI_Data_base1'
	select codigo_ine,vf_environment,mnc,meas_round,meas_date,meas_week,meas_Tech,vf_entity,Report_Type,Aggr_Type,test_type, Direction, ASideDevice, BSideDevice, SWVersion--, YTB_Version, YTB_URL	-- Region_Road_VF, Region_Road_OSP, Region_VF, Region_OSP,
	into _RI_Data_base1
	from
	(
		select  codigo_ine,vf_environment,mnc,meas_round,meas_date,meas_week,meas_Tech,vf_entity,Report_Type,Aggr_Type,test_type, Direction, ASideDevice, BSideDevice, SWVersion from _RI_Data_e
		union all 
		select  codigo_ine,vf_environment,mnc,meas_round,meas_date,meas_week,meas_Tech,vf_entity,Report_Type,Aggr_Type,test_type, Direction, ASideDevice, BSideDevice, SWVersion from _RI_Data_l
		union all 
		select  codigo_ine,vf_environment,mnc,meas_round,meas_date,meas_week,meas_Tech,vf_entity,Report_Type,Aggr_Type,test_type, Direction, ASideDevice, BSideDevice, SWVersion from _RI_Data_y
	) t
	group by codigo_ine,vf_environment,mnc,meas_round,meas_date,meas_week,meas_Tech,vf_entity,Report_Type,Aggr_Type,test_type, Direction, ASideDevice, BSideDevice, SWVersion

	-------------
	insert into [dbo].[_RI_Data_Ejecucion]
	select 'Fin 6b. Creacion Base Structure', getdate()


	-------------------------------------------------------------------------------
	-- 7. Calculo de los indice de VODAFONE Y ORANGE:		** NUEVO- incluido VODAFONE
	-------------------------------------------------------------------------------
	print '7. Calculo de los indice de VODAFONE Y ORANGE' 
	--CAC 04/09/2017: Se modifica la lógica para calcular los ids ya que la anterior no funcionaba en todos los casos
	
	exec dbo.sp_lcc_dropifexists '_RI_Data_base'
	select q.*,c.completed_OSP, d.cont_report_type,
		----------------------------------
		Case	
			/*Si sólo hay un tipo de medida (VDF O MUN), me da igual el tipo y la marco como 1 siempre que esté completada*/
			when (d.cont_report_type=1 and c.completed_OSP = 'Y') then 1 
			/*Si mi contador por reporte es 2, es que hay medidas VDF y MUN/OSP, y está completado, me quedo con la medida por MUN*/
			when (d.cont_report_type=2 and (q.report_type = 'MUN' or q.report_type = 'OSP') and c.completed_OSP = 'Y') then 1   
		else 0 end as id_osp,
		----------------------------------
		-- En este id me da igual que este completada la medida o no:
		Case	
			/*Si sólo hay un tipo de medida (VDF O MUN/OSP), me da igual el tipo y la marco como 1, me da igual que esté completada o no*/
			when (d.cont_report_type=1) then 1     
			/*Si mi contador por reportes es 2, es que tengo medida por VDF y MUN/OSP, por lo que me quedo con la medida por MUN/OSP*/
			when (d.cont_report_type=2 and (q.report_type = 'MUN' or q.report_type = 'OSP')) then 1   
		else 0 end as id_osp_noComp,
		----------------------------------	
		Case when (q.report_type = 'VDF') then 1 else 0 end as id_vdf    /*Nos quedamos con las medidas VDF*/

	into _RI_Data_base
	from _RI_Data_base1 q 
		left join addedValue.[dbo].[lcc_entities_completed_Report] c on (q.vf_entity=c.entity_name and q.meas_round=c.meas_round)
		left join (
			--El contador de reportes debe calcularse por ronda para saber en cada ronda la info agregada
			Select u.vf_entity, mnc, u.meas_tech,u.meas_round,
				count(distinct(report_type)) as 'cont_report_type'
			from _RI_Data_base1 u	    
			group by vf_entity,mnc, u.meas_tech,u.meas_round
		) d 
		on (q.vf_entity = d.vf_entity and q.mnc=d.mnc and q.meas_tech=d.meas_tech and q.meas_round=d.meas_round)
				

	-----------------
	----/*Paso 1: Creamos una tabla linkando la tabla base que hemos ido creando con la tabla que nos indica si las medidas están Completadas o no
	----con una Subquery con la que añadiremos un contador que tendrá el valor 1 ó 2 dependiendo del tipo de reporte (VDF o MUN) por entidad, así podremos
	----saber si una entidad ha sido sólo medida por VDF, MUN o por ambas*/
	----exec dbo.sp_lcc_dropifexists '_RI_Data_base_x'
	----select 
	----	q.*,c.completed_OSP, d.cont_report_type
	----into _RI_Data_base_x 
	----from _RI_Data_base1 q 
	----left join addedValue.[dbo].[lcc_entities_completed_Report]  c on (q.vf_entity=c.entity_name and q.meas_round=c.meas_round)
	----left join
	----		(Select u.vf_entity,
	----		mnc,
	----		/*week_reporting,
	----		date_reporting,*/
	----		u.meas_tech,
	----		count(distinct(report_type)) as 'cont_report_type'
	----		from _RI_Data_base1 u
		     
	----		group by vf_entity,mnc/*,week_reporting,date_reporting*/,u.meas_tech
	----		 ) d

	----		on (q.vf_entity = d.vf_entity and q.mnc=d.mnc /*and q.week_reporting=d.week_reporting and q.date_reporting=d.date_reporting*/
	----		and q.meas_tech=d.meas_tech)

	-----------------
	----/*Paso 2: linkamos la tabla creada en el punto anterior y la linkamos con una Subquery que crea un id para marcar a 1 por tipo de reporte y entidad 
	----Completada. Sumamos estos 1s y al final tendremos un índica (id_comp) que podrá valer 0 sino hay ninguna medida completada, 1 si sólo hay una medida completada
	----2 si hay dos medidas completadas*/
	----exec dbo.sp_lcc_dropifexists '_RI_Data_base'
	----Select 
	----	q.*,comp.id_comp,
	----	Case 
	----		/*Si sólo hay un tipo de medida (VDF O MUN), me da igual el tipo y la marco como 1 siempre que esté completada*/
	----		when (q.cont_report_type=1 and q.completed_OSP = 'Y') then 1     
	----		/*Si mi índice de comprobación es 2 y mi contador por reporte es 2, es que hay medidas VDF y MUN ambas completadas, por lo que me quedon con la medida por MUN*/
	----		when (q.cont_report_type=2 and q.report_type = 'MUN' and comp.id_comp=2 and q.completed_OSP = 'Y' ) then 1   
	----		/*Si mi contador por reportes es 2 (tengo medida por VDF y MUN) y mi contador por Completado (id_comp) es 1 es que uno de las dos medidas está completada, nos quedamos con esa medida*/
	----		when (q.cont_report_type=2  and comp.id_comp=1 and q.completed_OSP = 'Y') then 1   
	----	else 0 end as id_osp,
	----	----------------------------------
	----	-- En este id me da igual que este completada la medida o no:
	----	Case	
	----		/*Si sólo hay un tipo de medida (VDF O MUN), me da igual el tipo y la marco como 1, me da igual que esté completada o no*/
	----		when (q.cont_report_type=1) then 1     
		
	----		/*Si mi índice de comprobación es 2, es que tengo medida por VDF y MUN), por lo que me quedo con la medida por MUN*/
	----		when (q.cont_report_type=2 and (q.report_type = 'MUN' or q.report_type = 'OSP')) then 1    
	----	else 0 end as id_osp_noComp,
	----	----------------------------------	
	----	Case when (q.report_type = 'VDF') then 1 else 0 end as id_vdf    /*Nos quedamos con las medidas VDF*/

	----into _RI_Data_base
	----from _RI_Data_base_x q
	----	left join (select vf_entity,meas_tech,meas_date, sum(id) as id_comp
	----				from(
	----					Select vf_entity,report_type,meas_tech,meas_date,
	----						 Case when completed_OSP='Y' then 1 else 0 end as 'id'
	----					from _RI_Data_base_x
	----					--where vf_entity ='LEIOA'
	----					group by vf_entity, meas_tech,report_type,completed_OSP,meas_date
	----					) a
	----				--where vf_entity ='LEIOA'
	----				group by vf_entity,meas_tech,meas_date
	----				)comp on (q.vf_entity=comp.vf_entity and q.meas_tech=comp.meas_tech and q.meas_date=comp.meas_date)

	-------------
	insert into [dbo].[_RI_Data_Ejecucion]
	select 'Fin 7. Calculo de los indice de VODAFONE Y ORANGE', getdate()


	---------------------------------------------------------------
	-- 8. Primer union de todas las tablas temporales -> drop table _RI_Data_result1 - e:
	---------------------------------------------------------------
	print '8. Primer union de todas las tablas temporales -> _RI_Data_result1' 	 
	-------------
	exec dbo.sp_lcc_dropifexists '_RI_Data_result1'
	select 
		b.codigo_ine, 

		-- Se le añade la PROVINCIA y CCAA solo a carreteras y AVES, ya que en entidades puede meter desglose extra en los casos en los que se salga (carreteras sobre todo)
		case when b.vf_environment ='ave' or (b.vf_environment = 'roads' and b.meas_Tech like '%Road%') then p.Provincia else NULL end as Provincia,
		case when b.vf_environment ='ave' or (b.vf_environment = 'roads' and b.meas_Tech like '%Road%') then p.CCAA else NULL end as CCAA,

		b.vf_environment as environment,		
		case b.mnc
			 when'01' then 'Vodafone' 
			 when '03' then 'Orange' 
			 when '07' then 'Movistar' 
			 when '04' then 'Yoigo' 
		end as operator,
		b.mnc, b.meas_round, b.meas_date, b.meas_week, b.meas_Tech, b.vf_entity as entity, b.test_type, b.Direction, b.Report_Type

		-- Indices:
		,b.id_osp
		,b.id_osp_noComp
		,b.id_vdf	

		-- General:
		,e.[Num_tests]
		,e.[Failed]
		,e.[Dropped]
		,e.[Session_time_Num]
		,e.[Throughput_Den]
		,e.[Session_time_Den]
		,e.[Throughput_Num]
		,e.[Throughput_Max]
		,e.[Throughput_3M_Num]
		,e.[Throughput_1M_Num]
		,e.[Throughput_128K_Num]
		,e.[Throughput_64K_Num]
		,e.[Throughput_384K_Num]
		,e.Throughput_with_Error_Den
		,e.Throughput_with_Error_Num
		,e.[WEB_IP_ACCESS_TIME_NUM]
		,e.[WEB_IP_ACCESS_TIME_DEN]
		,e.[WEB_HTTP_TRANSFER_TIME_NUM]
		,e.[WEB_HTTP_TRANSFER_TIME_DEN]
		,e.[WEB_IP_ACCESS_TIME_HTTPS_NUM]
		,e.[WEB_IP_ACCESS_TIME_HTTPS_DEN]
		,e.[WEB_TRANSFER_TIME_HTTPS_NUM]
		,e.[WEB_TRANSFER_TIME_HTTPS_DEN]
		,e.[WEB_IP_ACCESS_TIME_PUBLIC_NUM]
		,e.[WEB_IP_ACCESS_TIME_PUBLIC_DEN]
		,e.[WEB_TRANSFER_TIME_PUBLIC_NUM]
		,e.[WEB_TRANSFER_TIME_PUBLIC_DEN]

		-- Technology:
		,e.[Radio_2G_use_Num]
		,e.[Radio_3G_use_Num]
		,e.[Radio_4G_use_Num]
		,e.[Radio_use_Den]
		,e.[Radio_2G_use_Den]
		,e.[Radio_3G_use_Den]
		,e.[Radio_4G_use_Den]

		,e.[Radio_U2100_use_Num]
		,e.[Radio_U900_use_Num]
		,e.[Radio_LTE2100_use_Num]
		,e.[Radio_LTE2600_use_Num]
		,e.[Radio_LTE1800_use_Num]
		,e.[Radio_LTE800_use_Num]
		,e.[Radio_Band_Use_Den]
		,e.[Radio_U2100_use_Den]
		,e.[Radio_U900_use_Den]
		,e.[Radio_LTE2100_use_Den]
		,e.[Radio_LTE2600_use_Den]
		,e.[Radio_LTE1800_use_Den]
		,e.[Radio_LTE800_use_Den]

		,e.[3G_DualCarrier_use_Num]
		,e.[3G_DualCarrier_use_Den]
		,e.[3G_DC_2100_use_Num]
		,e.[3G_DC_2100_use_Den]
		,e.[3G_DC_900_use_Num]
		,e.[3G_DC_900_use_Den]

		,e.[3G_NumCodes_use_Num]
		,e.[3G_NumCodes_use_Den]
		,e.[3G_QPSK_use_Num]
		,e.[3G_16QAM_use_Num]
		,e.[3G_64QAM_use_Num]
		,e.[3G_QPSK_use_Den]
		,e.[3G_16QAM_use_Den]
		,e.[3G_64QAM_use_Den]

		,e.[3G_%_SF22_Num]
		,e.[3G_%_SF22andSF42_Num]
		,e.[3G_%_SF4_Num]
		,e.[3G_%_SF42_Num]
		,e.[3G_%_SF22_Den]
		,e.[3G_%_SF22andSF42_Den]
		,e.[3G_%_SF4_Den]
		,e.[3G_%_SF42_Den]
		,e.[3G_%_TTI2ms_Num]
		,e.[3G_%_TTI2ms_Den]	
	
		,e.[RSCP_Lin_Num]
		,e.[EcI0_Lin_Num]
		,e.[RSCP_Lin_Den]
		,e.[EcI0_Lin_Den]

		-- Performance:
		,e.[3G_CQI]
		,e.[3G_DataStats_Den]
		,e.[CQI_U900_Num]
		,e.[CQI_U900_Den]
		,e.[CQI_U2100_Num]
		,e.[CQI_U2100_Den]

		,e.[HSPA_PCT_Num]
		,e.[HSPA+_PCT_Num]
		,e.[HSPA+_DC_PCT_Num]
		,e.[HSPA_PCT_Den]
		,e.[HSPA+_PCT_Den]
		,e.[HSPA+_DC_PCT_Den]

		,e.[UL_Inter_Lin_Num]
		,e.[UL_Inter_Lin_Den]
	
		-- Performance LTE:
		,e.[CQI_4G_Num]
		,e.[CQI_L800_Num]
		,e.[CQI_L1800_Num]
		,e.[CQI_L2100_Num]
		,e.[CQI_L2600_Num]
		,e.[CQI_4G_Den]
		,e.[CQI_L800_Den]
		,e.[CQI_L1800_Den]
		,e.[CQI_L2100_Den]
		,e.[CQI_L2600_Den]
		,e.[LTE_5Mhz_SC_Use_Num]
		,e.[LTE_10Mhz_SC_Use_Num]
		,e.[LTE_15Mhz_SC_Use_Num]
		,e.[LTE_20Mhz_SC_Use_Num]
		,e.[LTE_15Mhz_CA_Use_Num]
		,e.[LTE_20Mhz_CA_Use_Num]
		,e.[LTE_25Mhz_CA_Use_Num]
		,e.[LTE_30Mhz_CA_Use_Num]
		,e.[LTE_35Mhz_CA_Use_Num]
		,e.[LTE_40Mhz_CA_Use_Num]
		,e.[LTE_5Mhz_SC_Use_Den]
		,e.[LTE_10Mhz_SC_Use_Den]
		,e.[LTE_15Mhz_SC_Use_Den]
		,e.[LTE_20Mhz_SC_Use_Den]
		,e.[LTE_15Mhz_CA_Use_Den]
		,e.[LTE_20Mhz_CA_Use_Den]
		,e.[LTE_25Mhz_CA_Use_Den]
		,e.[LTE_30Mhz_CA_Use_Den]
		,e.[LTE_35Mhz_CA_Use_Den]
		,e.[LTE_40Mhz_CA_Use_Den]
		,e.[LTE_BW_use_den]
		,e.[4G_RBs_use_Num]
		,e.[4G_RBs_use_Den]
		,e.[4G_TM1_use_Num]
		,e.[4G_TM2_use_Num]
		,e.[4G_TM3_use_Num]
		,e.[4G_TM4_use_Num]
		,e.[4G_TM5_use_Num]
		,e.[4G_TM6_use_Num]
		,e.[4G_TM7_use_Num]
		,e.[4G_TM8_use_Num]
		,e.[4G_TM9_use_Num]
		,e.[4G_TMInvalid_use_Num]
		,e.[4G_TMUnknown_use_Num]
		,e.[4G_TM_Den]

		-- Technology 4G:
		,e.[4G_%CA_Num]
		,e.[4G_%CA_Den]
		,e.[4G_BPSK_Use_Num]
		,e.[4G_QPSK_Use_Num]
		,e.[4G_16QAM_Use_Num]
		,e.[4G_64QAM_Use_Num]
		,e.[4G_BPSK_Use_Den]
		,e.[4G_QPSK_Use_Den]
		,e.[4G_16QAM_Use_Den]
		,e.[4G_64QAM_Use_Den]
		,e.[4G_stats_Den]
		,e.[RSRP_Lin_Num]
		,e.[RSRQ_Lin_Num]
		,e.[SINR_Lin_Num]			
		,e.[RSRP_Lin_Den]
		,e.[RSRQ_Lin_Den]
		,e.[SINR_Lin_Den]

		-- New KPIs:
		,e.[MIMO_num]
		,e.[RI1_num]
		,e.[RI2_num]
		,e.[MIMO_den]
		,e.[RI1_den]
		,e.[RI2_den]
		,e.RBs_Allocated_Den
		,e.RBs_Allocated_Num
		,e.RBs_Allocated_Max

		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		,case when b.test_type='Ping' then l.[1] else e.[1_N] end as [1_N]
		,case when b.test_type='Ping' then l.[2] else e.[2_N] end as [2_N]
		,case when b.test_type='Ping' then l.[3] else e.[3_N] end as [3_N]
		,case when b.test_type='Ping' then l.[4] else e.[4_N] end as [4_N]
		,case when b.test_type='Ping' then l.[5] else e.[5_N] end as [5_N]
		,case when b.test_type='Ping' then l.[6] else e.[6_N] end as [6_N]
		,case when b.test_type='Ping' then l.[7] else e.[7_N] end as [7_N]
		,case when b.test_type='Ping' then l.[8] else e.[8_N] end as [8_N]
		,case when b.test_type='Ping' then l.[9] else e.[9_N] end as [9_N]
		,case when b.test_type='Ping' then l.[10] else e.[10_N] end as [10_N]
		,case when b.test_type='Ping' then l.[11] else e.[11_N] end as [11_N]
		,case when b.test_type='Ping' then l.[12] else e.[12_N] end as [12_N]
		,case when b.test_type='Ping' then l.[13] else e.[13_N] end as [13_N]
		,case when b.test_type='Ping' then l.[14] else e.[14_N] end as [14_N]
		,case when b.test_type='Ping' then l.[15] else e.[15_N] end as [15_N]
		,case when b.test_type='Ping' then l.[16] else e.[16_N] end as [16_N]
		,case when b.test_type='Ping' then l.[17] else e.[17_N] end as [17_N]
		,case when b.test_type='Ping' then l.[18] else e.[18_N] end as [18_N]
		,case when b.test_type='Ping' then l.[19] else e.[19_N] end as [19_N]
		,case when b.test_type='Ping' then l.[20] else e.[20_N] end as [20_N]
		,case when b.test_type='Ping' then l.[21] else e.[21_N] end as [21_N]
		,case when b.test_type='Ping' then l.[22] else e.[22_N] end as [22_N]
		,case when b.test_type='Ping' then l.[23] else e.[23_N] end as [23_N]
		,case when b.test_type='Ping' then l.[24] else e.[24_N] end as [24_N]
		,case when b.test_type='Ping' then l.[25] else e.[25_N] end as [25_N]
		,case when b.test_type='Ping' then l.[26] else e.[26_N] end as [26_N]
		,case when b.test_type='Ping' then l.[27] else e.[27_N] end as [27_N]
		,case when b.test_type='Ping' then l.[28] else e.[28_N] end as [28_N]
		,case when b.test_type='Ping' then l.[29] else e.[29_N] end as [29_N]
		,case when b.test_type='Ping' then l.[30] else e.[30_N] end as [30_N]
		,case when b.test_type='Ping' then l.[31] else e.[31_N] end as [31_N]
		,case when b.test_type='Ping' then l.[32] else e.[32_N] end as [32_N]
		,case when b.test_type='Ping' then l.[33] else e.[33_N] end as [33_N]
		,case when b.test_type='Ping' then l.[34] else e.[34_N] end as [34_N]
		,case when b.test_type='Ping' then l.[35] else e.[35_N] end as [35_N]
		,case when b.test_type='Ping' then l.[36] else e.[36_N] end as [36_N]
		,case when b.test_type='Ping' then l.[37] else e.[37_N] end as [37_N]
		,case when b.test_type='Ping' then l.[38] else e.[38_N] end as [38_N]
		,case when b.test_type='Ping' then l.[39] else e.[39_N] end as [39_N]
		,case when b.test_type='Ping' then l.[40] else e.[40_N] end as [40_N]
		,case when b.test_type='Ping' then l.[41] else e.[41_N] end as [41_N]

		-- Rangos Antiguos - necesario para entidades antiguas que tienen otro calculo
		,case when b.test_type='Ping' then l.[1] else e.[1] end as [1]
		,case when b.test_type='Ping' then l.[2] else e.[2] end as [2]
		,case when b.test_type='Ping' then l.[3] else e.[3] end as [3]
		,case when b.test_type='Ping' then l.[4] else e.[4] end as [4]
		,case when b.test_type='Ping' then l.[5] else e.[5] end as [5]
		,case when b.test_type='Ping' then l.[6] else e.[6] end as [6]
		,case when b.test_type='Ping' then l.[7] else e.[7] end as [7]
		,case when b.test_type='Ping' then l.[8] else e.[8] end as [8]
		,case when b.test_type='Ping' then l.[9] else e.[9] end as [9]
		,case when b.test_type='Ping' then l.[10] else e.[10] end as [10]
		,case when b.test_type='Ping' then l.[11] else e.[11] end as [11]
		,case when b.test_type='Ping' then l.[12] else e.[12] end as [12]
		,case when b.test_type='Ping' then l.[13] else e.[13] end as [13]
		,case when b.test_type='Ping' then l.[14] else e.[14] end as [14]
		,case when b.test_type='Ping' then l.[15] else e.[15] end as [15]
		,case when b.test_type='Ping' then l.[16] else e.[16] end as [16]
		,case when b.test_type='Ping' then l.[17] else e.[17] end as [17]
		,case when b.test_type='Ping' then l.[18] else e.[18] end as [18]
		,case when b.test_type='Ping' then l.[19] else e.[19] end as [19]
		,case when b.test_type='Ping' then l.[20] else e.[20] end as [20]
		,case when b.test_type='Ping' then l.[21] else e.[21] end as [21]
		,case when b.test_type='Ping' then l.[22] else e.[22] end as [22]
		,case when b.test_type='Ping' then l.[23] else e.[23] end as [23]
		,case when b.test_type='Ping' then l.[24] else e.[24] end as [24]
		,case when b.test_type='Ping' then l.[25] else e.[25] end as [25]
		,case when b.test_type='Ping' then l.[26] else e.[26] end as [26]
		,case when b.test_type='Ping' then l.[27] else e.[27] end as [27]
		,case when b.test_type='Ping' then l.[28] else e.[28] end as [28]
		,case when b.test_type='Ping' then l.[29] else e.[29] end as [29]
		,case when b.test_type='Ping' then l.[30] else e.[30] end as [30]
		,case when b.test_type='Ping' then l.[31] else e.[31] end as [31]
		,case when b.test_type='Ping' then l.[32] else e.[32] end as [32]
		,case when b.test_type='Ping' then l.[33] else e.[33] end as [33]
		,case when b.test_type='Ping' then l.[34] else e.[34] end as [34]
		,case when b.test_type='Ping' then l.[35] else e.[35] end as [35]
		,case when b.test_type='Ping' then l.[36] else e.[36] end as [36]
		,case when b.test_type='Ping' then l.[37] else e.[37] end as [37]
		,case when b.test_type='Ping' then l.[38] else e.[38] end as [38]
		,case when b.test_type='Ping' then l.[39] else e.[39] end as [39]
		,case when b.test_type='Ping' then l.[40] else e.[40] end as [40]
		,case when b.test_type='Ping' then l.[41] else e.[41] end as [41]

		,isnull(e.[42_N],0) as [42_N]
		,isnull(e.[43_N],0) as [43_N]
		,isnull(e.[44_N],0) as [44_N]
		,isnull(e.[45_N],0) as [45_N]
		,isnull(e.[46_N],0) as [46_N]
		,isnull(e.[47_N],0) as [47_N]
		,isnull(e.[48_N],0) as [48_N]
		,isnull(e.[49_N],0) as [49_N]
		,isnull(e.[50_N],0) as [50_N]
		,isnull(e.[51_N],0) as [51_N]
		,isnull(e.[52_N],0) as [52_N]
		,isnull(e.[53_N],0) as [53_N]
		,isnull(e.[54_N],0) as [54_N]
		,isnull(e.[55_N],0) as [55_N]
		,isnull(e.[56_N],0) as [56_N]
		,isnull(e.[57_N],0) as [57_N]
		,isnull(e.[58_N],0) as [58_N]
		,isnull(e.[59_N],0) as [59_N]
		,isnull(e.[60_N],0) as [60_N]
		,isnull(e.[61_N],0) as [61_N]
		,isnull(e.[62_N],0) as [62_N]
		,isnull(e.[63_N],0) as [63_N]
		,isnull(e.[64_N],0) as [64_N]
		,isnull(e.[65_N],0) as [65_N]
		,isnull(e.[66_N],0) as [66_N]

		-- Info LAT y YTB:
		,l.latency_num, l.latency_den, l.Methodology
		,y.Avg_Video_StarTime_Num,y.avg_Video_startTime_Den
		,y.Reproductions_WO_Interruptions,y.Reproductions_WO_Interruptions_Den--,y.Success_Video_P3_num, y.Success_Video_P3_den
		,y.B4
		,y.[ReproduccionesHD]
		,y.[Successful video download]
		,y.[Reproducciones]
		,y.YTB_video_resolution_num
		,y.YTB_video_resolution_den
		,y.YTB_video_mos_num
		,y.YTB_video_mos_den
		,y.YTB_url
		,y.[YTB_1st_Resolution_Num]
		,y.[YTB_1st_Resolution_Den]
		,y.[YTB_2nd_Resolution_Num]
		,y.[YTB_2nd_Resolution_Den]
		,y.[YTB_FirstChangeFromInit_Num]
		,y.[YTB_FirstChangeFromInit_Den]
		,y.[YTB_initialResolution_Num]
		,y.[YTB_initialResolution_Den]
		,y.[YTB_finalResolution_Num]
		,y.[YTB_finalResolution_Den]
		,y.[YTB_video_resolution_144p_Num]
		,y.[YTB_video_resolution_144p_Den]
		,y.[YTB_video_mos_144p_Num]
		,y.[YTB_video_mos_144p_Den]
		,y.[YTB_video_resolution_%144p_Num]
		,y.[YTB_video_resolution_%144p_Den]
		,y.[YTB_video_resolution_240p_Num]
		,y.[YTB_video_resolution_240p_Den]
		,y.[YTB_video_mos_240p_Num]
		,y.[YTB_video_mos_240p_Den]
		,y.[YTB_video_resolution_%240p_Num]
		,y.[YTB_video_resolution_%240p_Den]
		,y.[YTB_video_resolution_360p_Num]
		,y.[YTB_video_resolution_360p_Den]
		,y.[YTB_video_mos_360p_Num]
		,y.[YTB_video_mos_360p_Den]
		,y.[YTB_video_resolution_%360p_Num]
		,y.[YTB_video_resolution_%360p_Den]
		,y.[YTB_video_resolution_480p_Num]
		,y.[YTB_video_resolution_480p_Den]
		,y.[YTB_video_mos_480p_Num]
		,y.[YTB_video_mos_480p_Den]
		,y.[YTB_video_resolution_%480p_Num]
		,y.[YTB_video_resolution_%480p_Den]
		,y.[YTB_video_resolution_720p_Num]
		,y.[YTB_video_resolution_720p_Den]
		,y.[YTB_video_mos_720p_Num]
		,y.[YTB_video_mos_720p_Den]
		,y.[YTB_video_resolution_%720p_Num]
		,y.[YTB_video_resolution_%720p_Den]
		,y.[YTB_video_resolution_1080p_Num]
		,y.[YTB_video_resolution_1080p_Den]
		,y.[YTB_video_mos_1080p_Num]
		,y.[YTB_video_mos_1080p_Den]
		,y.[YTB_video_resolution_%1080p_Num]
		,y.[YTB_video_resolution_%1080p_Den]

		,y.Avg_Video_StarTime_Num_Video1
		,y.avg_Video_startTime_Den_Video1
		,y.Reproductions_WO_Interruptions_Video1
		,y.Reproductions_WO_Interruptions_Den_Video1--,y.Success_Video_P3_num_Video1, y.Success_Video_P3_den_Video1
		,y.B4_Video1
		,y.[ReproduccionesHD_Video1]
		,y.[Successful video download_Video1]
		,y.[Reproducciones_Video1]
		,y.[Fails_Video1]
		,y.YTB_video_resolution_num_Video1
		,y.YTB_video_resolution_den_Video1
		,y.YTB_video_mos_num_Video1
		,y.YTB_video_mos_den_Video1
		,y.YTB_url_Video1
		,y.[YTB_1st_Resolution_Num_Video1]
		,y.[YTB_1st_Resolution_Den_Video1]
		,y.[YTB_2nd_Resolution_Num_Video1]
		,y.[YTB_2nd_Resolution_Den_Video1]
		,y.[YTB_FirstChangeFromInit_Num_Video1]
		,y.[YTB_FirstChangeFromInit_Den_Video1]
		,y.[YTB_initialResolution_Num_Video1]
		,y.[YTB_initialResolution_Den_Video1]
		,y.[YTB_finalResolution_Num_Video1]
		,y.[YTB_finalResolution_Den_Video1]
		,y.[YTB_video_resolution_144p_Num_Video1]
		,y.[YTB_video_resolution_144p_Den_Video1]
		,y.[YTB_video_mos_144p_Num_Video1]
		,y.[YTB_video_mos_144p_Den_Video1]
		,y.[YTB_video_resolution_%144p_Num_Video1]
		,y.[YTB_video_resolution_%144p_Den_Video1]
		,y.[YTB_video_resolution_240p_Num_Video1]
		,y.[YTB_video_resolution_240p_Den_Video1]
		,y.[YTB_video_mos_240p_Num_Video1]
		,y.[YTB_video_mos_240p_Den_Video1]
		,y.[YTB_video_resolution_%240p_Num_Video1]
		,y.[YTB_video_resolution_%240p_Den_Video1]
		,y.[YTB_video_resolution_360p_Num_Video1]
		,y.[YTB_video_resolution_360p_Den_Video1]
		,y.[YTB_video_mos_360p_Num_Video1]
		,y.[YTB_video_mos_360p_Den_Video1]
		,y.[YTB_video_resolution_%360p_Num_Video1]
		,y.[YTB_video_resolution_%360p_Den_Video1]
		,y.[YTB_video_resolution_480p_Num_Video1]
		,y.[YTB_video_resolution_480p_Den_Video1]
		,y.[YTB_video_mos_480p_Num_Video1]
		,y.[YTB_video_mos_480p_Den_Video1]
		,y.[YTB_video_resolution_%480p_Num_Video1]
		,y.[YTB_video_resolution_%480p_Den_Video1]
		,y.[YTB_video_resolution_720p_Num_Video1]
		,y.[YTB_video_resolution_720p_Den_Video1]
		,y.[YTB_video_mos_720p_Num_Video1]
		,y.[YTB_video_mos_720p_Den_Video1]
		,y.[YTB_video_resolution_%720p_Num_Video1]
		,y.[YTB_video_resolution_%720p_Den_Video1]
		,y.[YTB_video_resolution_1080p_Num_Video1]
		,y.[YTB_video_resolution_1080p_Den_Video1]
		,y.[YTB_video_mos_1080p_Num_Video1]
		,y.[YTB_video_mos_1080p_Den_Video1]
		,y.[YTB_video_resolution_%1080p_Num_Video1]
		,y.[YTB_video_resolution_%1080p_Den_Video1]

		,y.Avg_Video_StarTime_Num_Video2
		,y.avg_Video_startTime_Den_Video2
		,y.Reproductions_WO_Interruptions_Video2
		,y.Reproductions_WO_Interruptions_Den_Video2--,y.Success_Video_P3_num_Video2, y.Success_Video_P3_den_Video2
		,y.B4_Video2
		,y.[ReproduccionesHD_Video2]
		,y.[Successful video download_Video2]
		,y.[Reproducciones_Video2]
		,y.[Fails_Video2]
		,y.YTB_video_resolution_num_Video2
		,y.YTB_video_resolution_den_Video2
		,y.YTB_video_mos_num_Video2
		,y.YTB_video_mos_den_Video2
		,y.YTB_url_Video2
		,y.[YTB_1st_Resolution_Num_Video2]
		,y.[YTB_1st_Resolution_Den_Video2]
		,y.[YTB_2nd_Resolution_Num_Video2]
		,y.[YTB_2nd_Resolution_Den_Video2]
		,y.[YTB_FirstChangeFromInit_Num_Video2]
		,y.[YTB_FirstChangeFromInit_Den_Video2]
		,y.[YTB_initialResolution_Num_Video2]
		,y.[YTB_initialResolution_Den_Video2]
		,y.[YTB_finalResolution_Num_Video2]
		,y.[YTB_finalResolution_Den_Video2]
		,y.[YTB_video_resolution_144p_Num_Video2]
		,y.[YTB_video_resolution_144p_Den_Video2]
		,y.[YTB_video_mos_144p_Num_Video2]
		,y.[YTB_video_mos_144p_Den_Video2]
		,y.[YTB_video_resolution_%144p_Num_Video2]
		,y.[YTB_video_resolution_%144p_Den_Video2]
		,y.[YTB_video_resolution_240p_Num_Video2]
		,y.[YTB_video_resolution_240p_Den_Video2]
		,y.[YTB_video_mos_240p_Num_Video2]
		,y.[YTB_video_mos_240p_Den_Video2]
		,y.[YTB_video_resolution_%240p_Num_Video2]
		,y.[YTB_video_resolution_%240p_Den_Video2]
		,y.[YTB_video_resolution_360p_Num_Video2]
		,y.[YTB_video_resolution_360p_Den_Video2]
		,y.[YTB_video_mos_360p_Num_Video2]
		,y.[YTB_video_mos_360p_Den_Video2]
		,y.[YTB_video_resolution_%360p_Num_Video2]
		,y.[YTB_video_resolution_%360p_Den_Video2]
		,y.[YTB_video_resolution_480p_Num_Video2]
		,y.[YTB_video_resolution_480p_Den_Video2]
		,y.[YTB_video_mos_480p_Num_Video2]
		,y.[YTB_video_mos_480p_Den_Video2]
		,y.[YTB_video_resolution_%480p_Num_Video2]
		,y.[YTB_video_resolution_%480p_Den_Video2]
		,y.[YTB_video_resolution_720p_Num_Video2]
		,y.[YTB_video_resolution_720p_Den_Video2]
		,y.[YTB_video_mos_720p_Num_Video2]
		,y.[YTB_video_mos_720p_Den_Video2]
		,y.[YTB_video_resolution_%720p_Num_Video2]
		,y.[YTB_video_resolution_%720p_Den_Video2]
		,y.[YTB_video_resolution_1080p_Num_Video2]
		,y.[YTB_video_resolution_1080p_Den_Video2]
		,y.[YTB_video_mos_1080p_Num_Video2]
		,y.[YTB_video_mos_1080p_Den_Video2]
		,y.[YTB_video_resolution_%1080p_Num_Video2]
		,y.[YTB_video_resolution_%1080p_Den_Video2]

		,y.Avg_Video_StarTime_Num_Video3
		,y.avg_Video_startTime_Den_Video3
		,y.Reproductions_WO_Interruptions_Video3
		,y.Reproductions_WO_Interruptions_Den_Video3--,y.Success_Video_P3_num_Video3, y.Success_Video_P3_den_Video3
		,y.B4_Video3
		,y.[ReproduccionesHD_Video3]
		,y.[Successful video download_Video3]
		,y.[Reproducciones_Video3]
		,y.[Fails_Video3]
		,y.YTB_video_resolution_num_Video3
		,y.YTB_video_resolution_den_Video3
		,y.YTB_video_mos_num_Video3
		,y.YTB_video_mos_den_Video3
		,y.YTB_url_Video3
		,y.[YTB_1st_Resolution_Num_Video3]
		,y.[YTB_1st_Resolution_Den_Video3]
		,y.[YTB_2nd_Resolution_Num_Video3]
		,y.[YTB_2nd_Resolution_Den_Video3]
		,y.[YTB_FirstChangeFromInit_Num_Video3]
		,y.[YTB_FirstChangeFromInit_Den_Video3]
		,y.[YTB_initialResolution_Num_Video3]
		,y.[YTB_initialResolution_Den_Video3]
		,y.[YTB_finalResolution_Num_Video3]
		,y.[YTB_finalResolution_Den_Video3]
		,y.[YTB_video_resolution_144p_Num_Video3]
		,y.[YTB_video_resolution_144p_Den_Video3]
		,y.[YTB_video_mos_144p_Num_Video3]
		,y.[YTB_video_mos_144p_Den_Video3]
		,y.[YTB_video_resolution_%144p_Num_Video3]
		,y.[YTB_video_resolution_%144p_Den_Video3]
		,y.[YTB_video_resolution_240p_Num_Video3]
		,y.[YTB_video_resolution_240p_Den_Video3]
		,y.[YTB_video_mos_240p_Num_Video3]
		,y.[YTB_video_mos_240p_Den_Video3]
		,y.[YTB_video_resolution_%240p_Num_Video3]
		,y.[YTB_video_resolution_%240p_Den_Video3]
		,y.[YTB_video_resolution_360p_Num_Video3]
		,y.[YTB_video_resolution_360p_Den_Video3]
		,y.[YTB_video_mos_360p_Num_Video3]
		,y.[YTB_video_mos_360p_Den_Video3]
		,y.[YTB_video_resolution_%360p_Num_Video3]
		,y.[YTB_video_resolution_%360p_Den_Video3]
		,y.[YTB_video_resolution_480p_Num_Video3]
		,y.[YTB_video_resolution_480p_Den_Video3]
		,y.[YTB_video_mos_480p_Num_Video3]
		,y.[YTB_video_mos_480p_Den_Video3]
		,y.[YTB_video_resolution_%480p_Num_Video3]
		,y.[YTB_video_resolution_%480p_Den_Video3]
		,y.[YTB_video_resolution_720p_Num_Video3]
		,y.[YTB_video_resolution_720p_Den_Video3]
		,y.[YTB_video_mos_720p_Num_Video3]
		,y.[YTB_video_mos_720p_Den_Video3]
		,y.[YTB_video_resolution_%720p_Num_Video3]
		,y.[YTB_video_resolution_%720p_Den_Video3]
		,y.[YTB_video_resolution_1080p_Num_Video3]
		,y.[YTB_video_resolution_1080p_Den_Video3]
		,y.[YTB_video_mos_1080p_Num_Video3]
		,y.[YTB_video_mos_1080p_Den_Video3]
		,y.[YTB_video_resolution_%1080p_Num_Video3]
		,y.[YTB_video_resolution_%1080p_Den_Video3]

		,y.Avg_Video_StarTime_Num_Video4
		,y.avg_Video_startTime_Den_Video4
		,y.Reproductions_WO_Interruptions_Video4
		,y.Reproductions_WO_Interruptions_Den_Video4--,y.Success_Video_P3_num_Video4, y.Success_Video_P3_den_Video4
		,y.B4_Video4
		,y.[ReproduccionesHD_Video4]
		,y.[Successful video download_Video4]
		,y.[Reproducciones_Video4]
		,y.[Fails_Video4]
		,y.YTB_video_resolution_num_Video4
		,y.YTB_video_resolution_den_Video4
		,y.YTB_video_mos_num_Video4
		,y.YTB_video_mos_den_Video4
		,y.YTB_url_Video4
		,y.[YTB_1st_Resolution_Num_Video4]
		,y.[YTB_1st_Resolution_Den_Video4]
		,y.[YTB_2nd_Resolution_Num_Video4]
		,y.[YTB_2nd_Resolution_Den_Video4]
		,y.[YTB_FirstChangeFromInit_Num_Video4]
		,y.[YTB_FirstChangeFromInit_Den_Video4]
		,y.[YTB_initialResolution_Num_Video4]
		,y.[YTB_initialResolution_Den_Video4]
		,y.[YTB_finalResolution_Num_Video4]
		,y.[YTB_finalResolution_Den_Video4]
		,y.[YTB_video_resolution_144p_Num_Video4]
		,y.[YTB_video_resolution_144p_Den_Video4]
		,y.[YTB_video_mos_144p_Num_Video4]
		,y.[YTB_video_mos_144p_Den_Video4]
		,y.[YTB_video_resolution_%144p_Num_Video4]
		,y.[YTB_video_resolution_%144p_Den_Video4]
		,y.[YTB_video_resolution_240p_Num_Video4]
		,y.[YTB_video_resolution_240p_Den_Video4]
		,y.[YTB_video_mos_240p_Num_Video4]
		,y.[YTB_video_mos_240p_Den_Video4]
		,y.[YTB_video_resolution_%240p_Num_Video4]
		,y.[YTB_video_resolution_%240p_Den_Video4]
		,y.[YTB_video_resolution_360p_Num_Video4]
		,y.[YTB_video_resolution_360p_Den_Video4]
		,y.[YTB_video_mos_360p_Num_Video4]
		,y.[YTB_video_mos_360p_Den_Video4]
		,y.[YTB_video_resolution_%360p_Num_Video4]
		,y.[YTB_video_resolution_%360p_Den_Video4]
		,y.[YTB_video_resolution_480p_Num_Video4]
		,y.[YTB_video_resolution_480p_Den_Video4]
		,y.[YTB_video_mos_480p_Num_Video4]
		,y.[YTB_video_mos_480p_Den_Video4]
		,y.[YTB_video_resolution_%480p_Num_Video4]
		,y.[YTB_video_resolution_%480p_Den_Video4]
		,y.[YTB_video_resolution_720p_Num_Video4]
		,y.[YTB_video_resolution_720p_Den_Video4]
		,y.[YTB_video_mos_720p_Num_Video4]
		,y.[YTB_video_mos_720p_Den_Video4]
		,y.[YTB_video_resolution_%720p_Num_Video4]
		,y.[YTB_video_resolution_%720p_Den_Video4]
		,y.[YTB_video_resolution_1080p_Num_Video4]
		,y.[YTB_video_resolution_1080p_Den_Video4]
		,y.[YTB_video_mos_1080p_Num_Video4]
		,y.[YTB_video_mos_1080p_Den_Video4]
		,y.[YTB_video_resolution_%1080p_Num_Video4]
		,y.[YTB_video_resolution_%1080p_Den_Video4]

		
		-- Se le añade las REGIONES solo a carreteras y AVES, ya que en entidades puede meter desglose extra en los casos en los que se salga (carreteras sobre todo):
		-- 1) Este sera el campo relleno solo para ROADS - QLIK - ¿aves no?
		,case when (b.vf_environment = 'roads' and b.meas_Tech like '%Road%') then p.Region_VF else NULL end as Region_Road_VF		-- mete RX
		,case when (b.vf_environment = 'roads' and b.meas_Tech like '%Road%') then p.Region_OSP else NULL end as Region_Road_OSP	-- mete Rx

		-- 2) Este sera el campo relleno para TODO:
		,case when b.vf_environment ='ave' or (b.vf_environment = 'roads' and b.meas_Tech like '%Road%') then p.Region_VF else NULL end as Region_VF
		,case when b.vf_environment ='ave' or (b.vf_environment = 'roads' and b.meas_Tech like '%Road%') then p.Region_OSP else NULL end as Region_OSP

		,V9.POB13 as 'Poblacion'
		,b.ASideDevice, b.BSideDevice, b.SWVersion
		,y.YTB_Version

	into _RI_Data_result1
	from 
		_RI_Data_base b
			left outer join (	-- Cada codigo_ine es unico por provincia y CCAA
					select codigo_ine, provincia, CCAA	/*, count(*)*/	
							,Region_VF, Region_OSP
					from [AGRIDS].[dbo].vlcc_parcelas_OSP
					group by codigo_ine, provincia, CCAA ,Region_VF, Region_OSP
					--having count(*)>1
						) p on isnull(b.codigo_ine,0)=isnull(p.codigo_ine,0) 

			left outer join _RI_Data_e e 
			on b.codigo_ine=e.codigo_ine and b.vf_environment=e.vf_environment and  b.mnc=e.mnc and  isnull(b.meas_round,0)=isnull(e.meas_round,0)
				and b.meas_date=e.meas_date and b.meas_week=e.meas_week and b.Aggr_Type=e.Aggr_Type and b.Report_Type=e.Report_Type
				and b.meas_Tech=e.meas_Tech and b.vf_entity=e.vf_entity and b.test_type=e.test_type and b.direction=e.direction
				--and isnull(b.Region_Road_VF,0)=isnull(e.Region_Road_VF,0)
				--and isnull(b.Region_Road_OSP,0)=isnull(e.Region_Road_OSP,0)
				--and isnull(b.Region_VF,0)=isnull(e.Region_VF,0)
				--and isnull(b.Region_OSP,0)=isnull(e.Region_OSP,0)
				and isnull(b.ASideDevice,0)=isnull(e.ASideDevice,0)
				and isnull(b.BSideDevice,0)=isnull(e.BSideDevice,0)
				and isnull(b.SWVersion,0)=isnull(e.SWVersion,0)
				--and isnull(b.YTB_Version,0)=isnull(e.YTB_Version,0)
				--and isnull(b.YTB_url,0)=isnull(e.YTB_url,0)

			left outer join _RI_Data_l l 
			on b.codigo_ine=l.codigo_ine and b.vf_environment=l.vf_environment  and  b.mnc=l.mnc and isnull(b.meas_round,0)=isnull(l.meas_round,0)
				and b.meas_date=l.meas_date and b.meas_week=l.meas_week  and b.Aggr_Type=l.Aggr_Type and b.Report_Type=l.Report_Type
				and b.meas_Tech=l.meas_Tech and b.vf_entity=l.vf_entity and b.test_type=l.test_type and b.direction=l.direction
				--and isnull(b.Region_Road_VF,0)=isnull(l.Region_Road_VF,0)
				--and isnull(b.Region_Road_OSP,0)=isnull(l.Region_Road_OSP,0)
				--and isnull(b.Region_VF,0)=isnull(l.Region_VF,0)
				--and isnull(b.Region_OSP,0)=isnull(l.Region_OSP,0)
				and isnull(b.ASideDevice,0)=isnull(l.ASideDevice,0)
				and isnull(b.BSideDevice,0)=isnull(l.BSideDevice,0)
				and isnull(b.SWVersion,0)=isnull(l.SWVersion,0)
				--and isnull(b.YTB_Version,0)=isnull(l.YTB_Version,0)
				--and isnull(b.YTB_url,0)=isnull(l.YTB_url,0)

			left outer join _RI_Data_y y 
			on b.codigo_ine=y.codigo_ine and b.vf_environment=y.vf_environment  and  b.mnc=y.mnc and isnull(b.meas_round,0)=isnull(y.meas_round,0)
				and b.meas_date=y.meas_date and b.meas_week=y.meas_week  and b.Aggr_Type=y.Aggr_Type and b.Report_Type=y.Report_Type
				and b.meas_Tech=y.meas_Tech and b.vf_entity=y.vf_entity and b.test_type=y.test_type and b.direction=y.direction
				--and isnull(b.Region_Road_VF,0)=isnull(y.Region_Road_VF,0)
				--and isnull(b.Region_Road_OSP,0)=isnull(y.Region_Road_OSP,0)
				--and isnull(b.Region_VF,0)=isnull(y.Region_VF,0)
				--and isnull(b.Region_OSP,0)=isnull(y.Region_OSP,0)
				and isnull(b.ASideDevice,0)=isnull(y.ASideDevice,0)
				and isnull(b.BSideDevice,0)=isnull(y.BSideDevice,0)
				and isnull(b.SWVersion,0)=isnull(y.SWVersion,0)
				--and isnull(b.YTB_Version,0)=isnull(y.YTB_Version,0)
				--and isnull(b.YTB_url,0)=isnull(y.YTB_url,0)

			left join (
					select max(pob13) as pob13,entity_name --Por si hay duplicados
					from [AGRIDS_v2].[dbo].[lcc_ciudades_tipo_Project_V9] 
					group by entity_name
					) V9
			on b.vf_entity=V9.entity_name
   
	-------------
	insert into [dbo].[_RI_Data_Ejecucion]
	select 'Fin 8. Primer union de todas las tablas temporales -> _RI_Data_result1', getdate()


	---------------------------------------------------------------
	-- 9. Updates en _RI_Data_result1
	---------------------------------------------------------------
	print '9. Updates en _RI_Data_result1' 
	-------------
	-- Unificamos el codigo INE para las entidades que no sean roads ni carreteras
	update _RI_Data_result1
	set codigo_ine=e.ine
	from _RI_Data_result1 r, [AGRIDS_v2].[dbo].[lcc_ciudades_tipo_Project_V9] e
	where r.entity=e.entity_name 
			--Hay parcelas de roads en entidades que no son roads(su tipo de medida no contiene Road)
			and (r.environment not in ('roads','ave') or (r.environment = 'roads' and r.meas_Tech not like '%Road%'))

	-----------
	-- Se actualiza la info de PROVINCIA y CCAA a estas entidades:
	update _RI_Data_result1
		set Provincia=e.Provincia,
			CCAA=e.CCAA,
			Region_VF= e.Region_VF,		-- REPLACE(e.Zona_VF, 'Region', 'R'),		-- mete RegionX
			Region_OSP=e.Region_OSP		-- REPLACE(e.Zona_OSP, 'Zona', 'R')			-- mete ZonaX - que es la que queremos
		from _RI_Data_result1 r, [AGRIDS_v2].[dbo].[lcc_ciudades_tipo_Project_V9] e
		where r.entity=e.entity_name 
			--Hay parcelas de roads en entidades que no son roads (su tipo de medida no contiene Road)
			and (r.environment not in ('roads','ave') or (r.environment = 'roads' and r.meas_Tech not like '%Road%'))

	-------------
	-- Quitamos el codigo INE para roads y carreteras 
	update _RI_Data_result1
	set codigo_ine=''
	where environment ='ave'or (environment = 'roads' and meas_Tech like '%Road%')

	-------------
	insert into [dbo].[_RI_Data_Ejecucion]
	select 'Fin 9. Updates en _RI_Data_result1', getdate()

	-------------------------------------
	-- 10. Montamos la _result1_info:
	-------------------------------------
	print '10. Se monta _RI_Data_result1_info - cuenta de entornos diferentes' 
	-------------
	exec dbo.sp_lcc_dropifexists '_RI_Data_result1_info'
	select codigo_ine,count(distinct environment) as 'num_entornos',
			mnc, meas_round, meas_date, meas_week, meas_Tech, entity, id_vdf, id_osp, id_osp_noComp, Report_Type 
	into _RI_Data_result1_info
	from _RI_Data_result1
	group by codigo_ine, mnc, meas_round, meas_date, meas_week, meas_Tech, entity, id_vdf, id_osp, id_osp_noComp, Report_Type 

	-------------
	insert into [dbo].[_RI_Data_Ejecucion]
	select 'Fin 10. Se monta _RI_Data_result1_info - cuenta de entornos diferentes', getdate()


	---------------------------------------------------------------
	-- 11. Montamos la tabla -> _RI_Data_result_INE_only - r:
	---------------------------------------------------------------
	print '11. Se monta Montamos la tabla -> _RI_Data_result_INE_only' 
	-------------
	exec dbo.sp_lcc_dropifexists '_RI_Data_result_INE_only'

	select 	
		r.codigo_ine, r.Provincia, r.CCAA,
		r.environment,r.operator,r.mnc,r.meas_round,r.meas_date,r.meas_week,r.meas_Tech,r.test_type,r.Direction,
	
		-- Indices:
		r.Report_Type,
		r.id_osp,
		r.id_osp_noComp,
		r.id_vdf,
	-------------------------------------------------------
	--Quitamos la ronda al nombre de entidad para aves/roads
	--(cruzamos luego entidad con tablas lcc_ciudades_tipo_Project_V9 pero no afecta porque 
	--es left join y en esa tablas no registramos info de aves/roads)
	-------------------------------------------------------
		case 
			when (r.environment ='ave' or (r.environment = 'roads' and r.meas_Tech like '%Road%')) 
				then reverse(Substring(reverse(r.entity),charindex('-',reverse(r.entity))+1,len(reverse(r.entity))))
		else r.entity end as 'entity',
		case when r.entity like '%-R[0-9]%' 
			then Substring(r.entity,len(r.entity)-charindex('-',reverse(r.entity))+2,3)
		else '' end as 'Round',
		max(r.Poblacion/Num_entornos) as 'Poblacion'

		-- General:
		,sum(r.[Num_tests]) as [Num_tests]
		,sum(r.[Failed]) as [Failed]
		,sum(r.[Dropped]) as [Dropped]
		,sum(r.[Session_time_Num]) as [Session_time_Num] 
		,sum(r.[Throughput_Den]) as [Throughput_Den]
		,sum(r.[Session_time_Den]) as [Session_time_Den]
		,sum(r.[Throughput_Num]) as [Throughput_Num]
		,max(r.[Throughput_Max]) as [Throughput_Max]
		,sum(r.[Throughput_3M_Num]) as [Throughput_3M_Num]
		,sum(r.[Throughput_1M_Num]) as [Throughput_1M_Num]
		,sum(r.[Throughput_128K_Num]) as [Throughput_128K_Num]
		,sum(r.[Throughput_64K_Num]) as [Throughput_64K_Num]
		,sum(r.[Throughput_384K_Num]) as [Throughput_384K_Num]
		,sum(r.Throughput_with_Error_Den) as Throughput_with_Error_Den
		,sum(r.Throughput_with_Error_Num) as Throughput_with_Error_Num
		,sum(r.[WEB_IP_ACCESS_TIME_NUM]) as [WEB_IP_ACCESS_TIME_NUM]
		,sum(r.[WEB_IP_ACCESS_TIME_DEN]) as [WEB_IP_ACCESS_TIME_DEN]
		,sum(r.[WEB_HTTP_TRANSFER_TIME_NUM]) as [WEB_HTTP_TRANSFER_TIME_NUM]
		,sum(r.[WEB_HTTP_TRANSFER_TIME_DEN]) as [WEB_HTTP_TRANSFER_TIME_DEN]
		,sum(r.[WEB_IP_ACCESS_TIME_HTTPS_NUM]) as [WEB_IP_ACCESS_TIME_HTTPS_NUM] 
		,sum(r.[WEB_IP_ACCESS_TIME_HTTPS_DEN]) as [WEB_IP_ACCESS_TIME_HTTPS_DEN] 
		,sum(r.[WEB_TRANSFER_TIME_HTTPS_NUM]) as [WEB_TRANSFER_TIME_HTTPS_NUM]
		,sum(r.[WEB_TRANSFER_TIME_HTTPS_DEN]) as [WEB_TRANSFER_TIME_HTTPS_DEN]
		,sum(r.[WEB_IP_ACCESS_TIME_PUBLIC_NUM]) as [WEB_IP_ACCESS_TIME_PUBLIC_NUM]
		,sum(r.[WEB_IP_ACCESS_TIME_PUBLIC_DEN]) as [WEB_IP_ACCESS_TIME_PUBLIC_DEN]
		,sum(r.[WEB_TRANSFER_TIME_PUBLIC_NUM]) as [WEB_TRANSFER_TIME_PUBLIC_NUM]
		,sum(r.[WEB_TRANSFER_TIME_PUBLIC_DEN]) as [WEB_TRANSFER_TIME_PUBLIC_DEN]

		-- Technology:
		,sum(r.[Radio_2G_use_Num]) as [Radio_2G_use_Num]
		,sum(r.[Radio_3G_use_Num]) as [Radio_3G_use_Num]
		,sum(r.[Radio_4G_use_Num]) as [Radio_4G_use_Num]
		,sum(r.[Radio_use_Den]) as [Radio_use_Den]
		,sum(r.[Radio_2G_use_Den]) as [Radio_2G_use_Den]
		,sum(r.[Radio_3G_use_Den])as [Radio_3G_use_Den]
		,sum(r.[Radio_4G_use_Den]) as [Radio_4G_use_Den]

		,sum(r.[Radio_U2100_use_Num]) as [Radio_U2100_use_Num]
		,sum(r.[Radio_U900_use_Num]) as [Radio_U900_use_Num]
		,sum(r.[Radio_LTE2100_use_Num]) as [Radio_LTE2100_use_Num]
		,sum(r.[Radio_LTE2600_use_Num]) as [Radio_LTE2600_use_Num]
		,sum(r.[Radio_LTE1800_use_Num]) as [Radio_LTE1800_use_Num]
		,sum(r.[Radio_LTE800_use_Num]) as [Radio_LTE800_use_Num]
		,sum(r.[Radio_Band_Use_Den]) as [Radio_Band_Use_Den]	
		,sum(r.[Radio_U2100_use_Den]) as [Radio_U2100_use_Den]
		,sum(r.[Radio_U900_use_Den]) as [Radio_U900_use_Den]
		,sum(r.[Radio_LTE2100_use_Den]) as [Radio_LTE2100_use_Den]
		,sum(r.[Radio_LTE2600_use_Den]) as [Radio_LTE2600_use_Den]
		,sum(r.[Radio_LTE1800_use_Den]) as [Radio_LTE1800_use_Den]
		,sum(r.[Radio_LTE800_use_Den]) as [Radio_LTE800_use_Den]

		,sum(r.[3G_DualCarrier_use_Num]) as [3G_DualCarrier_use_Num]
		,sum(r.[3G_DualCarrier_use_Den]) as [3G_DualCarrier_use_Den]
		,sum(r.[3G_DC_2100_use_Num]) as [3G_DC_2100_use_Num]
		,sum(r.[3G_DC_2100_use_Den]) as [3G_DC_2100_use_Den]
		,sum(r.[3G_DC_900_use_Num]) as [3G_DC_900_use_Num]
		,sum(r.[3G_DC_900_use_Den]) as [3G_DC_900_use_Den]

		,sum(r.[3G_NumCodes_use_Num]) as [3G_NumCodes_use_Num]
		,sum(r.[3G_NumCodes_use_Den]) as [3G_NumCodes_use_Den]

		,sum(r.[3G_QPSK_use_Num]) as [3G_QPSK_use_Num]
		,sum(r.[3G_16QAM_use_Num]) as [3G_16QAM_use_Num]
		,sum(r.[3G_64QAM_use_Num]) as [3G_64QAM_use_Num]
		,sum(r.[3G_QPSK_use_Den]) as [3G_QPSK_use_Den]
		,sum(r.[3G_16QAM_use_Den]) as [3G_16QAM_use_Den]
		,sum(r.[3G_64QAM_use_Den]) as [3G_64QAM_use_Den]

		,sum(r.[3G_%_SF22_Num]) as[3G_%_SF22_Num]
		,sum(r.[3G_%_SF22andSF42_Num]) as [3G_%_SF22andSF42_Num]
		,sum(r.[3G_%_SF4_Num]) as [3G_%_SF4_Num]
		,sum(r.[3G_%_SF42_Num]) as [3G_%_SF42_Num]
		,sum(r.[3G_%_SF22_Den]) as [3G_%_SF22_Den]
		,sum(r.[3G_%_SF22andSF42_Den]) as [3G_%_SF22andSF42_Den]
		,sum(r.[3G_%_SF4_Den]) as [3G_%_SF4_Den]
		,sum(r.[3G_%_SF42_Den]) as [3G_%_SF42_Den]
		,sum(r.[3G_%_TTI2ms_Num]) as [3G_%_TTI2ms_Num]
		,sum(r.[3G_%_TTI2ms_Den]) as [3G_%_TTI2ms_Den]

		,sum(r.[RSCP_Lin_Num]) as [RSCP_Lin_Num]
		,sum(r.[EcI0_Lin_Num]) as [EcI0_Lin_Num]
		,sum(r.[RSCP_Lin_Den]) as [RSCP_Lin_Den]
		,sum(r.[EcI0_Lin_Den]) as [EcI0_Lin_Den]

		-- Performance:
		,sum(r.[3G_CQI]) as [3G_CQI]
		,sum(r.[3G_DataStats_Den]) as [3G_DataStats_Den]
		,sum(r.[CQI_U900_Num]) as [CQI_U900_Num] 
		,sum(r.[CQI_U900_Den]) as [CQI_U900_Den]
		,sum(r.[CQI_U2100_Num]) as [CQI_U2100_Num]
		,sum(r.[CQI_U2100_Den]) as [CQI_U2100_Den]

		,sum(r.[HSPA_PCT_Num]) as [HSPA_PCT_Num]
		,sum(r.[HSPA+_PCT_Num]) as [HSPA+_PCT_Num]
		,sum(r.[HSPA+_DC_PCT_Num]) as [HSPA+_DC_PCT_Num]
		,sum(r.[HSPA_PCT_Den]) as [HSPA_PCT_Den]
		,sum(r.[HSPA+_PCT_Den]) as [HSPA+_PCT_Den]
		,sum(r.[HSPA+_DC_PCT_Den]) as [HSPA+_DC_PCT_Den]

		,sum(r.[UL_Inter_Lin_Num]) as [UL_Inter_Lin_Num]
		,sum(r.[UL_Inter_Lin_Den]) as [UL_Inter_Lin_Den]
	
		-- Performance LTE:
		,sum(r.[CQI_4G_Num]) as [CQI_4G_Num]
		,sum(r.[CQI_L800_Num]) as [CQI_L800_Num]
		,sum(r.[CQI_L1800_Num]) as [CQI_L1800_Num]
		,sum(r.[CQI_L2100_Num]) as [CQI_L2100_Num]
		,sum(r.[CQI_L2600_Num]) as [CQI_L2600_Num]
		,sum(r.[CQI_4G_Den]) as [CQI_4G_Den]
		,sum(r.[CQI_L800_Den]) as [CQI_L800_Den]
		,sum(r.[CQI_L1800_Den]) as [CQI_L1800_Den]
		,sum(r.[CQI_L2100_Den]) as [CQI_L2100_Den]
		,sum(r.[CQI_L2600_Den]) as [CQI_L2600_Den]

		,sum(r.[LTE_5Mhz_SC_Use_Num]) as [LTE_5Mhz_SC_Use_Num]
		,sum(r.[LTE_10Mhz_SC_Use_Num]) as [LTE_10Mhz_SC_Use_Num]
		,sum(r.[LTE_15Mhz_SC_Use_Num]) as [LTE_15Mhz_SC_Use_Num]
		,sum(r.[LTE_20Mhz_SC_Use_Num]) as [LTE_20Mhz_SC_Use_Num]
		,sum(r.[LTE_15Mhz_CA_Use_Num]) as [LTE_15Mhz_CA_Use_Num]
		,sum(r.[LTE_20Mhz_CA_Use_Num]) as [LTE_20Mhz_CA_Use_Num]
		,sum(r.[LTE_25Mhz_CA_Use_Num]) as [LTE_25Mhz_CA_Use_Num]
		,sum(r.[LTE_30Mhz_CA_Use_Num]) as [LTE_30Mhz_CA_Use_Num]
		,sum(r.[LTE_35Mhz_CA_Use_Num]) as [LTE_35Mhz_CA_Use_Num]
		,sum(r.[LTE_40Mhz_CA_Use_Num]) as [LTE_40Mhz_CA_Use_Num]
		,sum(r.[LTE_5Mhz_SC_Use_Den]) as [LTE_5Mhz_SC_Use_Den]
		,sum(r.[LTE_10Mhz_SC_Use_Den]) as [LTE_10Mhz_SC_Use_Den]
		,sum(r.[LTE_15Mhz_SC_Use_Den]) as [LTE_15Mhz_SC_Use_Den]
		,sum(r.[LTE_20Mhz_SC_Use_Den]) as [LTE_20Mhz_SC_Use_Den]
		,sum(r.[LTE_15Mhz_CA_Use_Den]) as [LTE_15Mhz_CA_Use_Den]
		,sum(r.[LTE_20Mhz_CA_Use_Den]) as [LTE_20Mhz_CA_Use_Den]
		,sum(r.[LTE_25Mhz_CA_Use_Den]) as [LTE_25Mhz_CA_Use_Den]
		,sum(r.[LTE_30Mhz_CA_Use_Den]) as [LTE_30Mhz_CA_Use_Den]
		,sum(r.[LTE_35Mhz_CA_Use_Den]) as [LTE_35Mhz_CA_Use_Den]
		,sum(r.[LTE_40Mhz_CA_Use_Den]) as [LTE_40Mhz_CA_Use_Den]
		,sum(r.[LTE_BW_use_den]) as[LTE_BW_use_den]

		,sum(r.[4G_RBs_use_Num]) as [4G_RBs_use_Num]
		,sum(r.[4G_RBs_use_Den]) as [4G_RBs_use_Den]

		,sum(r.[4G_TM1_use_Num]) as [4G_TM1_use_Num]
		,sum(r.[4G_TM2_use_Num]) as [4G_TM2_use_Num]
		,sum(r.[4G_TM3_use_Num]) as [4G_TM3_use_Num]
		,sum(r.[4G_TM4_use_Num]) as [4G_TM4_use_Num]
		,sum(r.[4G_TM5_use_Num]) as [4G_TM5_use_Num]
		,sum(r.[4G_TM6_use_Num]) as [4G_TM6_use_Num]
		,sum(r.[4G_TM7_use_Num]) as [4G_TM7_use_Num]
		,sum(r.[4G_TM8_use_Num]) as [4G_TM8_use_Num]
		,sum(r.[4G_TM9_use_Num]) as [4G_TM9_use_Num]
		,sum(r.[4G_TMInvalid_use_Num]) as [4G_TMInvalid_use_Num]
		,sum(r.[4G_TMUnknown_use_Num]) as [4G_TMUnknown_use_Num]
		,sum(r.[4G_TM_Den]) as [4G_TM_Den]

		-- Technology LTE:
		,sum(r.[4G_%CA_Num]) as [4G_%CA_Num]
		,sum(r.[4G_%CA_Den]) as [4G_%CA_Den]
		,sum(r.[4G_BPSK_Use_Num]) as [4G_BPSK_Use_Num]
		,sum(r.[4G_QPSK_Use_Num]) as [4G_QPSK_Use_Num]
		,sum(r.[4G_16QAM_Use_Num]) as [4G_16QAM_Use_Num]
		,sum(r.[4G_64QAM_Use_Num]) as [4G_64QAM_Use_Num]
		,sum(r.[4G_BPSK_Use_Den]) as [4G_BPSK_Use_Den]
		,sum(r.[4G_QPSK_Use_Den]) as [4G_QPSK_Use_Den]
		,sum(r.[4G_16QAM_Use_Den]) as [4G_16QAM_Use_Den]
		,sum(r.[4G_64QAM_Use_Den]) as [4G_64QAM_Use_Den]
		,sum(r.[4G_stats_Den]) as [4G_stats_Den]
		,sum(r.[RSRP_Lin_Num]) as [RSRP_Lin_Num]
		,sum(r.[RSRQ_Lin_Num]) as [RSRQ_Lin_Num]
		,sum(r.[SINR_Lin_Num]) as [SINR_Lin_Num]	
		,sum(r.[RSRP_Lin_Den]) as [RSRP_Lin_Den]
		,sum(r.[RSRQ_Lin_Den]) as [RSRQ_Lin_Den]
		,sum(r.[SINR_Lin_Den]) as [SINR_Lin_Den]

		-- New KPIs:
		,sum(r.[MIMO_num]) as [MIMO_num]
		,sum(r.[RI1_num]) as [RI1_num]
		,sum(r.[RI2_num]) as [RI2_num]
		,sum(r.[MIMO_den]) as [MIMO_den]
		,sum(r.[RI1_den]) as [RI1_den]
		,sum(r.[RI2_den]) as [RI2_den]
		,sum(r.[RBs_Allocated_Den]) as [RBs_Allocated_Den]
		,sum(r.[RBs_Allocated_Num]) as [RBs_Allocated_Num]
		,max(r.[RBs_Allocated_Max]) as [4G_RBs_Allocated_Max]

		-- Rangos Nuevos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G y en las latencias:	
		,sum(r.[1_N]) as [1_N]		,sum(r.[2_N]) as [2_N]		,sum(r.[3_N]) as [3_N]		,sum(r.[4_N]) as [4_N]		,sum(r.[5_N]) as [5_N]
		,sum(r.[6_N]) as [6_N]		,sum(r.[7_N]) as [7_N]		,sum(r.[8_N]) as [8_N]		,sum(r.[9_N]) as [9_N]		,sum(r.[10_N]) as [10_N]
		,sum(r.[11_N]) as [11_N]	,sum(r.[12_N]) as [12_N]	,sum(r.[13_N]) as [13_N]	,sum(r.[14_N]) as [14_N]	,sum(r.[15_N]) as [15_N]
		,sum(r.[16_N]) as [16_N]	,sum(r.[17_N]) as [17_N]	,sum(r.[18_N]) as [18_N]	,sum(r.[19_N]) as [19_N]	,sum(r.[20_N]) as [20_N]
		,sum(r.[21_N]) as [21_N]	,sum(r.[22_N]) as [22_N]	,sum(r.[23_N]) as [23_N]	,sum(r.[24_N]) as [24_N]	,sum(r.[25_N]) as [25_N]
		,sum(r.[26_N]) as [26_N]	,sum(r.[27_N]) as [27_N]	,sum(r.[28_N]) as [28_N]	,sum(r.[29_N]) as [29_N]	,sum(r.[30_N]) as [30_N]
		,sum(r.[31_N]) as [31_N]	,sum(r.[32_N]) as [32_N]	,sum(r.[33_N]) as [33_N]	,sum(r.[34_N]) as [34_N]	,sum(r.[35_N]) as [35_N]
		,sum(r.[36_N]) as [36_N]	,sum(r.[37_N]) as [37_N]	,sum(r.[38_N]) as [38_N]	,sum(r.[39_N]) as [39_N]	,sum(r.[40_N]) as [40_N]
		,sum(r.[41_N]) as [41_N]	,sum(r.[42_N]) as [42_N]	,sum(r.[43_N]) as [43_N]	,sum(r.[44_N]) as [44_N]	,sum(r.[45_N]) as [45_N]
		,sum(r.[46_N]) as [46_N]	,sum(r.[47_N]) as [47_N]	,sum(r.[48_N]) as [48_N]	,sum(r.[49_N]) as [49_N]	,sum(r.[50_N]) as [50_N]
		,sum(r.[51_N]) as [51_N]	,sum(r.[52_N]) as [52_N]	,sum(r.[53_N]) as [53_N]	,sum(r.[54_N]) as [54_N]	,sum(r.[55_N]) as [55_N]
		,sum(r.[56_N]) as [56_N]	,sum(r.[57_N]) as [57_N]	,sum(r.[58_N]) as [58_N]	,sum(r.[59_N]) as [59_N]	,sum(r.[60_N]) as [60_N]
		,sum(r.[61_N]) as [61_N]	,sum(r.[62_N]) as [62_N]	,sum(r.[63_N]) as [63_N]	,sum(r.[64_N]) as [64_N]	,sum(r.[65_N]) as [65_N]	
		,sum(r.[66_N]) as [66_N]

		-- Rangos Antiguos - el nombre del rango se reuitilizara en los rangos de thput 3G/4G : 
		 ,sum(r.[1]) as [1]  ,sum(r.[2]) as [2]  ,sum(r.[3]) as [3]  ,sum(r.[4]) as [4]  ,sum(r.[5]) as [5]
		 ,sum(r.[6]) as [6]  ,sum(r.[7]) as [7]  ,sum(r.[8]) as [8]  ,sum(r.[9]) as [9]  ,sum(r.[10]) as [10]
		 ,sum(r.[11]) as [11] ,sum(r.[12]) as [12] ,sum(r.[13]) as [13] ,sum(r.[14]) as [14] ,sum(r.[15]) as [15]
		 ,sum(r.[16]) as [16] ,sum(r.[17]) as [17] ,sum(r.[18]) as [18] ,sum(r.[19]) as [19] ,sum(r.[20]) as [20]
		 ,sum(r.[21]) as [21] ,sum(r.[22]) as [22] ,sum(r.[23]) as [23] ,sum(r.[24]) as [24] ,sum(r.[25]) as [25]
		 ,sum(r.[26]) as [26] ,sum(r.[27]) as [27] ,sum(r.[28]) as [28] ,sum(r.[29]) as [29] ,sum(r.[30]) as [30]
		 ,sum(r.[31]) as [31] ,sum(r.[32]) as [32] ,sum(r.[33]) as [33] ,sum(r.[34]) as [34] ,sum(r.[35]) as [35]
		 ,sum(r.[36]) as [36] ,sum(r.[37]) as [37] ,sum(r.[38]) as [38] ,sum(r.[39]) as [39] ,sum(r.[40]) as [40]
		 ,sum(r.[41]) as [41]

		-- Info YTB y LAT:
		,sum(r.[Latency_num]) as [Latency_num]
		,sum(r.[Latency_den]) as [Latency_den]
		,r.Methodology as Methodology					
		,sum(r.[Avg_Video_StarTime_Num]) as [Avg_Video_StarTime_Num]
		,sum(r.[Avg_Video_startTime_Den]) as [Avg_Video_startTime_Den]
		,sum(r.[Reproductions_WO_Interruptions]) as [Reproductions_WO_Interruptions]
		,sum(r.[Reproductions_WO_Interruptions_Den]) as [Reproductions_WO_Interruptions_Den]
		--,sum(r.[Success_Video_P3_num]) as [Success_Video_P3_num]
		--,sum(r.[Success_Video_P3_den]) as [Success_Video_P3_den]
		,case 
			when sum(isnull(r.[B4], 0))>0 then sum(r.[B4])
			when sum(r.[ReproduccionesHD])<sum(r.[Successful video download]) then sum(r.[ReproduccionesHD]) 
		else sum(r.[Successful video download])	end as HD_reproduction_rate_num
		,case 
			when sum(isnull(r.[B4], 0))>0 then sum(r.[Successful video download])
			when sum(r.[ReproduccionesHD])<sum(r.[Successful video download]) then sum(r.[Reproducciones]) 
		else sum(r.[Reproducciones]) end as HD_reproduction_rate_den
		,sum(r.YTB_video_resolution_num) as YTB_video_resolution_num
		,sum(r.YTB_video_resolution_den) as YTB_video_resolution_den
		,sum(r.YTB_video_mos_num) as YTB_video_mos_num
		,sum(r.YTB_video_mos_den) as YTB_video_mos_den
		,max(r.YTB_url) as YTB_url
		,sum(r.[B4]) as [B4]
		,sum(r.[ReproduccionesHD]) as [ReproduccionesHD]
		,sum(r.[Successful video download]) as [Successful video download] 
		,sum(r.[Reproducciones]) as [Reproducciones]
		,sum(r.[YTB_1st_Resolution_Num]) as [YTB_1st_Resolution_Num]
		,sum(r.[YTB_1st_Resolution_Den]) as [YTB_1st_Resolution_Den]
		,sum(r.[YTB_2nd_Resolution_Num]) as [YTB_2nd_Resolution_Num]
		,sum(r.[YTB_2nd_Resolution_Den]) as [YTB_2nd_Resolution_Den]
		,sum(r.[YTB_FirstChangeFromInit_Num]) as [YTB_FirstChangeFromInit_Num]
		,sum(r.[YTB_FirstChangeFromInit_Den]) as [YTB_FirstChangeFromInit_Den]
		,sum(r.[YTB_initialResolution_Num]) as [YTB_initialResolution_Num]
		,sum(r.[YTB_initialResolution_Den]) as [YTB_initialResolution_Den]
		,sum(r.[YTB_finalResolution_Num]) as [YTB_finalResolution_Num]
		,sum(r.[YTB_finalResolution_Den]) as [YTB_finalResolution_Den]
		,sum(r.[YTB_video_resolution_144p_Num]) as [YTB_video_resolution_144p_Num]
		,sum(r.[YTB_video_resolution_144p_Den]) as [YTB_video_resolution_144p_Den]
		,sum(r.[YTB_video_mos_144p_Num]) as [YTB_video_mos_144p_Num]
		,sum(r.[YTB_video_mos_144p_Den]) as [YTB_video_mos_144p_Den]
		,sum(r.[YTB_video_resolution_%144p_Num]) as [YTB_video_resolution_%144p_Num]
		,sum(r.[YTB_video_resolution_%144p_Den]) as [YTB_video_resolution_%144p_Den]
		,sum(r.[YTB_video_resolution_240p_Num]) as [YTB_video_resolution_240p_Num]
		,sum(r.[YTB_video_resolution_240p_Den]) as [YTB_video_resolution_240p_Den]
		,sum(r.[YTB_video_mos_240p_Num]) as [YTB_video_mos_240p_Num]
		,sum(r.[YTB_video_mos_240p_Den]) as [YTB_video_mos_240p_Den]
		,sum(r.[YTB_video_resolution_%240p_Num]) as [YTB_video_resolution_%240p_Num]
		,sum(r.[YTB_video_resolution_%240p_Den]) as [YTB_video_resolution_%240p_Den]
		,sum(r.[YTB_video_resolution_360p_Num]) as [YTB_video_resolution_360p_Num]
		,sum(r.[YTB_video_resolution_360p_Den]) as [YTB_video_resolution_360p_Den]
		,sum(r.[YTB_video_mos_360p_Num]) as [YTB_video_mos_360p_Num]
		,sum(r.[YTB_video_mos_360p_Den]) as [YTB_video_mos_360p_Den]
		,sum(r.[YTB_video_resolution_%360p_Num]) as [YTB_video_resolution_%360p_Num]
		,sum(r.[YTB_video_resolution_%360p_Den]) as [YTB_video_resolution_%360p_Den]
		,sum(r.[YTB_video_resolution_480p_Num]) as [YTB_video_resolution_480p_Num]
		,sum(r.[YTB_video_resolution_480p_Den]) as [YTB_video_resolution_480p_Den]
		,sum(r.[YTB_video_mos_480p_Num]) as [YTB_video_mos_480p_Num]
		,sum(r.[YTB_video_mos_480p_Den]) as [YTB_video_mos_480p_Den]
		,sum(r.[YTB_video_resolution_%480p_Num]) as [YTB_video_resolution_%480p_Num]
		,sum(r.[YTB_video_resolution_%480p_Den]) as [YTB_video_resolution_%480p_Den]
		,sum(r.[YTB_video_resolution_720p_Num]) as [YTB_video_resolution_720p_Num]
		,sum(r.[YTB_video_resolution_720p_Den]) as [YTB_video_resolution_720p_Den]
		,sum(r.[YTB_video_mos_720p_Num]) as [YTB_video_mos_720p_Num]
		,sum(r.[YTB_video_mos_720p_Den]) as [YTB_video_mos_720p_Den]
		,sum(r.[YTB_video_resolution_%720p_Num]) as [YTB_video_resolution_%720p_Num]
		,sum(r.[YTB_video_resolution_%720p_Den]) as [YTB_video_resolution_%720p_Den]
		,sum(r.[YTB_video_resolution_1080p_Num]) as [YTB_video_resolution_1080p_Num]
		,sum(r.[YTB_video_resolution_1080p_Den]) as [YTB_video_resolution_1080p_Den]
		,sum(r.[YTB_video_mos_1080p_Num]) as [YTB_video_mos_1080p_Num]
		,sum(r.[YTB_video_mos_1080p_Den]) as [YTB_video_mos_1080p_Den]
		,sum(r.[YTB_video_resolution_%1080p_Num]) as [YTB_video_resolution_%1080p_Num]
		,sum(r.[YTB_video_resolution_%1080p_Den]) as [YTB_video_resolution_%1080p_Den]

		,sum(r.[Avg_Video_StarTime_Num_Video1]) as [Avg_Video_StarTime_Num_Video1]
		,sum(r.[Avg_Video_startTime_Den_Video1]) as [Avg_Video_startTime_Den_Video1]
		,sum(r.[Reproductions_WO_Interruptions_Video1]) as [Reproductions_WO_Interruptions_Video1]
		,sum(r.[Reproductions_WO_Interruptions_Den_Video1]) as [Reproductions_WO_Interruptions_Den_Video1]
		--,sum(r.[Success_Video_P3_num_Video1]) as [Success_Video_P3_num_Video1]
		--,sum(r.[Success_Video_P3_den_Video1]) as [Success_Video_P3_den_Video1]
		,case 
			when sum(isnull(r.[B4_Video1], 0))>0 then sum(r.[B4_Video1])
			when sum(r.[ReproduccionesHD_Video1])<sum(r.[Successful video download_Video1]) then sum(r.[ReproduccionesHD_Video1]) 
		else sum(r.[Successful video download_Video1])	end as HD_reproduction_rate_num_Video1
		,case 
			when sum(isnull(r.[B4_Video1], 0))>0 then sum(r.[Successful video download_Video1])
			when sum(r.[ReproduccionesHD_Video1])<sum(r.[Successful video download_Video1]) then sum(r.[Reproducciones_Video1]) 
		else sum(r.[Reproducciones_Video1]) end as HD_reproduction_rate_den_Video1
		,sum(r.YTB_video_resolution_num_Video1) as YTB_video_resolution_num_Video1
		,sum(r.YTB_video_resolution_den_Video1) as YTB_video_resolution_den_Video1
		,sum(r.YTB_video_mos_num_Video1) as YTB_video_mos_num_Video1
		,sum(r.YTB_video_mos_den_Video1) as YTB_video_mos_den_Video1
		,max(r.YTB_url_Video1) as YTB_url_Video1
		,sum(r.[B4_Video1]) as [B4_Video1]
		,sum(r.[ReproduccionesHD_Video1]) as [ReproduccionesHD_Video1]
		,sum(r.[Successful video download_Video1]) as [Successful video download_Video1] 
		,sum(r.[Reproducciones_Video1]) as [Reproducciones_Video1]
		,sum(r.[Fails_Video1]) as [Fails_Video1]
		,sum(r.[YTB_1st_Resolution_Num_Video1]) as [YTB_1st_Resolution_Num_Video1]
		,sum(r.[YTB_1st_Resolution_Den_Video1]) as [YTB_1st_Resolution_Den_Video1]
		,sum(r.[YTB_2nd_Resolution_Num_Video1]) as [YTB_2nd_Resolution_Num_Video1]
		,sum(r.[YTB_2nd_Resolution_Den_Video1]) as [YTB_2nd_Resolution_Den_Video1]
		,sum(r.[YTB_FirstChangeFromInit_Num_Video1]) as [YTB_FirstChangeFromInit_Num_Video1]
		,sum(r.[YTB_FirstChangeFromInit_Den_Video1]) as [YTB_FirstChangeFromInit_Den_Video1]
		,sum(r.[YTB_initialResolution_Num_Video1]) as [YTB_initialResolution_Num_Video1]
		,sum(r.[YTB_initialResolution_Den_Video1]) as [YTB_initialResolution_Den_Video1]
		,sum(r.[YTB_finalResolution_Num_Video1]) as [YTB_finalResolution_Num_Video1]
		,sum(r.[YTB_finalResolution_Den_Video1]) as [YTB_finalResolution_Den_Video1]
		,sum(r.[YTB_video_resolution_144p_Num_Video1]) as [YTB_video_resolution_144p_Num_Video1]
		,sum(r.[YTB_video_resolution_144p_Den_Video1]) as [YTB_video_resolution_144p_Den_Video1]
		,sum(r.[YTB_video_mos_144p_Num_Video1]) as [YTB_video_mos_144p_Num_Video1]
		,sum(r.[YTB_video_mos_144p_Den_Video1]) as [YTB_video_mos_144p_Den_Video1]
		,sum(r.[YTB_video_resolution_%144p_Num_Video1]) as [YTB_video_resolution_%144p_Num_Video1]
		,sum(r.[YTB_video_resolution_%144p_Den_Video1]) as [YTB_video_resolution_%144p_Den_Video1]
		,sum(r.[YTB_video_resolution_240p_Num_Video1]) as [YTB_video_resolution_240p_Num_Video1]
		,sum(r.[YTB_video_resolution_240p_Den_Video1]) as [YTB_video_resolution_240p_Den_Video1]
		,sum(r.[YTB_video_mos_240p_Num_Video1]) as [YTB_video_mos_240p_Num_Video1]
		,sum(r.[YTB_video_mos_240p_Den_Video1]) as [YTB_video_mos_240p_Den_Video1]
		,sum(r.[YTB_video_resolution_%240p_Num_Video1]) as [YTB_video_resolution_%240p_Num_Video1]
		,sum(r.[YTB_video_resolution_%240p_Den_Video1]) as [YTB_video_resolution_%240p_Den_Video1]
		,sum(r.[YTB_video_resolution_360p_Num_Video1]) as [YTB_video_resolution_360p_Num_Video1]
		,sum(r.[YTB_video_resolution_360p_Den_Video1]) as [YTB_video_resolution_360p_Den_Video1]
		,sum(r.[YTB_video_mos_360p_Num_Video1]) as [YTB_video_mos_360p_Num_Video1]
		,sum(r.[YTB_video_mos_360p_Den_Video1]) as [YTB_video_mos_360p_Den_Video1]
		,sum(r.[YTB_video_resolution_%360p_Num_Video1]) as [YTB_video_resolution_%360p_Num_Video1]
		,sum(r.[YTB_video_resolution_%360p_Den_Video1]) as [YTB_video_resolution_%360p_Den_Video1]
		,sum(r.[YTB_video_resolution_480p_Num_Video1]) as [YTB_video_resolution_480p_Num_Video1]
		,sum(r.[YTB_video_resolution_480p_Den_Video1]) as [YTB_video_resolution_480p_Den_Video1]
		,sum(r.[YTB_video_mos_480p_Num_Video1]) as [YTB_video_mos_480p_Num_Video1]
		,sum(r.[YTB_video_mos_480p_Den_Video1]) as [YTB_video_mos_480p_Den_Video1]
		,sum(r.[YTB_video_resolution_%480p_Num_Video1]) as [YTB_video_resolution_%480p_Num_Video1]
		,sum(r.[YTB_video_resolution_%480p_Den_Video1]) as [YTB_video_resolution_%480p_Den_Video1]
		,sum(r.[YTB_video_resolution_720p_Num_Video1]) as [YTB_video_resolution_720p_Num_Video1]
		,sum(r.[YTB_video_resolution_720p_Den_Video1]) as [YTB_video_resolution_720p_Den_Video1]
		,sum(r.[YTB_video_mos_720p_Num_Video1]) as [YTB_video_mos_720p_Num_Video1]
		,sum(r.[YTB_video_mos_720p_Den_Video1]) as [YTB_video_mos_720p_Den_Video1]
		,sum(r.[YTB_video_resolution_%720p_Num_Video1]) as [YTB_video_resolution_%720p_Num_Video1]
		,sum(r.[YTB_video_resolution_%720p_Den_Video1]) as [YTB_video_resolution_%720p_Den_Video1]
		,sum(r.[YTB_video_resolution_1080p_Num_Video1]) as [YTB_video_resolution_1080p_Num_Video1]
		,sum(r.[YTB_video_resolution_1080p_Den_Video1]) as [YTB_video_resolution_1080p_Den_Video1]
		,sum(r.[YTB_video_mos_1080p_Num_Video1]) as [YTB_video_mos_1080p_Num_Video1]
		,sum(r.[YTB_video_mos_1080p_Den_Video1]) as [YTB_video_mos_1080p_Den_Video1]
		,sum(r.[YTB_video_resolution_%1080p_Num_Video1]) as [YTB_video_resolution_%1080p_Num_Video1]
		,sum(r.[YTB_video_resolution_%1080p_Den_Video1]) as [YTB_video_resolution_%1080p_Den_Video1]
		
		,sum(r.[Avg_Video_StarTime_Num_Video2]) as [Avg_Video_StarTime_Num_Video2]
		,sum(r.[Avg_Video_startTime_Den_Video2]) as [Avg_Video_startTime_Den_Video2]
		,sum(r.[Reproductions_WO_Interruptions_Video2]) as [Reproductions_WO_Interruptions_Video2]
		,sum(r.[Reproductions_WO_Interruptions_Den_Video2]) as [Reproductions_WO_Interruptions_Den_Video2]
		--,sum(r.[Success_Video_P3_num_Video2]) as [Success_Video_P3_num_Video2]
		--,sum(r.[Success_Video_P3_den_Video2]) as [Success_Video_P3_den_Video2]
		,case 
			when sum(isnull(r.[B4_Video2], 0))>0 then sum(r.[B4_Video2])
			when sum(r.[ReproduccionesHD_Video2])<sum(r.[Successful video download_Video2]) then sum(r.[ReproduccionesHD_Video2]) 
		else sum(r.[Successful video download_Video2])	end as HD_reproduction_rate_num_Video2
		,case 
			when sum(isnull(r.[B4_Video2], 0))>0 then sum(r.[Successful video download_Video2])
			when sum(r.[ReproduccionesHD_Video2])<sum(r.[Successful video download_Video2]) then sum(r.[Reproducciones_Video2]) 
		else sum(r.[Reproducciones_Video2]) end as HD_reproduction_rate_den_Video2
		,sum(r.YTB_video_resolution_num_Video2) as YTB_video_resolution_num_Video2
		,sum(r.YTB_video_resolution_den_Video2) as YTB_video_resolution_den_Video2
		,sum(r.YTB_video_mos_num_Video2) as YTB_video_mos_num_Video2
		,sum(r.YTB_video_mos_den_Video2) as YTB_video_mos_den_Video2
		,max(r.YTB_url_Video2) as YTB_url_Video2
		,sum(r.[B4_Video2]) as [B4_Video2]
		,sum(r.[ReproduccionesHD_Video2]) as [ReproduccionesHD_Video2]
		,sum(r.[Successful video download_Video2]) as [Successful video download_Video2] 
		,sum(r.[Reproducciones_Video2]) as [Reproducciones_Video2]
		,sum(r.[Fails_Video2]) as [Fails_Video2]
		,sum(r.[YTB_1st_Resolution_Num_Video2]) as [YTB_1st_Resolution_Num_Video2]
		,sum(r.[YTB_1st_Resolution_Den_Video2]) as [YTB_1st_Resolution_Den_Video2]
		,sum(r.[YTB_2nd_Resolution_Num_Video2]) as [YTB_2nd_Resolution_Num_Video2]
		,sum(r.[YTB_2nd_Resolution_Den_Video2]) as [YTB_2nd_Resolution_Den_Video2]
		,sum(r.[YTB_FirstChangeFromInit_Num_Video2]) as [YTB_FirstChangeFromInit_Num_Video2]
		,sum(r.[YTB_FirstChangeFromInit_Den_Video2]) as [YTB_FirstChangeFromInit_Den_Video2]
		,sum(r.[YTB_initialResolution_Num_Video2]) as [YTB_initialResolution_Num_Video2]
		,sum(r.[YTB_initialResolution_Den_Video2]) as [YTB_initialResolution_Den_Video2]
		,sum(r.[YTB_finalResolution_Num_Video2]) as [YTB_finalResolution_Num_Video2]
		,sum(r.[YTB_finalResolution_Den_Video2]) as [YTB_finalResolution_Den_Video2]
		,sum(r.[YTB_video_resolution_144p_Num_Video2]) as [YTB_video_resolution_144p_Num_Video2]
		,sum(r.[YTB_video_resolution_144p_Den_Video2]) as [YTB_video_resolution_144p_Den_Video2]
		,sum(r.[YTB_video_mos_144p_Num_Video2]) as [YTB_video_mos_144p_Num_Video2]
		,sum(r.[YTB_video_mos_144p_Den_Video2]) as [YTB_video_mos_144p_Den_Video2]
		,sum(r.[YTB_video_resolution_%144p_Num_Video2]) as [YTB_video_resolution_%144p_Num_Video2]
		,sum(r.[YTB_video_resolution_%144p_Den_Video2]) as [YTB_video_resolution_%144p_Den_Video2]
		,sum(r.[YTB_video_resolution_240p_Num_Video2]) as [YTB_video_resolution_240p_Num_Video2]
		,sum(r.[YTB_video_resolution_240p_Den_Video2]) as [YTB_video_resolution_240p_Den_Video2]
		,sum(r.[YTB_video_mos_240p_Num_Video2]) as [YTB_video_mos_240p_Num_Video2]
		,sum(r.[YTB_video_mos_240p_Den_Video2]) as [YTB_video_mos_240p_Den_Video2]
		,sum(r.[YTB_video_resolution_%240p_Num_Video2]) as [YTB_video_resolution_%240p_Num_Video2]
		,sum(r.[YTB_video_resolution_%240p_Den_Video2]) as [YTB_video_resolution_%240p_Den_Video2]
		,sum(r.[YTB_video_resolution_360p_Num_Video2]) as [YTB_video_resolution_360p_Num_Video2]
		,sum(r.[YTB_video_resolution_360p_Den_Video2]) as [YTB_video_resolution_360p_Den_Video2]
		,sum(r.[YTB_video_mos_360p_Num_Video2]) as [YTB_video_mos_360p_Num_Video2]
		,sum(r.[YTB_video_mos_360p_Den_Video2]) as [YTB_video_mos_360p_Den_Video2]
		,sum(r.[YTB_video_resolution_%360p_Num_Video2]) as [YTB_video_resolution_%360p_Num_Video2]
		,sum(r.[YTB_video_resolution_%360p_Den_Video2]) as [YTB_video_resolution_%360p_Den_Video2]
		,sum(r.[YTB_video_resolution_480p_Num_Video2]) as [YTB_video_resolution_480p_Num_Video2]
		,sum(r.[YTB_video_resolution_480p_Den_Video2]) as [YTB_video_resolution_480p_Den_Video2]
		,sum(r.[YTB_video_mos_480p_Num_Video2]) as [YTB_video_mos_480p_Num_Video2]
		,sum(r.[YTB_video_mos_480p_Den_Video2]) as [YTB_video_mos_480p_Den_Video2]
		,sum(r.[YTB_video_resolution_%480p_Num_Video2]) as [YTB_video_resolution_%480p_Num_Video2]
		,sum(r.[YTB_video_resolution_%480p_Den_Video2]) as [YTB_video_resolution_%480p_Den_Video2]
		,sum(r.[YTB_video_resolution_720p_Num_Video2]) as [YTB_video_resolution_720p_Num_Video2]
		,sum(r.[YTB_video_resolution_720p_Den_Video2]) as [YTB_video_resolution_720p_Den_Video2]
		,sum(r.[YTB_video_mos_720p_Num_Video2]) as [YTB_video_mos_720p_Num_Video2]
		,sum(r.[YTB_video_mos_720p_Den_Video2]) as [YTB_video_mos_720p_Den_Video2]
		,sum(r.[YTB_video_resolution_%720p_Num_Video2]) as [YTB_video_resolution_%720p_Num_Video2]
		,sum(r.[YTB_video_resolution_%720p_Den_Video2]) as [YTB_video_resolution_%720p_Den_Video2]
		,sum(r.[YTB_video_resolution_1080p_Num_Video2]) as [YTB_video_resolution_1080p_Num_Video2]
		,sum(r.[YTB_video_resolution_1080p_Den_Video2]) as [YTB_video_resolution_1080p_Den_Video2]
		,sum(r.[YTB_video_mos_1080p_Num_Video2]) as [YTB_video_mos_1080p_Num_Video2]
		,sum(r.[YTB_video_mos_1080p_Den_Video2]) as [YTB_video_mos_1080p_Den_Video2]
		,sum(r.[YTB_video_resolution_%1080p_Num_Video2]) as [YTB_video_resolution_%1080p_Num_Video2]
		,sum(r.[YTB_video_resolution_%1080p_Den_Video2]) as [YTB_video_resolution_%1080p_Den_Video2]

		,sum(r.[Avg_Video_StarTime_Num_Video3]) as [Avg_Video_StarTime_Num_Video3]
		,sum(r.[Avg_Video_startTime_Den_Video3]) as [Avg_Video_startTime_Den_Video3]
		,sum(r.[Reproductions_WO_Interruptions_Video3]) as [Reproductions_WO_Interruptions_Video3]
		,sum(r.[Reproductions_WO_Interruptions_Den_Video3]) as [Reproductions_WO_Interruptions_Den_Video3]
		--,sum(r.[Success_Video_P3_num_Video3]) as [Success_Video_P3_num_Video3]
		--,sum(r.[Success_Video_P3_den_Video3]) as [Success_Video_P3_den_Video3]
		,case 
			when sum(isnull(r.[B4_Video3], 0))>0 then sum(r.[B4_Video3])
			when sum(r.[ReproduccionesHD_Video3])<sum(r.[Successful video download_Video3]) then sum(r.[ReproduccionesHD_Video3]) 
		else sum(r.[Successful video download_Video3])	end as HD_reproduction_rate_num_Video3
		,case 
			when sum(isnull(r.[B4_Video3], 0))>0 then sum(r.[Successful video download_Video3])
			when sum(r.[ReproduccionesHD_Video3])<sum(r.[Successful video download_Video3]) then sum(r.[Reproducciones_Video3]) 
		else sum(r.[Reproducciones_Video3]) end as HD_reproduction_rate_den_Video3
		,sum(r.YTB_video_resolution_num_Video3) as YTB_video_resolution_num_Video3
		,sum(r.YTB_video_resolution_den_Video3) as YTB_video_resolution_den_Video3
		,sum(r.YTB_video_mos_num_Video3) as YTB_video_mos_num_Video3
		,sum(r.YTB_video_mos_den_Video3) as YTB_video_mos_den_Video3
		,max(r.YTB_url_Video3) as YTB_url_Video3
		,sum(r.[B4_Video3]) as [B4_Video3]
		,sum(r.[ReproduccionesHD_Video3]) as [ReproduccionesHD_Video3]
		,sum(r.[Successful video download_Video3]) as [Successful video download_Video3] 
		,sum(r.[Reproducciones_Video3]) as [Reproducciones_Video3]
		,sum(r.[Fails_Video3]) as [Fails_Video3]
		,sum(r.[YTB_1st_Resolution_Num_Video3]) as [YTB_1st_Resolution_Num_Video3]
		,sum(r.[YTB_1st_Resolution_Den_Video3]) as [YTB_1st_Resolution_Den_Video3]
		,sum(r.[YTB_2nd_Resolution_Num_Video3]) as [YTB_2nd_Resolution_Num_Video3]
		,sum(r.[YTB_2nd_Resolution_Den_Video3]) as [YTB_2nd_Resolution_Den_Video3]
		,sum(r.[YTB_FirstChangeFromInit_Num_Video3]) as [YTB_FirstChangeFromInit_Num_Video3]
		,sum(r.[YTB_FirstChangeFromInit_Den_Video3]) as [YTB_FirstChangeFromInit_Den_Video3]
		,sum(r.[YTB_initialResolution_Num_Video3]) as [YTB_initialResolution_Num_Video3]
		,sum(r.[YTB_initialResolution_Den_Video3]) as [YTB_initialResolution_Den_Video3]
		,sum(r.[YTB_finalResolution_Num_Video3]) as [YTB_finalResolution_Num_Video3]
		,sum(r.[YTB_finalResolution_Den_Video3]) as [YTB_finalResolution_Den_Video3]
		,sum(r.[YTB_video_resolution_144p_Num_Video3]) as [YTB_video_resolution_144p_Num_Video3]
		,sum(r.[YTB_video_resolution_144p_Den_Video3]) as [YTB_video_resolution_144p_Den_Video3]
		,sum(r.[YTB_video_mos_144p_Num_Video3]) as [YTB_video_mos_144p_Num_Video3]
		,sum(r.[YTB_video_mos_144p_Den_Video3]) as [YTB_video_mos_144p_Den_Video3]
		,sum(r.[YTB_video_resolution_%144p_Num_Video3]) as [YTB_video_resolution_%144p_Num_Video3]
		,sum(r.[YTB_video_resolution_%144p_Den_Video3]) as [YTB_video_resolution_%144p_Den_Video3]
		,sum(r.[YTB_video_resolution_240p_Num_Video3]) as [YTB_video_resolution_240p_Num_Video3]
		,sum(r.[YTB_video_resolution_240p_Den_Video3]) as [YTB_video_resolution_240p_Den_Video3]
		,sum(r.[YTB_video_mos_240p_Num_Video3]) as [YTB_video_mos_240p_Num_Video3]
		,sum(r.[YTB_video_mos_240p_Den_Video3]) as [YTB_video_mos_240p_Den_Video3]
		,sum(r.[YTB_video_resolution_%240p_Num_Video3]) as [YTB_video_resolution_%240p_Num_Video3]
		,sum(r.[YTB_video_resolution_%240p_Den_Video3]) as [YTB_video_resolution_%240p_Den_Video3]
		,sum(r.[YTB_video_resolution_360p_Num_Video3]) as [YTB_video_resolution_360p_Num_Video3]
		,sum(r.[YTB_video_resolution_360p_Den_Video3]) as [YTB_video_resolution_360p_Den_Video3]
		,sum(r.[YTB_video_mos_360p_Num_Video3]) as [YTB_video_mos_360p_Num_Video3]
		,sum(r.[YTB_video_mos_360p_Den_Video3]) as [YTB_video_mos_360p_Den_Video3]
		,sum(r.[YTB_video_resolution_%360p_Num_Video3]) as [YTB_video_resolution_%360p_Num_Video3]
		,sum(r.[YTB_video_resolution_%360p_Den_Video3]) as [YTB_video_resolution_%360p_Den_Video3]
		,sum(r.[YTB_video_resolution_480p_Num_Video3]) as [YTB_video_resolution_480p_Num_Video3]
		,sum(r.[YTB_video_resolution_480p_Den_Video3]) as [YTB_video_resolution_480p_Den_Video3]
		,sum(r.[YTB_video_mos_480p_Num_Video3]) as [YTB_video_mos_480p_Num_Video3]
		,sum(r.[YTB_video_mos_480p_Den_Video3]) as [YTB_video_mos_480p_Den_Video3]
		,sum(r.[YTB_video_resolution_%480p_Num_Video3]) as [YTB_video_resolution_%480p_Num_Video3]
		,sum(r.[YTB_video_resolution_%480p_Den_Video3]) as [YTB_video_resolution_%480p_Den_Video3]
		,sum(r.[YTB_video_resolution_720p_Num_Video3]) as [YTB_video_resolution_720p_Num_Video3]
		,sum(r.[YTB_video_resolution_720p_Den_Video3]) as [YTB_video_resolution_720p_Den_Video3]
		,sum(r.[YTB_video_mos_720p_Num_Video3]) as [YTB_video_mos_720p_Num_Video3]
		,sum(r.[YTB_video_mos_720p_Den_Video3]) as [YTB_video_mos_720p_Den_Video3]
		,sum(r.[YTB_video_resolution_%720p_Num_Video3]) as [YTB_video_resolution_%720p_Num_Video3]
		,sum(r.[YTB_video_resolution_%720p_Den_Video3]) as [YTB_video_resolution_%720p_Den_Video3]
		,sum(r.[YTB_video_resolution_1080p_Num_Video3]) as [YTB_video_resolution_1080p_Num_Video3]
		,sum(r.[YTB_video_resolution_1080p_Den_Video3]) as [YTB_video_resolution_1080p_Den_Video3]
		,sum(r.[YTB_video_mos_1080p_Num_Video3]) as [YTB_video_mos_1080p_Num_Video3]
		,sum(r.[YTB_video_mos_1080p_Den_Video3]) as [YTB_video_mos_1080p_Den_Video3]
		,sum(r.[YTB_video_resolution_%1080p_Num_Video3]) as [YTB_video_resolution_%1080p_Num_Video3]
		,sum(r.[YTB_video_resolution_%1080p_Den_Video3]) as [YTB_video_resolution_%1080p_Den_Video3]

		,sum(r.[Avg_Video_StarTime_Num_Video4]) as [Avg_Video_StarTime_Num_Video4]
		,sum(r.[Avg_Video_startTime_Den_Video4]) as [Avg_Video_startTime_Den_Video4]
		,sum(r.[Reproductions_WO_Interruptions_Video4]) as [Reproductions_WO_Interruptions_Video4]
		,sum(r.[Reproductions_WO_Interruptions_Den_Video4]) as [Reproductions_WO_Interruptions_Den_Video4]
		--,sum(r.[Success_Video_P3_num_Video4]) as [Success_Video_P3_num_Video4]
		--,sum(r.[Success_Video_P3_den_Video4]) as [Success_Video_P3_den_Video4]
		,case 
			when sum(isnull(r.[B4_Video4], 0))>0 then sum(r.[B4_Video4])
			when sum(r.[ReproduccionesHD_Video4])<sum(r.[Successful video download_Video4]) then sum(r.[ReproduccionesHD_Video4]) 
		else sum(r.[Successful video download_Video4])	end as HD_reproduction_rate_num_Video4
		,case 
			when sum(isnull(r.[B4_Video4], 0))>0 then sum(r.[Successful video download_Video4])
			when sum(r.[ReproduccionesHD_Video4])<sum(r.[Successful video download_Video4]) then sum(r.[Reproducciones_Video4]) 
		else sum(r.[Reproducciones_Video4]) end as HD_reproduction_rate_den_Video4
		,sum(r.YTB_video_resolution_num_Video4) as YTB_video_resolution_num_Video4
		,sum(r.YTB_video_resolution_den_Video4) as YTB_video_resolution_den_Video4
		,sum(r.YTB_video_mos_num_Video4) as YTB_video_mos_num_Video4
		,sum(r.YTB_video_mos_den_Video4) as YTB_video_mos_den_Video4
		,max(r.YTB_url_Video4) as YTB_url_Video4
		,sum(r.[B4_Video4]) as [B4_Video4]
		,sum(r.[ReproduccionesHD_Video4]) as [ReproduccionesHD_Video4]
		,sum(r.[Successful video download_Video4]) as [Successful video download_Video4] 
		,sum(r.[Reproducciones_Video4]) as [Reproducciones_Video4]
		,sum(r.[Fails_Video4]) as [Fails_Video4]
		,sum(r.[YTB_1st_Resolution_Num_Video4]) as [YTB_1st_Resolution_Num_Video4]
		,sum(r.[YTB_1st_Resolution_Den_Video4]) as [YTB_1st_Resolution_Den_Video4]
		,sum(r.[YTB_2nd_Resolution_Num_Video4]) as [YTB_2nd_Resolution_Num_Video4]
		,sum(r.[YTB_2nd_Resolution_Den_Video4]) as [YTB_2nd_Resolution_Den_Video4]
		,sum(r.[YTB_FirstChangeFromInit_Num_Video4]) as [YTB_FirstChangeFromInit_Num_Video4]
		,sum(r.[YTB_FirstChangeFromInit_Den_Video4]) as [YTB_FirstChangeFromInit_Den_Video4]
		,sum(r.[YTB_initialResolution_Num_Video4]) as [YTB_initialResolution_Num_Video4]
		,sum(r.[YTB_initialResolution_Den_Video4]) as [YTB_initialResolution_Den_Video4]
		,sum(r.[YTB_finalResolution_Num_Video4]) as [YTB_finalResolution_Num_Video4]
		,sum(r.[YTB_finalResolution_Den_Video4]) as [YTB_finalResolution_Den_Video4]
		,sum(r.[YTB_video_resolution_144p_Num_Video4]) as [YTB_video_resolution_144p_Num_Video4]
		,sum(r.[YTB_video_resolution_144p_Den_Video4]) as [YTB_video_resolution_144p_Den_Video4]
		,sum(r.[YTB_video_mos_144p_Num_Video4]) as [YTB_video_mos_144p_Num_Video4]
		,sum(r.[YTB_video_mos_144p_Den_Video4]) as [YTB_video_mos_144p_Den_Video4]
		,sum(r.[YTB_video_resolution_%144p_Num_Video4]) as [YTB_video_resolution_%144p_Num_Video4]
		,sum(r.[YTB_video_resolution_%144p_Den_Video4]) as [YTB_video_resolution_%144p_Den_Video4]
		,sum(r.[YTB_video_resolution_240p_Num_Video4]) as [YTB_video_resolution_240p_Num_Video4]
		,sum(r.[YTB_video_resolution_240p_Den_Video4]) as [YTB_video_resolution_240p_Den_Video4]
		,sum(r.[YTB_video_mos_240p_Num_Video4]) as [YTB_video_mos_240p_Num_Video4]
		,sum(r.[YTB_video_mos_240p_Den_Video4]) as [YTB_video_mos_240p_Den_Video4]
		,sum(r.[YTB_video_resolution_%240p_Num_Video4]) as [YTB_video_resolution_%240p_Num_Video4]
		,sum(r.[YTB_video_resolution_%240p_Den_Video4]) as [YTB_video_resolution_%240p_Den_Video4]
		,sum(r.[YTB_video_resolution_360p_Num_Video4]) as [YTB_video_resolution_360p_Num_Video4]
		,sum(r.[YTB_video_resolution_360p_Den_Video4]) as [YTB_video_resolution_360p_Den_Video4]
		,sum(r.[YTB_video_mos_360p_Num_Video4]) as [YTB_video_mos_360p_Num_Video4]
		,sum(r.[YTB_video_mos_360p_Den_Video4]) as [YTB_video_mos_360p_Den_Video4]
		,sum(r.[YTB_video_resolution_%360p_Num_Video4]) as [YTB_video_resolution_%360p_Num_Video4]
		,sum(r.[YTB_video_resolution_%360p_Den_Video4]) as [YTB_video_resolution_%360p_Den_Video4]
		,sum(r.[YTB_video_resolution_480p_Num_Video4]) as [YTB_video_resolution_480p_Num_Video4]
		,sum(r.[YTB_video_resolution_480p_Den_Video4]) as [YTB_video_resolution_480p_Den_Video4]
		,sum(r.[YTB_video_mos_480p_Num_Video4]) as [YTB_video_mos_480p_Num_Video4]
		,sum(r.[YTB_video_mos_480p_Den_Video4]) as [YTB_video_mos_480p_Den_Video4]
		,sum(r.[YTB_video_resolution_%480p_Num_Video4]) as [YTB_video_resolution_%480p_Num_Video4]
		,sum(r.[YTB_video_resolution_%480p_Den_Video4]) as [YTB_video_resolution_%480p_Den_Video4]
		,sum(r.[YTB_video_resolution_720p_Num_Video4]) as [YTB_video_resolution_720p_Num_Video4]
		,sum(r.[YTB_video_resolution_720p_Den_Video4]) as [YTB_video_resolution_720p_Den_Video4]
		,sum(r.[YTB_video_mos_720p_Num_Video4]) as [YTB_video_mos_720p_Num_Video4]
		,sum(r.[YTB_video_mos_720p_Den_Video4]) as [YTB_video_mos_720p_Den_Video4]
		,sum(r.[YTB_video_resolution_%720p_Num_Video4]) as [YTB_video_resolution_%720p_Num_Video4]
		,sum(r.[YTB_video_resolution_%720p_Den_Video4]) as [YTB_video_resolution_%720p_Den_Video4]
		,sum(r.[YTB_video_resolution_1080p_Num_Video4]) as [YTB_video_resolution_1080p_Num_Video4]
		,sum(r.[YTB_video_resolution_1080p_Den_Video4]) as [YTB_video_resolution_1080p_Den_Video4]
		,sum(r.[YTB_video_mos_1080p_Num_Video4]) as [YTB_video_mos_1080p_Num_Video4]
		,sum(r.[YTB_video_mos_1080p_Den_Video4]) as [YTB_video_mos_1080p_Den_Video4]
		,sum(r.[YTB_video_resolution_%1080p_Num_Video4]) as [YTB_video_resolution_%1080p_Num_Video4]
		,sum(r.[YTB_video_resolution_%1080p_Den_Video4]) as [YTB_video_resolution_%1080p_Den_Video4]

		,r.Region_Road_VF, r.Region_Road_OSP
		,r.Region_VF, r.Region_OSP
		,r.ASideDevice, r.BSideDevice, r.SWVersion
		,max(r.YTB_Version) as YTB_Version

	into _RI_Data_result_INE_only
	from _RI_Data_result1 r
			inner join _RI_Data_result1_info i on (r.codigo_ine=i.codigo_ine and  r.mnc=i.mnc and isnull(r.meas_round,0)=isnull(i.meas_round,0)
												and r.meas_date=i.meas_date and r.meas_week=i.meas_week 
												and r.meas_Tech=i.meas_Tech and r.entity=i.entity
												and r.id_vdf = i.id_vdf
												and r.id_osp = i.id_osp
												and r.id_osp_noComp = i.id_osp_noComp
												)

	group by r.codigo_ine,  r.Provincia, r.CCAA,
			 r.entity, r.environment, r.operator, r.mnc, r.meas_round, r.meas_date, r.meas_week, r.meas_Tech, r.test_type, r.Direction, 
			 r.Poblacion, i.Num_entornos, r.Report_Type, r.id_osp, r.id_osp_noComp, r.id_vdf, r.Methodology ,r.Region_Road_VF, r.Region_Road_OSP, r.Region_VF, r.Region_OSP, --r.YTB_Version,--,r.YTB_url,
			 r.ASideDevice, r.BSideDevice, r.SWVersion

	-------------
	insert into [dbo].[_RI_Data_Ejecucion]
	select 'Fin 11. Se monta Montamos la tabla -> _RI_Data_result_INE_only', getdate()


	---------------------------------------------------------------
	-- 12. Montamos la tabla -> _RI_Data_result:
	---------------------------------------------------------------
	print '12. Se monta Montamos la tabla -> _RI_Data_result' 
	-------------
	exec dbo.sp_lcc_dropifexists '_RI_Data_result'
	select
		b.*,
		-- Se cogen las ya obtenidas anteriormente (de vlcc_parcelas para ROADS y AVEs y V9 para entidades) - se hace asi por mantener el orden que ya hay, porque afecta a otros procs
		b.provincia as Provincia_V9,	
		b.CCAA as CCAA_V9,	

		p.rango_pobl, p.resp_sharing, 'YES' as completed,		-- p.zona_OSP, p.Zona_VDF, 
		case when oFinal.completed is not null then oFinal.completed else 'NO' end as Completed_final,
		-- Este es un campo nuevo, en V9 existe solo para entidades, por eso ya lo calcumao directamnte sobre todo (viene del mismo lado para las entidades)
		replace(b.Provincia, '_', ' ') as Provincia_comp,	

		case 
			when b.environment ='ave' then 'RAILWAYS'
			when (b.environment = 'roads' and b.meas_Tech like '%Road%' and (b.entity like 'A[1-9]-%' or b.entity in ('A52-VIGO','A66-SEVILLA','A68-ZARAGOZA'))) then 'MAIN HIGHWAYS'
			when (b.environment = 'roads' and b.meas_Tech like '%Road%' and (b.entity not like 'A[1-9]-%' and b.entity not in ('A52-VIGO','A66-SEVILLA','A68-ZARAGOZA'))) then 'SECONDARY ROADS'
		else p.scope end as 'scope'

	into _RI_Data_result
	from 
		_RI_Data_result_INE_only b
			left join (
						select 
							ine as 'codigo_ine', entity_name as 'municipio',			-- provincia, CCAA, 
							rango_pobl, resp_sharing, scope		-- zona_OSP as 'zona_OSP', Zona_VF as 'Zona_VDF', replace(Provincia, '_', ' ') as Provincia_comp
						from [AGRIDS_v2].dbo.lcc_ciudades_tipo_Project_V9 
						group by ine, entity_name, rango_pobl, resp_sharing, scope --provincia,CCAA, zona_OSP, Zona_VF 
						) p	on p.codigo_ine=b.codigo_ine and p.municipio = b.entity
			  
			-- criterio de completede final: nos basamos en el completed de FY1718
			left outer join (select codigo_ine,entity_name,max(completed) as completed --por el momento, si hay una ronda completada en FY1718, el completed final será yes (por si convive fin fase 3 e inicio fase 4)
				from addedValue.[dbo].lcc_entities_completed  
				where meas_round like 'FY1718%'
				group by codigo_ine,entity_name
			) oFinal on b.codigo_ine=oFinal.codigo_ine and b.entity=oFinal.entity_name
	where b.meas_round not like 'FY1718%'

	alter table _RI_Data_result alter column completed varchar(20) null

	insert into _RI_Data_result
	select
		b.*,
		-- Se cogen las ya obtenidas anteriormente (de vlcc_parcelas para ROADS y AVEs y V9 para entidades) - se hace asi por mantener el orden que ya hay, porque afecta a otros procs
		b.provincia as Provincia_V9,	
		b.CCAA as CCAA_V9,	

		p.rango_pobl, p.resp_sharing, o.completed,		-- p.zona_OSP, p.Zona_VDF, 
		oFinal.completed as Completed_final,
		-- Este es un campo nuevo, en V9 existe solo para entidades, por eso ya lo calcumao directamnte sobre todo (viene del mismo lado para las entidades)
		replace(b.Provincia, '_', ' ') as Provincia_comp,	

		case 
			when b.environment ='ave' then 'RAILWAYS'
			when (b.environment = 'roads' and b.meas_Tech like '%Road%' and (b.entity like 'A[1-9]-%' or b.entity in ('A52-VIGO','A66-SEVILLA','A68-ZARAGOZA'))) then 'MAIN HIGHWAYS'
			when (b.environment = 'roads' and b.meas_Tech like '%Road%' and (b.entity not like 'A[1-9]-%' and b.entity not in ('A52-VIGO','A66-SEVILLA','A68-ZARAGOZA'))) then 'SECONDARY ROADS'
		else p.scope end as 'scope'

	from 
		_RI_Data_result_INE_only b
			left join (
						select 
							ine as 'codigo_ine', entity_name as 'municipio',			-- provincia, CCAA, 
							rango_pobl, resp_sharing, scope		-- zona_OSP as 'zona_OSP', Zona_VF as 'Zona_VDF', replace(Provincia, '_', ' ') as Provincia_comp
						from [AGRIDS_v2].dbo.lcc_ciudades_tipo_Project_V9 
						group by ine, entity_name, rango_pobl, resp_sharing, scope --provincia,CCAA, zona_OSP, Zona_VF 
						) p	on p.codigo_ine=b.codigo_ine and p.municipio = b.entity
			  
			-- Nos quedamos con las entidades completadas (para FY1718 no se distingue por meas_Tech)
			left outer join addedValue.[dbo].lcc_entities_completed 
				o on b.codigo_ine=o.codigo_ine and b.meas_round=o.meas_round and b.entity=o.entity_name
			-- criterio de completede final: nos basamos en el completed de FY1718
			left outer join (select codigo_ine,entity_name,max(completed) as completed --por el momento, si hay una ronda completada en FY1718, el completed final será yes (por si convive fin fase 3 e inicio fase 4)
				from addedValue.[dbo].lcc_entities_completed  
				where meas_round like 'FY1718%'
				group by codigo_ine,entity_name
			) oFinal on b.codigo_ine=oFinal.codigo_ine and b.entity=oFinal.entity_name
	where b.meas_round like 'FY1718%'


	-----------
	-- Nos quedamos con el campo de Provincia/CCAA V9, que tendra la info como antes de ciudades e incluye la nueva info para Carreteras y Aves.
	alter table _RI_Data_result drop column provincia, CCAA
	EXEC sp_rename '_RI_Data_result.Provincia_V9', 'Provincia'
	EXEC sp_rename '_RI_Data_result.CCAA_V9', 'CCAA'

	-------------
	insert into [dbo].[_RI_Data_Ejecucion]
	select 'Fin 12. Se monta Montamos la tabla -> _RI_Data_result', getdate()


	-------------------------------------
	-- 13. Se actualiza el MEAS ROUND:
	-------------------------------------
	print '13. Se actualiza el MEAS ROUND -> _RI_Data_result' 
	-------------
	update _RI_Data_result
	set meas_round= 
		case	
			when convert(datetime,'1/'+SUBSTRING(meas_date,4,2)+'/20'+SUBSTRING(meas_date,1,2),103)>=convert(datetime,'01/10/2015',103)
					and convert(datetime,'1/'+SUBSTRING(meas_date,4,2)+'/20'+SUBSTRING(meas_date,1,2),103)<convert(datetime,'01/04/2016',103) then 'Fase 0'
			when convert(datetime,'1/'+SUBSTRING(meas_date,4,2)+'/20'+SUBSTRING(meas_date,1,2),103)>=convert(datetime,'01/05/2016',103) then
				case	

				    when CHARINDEX ('1617_H1',meas_round,1)>0 then 'Fase 1'
					when CHARINDEX ('1617_H2',meas_round,1)>0 then 'Fase 2'
					when CHARINDEX ('1718_H1',meas_round,1)>0 then 'Fase 3'

					when convert(datetime,'1/'+SUBSTRING(meas_date,4,2)+'/20'+SUBSTRING(meas_date,1,2),103)>=convert(datetime,'01/05/2016',103)
					and convert(datetime,'1/'+SUBSTRING(meas_date,4,2)+'/20'+SUBSTRING(meas_date,1,2),103)<convert(datetime,'01/12/2016',103) then 'Fase 1'
					when convert(datetime,'1/'+SUBSTRING(meas_date,4,2)+'/20'+SUBSTRING(meas_date,1,2),103)>=convert(datetime,'01/12/2016',103)
					and convert(datetime,'1/'+SUBSTRING(meas_date,4,2)+'/20'+SUBSTRING(meas_date,1,2),103)<convert(datetime,'01/05/2017',103) then 'Fase 2'
						
				end
		end


--select distinct(entity),meas_round from _RI_Data_result where scope = 'ADD-ON CITIES' and mnc = 01 and meas_tech = '3g' and id_vdf =1



	-------------
	insert into [dbo].[_RI_Data_Ejecucion]
	select 'Fin 13. Se actualiza el MEAS ROUND -> _RI_Data_result', getdate()


	-- Hasta aqui del tiron
	-----------------------------------------------------------------------------------------------------------
	-- 14. Se crea la tabla _last en funcion de los indice de VODAFONE Y ORANGE:		** NUEVO- incluido VODAFONE
	-----------------------------------------------------------------------------------------------------------
	print '14. Se crea la tabla _last en funcion de los indice de VODAFONE Y ORANGE -> _RI_Data_last' 
	-------------
	--declare @rollwindowRoad as int = 4
	--declare @rollwindowAve as int = 3
	
	-- Last Measurement nuevo en función de los criterios de Vodafone y de los criterios de Orange
	select r.*,
		Case when l.meas_order_vdf = 1 and id_vdf = 1 then 1 else 
			Case when (l.meas_order_vdf <= @rollwindowRoad and id_vdf = 1 and r.meas_tech like '%road%') then l.meas_order_vdf 
				when (l.meas_order_vdf <= @rollwindowAve and id_vdf = 1 and r.environment like '%ave%') then l.meas_order_vdf else 0 end
		end as last_measurement_vdf,
		
		Case when o.meas_order_osp = 1 and id_osp = 1 then 1 else 
			Case when (o.meas_order_osp <= @rollwindowRoad and id_osp = 1 and o.meas_tech like '%road%') then o.meas_order_osp 
				when (o.meas_order_osp <= @rollwindowAve and id_osp = 1 and r.environment like '%ave%') then o.meas_order_osp else 0 end
		end as last_measurement_osp, 

		-----------------
		--last_measurement_osp para todas las medidas, COMPLETADAS o NO
		case 
			when oNC.meas_order_osp=1 and (oNC.meas_tech not like '%road%' and r.environment not like '%ave%') and id_osp_noComp = 1 then 1		-- Nos quedamos sólo con la última medida de las entidades
			when r.environment like '%ave%' and oNC.meas_order_osp <= @rollwindowAve then oNC.meas_order_osp									-- Ponemos las vueltas indicadas a 1
			when oNC.meas_tech like '%road%' and oNC.meas_order_osp <= @rollwindowRoad then oNC.meas_order_osp
			else 0 
		end as last_measurement_osp_noComp,
		-----------------

	/*Quitar cuando ya no haya medidas de MAIN o SMALLER con entornos LA*/
		Case when id_vdf=1 and id_osp=1 and (environment ='LA 32G' or environment ='LA 8G') and (r.SCOPE = 'MAIN CITIES' or r.SCOPE = 'SMALLER CITIES') and r.meas_date <= '16_07' then 1
			 when id_vdf=1 and id_osp=0 and (environment ='LA 32G' or environment ='LA 8G') and (r.SCOPE = 'MAIN CITIES' or r.SCOPE = 'SMALLER CITIES') and r.meas_date <= '16_07'then 1
		else 0 end as meas_LA
  
	into _RI_Data_last
	from _RI_Data_result r,

	--************************************
	/*Creamos el meas_order para Vodafone, que luego nos servirá para obtener el Last_measurement de Vodafone*/
	-- se emplea el cast(replace(meas_Week,'W','') as int) para realizar la ordenacion correcta por numero, no string
	   (
		select entity, mnc, meas_tech, meas_round, meas_date, meas_week, test_type, report_type,
				row_number() over 
					(partition by  entity, mnc, meas_tech, test_type 
						order by case when Report_type = 'VDF' then report_type end desc, meas_date desc, cast(replace(meas_Week,'W','') as int)desc
					) as meas_order_vdf
		from _RI_Data_result
		where scope not in ('RAILWAYS','MAIN HIGHWAYS')		
		group by entity, mnc, meas_tech, meas_round, meas_date, meas_Week, report_type, test_type
		
		--------
		union all
		select entity, mnc, meas_tech, meas_round, meas_date, meas_week, test_type, report_type,
				row_number() over 
					(partition by entity, mnc, meas_tech, test_type 
						order by case when Report_type = 'VDF' then report_type end desc, meas_date DESC, cast(replace(meas_Week,'W','') as int) desc
					) meas_order_vdf
		from _RI_Data_result
		where scope in ('RAILWAYS','MAIN HIGHWAYS')
		group by entity, mnc, meas_tech, meas_round, meas_date, meas_Week, report_type, test_type
		) l,

	--************************************
	/*Creamos el meas_order para Orange, que luego nos servirá para obtener el Last_measurement de Orange*/
	-- Se modifica el orden, para que se ordene primero por FASE, luego por REPORT_TYPE y luego por FECHAS
	-- Así, se cogera la medida de la ultima fase:
	--		* cd solo haya un reporte (y si está marcado como completado), lo cogera sea VDF o MUN
	--		* cd haya los dos, cogera ordenadno por MUN-OSP-VDF, habiendo marcado a 1 el id_osp del reporte que haya
		(
		select entity, mnc, meas_tech, meas_round, meas_date, meas_week, test_type, report_type,
				row_number() over 
				(partition by entity, mnc, meas_tech, test_type
					order by case when max(id_osp) = 1 then max(id_osp) end desc, meas_round DESC, case when report_type = 'MUN' then report_type end desc,  
						meas_date desc, cast(replace(meas_Week,'W','') as int) desc
				 ) as meas_order_osp
		from _RI_Data_result
		where scope not in ('RAILWAYS','MAIN HIGHWAYS') 
		group by entity, mnc, meas_tech, meas_round, meas_date, meas_Week, report_type, test_type

		--------
		union all
		select entity, mnc, meas_tech, meas_round, meas_date, meas_week, test_type, report_type,
				row_number() over 
				(partition by entity, mnc, meas_tech, test_type
					order by case when max(id_osp) = 1 then max(id_osp) end desc, meas_round DESC, case when report_type = 'MUN' then report_type end desc, 
						meas_date DESC, cast(replace(meas_Week,'W','') as int) desc
				 ) as meas_order_osp
		from _RI_Data_result
		where scope in ('RAILWAYS','MAIN HIGHWAYS') 
		group by entity, mnc, meas_tech, meas_round, meas_date, meas_Week, report_type, test_type
		) o, 

	--************************************	
	/*Creamos el meas_order para Orange, en el caso de TODAS, COMPLETADAS o NO, que luego nos servirá para obtener el Last_measurement de Orange*/
		(
		select entity, mnc, meas_tech, meas_round, meas_date, meas_week, test_type, report_type,
				row_number() over 
				(partition by entity, mnc, meas_tech, test_type
					order by case when max(id_osp_noComp) = 1 then max(id_osp_noComp) end desc, meas_round DESC, case when report_type = 'MUN' then report_type end DESC,
						meas_date DESC, cast(replace(meas_Week,'W','') as int) DESC				
				 ) as meas_order_osp
		from _RI_Data_result
		where scope not in ('RAILWAYS','MAIN HIGHWAYS') 
		group by entity ,mnc, meas_tech, meas_round, meas_date, meas_Week, report_type, test_type

		--------
		union all
		select entity, mnc, meas_tech, meas_round, meas_date, meas_week, test_type, report_type,
				row_number() over 
				(partition by entity, mnc, meas_tech, test_type
					order by case when max(id_osp_noComp) = 1 then max(id_osp) end desc, meas_round DESC, case when report_type = 'MUN' then report_type end DESC,
						meas_date DESC, cast(replace(meas_Week,'W','') as int) DESC	
				) as meas_order_osp			
		from _RI_Data_result
		where scope in ('RAILWAYS','MAIN HIGHWAYS') 
		group by entity, mnc, meas_tech, meas_round, meas_date, meas_Week, report_type, test_type
		) oNC  
  
	 where	r.entity = l.entity 
		and r.mnc = l.mnc
		and r.meas_tech = l.meas_tech 
		and r.meas_date = l.meas_date
		and r.meas_week = l.meas_week
		and r.test_type = l.test_type
		and r.report_type = l.report_type
		and r.meas_round = l.meas_round

		and r.entity = o.entity 
		and r.mnc = o.mnc
		and r.meas_tech = o.meas_tech 
		and r.meas_date = o.meas_date
		and r.meas_week = o.meas_week
		and r.test_type = o.test_type
		and r.report_type = o.report_type
		and r.meas_round = o.meas_round
	
		and r.entity = oNC.entity 
		and r.mnc = oNC.mnc
		and r.meas_tech = oNC.meas_tech 
		and r.meas_date = oNC.meas_date
		and r.meas_week = oNC.meas_week
		and r.test_type = oNC.test_type
		and r.report_type = oNC.report_type
		and r.meas_round = r.meas_round

	-------------
	insert into [dbo].[_RI_Data_Ejecucion]
	select 'Fin 14. Se crea la tabla _last en funcion de los indice de VODAFONE Y ORANGE -> _RI_Data_last', getdate()


	-----------------------------------------------------------------------------------------------------------
	-- 15. Se prepara el resultado final  
	-----------------------------------------------------------------------------------------------------------
	print '15. Se prepara el resultado final' 

	-------------	select * from _RI_Data_last
	declare @last_measurement as varchar(50)
--declare @rollwindowRoad as int = 4
--declare @rollwindowAve as int = 3
	-------------------------------------------
	-- 15.1 Primero se lanza el codigo para VDF:
	-------------------------------------------
	set @last_measurement='last_measurement_vdf'

	-- 1º)	Se lanza para AVEs - VDF:
	exec [QLIK].dbo.plcc_Replicas_review_VX 'AVE','AddedValue','_RI_Data_last','Data', @last_measurement, @rollwindowAve

	-- Se guarda el resultado del proc anterior:
	exec dbo.sp_lcc_dropifexists '_RI_Data_Completed_LastAVE'
	Select * into _RI_Data_Completed_LastAVE from [QLIK].[dbo].[_Completed_Review_RI_Data]

	-- 2º)	Se lanza para ROADS - VDF:
	exec [QLIK].dbo.plcc_Replicas_review_VX 'Roads','AddedValue','_RI_Data_Completed_LastAVE','Data', @last_measurement, @rollwindowRoad
	
	-- 3º)	Se guarda el resultado final - VDF - step1:
	If (select name from [QLIK].sys.tables where name = '_RI_Data_Completed_Qlik_step1') is not null
	begin
		drop table [QLIK].[dbo].[_RI_Data_Completed_Qlik_step1]
	end
	Select *
	into [QLIK].[dbo].[_RI_Data_Completed_Qlik_step1]
	from [QLIK].[dbo].[_Completed_Review_RI_Data]
	
	-------------
	insert into [dbo].[_RI_Data_Ejecucion]
	select 'Fin 15.1 Actulizadas vuletas de AVE y ROADs para VDF', getdate()
	
	-------------------------------------------
	-- 15.2 Luego se lanza el codigo para OSP:
	-------------------------------------------
	set @last_measurement='last_measurement_osp'

	-- 4º)	Se lanza para AVEs - OSP:
	exec [QLIK].dbo.plcc_Replicas_review_VX 'AVE','QLIK','_RI_Data_Completed_Qlik_step1','Data', @last_measurement, @rollwindowAve

	-- Se guarda el resultado del proc anterior:
	exec dbo.sp_lcc_dropifexists '_RI_Data_Completed_LastAVE'
	Select * into _RI_Data_Completed_LastAVE from [QLIK].[dbo].[_Completed_Review_RI_Data]

	-- 5º)	Se lanza para ROADS - OSP:
	exec [QLIK].dbo.plcc_Replicas_review_VX 'Roads','AddedValue','_RI_Data_Completed_LastAVE','Data', @last_measurement, @rollwindowRoad
	
	-- 6º)	Se guarda el resultado final - VDF y OSP:
	If (select name from [QLIK].sys.tables where name = '_RI_Data_Completed_Qlik') is not null
	begin
		drop table [QLIK].[dbo].[_RI_Data_Completed_Qlik]
	end
	Select *
	into [QLIK].[dbo].[_RI_Data_Completed_Qlik]
	from [QLIK].[dbo].[_Completed_Review_RI_Data]

	-------------
	insert into [dbo].[_RI_Data_Ejecucion]
	select 'Fin 15.2 Actulizadas vuletas de AVE y ROADs para VDF y OSP', getdate()

	-------------------------------------------
	-- 15.3 Se borran las tablas temporales			
	-------------------------------------------
	-- Borramos las tablas intermedias de RI tal cual:
	exec dbo.sp_lcc_dropifexists '_RI_Data_e'
	exec dbo.sp_lcc_dropifexists '_RI_Data_l'
	exec dbo.sp_lcc_dropifexists '_RI_Data_y'
	exec dbo.sp_lcc_dropifexists '_RI_Data_base'
	exec dbo.sp_lcc_dropifexists '_RI_Data_base1'
	exec dbo.sp_lcc_dropifexists '_RI_Data_result1'
	exec dbo.sp_lcc_dropifexists '_RI_Data_result'
	exec dbo.sp_lcc_dropifexists '_RI_Data_result_INE_only'
	exec dbo.sp_lcc_dropifexists '_RI_Data_result1_info'
	exec dbo.sp_lcc_dropifexists '_RI_Data_last'
	exec dbo.sp_lcc_dropifexists '_RI_Data_Completed'
	exec dbo.sp_lcc_dropifexists '_RI_Data_Completed_LastAVE'
	exec dbo.sp_lcc_dropifexists '_RI_Data_last_osp'
	exec dbo.sp_lcc_dropifexists '_RI_Data_last_vf'

	exec dbo.sp_lcc_dropifexists '_RI_Data_entidades_antiguas'

	-------------------------------------
	-- Borramos las tablas intermedias de Qlik:
	exec dbo.sp_lcc_dropifexists '_RI_Data_Completed'
	exec dbo.sp_lcc_dropifexists '_RI_Data_Completed_LastAVE'
	If (select name from [QLIK].sys.tables where name = '_RI_Data_Completed_Qlik_step1') is not null
	begin
		drop table [QLIK].[dbo].[_RI_Data_Completed_Qlik_step1]
	end
	If (select name from [QLIK].sys.tables where name = '_Completed_Review_RI_Data') is not null
	begin
		drop table [QLIK].[dbo].[_Completed_Review_RI_Data]
	end

	-------------
	insert into [dbo].[_RI_Data_Ejecucion]
	select 'Fin Ejecucion RI para QLIK', getdate()

end		-- fin @result='Q'



-- **********************************************************************************************************
else			-- trabajamos para @result='D' o @result='E', una vez lanzado para Qlik
begin

	-- Cogemos la tabla de Qlik para trabajar con ella - ya tiene en cuenta las vueltas de AVEs y Roads
	-- drop table #RI_Data_last_Qlik
	select  * into #RI_Data_last_Qlik from [QLIK].[dbo].[_RI_Data_Completed_Qlik]

	-- select * from #RI_Data_last_Qlik

	-------------
	-- Se descartan las medidas antiguas:
	delete #RI_Data_last_Qlik
	where Meas_Date in ('16_04','15_07','15_08','15_09')

	-- Borramos las columnas de los rangos de Thput y LAT:
	alter table #RI_Data_last_Qlik drop column 
		-- Rangos nuevos:
		[1_N],	[2_N],	[3_N],	[4_N],	[5_N],	[6_N],	[7_N],	[8_N],	[9_N],	[10_N],	
		[11_N],	[12_N],	[13_N],	[14_N],	[15_N],	[16_N],	[17_N],	[18_N],	[19_N],	[20_N],	
		[21_N],	[22_N],	[23_N],	[24_N],	[25_N],	[26_N],	[27_N],	[28_N],	[29_N],	[30_N],	
		[31_N],	[32_N],	[33_N],	[34_N],	[35_N],	[36_N],	[37_N],	[38_N],	[39_N],	[40_N],	
		[41_N],	[42_N],	[43_N],	[44_N],	[45_N],	[46_N],	[47_N],	[48_N],	[49_N],	[50_N],	
		[51_N],	[52_N],	[53_N],	[54_N],	[55_N],	[56_N],	[57_N],	[58_N],	[59_N],	[60_N],	
		[61_N],	[62_N],	[63_N],	[64_N],	[65_N],	[66_N],
		-- Rangos antiguos:
		[1],	[2],	[3],	[4],	[5],	[6],	[7],	[8],	[9],	[10],	
		[11],	[12],	[13],	[14],	[15],	[16],	[17],	[18],	[19],	[20],	
		[21],	[22],	[23],	[24],	[25],	[26],	[27],	[28],	[29],	[30],	
		[31],	[32],	[33],	[34],	[35],	[36],	[37],	[38],	[39],	[40],	
		[41]

	-- Borramos las mil columnas de zonas y regiones innecesarias:
	alter table #RI_Data_last_Qlik drop column Region_Road_VF, Region_Road_OSP			--zona_VDF, zona_OSP, 

	-------------
	-- Ahora separamos en funcion del cliente, ya que ira al DASH o al excel del RI:
	-------------
	if @client=1 
	begin 
		-- Nos quedamos con la columna de last_measurement de VDF, y SOLO las medidas de VDF (id_vdf=1)
		select *, last_measurement_vdf as last_measurement, Region_VF as Zona	-- REPLACE(Region_VF, 'R', 'Zona') as Zona
		into #RI_Data_last_vf
		from #RI_Data_last_Qlik
		where id_vdf=1		-- ojo que va a sacar las ultimas de YTB SD y NoCA_Device, son medidas antiguas

		-- Borramos las sobrantes - de OSP:
		alter table #RI_Data_last_vf drop column id_osp, id_osp_noComp, last_measurement_osp, last_measurement_osp_noComp, id_vdf, last_measurement_vdf, Region_VF, Region_OSP

		--******************************************************************************

		-- Se presenta el resultado final:
		if @result='D'	-- resultado para DASH				
		begin	
			select d.ENTITIES_DASHBOARD, l.* 
			from #RI_Data_last_vf l
				LEFT OUTER JOIN (select distinct entities_bbdd, ENTITIES_DASHBOARD from AGRIDs.dbo.vlcc_dashboard_info_scopes_NEW where report='VDF') d
					on l.entity=d.entities_bbdd
			-- nos quedamos con la ultima medida y los agregados de roads y aves que se indiquen como parametro
			where ((last_measurement >0 and last_measurement<=@rollwindowRoad) or  (last_measurement >0 and last_measurement<=@rollwindowAve))
				and d.ENTITIES_DASHBOARD is not null
		end

		if @result='E'	-- resultado para Excel RI			
		begin
			select l.*		-- nos quedamos todas las medidas - se podra filtrar en el excel por last_measurement=1
			from #RI_Data_last_vf l
			where meas_tech in ('4G', '3G', 'Road 4G', '4GOnly')
			-- podríamos sacar todas, 4GCAOnly, NoCA_device, Road4GCAOnly, ...
		end
		--******************************************************************************		
		drop table #RI_Data_last_vf, #RI_Data_last_Qlik		
	end		

	-------------
	if @client=3
	begin
		if @isCompleted='Y'		-- queremos la info de las COMPLETADAS para OSP
		begin
			-- Nos quedamos con la columna de last_measurement de OSP y SOLO las medidas de OSP (id_osp=1)
			select *,last_measurement_osp as last_measurement, Region_OSP as Zona		-- REPLACE(Region_OSP, 'R', 'Zona') as Zona
			into #RI_Data_last_osp_Y
			from #RI_Data_last_Qlik
			where id_osp=1			-- esto sería para medidas COMPLETADAS (por OSP, por ambos o por uno de los 2)		

			-- Borramos las sobrantes - de OSP:
			alter table #RI_Data_last_osp_Y drop column id_vdf, id_osp, id_osp_noComp, last_measurement_osp, last_measurement_osp_noComp, last_measurement_vdf, Region_VF, Region_OSP

			--******************************************************************************
			-- Se presenta el resultado final:
			if @result='D'	-- resultado para DASH				
			begin
				select d.ENTITIES_DASHBOARD, l.* 
				from #RI_Data_last_osp_Y l
					LEFT OUTER JOIN (select distinct entities_bbdd, ENTITIES_DASHBOARD from AGRIDs.dbo.vlcc_dashboard_info_scopes_NEW where report='MUN') d
						on l.entity=d.entities_bbdd
				-- nos quedamos con la ultima medida y los agregados de roads y aves que se indiquen como parametro
				where ((last_measurement >0 and last_measurement<=@rollwindowRoad) or  (last_measurement >0 and last_measurement<=@rollwindowAve))	
					and d.ENTITIES_DASHBOARD is not null
			end

			if @result='E'	-- resultado para Excel RI			
			begin
				select  l.*	-- nos quedamos todas las medidas - se podra filtrar en el excel por last_measurement=1
				from #RI_Data_last_osp_Y l
				where meas_tech in ('4G', '3G', 'Road 4G', '4GOnly')
				and meas_round in ('Fase 1', 'Fase 2', 'Fase 3')
				and scope not like '%willia%'
				-- podríamos sacar todas, 4GCAOnly, NoCA_device, Road4GCAOnly, ...
			end
			--******************************************************************************

			drop table #RI_Data_last_osp_Y, #RI_Data_last_Qlik		

		end	else					-- queremos todas las medidas, COMPLETADAS o NO
		begin
			-- Nos quedamos con la columna de last_measurement de OSP y SOLO las medidas de OSP (id_osp=1)
			select *,last_measurement_osp_noComp as last_measurement, Region_OSP as Zona		--REPLACE(Region_OSP, 'R', 'Zona') as Zona
			into #RI_Data_last_osp_N
			from #RI_Data_last_Qlik
			where id_osp_noComp=1			-- esto serían todas las medidas para OSP, completadas o no

			-- Borramos las sobrantes - de OSP:
			alter table #RI_Data_last_osp_N drop column id_vdf, id_osp, id_osp_noComp, last_measurement_osp, last_measurement_osp_noComp, last_measurement_vdf, Region_VF, Region_OSP

			--******************************************************************************
			-- Se presenta el resultado final:
			if @result='D'	-- resultado para DASH				
			begin
				select d.ENTITIES_DASHBOARD, l.* 
				from #RI_Data_last_osp_N l
					LEFT OUTER JOIN (select distinct entities_bbdd, ENTITIES_DASHBOARD from AGRIDs.dbo.vlcc_dashboard_info_scopes_NEW where report='MUN') d
						on l.entity=d.entities_bbdd
				-- nos quedamos con la ultima medida y los agregados de roads y aves que se indiquen como parametro
				where ((last_measurement >0 and last_measurement<=@rollwindowRoad) or  (last_measurement >0 and last_measurement<=@rollwindowAve))	
					and d.ENTITIES_DASHBOARD is not null
			end

			if @result='E'	-- resultado para Excel RI			
			begin
				select  l.*	-- nos quedamos todas las medidas - se podra filtrar en el excel por last_measurement=1
				from #RI_Data_last_osp_N l
				where meas_tech in ('4G', '3G', 'Road 4G', '4GOnly')
				and meas_round in ('Fase 1', 'Fase 2', 'Fase 3')
				and scope not like '%willia%'
				-- podríamos sacar todas, 4GCAOnly, NoCA_device, Road4GCAOnly, ...
			end
			--******************************************************************************

			drop table #RI_Data_last_osp_N, #RI_Data_last_Qlik		

		end
					
	end
end		-- fin @result='D' o @result='E'

